Enter the definition file path (1/2) : 
> Enter the definition file path (2/2) : 
> Choose the proof type :
1) Interactive Mode 	 2) Auto Mode
Enter the goal : =================================================
Progress: 1


No conjecture
>>> assert forall (x:any list) (y:any list), (reverse (reverse (x)) @ reverse (y)) = (y @ x)(rank : 0)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse (any_list1)) @ reverse (any_list2)) = (any_list2 @ any_list1)

---------------------------------------
forall (any_list1:any list) (any_list2:any list), (reverse (reverse (any_list1)) @ reverse (any_list2)) = (any_list2 @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
induction any_list1(rank:12)
induction any_list2(rank:12)
=================================================
Progress: 2


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse (any_list1)) @ reverse (any_list2)) = (any_list2 @ any_list1)

---------------------------------------
forall (any_list1:any list) (any_list2:any list), (reverse (reverse (any_list1)) @ reverse (any_list2)) = (any_list2 @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> induction any_list1(rank : 12)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse (any_list1)) @ reverse (any_list2)) = (any_list2 @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), (reverse (reverse ((Nil))) @ reverse (any_list2)) = (any_list2 @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4)
=================================================
Progress: 3


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse (any_list1)) @ reverse (any_list2)) = (any_list2 @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), (reverse (reverse ((Nil))) @ reverse (any_list2)) = (any_list2 @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse (any_list1)) @ reverse (any_list2)) = (any_list2 @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), reverse (any_list2) = (any_list2 @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:5)
=================================================
Progress: 4


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse (any_list1)) @ reverse (any_list2)) = (any_list2 @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), reverse (any_list2) = (any_list2 @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> induction any_list2(rank : 5)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse (any_list1)) @ reverse (any_list2)) = (any_list2 @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
reverse ((Nil)) = ((Nil) @ (Nil))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:4)
=================================================
Progress: 5


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse (any_list1)) @ reverse (any_list2)) = (any_list2 @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
reverse ((Nil)) = ((Nil) @ (Nil))

2 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse (any_list1)) @ reverse (any_list2)) = (any_list2 @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (any_list3) = (any_list3 @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
reverse ((any1::any_list3)) = ((any1::any_list3) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:4)
=================================================
Progress: 6


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse (any_list1)) @ reverse (any_list2)) = (any_list2 @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (any_list3) = (any_list3 @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
reverse ((any1::any_list3)) = ((any1::any_list3) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse (any_list1)) @ reverse (any_list2)) = (any_list2 @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (any_list3) = (any_list3 @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
(reverse (any_list3) @ (any1::(Nil))) = (any1::(any_list3 @ (Nil)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:20)
rewrite <- IH1 in goal at 0(rank:20)
=================================================
Progress: 7


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse (any_list1)) @ reverse (any_list2)) = (any_list2 @ any_list1)

---------------------------------------
forall (any_list1:any list) (any_list2:any list), (reverse (reverse (any_list1)) @ reverse (any_list2)) = (any_list2 @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> induction any_list2(rank : 12)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse (any_list1)) @ reverse (any_list2)) = (any_list2 @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any_list1:any list), (reverse (reverse (any_list1)) @ reverse ((Nil))) = ((Nil) @ any_list1)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4)
=================================================
Progress: 8


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse (any_list1)) @ reverse (any_list2)) = (any_list2 @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any_list1:any list), (reverse (reverse (any_list1)) @ reverse ((Nil))) = ((Nil) @ any_list1)

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse (any_list1)) @ reverse (any_list2)) = (any_list2 @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any_list1:any list), (reverse (reverse (any_list1)) @ (Nil)) = any_list1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:5)
=================================================
Progress: 9


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse (any_list1)) @ reverse (any_list2)) = (any_list2 @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any_list1:any list), (reverse (reverse (any_list1)) @ (Nil)) = any_list1

1 goal(s) more...

0 conjecture(s) more...
>>> induction any_list1(rank : 5)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse (any_list1)) @ reverse (any_list2)) = (any_list2 @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
---------------------------------------
(reverse (reverse ((Nil))) @ (Nil)) = (Nil)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:4)
=================================================
Progress: 10


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse (any_list1)) @ reverse (any_list2)) = (any_list2 @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
---------------------------------------
(reverse (reverse ((Nil))) @ (Nil)) = (Nil)

2 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse (any_list1)) @ reverse (any_list2)) = (any_list2 @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : (reverse (reverse (any_list3)) @ (Nil)) = any_list3
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
(reverse (reverse ((any1::any_list3))) @ (Nil)) = (any1::any_list3)

1 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:4)
=================================================
Progress: 11


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse (any_list1)) @ reverse (any_list2)) = (any_list2 @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : (reverse (reverse (any_list3)) @ (Nil)) = any_list3
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
(reverse (reverse ((any1::any_list3))) @ (Nil)) = (any1::any_list3)

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse (any_list1)) @ reverse (any_list2)) = (any_list2 @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : (reverse (reverse (any_list3)) @ (Nil)) = any_list3
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
(reverse ((reverse (any_list3) @ (any1::(Nil)))) @ (Nil)) = (any1::any_list3)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
expr list
(reverse (reverse (any_list3)) @ (Nil))
(reverse ((reverse (any_list3) @ (any1::(Nil)))) @ (Nil))
(reverse (((reverse (any_list4) @ (any2::(Nil))) @ (any1::(Nil)))) @ (Nil))
(reverse ((((reverse (any_list5) @ (any3::(Nil))) @ (any2::(Nil))) @ (any1::(Nil)))) @ (Nil))
expr list
any_list3
(any1::any_list3)
(any1::(any2::any_list4))
(any1::(any2::(any3::any_list5)))
New Env

;;
Lemma List
forall (any1:any) (any_list3:any list), (reverse ((reverse (any_list3) @ (any1::(Nil)))) @ (Nil)) = (any1::any_list3)
End of Lemma List


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse (any_list1)) @ reverse (any_list2)) = (any_list2 @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : (reverse (reverse (any_list3)) @ (Nil)) = any_list3
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
(reverse ((reverse (any_list3) @ (any1::(Nil)))) @ (Nil)) = (any1::any_list3)

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 12


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse (any_list1)) @ reverse (any_list2)) = (any_list2 @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : (reverse (reverse (any_list3)) @ (Nil)) = any_list3
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
(reverse ((reverse (any_list3) @ (any1::(Nil)))) @ (Nil)) = (any1::any_list3)

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (any1:any) (any_list3:any list), (reverse ((reverse (any_list3) @ (any1::(Nil)))) @ (Nil)) = (any1::any_list3)(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list), (reverse ((reverse (any_list1) @ (any1::(Nil)))) @ (Nil)) = (any1::any_list1)

---------------------------------------
forall (any1:any) (any_list1:any list), (reverse ((reverse (any_list1) @ (any1::(Nil)))) @ (Nil)) = (any1::any_list1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:6)
=================================================
Progress: 13


1st goal of : forall (any1:any) (any_list1:any list), (reverse ((reverse (any_list1) @ (any1::(Nil)))) @ (Nil)) = (any1::any_list1)

---------------------------------------
forall (any1:any) (any_list1:any list), (reverse ((reverse (any_list1) @ (any1::(Nil)))) @ (Nil)) = (any1::any_list1)

0 goal(s) more...

1 conjecture(s) more...
>>> induction any_list1(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list), (reverse ((reverse (any_list1) @ (any1::(Nil)))) @ (Nil)) = (any1::any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any), (reverse ((reverse ((Nil)) @ (any1::(Nil)))) @ (Nil)) = (any1::(Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5)
=================================================
Progress: 14


1st goal of : forall (any1:any) (any_list1:any list), (reverse ((reverse (any_list1) @ (any1::(Nil)))) @ (Nil)) = (any1::any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any), (reverse ((reverse ((Nil)) @ (any1::(Nil)))) @ (Nil)) = (any1::(Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list), (reverse ((reverse (any_list1) @ (any1::(Nil)))) @ (Nil)) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), (reverse ((reverse (any_list2) @ (any1::(Nil)))) @ (Nil)) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), (reverse ((reverse ((any2::any_list2)) @ (any1::(Nil)))) @ (Nil)) = (any1::(any2::any_list2))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5)
=================================================
Progress: 15


1st goal of : forall (any1:any) (any_list1:any list), (reverse ((reverse (any_list1) @ (any1::(Nil)))) @ (Nil)) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), (reverse ((reverse (any_list2) @ (any1::(Nil)))) @ (Nil)) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), (reverse ((reverse ((any2::any_list2)) @ (any1::(Nil)))) @ (Nil)) = (any1::(any2::any_list2))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list), (reverse ((reverse (any_list1) @ (any1::(Nil)))) @ (Nil)) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), (reverse ((reverse (any_list2) @ (any1::(Nil)))) @ (Nil)) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), (reverse (((reverse (any_list2) @ (any2::(Nil))) @ (any1::(Nil)))) @ (Nil)) = (any1::(any2::any_list2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
intro any1(rank:5)
rewrite <- IH1 in goal at 0(rank:13)
=================================================
Progress: 16


1st goal of : forall (any1:any) (any_list1:any list), (reverse ((reverse (any_list1) @ (any1::(Nil)))) @ (Nil)) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), (reverse ((reverse (any_list2) @ (any1::(Nil)))) @ (Nil)) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), (reverse (((reverse (any_list2) @ (any2::(Nil))) @ (any1::(Nil)))) @ (Nil)) = (any1::(any2::any_list2))

0 goal(s) more...

1 conjecture(s) more...
>>> intro any1(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list), (reverse ((reverse (any_list1) @ (any1::(Nil)))) @ (Nil)) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), (reverse ((reverse (any_list2) @ (any1::(Nil)))) @ (Nil)) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
(reverse (((reverse (any_list2) @ (any2::(Nil))) @ (any1::(Nil)))) @ (Nil)) = (any1::(any2::any_list2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:5)
=================================================
Progress: 17


1st goal of : forall (any1:any) (any_list1:any list), (reverse ((reverse (any_list1) @ (any1::(Nil)))) @ (Nil)) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), (reverse ((reverse (any_list2) @ (any1::(Nil)))) @ (Nil)) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
(reverse (((reverse (any_list2) @ (any2::(Nil))) @ (any1::(Nil)))) @ (Nil)) = (any1::(any2::any_list2))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list), (reverse ((reverse (any_list1) @ (any1::(Nil)))) @ (Nil)) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), (reverse ((reverse (any_list2) @ (any1::(Nil)))) @ (Nil)) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
(reverse (((reverse (any_list2) @ (any2::(Nil))) @ (any1::(Nil)))) @ (Nil)) = (any1::(reverse ((reverse (any_list2) @ (any2::(Nil)))) @ (Nil)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (arg1:any list), (reverse ((arg1 @ (any1::(Nil)))) @ (Nil)) = (any1::(reverse (arg1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list), (reverse ((reverse (any_list1) @ (any1::(Nil)))) @ (Nil)) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), (reverse ((reverse (any_list2) @ (any1::(Nil)))) @ (Nil)) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
(reverse (((reverse (any_list2) @ (any2::(Nil))) @ (any1::(Nil)))) @ (Nil)) = (any1::(reverse ((reverse (any_list2) @ (any2::(Nil)))) @ (Nil)))

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 18


1st goal of : forall (any1:any) (any_list1:any list), (reverse ((reverse (any_list1) @ (any1::(Nil)))) @ (Nil)) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), (reverse ((reverse (any_list2) @ (any1::(Nil)))) @ (Nil)) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
(reverse (((reverse (any_list2) @ (any2::(Nil))) @ (any1::(Nil)))) @ (Nil)) = (any1::(reverse ((reverse (any_list2) @ (any2::(Nil)))) @ (Nil)))

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (any1:any) (arg1:any list), (reverse ((arg1 @ (any1::(Nil)))) @ (Nil)) = (any1::(reverse (arg1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list), (reverse ((any_list1 @ (any1::(Nil)))) @ (Nil)) = (any1::(reverse (any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list), (reverse ((any_list1 @ (any1::(Nil)))) @ (Nil)) = (any1::(reverse (any_list1) @ (Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:8)
=================================================
Progress: 19


1st goal of : forall (any1:any) (any_list1:any list), (reverse ((any_list1 @ (any1::(Nil)))) @ (Nil)) = (any1::(reverse (any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list), (reverse ((any_list1 @ (any1::(Nil)))) @ (Nil)) = (any1::(reverse (any_list1) @ (Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> induction any_list1(rank : 8)


1st goal of : forall (any1:any) (any_list1:any list), (reverse ((any_list1 @ (any1::(Nil)))) @ (Nil)) = (any1::(reverse (any_list1) @ (Nil)))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any), (reverse (((Nil) @ (any1::(Nil)))) @ (Nil)) = (any1::(reverse ((Nil)) @ (Nil)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7)
=================================================
Progress: 20


1st goal of : forall (any1:any) (any_list1:any list), (reverse ((any_list1 @ (any1::(Nil)))) @ (Nil)) = (any1::(reverse (any_list1) @ (Nil)))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any), (reverse (((Nil) @ (any1::(Nil)))) @ (Nil)) = (any1::(reverse ((Nil)) @ (Nil)))

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list), (reverse ((any_list1 @ (any1::(Nil)))) @ (Nil)) = (any1::(reverse (any_list1) @ (Nil)))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), (reverse ((any_list2 @ (any1::(Nil)))) @ (Nil)) = (any1::(reverse (any_list2) @ (Nil)))
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), (reverse (((any2::any_list2) @ (any1::(Nil)))) @ (Nil)) = (any1::(reverse ((any2::any_list2)) @ (Nil)))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7)
=================================================
Progress: 21


1st goal of : forall (any1:any) (any_list1:any list), (reverse ((any_list1 @ (any1::(Nil)))) @ (Nil)) = (any1::(reverse (any_list1) @ (Nil)))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), (reverse ((any_list2 @ (any1::(Nil)))) @ (Nil)) = (any1::(reverse (any_list2) @ (Nil)))
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), (reverse (((any2::any_list2) @ (any1::(Nil)))) @ (Nil)) = (any1::(reverse ((any2::any_list2)) @ (Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list), (reverse ((any_list1 @ (any1::(Nil)))) @ (Nil)) = (any1::(reverse (any_list1) @ (Nil)))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), (reverse ((any_list2 @ (any1::(Nil)))) @ (Nil)) = (any1::(reverse (any_list2) @ (Nil)))
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), ((reverse ((any_list2 @ (any1::(Nil)))) @ (any2::(Nil))) @ (Nil)) = (any1::((reverse (any_list2) @ (any2::(Nil))) @ (Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro any1(rank:7)
=================================================
Progress: 22


1st goal of : forall (any1:any) (any_list1:any list), (reverse ((any_list1 @ (any1::(Nil)))) @ (Nil)) = (any1::(reverse (any_list1) @ (Nil)))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), (reverse ((any_list2 @ (any1::(Nil)))) @ (Nil)) = (any1::(reverse (any_list2) @ (Nil)))
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), ((reverse ((any_list2 @ (any1::(Nil)))) @ (any2::(Nil))) @ (Nil)) = (any1::((reverse (any_list2) @ (any2::(Nil))) @ (Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any1(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list), (reverse ((any_list1 @ (any1::(Nil)))) @ (Nil)) = (any1::(reverse (any_list1) @ (Nil)))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), (reverse ((any_list2 @ (any1::(Nil)))) @ (Nil)) = (any1::(reverse (any_list2) @ (Nil)))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
((reverse ((any_list2 @ (any1::(Nil)))) @ (any2::(Nil))) @ (Nil)) = (any1::((reverse (any_list2) @ (any2::(Nil))) @ (Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
New Env

;;
Lemma List
forall (any1:any) (any_list2:any list) (arg2:any list), ((reverse ((any_list2 @ (any1::(Nil)))) @ arg2) @ (Nil)) = (any1::((reverse (any_list2) @ arg2) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list), (reverse ((any_list1 @ (any1::(Nil)))) @ (Nil)) = (any1::(reverse (any_list1) @ (Nil)))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), (reverse ((any_list2 @ (any1::(Nil)))) @ (Nil)) = (any1::(reverse (any_list2) @ (Nil)))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
((reverse ((any_list2 @ (any1::(Nil)))) @ (any2::(Nil))) @ (Nil)) = (any1::((reverse (any_list2) @ (any2::(Nil))) @ (Nil)))

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 23


1st goal of : forall (any1:any) (any_list1:any list), (reverse ((any_list1 @ (any1::(Nil)))) @ (Nil)) = (any1::(reverse (any_list1) @ (Nil)))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), (reverse ((any_list2 @ (any1::(Nil)))) @ (Nil)) = (any1::(reverse (any_list2) @ (Nil)))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
((reverse ((any_list2 @ (any1::(Nil)))) @ (any2::(Nil))) @ (Nil)) = (any1::((reverse (any_list2) @ (any2::(Nil))) @ (Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (any1:any) (any_list2:any list) (arg2:any list), ((reverse ((any_list2 @ (any1::(Nil)))) @ arg2) @ (Nil)) = (any1::((reverse (any_list2) @ arg2) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((reverse ((any_list1 @ (any1::(Nil)))) @ any_list2) @ (Nil)) = (any1::((reverse (any_list1) @ any_list2) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), ((reverse ((any_list1 @ (any1::(Nil)))) @ any_list2) @ (Nil)) = (any1::((reverse (any_list1) @ any_list2) @ (Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:10)
=================================================
Progress: 24


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((reverse ((any_list1 @ (any1::(Nil)))) @ any_list2) @ (Nil)) = (any1::((reverse (any_list1) @ any_list2) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), ((reverse ((any_list1 @ (any1::(Nil)))) @ any_list2) @ (Nil)) = (any1::((reverse (any_list1) @ any_list2) @ (Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> induction any_list1(rank : 10)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((reverse ((any_list1 @ (any1::(Nil)))) @ any_list2) @ (Nil)) = (any1::((reverse (any_list1) @ any_list2) @ (Nil)))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any_list2:any list), ((reverse (((Nil) @ (any1::(Nil)))) @ any_list2) @ (Nil)) = (any1::((reverse ((Nil)) @ any_list2) @ (Nil)))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9)
=================================================
Progress: 25


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((reverse ((any_list1 @ (any1::(Nil)))) @ any_list2) @ (Nil)) = (any1::((reverse (any_list1) @ any_list2) @ (Nil)))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any_list2:any list), ((reverse (((Nil) @ (any1::(Nil)))) @ any_list2) @ (Nil)) = (any1::((reverse ((Nil)) @ any_list2) @ (Nil)))

1 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((reverse ((any_list1 @ (any1::(Nil)))) @ any_list2) @ (Nil)) = (any1::((reverse (any_list1) @ any_list2) @ (Nil)))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), ((reverse ((any_list3 @ (any1::(Nil)))) @ any_list2) @ (Nil)) = (any1::((reverse (any_list3) @ any_list2) @ (Nil)))
Inductive1 : any_list1 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list2:any list), ((reverse (((any2::any_list3) @ (any1::(Nil)))) @ any_list2) @ (Nil)) = (any1::((reverse ((any2::any_list3)) @ any_list2) @ (Nil)))

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 26


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((reverse ((any_list1 @ (any1::(Nil)))) @ any_list2) @ (Nil)) = (any1::((reverse (any_list1) @ any_list2) @ (Nil)))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), ((reverse ((any_list3 @ (any1::(Nil)))) @ any_list2) @ (Nil)) = (any1::((reverse (any_list3) @ any_list2) @ (Nil)))
Inductive1 : any_list1 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list2:any list), ((reverse (((any2::any_list3) @ (any1::(Nil)))) @ any_list2) @ (Nil)) = (any1::((reverse ((any2::any_list3)) @ any_list2) @ (Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((reverse ((any_list1 @ (any1::(Nil)))) @ any_list2) @ (Nil)) = (any1::((reverse (any_list1) @ any_list2) @ (Nil)))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), ((reverse ((any_list3 @ (any1::(Nil)))) @ any_list2) @ (Nil)) = (any1::((reverse (any_list3) @ any_list2) @ (Nil)))
Inductive1 : any_list1 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list2:any list), (((reverse ((any_list3 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list2) @ (Nil)) = (any1::(((reverse (any_list3) @ (any2::(Nil))) @ any_list2) @ (Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro any1(rank:9)
intro any_list2(rank:9)
=================================================
Progress: 27


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((reverse ((any_list1 @ (any1::(Nil)))) @ any_list2) @ (Nil)) = (any1::((reverse (any_list1) @ any_list2) @ (Nil)))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), ((reverse ((any_list3 @ (any1::(Nil)))) @ any_list2) @ (Nil)) = (any1::((reverse (any_list3) @ any_list2) @ (Nil)))
Inductive1 : any_list1 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list2:any list), (((reverse ((any_list3 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list2) @ (Nil)) = (any1::(((reverse (any_list3) @ (any2::(Nil))) @ any_list2) @ (Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any1(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((reverse ((any_list1 @ (any1::(Nil)))) @ any_list2) @ (Nil)) = (any1::((reverse (any_list1) @ any_list2) @ (Nil)))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), ((reverse ((any_list3 @ (any1::(Nil)))) @ any_list2) @ (Nil)) = (any1::((reverse (any_list3) @ any_list2) @ (Nil)))
Inductive1 : any_list1 = (any2::any_list3)
any1 : any
---------------------------------------
forall (any_list2:any list), (((reverse ((any_list3 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list2) @ (Nil)) = (any1::(((reverse (any_list3) @ (any2::(Nil))) @ any_list2) @ (Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro any_list2(rank:9)
=================================================
Progress: 28


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((reverse ((any_list1 @ (any1::(Nil)))) @ any_list2) @ (Nil)) = (any1::((reverse (any_list1) @ any_list2) @ (Nil)))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), ((reverse ((any_list3 @ (any1::(Nil)))) @ any_list2) @ (Nil)) = (any1::((reverse (any_list3) @ any_list2) @ (Nil)))
Inductive1 : any_list1 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list2:any list), (((reverse ((any_list3 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list2) @ (Nil)) = (any1::(((reverse (any_list3) @ (any2::(Nil))) @ any_list2) @ (Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any_list2(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((reverse ((any_list1 @ (any1::(Nil)))) @ any_list2) @ (Nil)) = (any1::((reverse (any_list1) @ any_list2) @ (Nil)))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), ((reverse ((any_list3 @ (any1::(Nil)))) @ any_list2) @ (Nil)) = (any1::((reverse (any_list3) @ any_list2) @ (Nil)))
Inductive1 : any_list1 = (any2::any_list3)
any_list2 : any list
---------------------------------------
forall (any1:any), (((reverse ((any_list3 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list2) @ (Nil)) = (any1::(((reverse (any_list3) @ (any2::(Nil))) @ any_list2) @ (Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list2
New Env

;;
Lemma List
forall (any1:any) (any_list2:any list) (any_list3:any list) (arg3:any list), (((reverse ((any_list3 @ (any1::(Nil)))) @ arg3) @ any_list2) @ (Nil)) = (any1::(((reverse (any_list3) @ arg3) @ any_list2) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((reverse ((any_list1 @ (any1::(Nil)))) @ any_list2) @ (Nil)) = (any1::((reverse (any_list1) @ any_list2) @ (Nil)))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), ((reverse ((any_list3 @ (any1::(Nil)))) @ any_list2) @ (Nil)) = (any1::((reverse (any_list3) @ any_list2) @ (Nil)))
Inductive1 : any_list1 = (any2::any_list3)
any_list2 : any list
---------------------------------------
forall (any1:any), (((reverse ((any_list3 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list2) @ (Nil)) = (any1::(((reverse (any_list3) @ (any2::(Nil))) @ any_list2) @ (Nil)))

0 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 29


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((reverse ((any_list1 @ (any1::(Nil)))) @ any_list2) @ (Nil)) = (any1::((reverse (any_list1) @ any_list2) @ (Nil)))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), ((reverse ((any_list3 @ (any1::(Nil)))) @ any_list2) @ (Nil)) = (any1::((reverse (any_list3) @ any_list2) @ (Nil)))
Inductive1 : any_list1 = (any2::any_list3)
any_list2 : any list
---------------------------------------
forall (any1:any), (((reverse ((any_list3 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list2) @ (Nil)) = (any1::(((reverse (any_list3) @ (any2::(Nil))) @ any_list2) @ (Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> assert forall (any1:any) (any_list2:any list) (any_list3:any list) (arg3:any list), (((reverse ((any_list3 @ (any1::(Nil)))) @ arg3) @ any_list2) @ (Nil)) = (any1::(((reverse (any_list3) @ arg3) @ any_list2) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:12)
=================================================
Progress: 30


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((reverse ((any_list1 @ (any1::(Nil)))) @ any_list2) @ (Nil)) = (any1::((reverse (any_list1) @ any_list2) @ (Nil)))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), ((reverse ((any_list3 @ (any1::(Nil)))) @ any_list2) @ (Nil)) = (any1::((reverse (any_list3) @ any_list2) @ (Nil)))
Inductive1 : any_list1 = (any2::any_list3)
any1 : any
---------------------------------------
forall (any_list2:any list), (((reverse ((any_list3 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list2) @ (Nil)) = (any1::(((reverse (any_list3) @ (any2::(Nil))) @ any_list2) @ (Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any_list2(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((reverse ((any_list1 @ (any1::(Nil)))) @ any_list2) @ (Nil)) = (any1::((reverse (any_list1) @ any_list2) @ (Nil)))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), ((reverse ((any_list3 @ (any1::(Nil)))) @ any_list2) @ (Nil)) = (any1::((reverse (any_list3) @ any_list2) @ (Nil)))
Inductive1 : any_list1 = (any2::any_list3)
any1 : any
any_list2 : any list
---------------------------------------
(((reverse ((any_list3 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list2) @ (Nil)) = (any1::(((reverse (any_list3) @ (any2::(Nil))) @ any_list2) @ (Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list2
New Env

;;
Lemma List
forall (any1:any) (any_list2:any list) (any_list3:any list) (arg4:any list), (((reverse ((any_list3 @ (any1::(Nil)))) @ arg4) @ any_list2) @ (Nil)) = (any1::(((reverse (any_list3) @ arg4) @ any_list2) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((reverse ((any_list1 @ (any1::(Nil)))) @ any_list2) @ (Nil)) = (any1::((reverse (any_list1) @ any_list2) @ (Nil)))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), ((reverse ((any_list3 @ (any1::(Nil)))) @ any_list2) @ (Nil)) = (any1::((reverse (any_list3) @ any_list2) @ (Nil)))
Inductive1 : any_list1 = (any2::any_list3)
any1 : any
any_list2 : any list
---------------------------------------
(((reverse ((any_list3 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list2) @ (Nil)) = (any1::(((reverse (any_list3) @ (any2::(Nil))) @ any_list2) @ (Nil)))

0 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 31


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((reverse ((any_list1 @ (any1::(Nil)))) @ any_list2) @ (Nil)) = (any1::((reverse (any_list1) @ any_list2) @ (Nil)))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), ((reverse ((any_list3 @ (any1::(Nil)))) @ any_list2) @ (Nil)) = (any1::((reverse (any_list3) @ any_list2) @ (Nil)))
Inductive1 : any_list1 = (any2::any_list3)
any1 : any
any_list2 : any list
---------------------------------------
(((reverse ((any_list3 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list2) @ (Nil)) = (any1::(((reverse (any_list3) @ (any2::(Nil))) @ any_list2) @ (Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> assert forall (any1:any) (any_list2:any list) (any_list3:any list) (arg4:any list), (((reverse ((any_list3 @ (any1::(Nil)))) @ arg4) @ any_list2) @ (Nil)) = (any1::(((reverse (any_list3) @ arg4) @ any_list2) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:12)
=================================================
Progress: 32


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
>>> induction any_list2(rank : 12)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse (((Nil) @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse ((Nil)) @ any_list3) @ any_list1) @ (Nil)))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11)
=================================================
Progress: 33


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse (((Nil) @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse ((Nil)) @ any_list3) @ any_list1) @ (Nil)))

1 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 11)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse (((any2::any_list4) @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse ((any2::any_list4)) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:11)
=================================================
Progress: 34


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse (((any2::any_list4) @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse ((any2::any_list4)) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 11)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any1(rank:11)
intro any_list1(rank:11)
intro any_list3(rank:11)
=================================================
Progress: 35


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any1(rank : 11)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list3:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:11)
intro any_list3(rank:11)
=================================================
Progress: 36


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 11)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list3:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro any_list3(rank:11)
=================================================
Progress: 37


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any_list3(rank : 11)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list3
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list3:any list) (any_list4:any list) (arg5:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ arg5) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ arg5) @ any_list3) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 38


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list3:any list) (any_list4:any list) (arg5:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ arg5) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ arg5) @ any_list3) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list3(rank:14)
=================================================
Progress: 39


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list3:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 11)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list3:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro any_list3(rank:11)
=================================================
Progress: 40


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list3:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any_list3(rank : 11)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
any1 : any
any_list3 : any list
---------------------------------------
forall (any_list1:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list3
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list3:any list) (any_list4:any list) (arg6:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ arg6) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ arg6) @ any_list3) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
any1 : any
any_list3 : any list
---------------------------------------
forall (any_list1:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 41


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
any1 : any
any_list3 : any list
---------------------------------------
forall (any_list1:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list3:any list) (any_list4:any list) (arg6:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ arg6) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ arg6) @ any_list3) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list3(rank:14)
=================================================
Progress: 42


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list3:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any_list3(rank : 11)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
any_list1 : any list
any_list3 : any list
---------------------------------------
forall (any1:any), ((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list3
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list3:any list) (any_list4:any list) (arg7:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ arg7) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ arg7) @ any_list3) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
any_list1 : any list
any_list3 : any list
---------------------------------------
forall (any1:any), ((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 43


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
any_list1 : any list
any_list3 : any list
---------------------------------------
forall (any1:any), ((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list3:any list) (any_list4:any list) (arg7:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ arg7) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ arg7) @ any_list3) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list3(rank:14)
=================================================
Progress: 44


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list3:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any_list3(rank : 11)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
any1 : any
any_list1 : any list
any_list3 : any list
---------------------------------------
((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list3
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list3:any list) (any_list4:any list) (arg8:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ arg8) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ arg8) @ any_list3) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
any1 : any
any_list1 : any list
any_list3 : any list
---------------------------------------
((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 45


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
any1 : any
any_list1 : any list
any_list3 : any list
---------------------------------------
((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list3:any list) (any_list4:any list) (arg8:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ arg8) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ arg8) @ any_list3) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list3(rank:14)
=================================================
Progress: 46


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
>>> induction any_list2(rank : 12)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse (((Nil) @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse ((Nil)) @ any_list3) @ any_list1) @ (Nil)))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11)
=================================================
Progress: 47


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse (((Nil) @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse ((Nil)) @ any_list3) @ any_list1) @ (Nil)))

1 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 11)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse (((any2::any_list4) @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse ((any2::any_list4)) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:11)
=================================================
Progress: 48


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse (((any2::any_list4) @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse ((any2::any_list4)) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 11)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any1(rank:11)
intro any_list1(rank:11)
intro any_list3(rank:11)
=================================================
Progress: 49


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any1(rank : 11)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list3:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:11)
intro any_list3(rank:11)
=================================================
Progress: 50


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 11)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list3:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro any_list3(rank:11)
=================================================
Progress: 51


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any_list3(rank : 11)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list3
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list3:any list) (any_list4:any list) (arg9:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ arg9) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ arg9) @ any_list3) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 52


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list3:any list) (any_list4:any list) (arg9:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ arg9) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ arg9) @ any_list3) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list3(rank:14)
=================================================
Progress: 53


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list3:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 11)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list3:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro any_list3(rank:11)
=================================================
Progress: 54


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list3:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any_list3(rank : 11)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
any1 : any
any_list3 : any list
---------------------------------------
forall (any_list1:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list3
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list3:any list) (any_list4:any list) (arg10:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ arg10) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ arg10) @ any_list3) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
any1 : any
any_list3 : any list
---------------------------------------
forall (any_list1:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 55


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
any1 : any
any_list3 : any list
---------------------------------------
forall (any_list1:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list3:any list) (any_list4:any list) (arg10:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ arg10) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ arg10) @ any_list3) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list3(rank:14)
=================================================
Progress: 56


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list3:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any_list3(rank : 11)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
any_list1 : any list
any_list3 : any list
---------------------------------------
forall (any1:any), ((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list3
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list3:any list) (any_list4:any list) (arg11:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ arg11) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ arg11) @ any_list3) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
any_list1 : any list
any_list3 : any list
---------------------------------------
forall (any1:any), ((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 57


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
any_list1 : any list
any_list3 : any list
---------------------------------------
forall (any1:any), ((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list3:any list) (any_list4:any list) (arg11:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ arg11) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ arg11) @ any_list3) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list3(rank:14)
=================================================
Progress: 58


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list3:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any_list3(rank : 11)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
any1 : any
any_list1 : any list
any_list3 : any list
---------------------------------------
((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list3
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list3:any list) (any_list4:any list) (arg12:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ arg12) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ arg12) @ any_list3) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
any1 : any
any_list1 : any list
any_list3 : any list
---------------------------------------
((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 59


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
any1 : any
any_list1 : any list
any_list3 : any list
---------------------------------------
((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list3:any list) (any_list4:any list) (arg12:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ arg12) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ arg12) @ any_list3) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list3(rank:14)
=================================================
Progress: 60


1st goal of : forall (any1:any) (any_list1:any list), (reverse ((reverse (any_list1) @ (any1::(Nil)))) @ (Nil)) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), (reverse ((reverse (any_list2) @ (any1::(Nil)))) @ (Nil)) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), (reverse (((reverse (any_list2) @ (any2::(Nil))) @ (any1::(Nil)))) @ (Nil)) = (any1::(any2::any_list2))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list), (reverse ((reverse (any_list1) @ (any1::(Nil)))) @ (Nil)) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), (reverse ((reverse (any_list2) @ (any1::(Nil)))) @ (Nil)) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), (reverse (((reverse (any_list2) @ (any2::(Nil))) @ (any1::(Nil)))) @ (Nil)) = (any1::(reverse ((reverse (any_list2) @ (any2::(Nil)))) @ (Nil)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (any1:any) (arg13:any list), (reverse ((arg13 @ (any1::(Nil)))) @ (Nil)) = (any1::(reverse (arg13) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list), (reverse ((reverse (any_list1) @ (any1::(Nil)))) @ (Nil)) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), (reverse ((reverse (any_list2) @ (any1::(Nil)))) @ (Nil)) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), (reverse (((reverse (any_list2) @ (any2::(Nil))) @ (any1::(Nil)))) @ (Nil)) = (any1::(reverse ((reverse (any_list2) @ (any2::(Nil)))) @ (Nil)))

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 61


1st goal of : forall (any1:any) (any_list1:any list), (reverse ((reverse (any_list1) @ (any1::(Nil)))) @ (Nil)) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), (reverse ((reverse (any_list2) @ (any1::(Nil)))) @ (Nil)) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), (reverse (((reverse (any_list2) @ (any2::(Nil))) @ (any1::(Nil)))) @ (Nil)) = (any1::(reverse ((reverse (any_list2) @ (any2::(Nil)))) @ (Nil)))

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (any1:any) (arg13:any list), (reverse ((arg13 @ (any1::(Nil)))) @ (Nil)) = (any1::(reverse (arg13) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list), (reverse ((any_list1 @ (any1::(Nil)))) @ (Nil)) = (any1::(reverse (any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list), (reverse ((any_list1 @ (any1::(Nil)))) @ (Nil)) = (any1::(reverse (any_list1) @ (Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:8)
=================================================
Progress: 62


1st goal of : forall (any1:any) (any_list1:any list), (reverse ((any_list1 @ (any1::(Nil)))) @ (Nil)) = (any1::(reverse (any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list), (reverse ((any_list1 @ (any1::(Nil)))) @ (Nil)) = (any1::(reverse (any_list1) @ (Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> induction any_list1(rank : 8)


1st goal of : forall (any1:any) (any_list1:any list), (reverse ((any_list1 @ (any1::(Nil)))) @ (Nil)) = (any1::(reverse (any_list1) @ (Nil)))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any), (reverse (((Nil) @ (any1::(Nil)))) @ (Nil)) = (any1::(reverse ((Nil)) @ (Nil)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7)
=================================================
Progress: 63


1st goal of : forall (any1:any) (any_list1:any list), (reverse ((any_list1 @ (any1::(Nil)))) @ (Nil)) = (any1::(reverse (any_list1) @ (Nil)))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any), (reverse (((Nil) @ (any1::(Nil)))) @ (Nil)) = (any1::(reverse ((Nil)) @ (Nil)))

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list), (reverse ((any_list1 @ (any1::(Nil)))) @ (Nil)) = (any1::(reverse (any_list1) @ (Nil)))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), (reverse ((any_list2 @ (any1::(Nil)))) @ (Nil)) = (any1::(reverse (any_list2) @ (Nil)))
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), (reverse (((any2::any_list2) @ (any1::(Nil)))) @ (Nil)) = (any1::(reverse ((any2::any_list2)) @ (Nil)))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7)
=================================================
Progress: 64


1st goal of : forall (any1:any) (any_list1:any list), (reverse ((any_list1 @ (any1::(Nil)))) @ (Nil)) = (any1::(reverse (any_list1) @ (Nil)))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), (reverse ((any_list2 @ (any1::(Nil)))) @ (Nil)) = (any1::(reverse (any_list2) @ (Nil)))
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), (reverse (((any2::any_list2) @ (any1::(Nil)))) @ (Nil)) = (any1::(reverse ((any2::any_list2)) @ (Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list), (reverse ((any_list1 @ (any1::(Nil)))) @ (Nil)) = (any1::(reverse (any_list1) @ (Nil)))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), (reverse ((any_list2 @ (any1::(Nil)))) @ (Nil)) = (any1::(reverse (any_list2) @ (Nil)))
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), ((reverse ((any_list2 @ (any1::(Nil)))) @ (any2::(Nil))) @ (Nil)) = (any1::((reverse (any_list2) @ (any2::(Nil))) @ (Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro any1(rank:7)
=================================================
Progress: 65


1st goal of : forall (any1:any) (any_list1:any list), (reverse ((any_list1 @ (any1::(Nil)))) @ (Nil)) = (any1::(reverse (any_list1) @ (Nil)))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), (reverse ((any_list2 @ (any1::(Nil)))) @ (Nil)) = (any1::(reverse (any_list2) @ (Nil)))
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), ((reverse ((any_list2 @ (any1::(Nil)))) @ (any2::(Nil))) @ (Nil)) = (any1::((reverse (any_list2) @ (any2::(Nil))) @ (Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any1(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list), (reverse ((any_list1 @ (any1::(Nil)))) @ (Nil)) = (any1::(reverse (any_list1) @ (Nil)))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), (reverse ((any_list2 @ (any1::(Nil)))) @ (Nil)) = (any1::(reverse (any_list2) @ (Nil)))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
((reverse ((any_list2 @ (any1::(Nil)))) @ (any2::(Nil))) @ (Nil)) = (any1::((reverse (any_list2) @ (any2::(Nil))) @ (Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
New Env

;;
Lemma List
forall (any1:any) (any_list2:any list) (arg14:any list), ((reverse ((any_list2 @ (any1::(Nil)))) @ arg14) @ (Nil)) = (any1::((reverse (any_list2) @ arg14) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list), (reverse ((any_list1 @ (any1::(Nil)))) @ (Nil)) = (any1::(reverse (any_list1) @ (Nil)))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), (reverse ((any_list2 @ (any1::(Nil)))) @ (Nil)) = (any1::(reverse (any_list2) @ (Nil)))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
((reverse ((any_list2 @ (any1::(Nil)))) @ (any2::(Nil))) @ (Nil)) = (any1::((reverse (any_list2) @ (any2::(Nil))) @ (Nil)))

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 66


1st goal of : forall (any1:any) (any_list1:any list), (reverse ((any_list1 @ (any1::(Nil)))) @ (Nil)) = (any1::(reverse (any_list1) @ (Nil)))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), (reverse ((any_list2 @ (any1::(Nil)))) @ (Nil)) = (any1::(reverse (any_list2) @ (Nil)))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
((reverse ((any_list2 @ (any1::(Nil)))) @ (any2::(Nil))) @ (Nil)) = (any1::((reverse (any_list2) @ (any2::(Nil))) @ (Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (any1:any) (any_list2:any list) (arg14:any list), ((reverse ((any_list2 @ (any1::(Nil)))) @ arg14) @ (Nil)) = (any1::((reverse (any_list2) @ arg14) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((reverse ((any_list1 @ (any1::(Nil)))) @ any_list2) @ (Nil)) = (any1::((reverse (any_list1) @ any_list2) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), ((reverse ((any_list1 @ (any1::(Nil)))) @ any_list2) @ (Nil)) = (any1::((reverse (any_list1) @ any_list2) @ (Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:10)
=================================================
Progress: 67


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((reverse ((any_list1 @ (any1::(Nil)))) @ any_list2) @ (Nil)) = (any1::((reverse (any_list1) @ any_list2) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), ((reverse ((any_list1 @ (any1::(Nil)))) @ any_list2) @ (Nil)) = (any1::((reverse (any_list1) @ any_list2) @ (Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> induction any_list1(rank : 10)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((reverse ((any_list1 @ (any1::(Nil)))) @ any_list2) @ (Nil)) = (any1::((reverse (any_list1) @ any_list2) @ (Nil)))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any_list2:any list), ((reverse (((Nil) @ (any1::(Nil)))) @ any_list2) @ (Nil)) = (any1::((reverse ((Nil)) @ any_list2) @ (Nil)))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9)
=================================================
Progress: 68


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((reverse ((any_list1 @ (any1::(Nil)))) @ any_list2) @ (Nil)) = (any1::((reverse (any_list1) @ any_list2) @ (Nil)))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any_list2:any list), ((reverse (((Nil) @ (any1::(Nil)))) @ any_list2) @ (Nil)) = (any1::((reverse ((Nil)) @ any_list2) @ (Nil)))

1 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((reverse ((any_list1 @ (any1::(Nil)))) @ any_list2) @ (Nil)) = (any1::((reverse (any_list1) @ any_list2) @ (Nil)))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), ((reverse ((any_list3 @ (any1::(Nil)))) @ any_list2) @ (Nil)) = (any1::((reverse (any_list3) @ any_list2) @ (Nil)))
Inductive1 : any_list1 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list2:any list), ((reverse (((any2::any_list3) @ (any1::(Nil)))) @ any_list2) @ (Nil)) = (any1::((reverse ((any2::any_list3)) @ any_list2) @ (Nil)))

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 69


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((reverse ((any_list1 @ (any1::(Nil)))) @ any_list2) @ (Nil)) = (any1::((reverse (any_list1) @ any_list2) @ (Nil)))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), ((reverse ((any_list3 @ (any1::(Nil)))) @ any_list2) @ (Nil)) = (any1::((reverse (any_list3) @ any_list2) @ (Nil)))
Inductive1 : any_list1 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list2:any list), ((reverse (((any2::any_list3) @ (any1::(Nil)))) @ any_list2) @ (Nil)) = (any1::((reverse ((any2::any_list3)) @ any_list2) @ (Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((reverse ((any_list1 @ (any1::(Nil)))) @ any_list2) @ (Nil)) = (any1::((reverse (any_list1) @ any_list2) @ (Nil)))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), ((reverse ((any_list3 @ (any1::(Nil)))) @ any_list2) @ (Nil)) = (any1::((reverse (any_list3) @ any_list2) @ (Nil)))
Inductive1 : any_list1 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list2:any list), (((reverse ((any_list3 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list2) @ (Nil)) = (any1::(((reverse (any_list3) @ (any2::(Nil))) @ any_list2) @ (Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro any1(rank:9)
intro any_list2(rank:9)
=================================================
Progress: 70


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((reverse ((any_list1 @ (any1::(Nil)))) @ any_list2) @ (Nil)) = (any1::((reverse (any_list1) @ any_list2) @ (Nil)))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), ((reverse ((any_list3 @ (any1::(Nil)))) @ any_list2) @ (Nil)) = (any1::((reverse (any_list3) @ any_list2) @ (Nil)))
Inductive1 : any_list1 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list2:any list), (((reverse ((any_list3 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list2) @ (Nil)) = (any1::(((reverse (any_list3) @ (any2::(Nil))) @ any_list2) @ (Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any1(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((reverse ((any_list1 @ (any1::(Nil)))) @ any_list2) @ (Nil)) = (any1::((reverse (any_list1) @ any_list2) @ (Nil)))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), ((reverse ((any_list3 @ (any1::(Nil)))) @ any_list2) @ (Nil)) = (any1::((reverse (any_list3) @ any_list2) @ (Nil)))
Inductive1 : any_list1 = (any2::any_list3)
any1 : any
---------------------------------------
forall (any_list2:any list), (((reverse ((any_list3 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list2) @ (Nil)) = (any1::(((reverse (any_list3) @ (any2::(Nil))) @ any_list2) @ (Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro any_list2(rank:9)
=================================================
Progress: 71


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((reverse ((any_list1 @ (any1::(Nil)))) @ any_list2) @ (Nil)) = (any1::((reverse (any_list1) @ any_list2) @ (Nil)))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), ((reverse ((any_list3 @ (any1::(Nil)))) @ any_list2) @ (Nil)) = (any1::((reverse (any_list3) @ any_list2) @ (Nil)))
Inductive1 : any_list1 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list2:any list), (((reverse ((any_list3 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list2) @ (Nil)) = (any1::(((reverse (any_list3) @ (any2::(Nil))) @ any_list2) @ (Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any_list2(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((reverse ((any_list1 @ (any1::(Nil)))) @ any_list2) @ (Nil)) = (any1::((reverse (any_list1) @ any_list2) @ (Nil)))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), ((reverse ((any_list3 @ (any1::(Nil)))) @ any_list2) @ (Nil)) = (any1::((reverse (any_list3) @ any_list2) @ (Nil)))
Inductive1 : any_list1 = (any2::any_list3)
any_list2 : any list
---------------------------------------
forall (any1:any), (((reverse ((any_list3 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list2) @ (Nil)) = (any1::(((reverse (any_list3) @ (any2::(Nil))) @ any_list2) @ (Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list2
New Env

;;
Lemma List
forall (any1:any) (any_list2:any list) (any_list3:any list) (arg15:any list), (((reverse ((any_list3 @ (any1::(Nil)))) @ arg15) @ any_list2) @ (Nil)) = (any1::(((reverse (any_list3) @ arg15) @ any_list2) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((reverse ((any_list1 @ (any1::(Nil)))) @ any_list2) @ (Nil)) = (any1::((reverse (any_list1) @ any_list2) @ (Nil)))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), ((reverse ((any_list3 @ (any1::(Nil)))) @ any_list2) @ (Nil)) = (any1::((reverse (any_list3) @ any_list2) @ (Nil)))
Inductive1 : any_list1 = (any2::any_list3)
any_list2 : any list
---------------------------------------
forall (any1:any), (((reverse ((any_list3 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list2) @ (Nil)) = (any1::(((reverse (any_list3) @ (any2::(Nil))) @ any_list2) @ (Nil)))

0 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 72


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((reverse ((any_list1 @ (any1::(Nil)))) @ any_list2) @ (Nil)) = (any1::((reverse (any_list1) @ any_list2) @ (Nil)))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), ((reverse ((any_list3 @ (any1::(Nil)))) @ any_list2) @ (Nil)) = (any1::((reverse (any_list3) @ any_list2) @ (Nil)))
Inductive1 : any_list1 = (any2::any_list3)
any_list2 : any list
---------------------------------------
forall (any1:any), (((reverse ((any_list3 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list2) @ (Nil)) = (any1::(((reverse (any_list3) @ (any2::(Nil))) @ any_list2) @ (Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> assert forall (any1:any) (any_list2:any list) (any_list3:any list) (arg15:any list), (((reverse ((any_list3 @ (any1::(Nil)))) @ arg15) @ any_list2) @ (Nil)) = (any1::(((reverse (any_list3) @ arg15) @ any_list2) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:12)
=================================================
Progress: 73


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((reverse ((any_list1 @ (any1::(Nil)))) @ any_list2) @ (Nil)) = (any1::((reverse (any_list1) @ any_list2) @ (Nil)))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), ((reverse ((any_list3 @ (any1::(Nil)))) @ any_list2) @ (Nil)) = (any1::((reverse (any_list3) @ any_list2) @ (Nil)))
Inductive1 : any_list1 = (any2::any_list3)
any1 : any
---------------------------------------
forall (any_list2:any list), (((reverse ((any_list3 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list2) @ (Nil)) = (any1::(((reverse (any_list3) @ (any2::(Nil))) @ any_list2) @ (Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any_list2(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((reverse ((any_list1 @ (any1::(Nil)))) @ any_list2) @ (Nil)) = (any1::((reverse (any_list1) @ any_list2) @ (Nil)))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), ((reverse ((any_list3 @ (any1::(Nil)))) @ any_list2) @ (Nil)) = (any1::((reverse (any_list3) @ any_list2) @ (Nil)))
Inductive1 : any_list1 = (any2::any_list3)
any1 : any
any_list2 : any list
---------------------------------------
(((reverse ((any_list3 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list2) @ (Nil)) = (any1::(((reverse (any_list3) @ (any2::(Nil))) @ any_list2) @ (Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list2
New Env

;;
Lemma List
forall (any1:any) (any_list2:any list) (any_list3:any list) (arg16:any list), (((reverse ((any_list3 @ (any1::(Nil)))) @ arg16) @ any_list2) @ (Nil)) = (any1::(((reverse (any_list3) @ arg16) @ any_list2) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((reverse ((any_list1 @ (any1::(Nil)))) @ any_list2) @ (Nil)) = (any1::((reverse (any_list1) @ any_list2) @ (Nil)))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), ((reverse ((any_list3 @ (any1::(Nil)))) @ any_list2) @ (Nil)) = (any1::((reverse (any_list3) @ any_list2) @ (Nil)))
Inductive1 : any_list1 = (any2::any_list3)
any1 : any
any_list2 : any list
---------------------------------------
(((reverse ((any_list3 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list2) @ (Nil)) = (any1::(((reverse (any_list3) @ (any2::(Nil))) @ any_list2) @ (Nil)))

0 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 74


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((reverse ((any_list1 @ (any1::(Nil)))) @ any_list2) @ (Nil)) = (any1::((reverse (any_list1) @ any_list2) @ (Nil)))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), ((reverse ((any_list3 @ (any1::(Nil)))) @ any_list2) @ (Nil)) = (any1::((reverse (any_list3) @ any_list2) @ (Nil)))
Inductive1 : any_list1 = (any2::any_list3)
any1 : any
any_list2 : any list
---------------------------------------
(((reverse ((any_list3 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list2) @ (Nil)) = (any1::(((reverse (any_list3) @ (any2::(Nil))) @ any_list2) @ (Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> assert forall (any1:any) (any_list2:any list) (any_list3:any list) (arg16:any list), (((reverse ((any_list3 @ (any1::(Nil)))) @ arg16) @ any_list2) @ (Nil)) = (any1::(((reverse (any_list3) @ arg16) @ any_list2) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:12)
=================================================
Progress: 75


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
>>> induction any_list2(rank : 12)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse (((Nil) @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse ((Nil)) @ any_list3) @ any_list1) @ (Nil)))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11)
=================================================
Progress: 76


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse (((Nil) @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse ((Nil)) @ any_list3) @ any_list1) @ (Nil)))

1 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 11)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse (((any2::any_list4) @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse ((any2::any_list4)) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:11)
=================================================
Progress: 77


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse (((any2::any_list4) @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse ((any2::any_list4)) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 11)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any1(rank:11)
intro any_list1(rank:11)
intro any_list3(rank:11)
=================================================
Progress: 78


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any1(rank : 11)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list3:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:11)
intro any_list3(rank:11)
=================================================
Progress: 79


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 11)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list3:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro any_list3(rank:11)
=================================================
Progress: 80


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any_list3(rank : 11)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list3
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list3:any list) (any_list4:any list) (arg17:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ arg17) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ arg17) @ any_list3) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 81


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list3:any list) (any_list4:any list) (arg17:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ arg17) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ arg17) @ any_list3) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list3(rank:14)
=================================================
Progress: 82


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list3:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 11)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list3:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro any_list3(rank:11)
=================================================
Progress: 83


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list3:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any_list3(rank : 11)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
any1 : any
any_list3 : any list
---------------------------------------
forall (any_list1:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list3
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list3:any list) (any_list4:any list) (arg18:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ arg18) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ arg18) @ any_list3) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
any1 : any
any_list3 : any list
---------------------------------------
forall (any_list1:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 84


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
any1 : any
any_list3 : any list
---------------------------------------
forall (any_list1:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list3:any list) (any_list4:any list) (arg18:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ arg18) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ arg18) @ any_list3) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list3(rank:14)
=================================================
Progress: 85


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list3:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any_list3(rank : 11)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
any_list1 : any list
any_list3 : any list
---------------------------------------
forall (any1:any), ((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list3
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list3:any list) (any_list4:any list) (arg19:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ arg19) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ arg19) @ any_list3) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
any_list1 : any list
any_list3 : any list
---------------------------------------
forall (any1:any), ((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 86


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
any_list1 : any list
any_list3 : any list
---------------------------------------
forall (any1:any), ((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list3:any list) (any_list4:any list) (arg19:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ arg19) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ arg19) @ any_list3) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list3(rank:14)
=================================================
Progress: 87


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list3:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any_list3(rank : 11)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
any1 : any
any_list1 : any list
any_list3 : any list
---------------------------------------
((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list3
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list3:any list) (any_list4:any list) (arg20:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ arg20) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ arg20) @ any_list3) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
any1 : any
any_list1 : any list
any_list3 : any list
---------------------------------------
((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 88


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
any1 : any
any_list1 : any list
any_list3 : any list
---------------------------------------
((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list3:any list) (any_list4:any list) (arg20:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ arg20) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ arg20) @ any_list3) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list3(rank:14)
=================================================
Progress: 89


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
>>> induction any_list2(rank : 12)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse (((Nil) @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse ((Nil)) @ any_list3) @ any_list1) @ (Nil)))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11)
=================================================
Progress: 90


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse (((Nil) @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse ((Nil)) @ any_list3) @ any_list1) @ (Nil)))

1 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 11)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse (((any2::any_list4) @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse ((any2::any_list4)) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:11)
=================================================
Progress: 91


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse (((any2::any_list4) @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse ((any2::any_list4)) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 11)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any1(rank:11)
intro any_list1(rank:11)
intro any_list3(rank:11)
=================================================
Progress: 92


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any1(rank : 11)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list3:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:11)
intro any_list3(rank:11)
=================================================
Progress: 93


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 11)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list3:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro any_list3(rank:11)
=================================================
Progress: 94


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any_list3(rank : 11)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list3
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list3:any list) (any_list4:any list) (arg21:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ arg21) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ arg21) @ any_list3) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 95


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list3:any list) (any_list4:any list) (arg21:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ arg21) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ arg21) @ any_list3) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list3(rank:14)
=================================================
Progress: 96


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list3:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 11)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list3:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro any_list3(rank:11)
=================================================
Progress: 97


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list3:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any_list3(rank : 11)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
any1 : any
any_list3 : any list
---------------------------------------
forall (any_list1:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list3
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list3:any list) (any_list4:any list) (arg22:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ arg22) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ arg22) @ any_list3) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
any1 : any
any_list3 : any list
---------------------------------------
forall (any_list1:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 98


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
any1 : any
any_list3 : any list
---------------------------------------
forall (any_list1:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list3:any list) (any_list4:any list) (arg22:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ arg22) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ arg22) @ any_list3) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list3(rank:14)
=================================================
Progress: 99


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list3:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any_list3(rank : 11)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
any_list1 : any list
any_list3 : any list
---------------------------------------
forall (any1:any), ((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list3
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list3:any list) (any_list4:any list) (arg23:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ arg23) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ arg23) @ any_list3) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
any_list1 : any list
any_list3 : any list
---------------------------------------
forall (any1:any), ((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 100


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
any_list1 : any list
any_list3 : any list
---------------------------------------
forall (any1:any), ((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list3:any list) (any_list4:any list) (arg23:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ arg23) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ arg23) @ any_list3) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list3(rank:14)
=================================================
Progress: 101


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list3:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any_list3(rank : 11)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
any1 : any
any_list1 : any list
any_list3 : any list
---------------------------------------
((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list3
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list3:any list) (any_list4:any list) (arg24:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ arg24) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ arg24) @ any_list3) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
any1 : any
any_list1 : any list
any_list3 : any list
---------------------------------------
((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 102


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (((reverse ((any_list2 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list2) @ any_list3) @ any_list1) @ (Nil)))
any_list2 : any list
any2 : any
any_list4 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list3:any list), (((reverse ((any_list4 @ (any1::(Nil)))) @ any_list3) @ any_list1) @ (Nil)) = (any1::(((reverse (any_list4) @ any_list3) @ any_list1) @ (Nil)))
Inductive1 : any_list2 = (any2::any_list4)
any1 : any
any_list1 : any list
any_list3 : any list
---------------------------------------
((((reverse ((any_list4 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ (any2::(Nil))) @ any_list3) @ any_list1) @ (Nil)))

0 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list3:any list) (any_list4:any list) (arg24:any list), ((((reverse ((any_list4 @ (any1::(Nil)))) @ arg24) @ any_list3) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list4) @ arg24) @ any_list3) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list3(rank:14)
=================================================
Progress: 103


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> induction any_list3(rank : 14)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse (((Nil) @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse ((Nil)) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

1 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13)
=================================================
Progress: 104


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse (((Nil) @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse ((Nil)) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

1 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse (((any2::any_list5) @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse ((any2::any_list5)) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:13)
=================================================
Progress: 105


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse (((any2::any_list5) @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse ((any2::any_list5)) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> simpl in goal(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 4
intro any1(rank:13)
intro any_list1(rank:13)
intro any_list2(rank:13)
intro any_list4(rank:13)
=================================================
Progress: 106


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any1(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 3
intro any_list1(rank:13)
intro any_list2(rank:13)
intro any_list4(rank:13)
=================================================
Progress: 107


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list1(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro any_list2(rank:13)
intro any_list4(rank:13)
=================================================
Progress: 108


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list2(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any_list4(rank:13)
=================================================
Progress: 109


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg25:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg25) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg25) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 110


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg25:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg25) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg25) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 111


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list1(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro any_list2(rank:13)
intro any_list4(rank:13)
=================================================
Progress: 112


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list2(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list2 : any list
---------------------------------------
forall (any_list1:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any_list4(rank:13)
=================================================
Progress: 113


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list4 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg26:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg26) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg26) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list4 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 114


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list4 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg26:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg26) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg26) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 115


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list2(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any_list4(rank:13)
=================================================
Progress: 116


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg27:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg27) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg27) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 117


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg27:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg27) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg27) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 118


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list2
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg28:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg28) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg28) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 119


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg28:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg28) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg28) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 120


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list2(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any_list4(rank:13)
=================================================
Progress: 121


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg29:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg29) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg29) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 122


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg29:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg29) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg29) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 123


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list2 : any list
---------------------------------------
forall (any_list1:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list2
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg30:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg30) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg30) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 124


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg30:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg30) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg30) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 125


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list2
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg31:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg31) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg31) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 126


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg31:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg31) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg31) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 127


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
(((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list2
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg32:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg32) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg32) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
(((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 128


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
(((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg32:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg32) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg32) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 129


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> induction any_list3(rank : 14)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse (((Nil) @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse ((Nil)) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

1 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13)
=================================================
Progress: 130


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse (((Nil) @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse ((Nil)) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

1 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse (((any2::any_list5) @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse ((any2::any_list5)) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:13)
=================================================
Progress: 131


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse (((any2::any_list5) @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse ((any2::any_list5)) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> simpl in goal(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 4
intro any1(rank:13)
intro any_list1(rank:13)
intro any_list2(rank:13)
intro any_list4(rank:13)
=================================================
Progress: 132


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any1(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 3
intro any_list1(rank:13)
intro any_list2(rank:13)
intro any_list4(rank:13)
=================================================
Progress: 133


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list1(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro any_list2(rank:13)
intro any_list4(rank:13)
=================================================
Progress: 134


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list2(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any_list4(rank:13)
=================================================
Progress: 135


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg33:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg33) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg33) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 136


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg33:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg33) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg33) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 137


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list1(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro any_list2(rank:13)
intro any_list4(rank:13)
=================================================
Progress: 138


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list2(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list2 : any list
---------------------------------------
forall (any_list1:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any_list4(rank:13)
=================================================
Progress: 139


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list4 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg34:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg34) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg34) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list4 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 140


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list4 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg34:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg34) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg34) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 141


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list2(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any_list4(rank:13)
=================================================
Progress: 142


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg35:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg35) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg35) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 143


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg35:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg35) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg35) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 144


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list2
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg36:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg36) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg36) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 145


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg36:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg36) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg36) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 146


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list2(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any_list4(rank:13)
=================================================
Progress: 147


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg37:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg37) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg37) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 148


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg37:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg37) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg37) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 149


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list2 : any list
---------------------------------------
forall (any_list1:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list2
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg38:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg38) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg38) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 150


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg38:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg38) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg38) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 151


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list2
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg39:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg39) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg39) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 152


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg39:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg39) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg39) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 153


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
(((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list2
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg40:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg40) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg40) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
(((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 154


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
(((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg40:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg40) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg40) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 155


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> induction any_list3(rank : 14)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse (((Nil) @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse ((Nil)) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

1 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13)
=================================================
Progress: 156


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse (((Nil) @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse ((Nil)) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

1 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse (((any2::any_list5) @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse ((any2::any_list5)) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:13)
=================================================
Progress: 157


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse (((any2::any_list5) @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse ((any2::any_list5)) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> simpl in goal(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 4
intro any1(rank:13)
intro any_list1(rank:13)
intro any_list2(rank:13)
intro any_list4(rank:13)
=================================================
Progress: 158


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any1(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 3
intro any_list1(rank:13)
intro any_list2(rank:13)
intro any_list4(rank:13)
=================================================
Progress: 159


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list1(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro any_list2(rank:13)
intro any_list4(rank:13)
=================================================
Progress: 160


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list2(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any_list4(rank:13)
=================================================
Progress: 161


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg41:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg41) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg41) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 162


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg41:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg41) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg41) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 163


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list1(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro any_list2(rank:13)
intro any_list4(rank:13)
=================================================
Progress: 164


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list2(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list2 : any list
---------------------------------------
forall (any_list1:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any_list4(rank:13)
=================================================
Progress: 165


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list4 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg42:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg42) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg42) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list4 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 166


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list4 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg42:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg42) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg42) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 167


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list2(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any_list4(rank:13)
=================================================
Progress: 168


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg43:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg43) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg43) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 169


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg43:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg43) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg43) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 170


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list2
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg44:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg44) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg44) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 171


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg44:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg44) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg44) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 172


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list2(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any_list4(rank:13)
=================================================
Progress: 173


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg45:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg45) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg45) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 174


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg45:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg45) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg45) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 175


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list2 : any list
---------------------------------------
forall (any_list1:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list2
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg46:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg46) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg46) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 176


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg46:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg46) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg46) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 177


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list2
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg47:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg47) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg47) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 178


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg47:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg47) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg47) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 179


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
(((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list2
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg48:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg48) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg48) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
(((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 180


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
(((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg48:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg48) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg48) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 181


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> induction any_list3(rank : 14)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse (((Nil) @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse ((Nil)) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

1 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13)
=================================================
Progress: 182


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse (((Nil) @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse ((Nil)) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

1 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse (((any2::any_list5) @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse ((any2::any_list5)) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:13)
=================================================
Progress: 183


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse (((any2::any_list5) @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse ((any2::any_list5)) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> simpl in goal(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 4
intro any1(rank:13)
intro any_list1(rank:13)
intro any_list2(rank:13)
intro any_list4(rank:13)
=================================================
Progress: 184


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any1(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 3
intro any_list1(rank:13)
intro any_list2(rank:13)
intro any_list4(rank:13)
=================================================
Progress: 185


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list1(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro any_list2(rank:13)
intro any_list4(rank:13)
=================================================
Progress: 186


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list2(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any_list4(rank:13)
=================================================
Progress: 187


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg49:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg49) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg49) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 188


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg49:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg49) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg49) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 189


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list1(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro any_list2(rank:13)
intro any_list4(rank:13)
=================================================
Progress: 190


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list2(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list2 : any list
---------------------------------------
forall (any_list1:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any_list4(rank:13)
=================================================
Progress: 191


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list4 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg50:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg50) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg50) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list4 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 192


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list4 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg50:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg50) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg50) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 193


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list2(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any_list4(rank:13)
=================================================
Progress: 194


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg51:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg51) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg51) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 195


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg51:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg51) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg51) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 196


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list2
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg52:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg52) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg52) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 197


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg52:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg52) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg52) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 198


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list2(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any_list4(rank:13)
=================================================
Progress: 199


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg53:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg53) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg53) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 200


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg53:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg53) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg53) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 201


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list2 : any list
---------------------------------------
forall (any_list1:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list2
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg54:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg54) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg54) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 202


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg54:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg54) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg54) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 203


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list2
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg55:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg55) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg55) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 204


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg55:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg55) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg55) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 205


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
(((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list2
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg56:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg56) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg56) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
(((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 206


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
(((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg56:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg56) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg56) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 207


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> induction any_list3(rank : 14)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse (((Nil) @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse ((Nil)) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

1 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13)
=================================================
Progress: 208


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse (((Nil) @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse ((Nil)) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

1 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse (((any2::any_list5) @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse ((any2::any_list5)) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:13)
=================================================
Progress: 209


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse (((any2::any_list5) @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse ((any2::any_list5)) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> simpl in goal(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 4
intro any1(rank:13)
intro any_list1(rank:13)
intro any_list2(rank:13)
intro any_list4(rank:13)
=================================================
Progress: 210


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any1(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 3
intro any_list1(rank:13)
intro any_list2(rank:13)
intro any_list4(rank:13)
=================================================
Progress: 211


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list1(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro any_list2(rank:13)
intro any_list4(rank:13)
=================================================
Progress: 212


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list2(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any_list4(rank:13)
=================================================
Progress: 213


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg57:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg57) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg57) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 214


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg57:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg57) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg57) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 215


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list1(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro any_list2(rank:13)
intro any_list4(rank:13)
=================================================
Progress: 216


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list2(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list2 : any list
---------------------------------------
forall (any_list1:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any_list4(rank:13)
=================================================
Progress: 217


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list4 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg58:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg58) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg58) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list4 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 218


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list4 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg58:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg58) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg58) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 219


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list2(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any_list4(rank:13)
=================================================
Progress: 220


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg59:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg59) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg59) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 221


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg59:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg59) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg59) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 222


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list2
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg60:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg60) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg60) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 223


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg60:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg60) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg60) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 224


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list2(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any_list4(rank:13)
=================================================
Progress: 225


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg61:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg61) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg61) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 226


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg61:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg61) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg61) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 227


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list2 : any list
---------------------------------------
forall (any_list1:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list2
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg62:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg62) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg62) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 228


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg62:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg62) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg62) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 229


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list2
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg63:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg63) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg63) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 230


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg63:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg63) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg63) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 231


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
(((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list2
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg64:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg64) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg64) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
(((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 232


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
(((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg64:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg64) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg64) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 233


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> induction any_list3(rank : 14)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse (((Nil) @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse ((Nil)) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

1 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13)
=================================================
Progress: 234


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse (((Nil) @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse ((Nil)) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

1 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse (((any2::any_list5) @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse ((any2::any_list5)) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:13)
=================================================
Progress: 235


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse (((any2::any_list5) @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse ((any2::any_list5)) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> simpl in goal(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 4
intro any1(rank:13)
intro any_list1(rank:13)
intro any_list2(rank:13)
intro any_list4(rank:13)
=================================================
Progress: 236


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any1(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 3
intro any_list1(rank:13)
intro any_list2(rank:13)
intro any_list4(rank:13)
=================================================
Progress: 237


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list1(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro any_list2(rank:13)
intro any_list4(rank:13)
=================================================
Progress: 238


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list2(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any_list4(rank:13)
=================================================
Progress: 239


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg65:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg65) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg65) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 240


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg65:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg65) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg65) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 241


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list1(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro any_list2(rank:13)
intro any_list4(rank:13)
=================================================
Progress: 242


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list2(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list2 : any list
---------------------------------------
forall (any_list1:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any_list4(rank:13)
=================================================
Progress: 243


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list4 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg66:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg66) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg66) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list4 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 244


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list4 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg66:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg66) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg66) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 245


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list2(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any_list4(rank:13)
=================================================
Progress: 246


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg67:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg67) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg67) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 247


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg67:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg67) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg67) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 248


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list2
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg68:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg68) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg68) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 249


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg68:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg68) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg68) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 250


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list2(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any_list4(rank:13)
=================================================
Progress: 251


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg69:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg69) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg69) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 252


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg69:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg69) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg69) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 253


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list2 : any list
---------------------------------------
forall (any_list1:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list2
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg70:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg70) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg70) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 254


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg70:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg70) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg70) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 255


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list2
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg71:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg71) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg71) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 256


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg71:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg71) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg71) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 257


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
(((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list2
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg72:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg72) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg72) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
(((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 258


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
(((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg72:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg72) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg72) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 259


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> induction any_list3(rank : 14)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse (((Nil) @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse ((Nil)) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

1 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13)
=================================================
Progress: 260


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse (((Nil) @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse ((Nil)) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

1 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse (((any2::any_list5) @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse ((any2::any_list5)) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:13)
=================================================
Progress: 261


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse (((any2::any_list5) @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse ((any2::any_list5)) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> simpl in goal(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 4
intro any1(rank:13)
intro any_list1(rank:13)
intro any_list2(rank:13)
intro any_list4(rank:13)
=================================================
Progress: 262


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any1(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 3
intro any_list1(rank:13)
intro any_list2(rank:13)
intro any_list4(rank:13)
=================================================
Progress: 263


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list1(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro any_list2(rank:13)
intro any_list4(rank:13)
=================================================
Progress: 264


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list2(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any_list4(rank:13)
=================================================
Progress: 265


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg73:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg73) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg73) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 266


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg73:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg73) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg73) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 267


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list1(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro any_list2(rank:13)
intro any_list4(rank:13)
=================================================
Progress: 268


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list2(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list2 : any list
---------------------------------------
forall (any_list1:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any_list4(rank:13)
=================================================
Progress: 269


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list4 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg74:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg74) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg74) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list4 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 270


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list4 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg74:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg74) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg74) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 271


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list2(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any_list4(rank:13)
=================================================
Progress: 272


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg75:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg75) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg75) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 273


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg75:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg75) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg75) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 274


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list2
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg76:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg76) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg76) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 275


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg76:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg76) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg76) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 276


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list2(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any_list4(rank:13)
=================================================
Progress: 277


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg77:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg77) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg77) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 278


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg77:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg77) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg77) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 279


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list2 : any list
---------------------------------------
forall (any_list1:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list2
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg78:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg78) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg78) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 280


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg78:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg78) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg78) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 281


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list2
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg79:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg79) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg79) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 282


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg79:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg79) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg79) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 283


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
(((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list2
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg80:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg80) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg80) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
(((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 284


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
(((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg80:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg80) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg80) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 285


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> induction any_list3(rank : 14)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse (((Nil) @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse ((Nil)) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

1 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13)
=================================================
Progress: 286


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse (((Nil) @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse ((Nil)) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

1 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse (((any2::any_list5) @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse ((any2::any_list5)) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:13)
=================================================
Progress: 287


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse (((any2::any_list5) @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse ((any2::any_list5)) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> simpl in goal(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 4
intro any1(rank:13)
intro any_list1(rank:13)
intro any_list2(rank:13)
intro any_list4(rank:13)
=================================================
Progress: 288


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any1(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 3
intro any_list1(rank:13)
intro any_list2(rank:13)
intro any_list4(rank:13)
=================================================
Progress: 289


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list1(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro any_list2(rank:13)
intro any_list4(rank:13)
=================================================
Progress: 290


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list2(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any_list4(rank:13)
=================================================
Progress: 291


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg81:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg81) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg81) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 292


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg81:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg81) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg81) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 293


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list1(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro any_list2(rank:13)
intro any_list4(rank:13)
=================================================
Progress: 294


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list2(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list2 : any list
---------------------------------------
forall (any_list1:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any_list4(rank:13)
=================================================
Progress: 295


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list4 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg82:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg82) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg82) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list4 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 296


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list4 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg82:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg82) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg82) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 297


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list2(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any_list4(rank:13)
=================================================
Progress: 298


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg83:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg83) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg83) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 299


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg83:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg83) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg83) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 300


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list2
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg84:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg84) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg84) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 301


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg84:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg84) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg84) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 302


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list2(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any_list4(rank:13)
=================================================
Progress: 303


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg85:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg85) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg85) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 304


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg85:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg85) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg85) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 305


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list2 : any list
---------------------------------------
forall (any_list1:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list2
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg86:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg86) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg86) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 306


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg86:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg86) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg86) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 307


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list2
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg87:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg87) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg87) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 308


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg87:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg87) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg87) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 309


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
(((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list2
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg88:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg88) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg88) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
(((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 310


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
(((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg88:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg88) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg88) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 311


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> induction any_list3(rank : 14)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse (((Nil) @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse ((Nil)) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

1 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13)
=================================================
Progress: 312


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse (((Nil) @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse ((Nil)) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

1 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse (((any2::any_list5) @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse ((any2::any_list5)) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:13)
=================================================
Progress: 313


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse (((any2::any_list5) @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse ((any2::any_list5)) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> simpl in goal(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 4
intro any1(rank:13)
intro any_list1(rank:13)
intro any_list2(rank:13)
intro any_list4(rank:13)
=================================================
Progress: 314


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any1(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 3
intro any_list1(rank:13)
intro any_list2(rank:13)
intro any_list4(rank:13)
=================================================
Progress: 315


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list1(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro any_list2(rank:13)
intro any_list4(rank:13)
=================================================
Progress: 316


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list2(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any_list4(rank:13)
=================================================
Progress: 317


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg89:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg89) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg89) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 318


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg89:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg89) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg89) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 319


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list1(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro any_list2(rank:13)
intro any_list4(rank:13)
=================================================
Progress: 320


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list2(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list2 : any list
---------------------------------------
forall (any_list1:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any_list4(rank:13)
=================================================
Progress: 321


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list4 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg90:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg90) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg90) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list4 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 322


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list4 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg90:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg90) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg90) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 323


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list2(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any_list4(rank:13)
=================================================
Progress: 324


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg91:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg91) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg91) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 325


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg91:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg91) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg91) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 326


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list2
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg92:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg92) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg92) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 327


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg92:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg92) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg92) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 328


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list2(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any_list4(rank:13)
=================================================
Progress: 329


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg93:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg93) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg93) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 330


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg93:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg93) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg93) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 331


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list2 : any list
---------------------------------------
forall (any_list1:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list2
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg94:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg94) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg94) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 332


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg94:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg94) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg94) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 333


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list2
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg95:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg95) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg95) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 334


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg95:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg95) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg95) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 335


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
(((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list2
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg96:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg96) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg96) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
(((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 336


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
(((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg96:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg96) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg96) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 337


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> induction any_list3(rank : 14)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse (((Nil) @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse ((Nil)) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

1 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13)
=================================================
Progress: 338


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse (((Nil) @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse ((Nil)) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

1 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse (((any2::any_list5) @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse ((any2::any_list5)) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:13)
=================================================
Progress: 339


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse (((any2::any_list5) @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse ((any2::any_list5)) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> simpl in goal(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 4
intro any1(rank:13)
intro any_list1(rank:13)
intro any_list2(rank:13)
intro any_list4(rank:13)
=================================================
Progress: 340


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any1(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 3
intro any_list1(rank:13)
intro any_list2(rank:13)
intro any_list4(rank:13)
=================================================
Progress: 341


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list1(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro any_list2(rank:13)
intro any_list4(rank:13)
=================================================
Progress: 342


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list2(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any_list4(rank:13)
=================================================
Progress: 343


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg97:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg97) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg97) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 344


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg97:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg97) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg97) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 345


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list1(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro any_list2(rank:13)
intro any_list4(rank:13)
=================================================
Progress: 346


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list2(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list2 : any list
---------------------------------------
forall (any_list1:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any_list4(rank:13)
=================================================
Progress: 347


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list4 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg98:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg98) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg98) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list4 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 348


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list4 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg98:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg98) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg98) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 349


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list2(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any_list4(rank:13)
=================================================
Progress: 350


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg99:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg99) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg99) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 351


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg99:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg99) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg99) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 352


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list2
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg100:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg100) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg100) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 353


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg100:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg100) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg100) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 354


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list2(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any_list4(rank:13)
=================================================
Progress: 355


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg101:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg101) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg101) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 356


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg101:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg101) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg101) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 357


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list2 : any list
---------------------------------------
forall (any_list1:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list2
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg102:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg102) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg102) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 358


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg102:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg102) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg102) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 359


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list2
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg103:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg103) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg103) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 360


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg103:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg103) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg103) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 361


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
(((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list2
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg104:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg104) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg104) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
(((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 362


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
(((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg104:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg104) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg104) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 363


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> induction any_list3(rank : 14)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse (((Nil) @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse ((Nil)) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

1 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13)
=================================================
Progress: 364


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse (((Nil) @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse ((Nil)) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

1 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse (((any2::any_list5) @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse ((any2::any_list5)) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:13)
=================================================
Progress: 365


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse (((any2::any_list5) @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse ((any2::any_list5)) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> simpl in goal(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 4
intro any1(rank:13)
intro any_list1(rank:13)
intro any_list2(rank:13)
intro any_list4(rank:13)
=================================================
Progress: 366


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any1(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 3
intro any_list1(rank:13)
intro any_list2(rank:13)
intro any_list4(rank:13)
=================================================
Progress: 367


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list1(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro any_list2(rank:13)
intro any_list4(rank:13)
=================================================
Progress: 368


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list2(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any_list4(rank:13)
=================================================
Progress: 369


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg105:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg105) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg105) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 370


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg105:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg105) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg105) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 371


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list1(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro any_list2(rank:13)
intro any_list4(rank:13)
=================================================
Progress: 372


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list2(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list2 : any list
---------------------------------------
forall (any_list1:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any_list4(rank:13)
=================================================
Progress: 373


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list4 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg106:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg106) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg106) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list4 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 374


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list4 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg106:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg106) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg106) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 375


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list2(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any_list4(rank:13)
=================================================
Progress: 376


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg107:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg107) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg107) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 377


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg107:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg107) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg107) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 378


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list2
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg108:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg108) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg108) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 379


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg108:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg108) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg108) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 380


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list2(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any_list4(rank:13)
=================================================
Progress: 381


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg109:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg109) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg109) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 382


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg109:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg109) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg109) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 383


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list2 : any list
---------------------------------------
forall (any_list1:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list2
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg110:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg110) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg110) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 384


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg110:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg110) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg110) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 385


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list2
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg111:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg111) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg111) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 386


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg111:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg111) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg111) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 387


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
(((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list2
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg112:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg112) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg112) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
(((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 388


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
(((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg112:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg112) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg112) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 389


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> induction any_list3(rank : 14)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse (((Nil) @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse ((Nil)) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

1 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13)
=================================================
Progress: 390


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse (((Nil) @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse ((Nil)) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

1 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse (((any2::any_list5) @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse ((any2::any_list5)) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:13)
=================================================
Progress: 391


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse (((any2::any_list5) @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse ((any2::any_list5)) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> simpl in goal(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 4
intro any1(rank:13)
intro any_list1(rank:13)
intro any_list2(rank:13)
intro any_list4(rank:13)
=================================================
Progress: 392


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any1(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 3
intro any_list1(rank:13)
intro any_list2(rank:13)
intro any_list4(rank:13)
=================================================
Progress: 393


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list1(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro any_list2(rank:13)
intro any_list4(rank:13)
=================================================
Progress: 394


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list2(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any_list4(rank:13)
=================================================
Progress: 395


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg113:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg113) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg113) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 396


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg113:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg113) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg113) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 397


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list1(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro any_list2(rank:13)
intro any_list4(rank:13)
=================================================
Progress: 398


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list2(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list2 : any list
---------------------------------------
forall (any_list1:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any_list4(rank:13)
=================================================
Progress: 399


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list4 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg114:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg114) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg114) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list4 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 400


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list4 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg114:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg114) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg114) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 401


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list2(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any_list4(rank:13)
=================================================
Progress: 402


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg115:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg115) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg115) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 403


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg115:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg115) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg115) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 404


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list2
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg116:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg116) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg116) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 405


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg116:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg116) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg116) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 406


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list2(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any_list4(rank:13)
=================================================
Progress: 407


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg117:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg117) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg117) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 408


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg117:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg117) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg117) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 409


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list2 : any list
---------------------------------------
forall (any_list1:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list2
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg118:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg118) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg118) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 410


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg118:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg118) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg118) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 411


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list2
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg119:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg119) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg119) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 412


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg119:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg119) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg119) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 413


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
(((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list2
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg120:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg120) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg120) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
(((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 414


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
(((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg120:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg120) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg120) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 415


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> induction any_list3(rank : 14)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse (((Nil) @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse ((Nil)) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

1 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13)
=================================================
Progress: 416


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse (((Nil) @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse ((Nil)) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

1 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse (((any2::any_list5) @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse ((any2::any_list5)) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:13)
=================================================
Progress: 417


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse (((any2::any_list5) @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse ((any2::any_list5)) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> simpl in goal(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 4
intro any1(rank:13)
intro any_list1(rank:13)
intro any_list2(rank:13)
intro any_list4(rank:13)
=================================================
Progress: 418


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any1(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 3
intro any_list1(rank:13)
intro any_list2(rank:13)
intro any_list4(rank:13)
=================================================
Progress: 419


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list1(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro any_list2(rank:13)
intro any_list4(rank:13)
=================================================
Progress: 420


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list2(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any_list4(rank:13)
=================================================
Progress: 421


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg121:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg121) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg121) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 422


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg121:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg121) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg121) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 423


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list1(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro any_list2(rank:13)
intro any_list4(rank:13)
=================================================
Progress: 424


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list2(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list2 : any list
---------------------------------------
forall (any_list1:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any_list4(rank:13)
=================================================
Progress: 425


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list4 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg122:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg122) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg122) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list4 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 426


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list4 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg122:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg122) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg122) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 427


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list2(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any_list4(rank:13)
=================================================
Progress: 428


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg123:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg123) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg123) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 429


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg123:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg123) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg123) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 430


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list2
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg124:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg124) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg124) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 431


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg124:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg124) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg124) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 432


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list2(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any_list4(rank:13)
=================================================
Progress: 433


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg125:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg125) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg125) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 434


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg125:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg125) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg125) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 435


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list2 : any list
---------------------------------------
forall (any_list1:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list2
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg126:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg126) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg126) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 436


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg126:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg126) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg126) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 437


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list2
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg127:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg127) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg127) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 438


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg127:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg127) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg127) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 439


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
(((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list2
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg128:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg128) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg128) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
(((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 440


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
(((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg128:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg128) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg128) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 441


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> induction any_list3(rank : 14)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse (((Nil) @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse ((Nil)) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

1 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13)
=================================================
Progress: 442


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse (((Nil) @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse ((Nil)) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

1 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse (((any2::any_list5) @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse ((any2::any_list5)) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:13)
=================================================
Progress: 443


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse (((any2::any_list5) @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse ((any2::any_list5)) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> simpl in goal(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 4
intro any1(rank:13)
intro any_list1(rank:13)
intro any_list2(rank:13)
intro any_list4(rank:13)
=================================================
Progress: 444


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any1(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 3
intro any_list1(rank:13)
intro any_list2(rank:13)
intro any_list4(rank:13)
=================================================
Progress: 445


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list1(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro any_list2(rank:13)
intro any_list4(rank:13)
=================================================
Progress: 446


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list2(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any_list4(rank:13)
=================================================
Progress: 447


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg129:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg129) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg129) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 448


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg129:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg129) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg129) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 449


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list1(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro any_list2(rank:13)
intro any_list4(rank:13)
=================================================
Progress: 450


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list2(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list2 : any list
---------------------------------------
forall (any_list1:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any_list4(rank:13)
=================================================
Progress: 451


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list4 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg130:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg130) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg130) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list4 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 452


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list4 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg130:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg130) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg130) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 453


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list2(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any_list4(rank:13)
=================================================
Progress: 454


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg131:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg131) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg131) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 455


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg131:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg131) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg131) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 456


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list2
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg132:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg132) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg132) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 457


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg132:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg132) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg132) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 458


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list2(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any_list4(rank:13)
=================================================
Progress: 459


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg133:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg133) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg133) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 460


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg133:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg133) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg133) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 461


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list2 : any list
---------------------------------------
forall (any_list1:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list2
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg134:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg134) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg134) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 462


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg134:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg134) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg134) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 463


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list2
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg135:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg135) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg135) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 464


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg135:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg135) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg135) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 465


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
(((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list2
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg136:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg136) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg136) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
(((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 466


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
(((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg136:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg136) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg136) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 467


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> induction any_list3(rank : 14)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse (((Nil) @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse ((Nil)) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

1 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13)
=================================================
Progress: 468


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse (((Nil) @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse ((Nil)) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

1 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse (((any2::any_list5) @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse ((any2::any_list5)) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:13)
=================================================
Progress: 469


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse (((any2::any_list5) @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse ((any2::any_list5)) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> simpl in goal(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 4
intro any1(rank:13)
intro any_list1(rank:13)
intro any_list2(rank:13)
intro any_list4(rank:13)
=================================================
Progress: 470


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any1(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 3
intro any_list1(rank:13)
intro any_list2(rank:13)
intro any_list4(rank:13)
=================================================
Progress: 471


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list1(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro any_list2(rank:13)
intro any_list4(rank:13)
=================================================
Progress: 472


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list2(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any_list4(rank:13)
=================================================
Progress: 473


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg137:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg137) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg137) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 474


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg137:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg137) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg137) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 475


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list1(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro any_list2(rank:13)
intro any_list4(rank:13)
=================================================
Progress: 476


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list2(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list2 : any list
---------------------------------------
forall (any_list1:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any_list4(rank:13)
=================================================
Progress: 477


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list4 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg138:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg138) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg138) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list4 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 478


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list4 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg138:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg138) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg138) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 479


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list2(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any_list4(rank:13)
=================================================
Progress: 480


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg139:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg139) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg139) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 481


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg139:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg139) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg139) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 482


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list2
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg140:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg140) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg140) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 483


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg140:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg140) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg140) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 484


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list2(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any_list4(rank:13)
=================================================
Progress: 485


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg141:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg141) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg141) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 486


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg141:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg141) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg141) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 487


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list2 : any list
---------------------------------------
forall (any_list1:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list2
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg142:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg142) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg142) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 488


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg142:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg142) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg142) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 489


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list2
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg143:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg143) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg143) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 490


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg143:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg143) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg143) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 491


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
(((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list2
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg144:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg144) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg144) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
(((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 492


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
(((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg144:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg144) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg144) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 493


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> induction any_list3(rank : 14)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse (((Nil) @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse ((Nil)) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

1 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13)
=================================================
Progress: 494


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse (((Nil) @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse ((Nil)) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

1 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse (((any2::any_list5) @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse ((any2::any_list5)) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:13)
=================================================
Progress: 495


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse (((any2::any_list5) @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse ((any2::any_list5)) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> simpl in goal(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 4
intro any1(rank:13)
intro any_list1(rank:13)
intro any_list2(rank:13)
intro any_list4(rank:13)
=================================================
Progress: 496


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any1(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 3
intro any_list1(rank:13)
intro any_list2(rank:13)
intro any_list4(rank:13)
=================================================
Progress: 497


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list1(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro any_list2(rank:13)
intro any_list4(rank:13)
=================================================
Progress: 498


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list2(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any_list4(rank:13)
=================================================
Progress: 499


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg145:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg145) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg145) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 500


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg145:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg145) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg145) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 501


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list1(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro any_list2(rank:13)
intro any_list4(rank:13)
=================================================
Progress: 502


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list2(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list2 : any list
---------------------------------------
forall (any_list1:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any_list4(rank:13)
=================================================
Progress: 503


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list4 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg146:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg146) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg146) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list4 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 504


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list4 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg146:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg146) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg146) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 505


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list2(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any_list4(rank:13)
=================================================
Progress: 506


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg147:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg147) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg147) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 507


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg147:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg147) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg147) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 508


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list2
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg148:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg148) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg148) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 509


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg148:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg148) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg148) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 510


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list2(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any_list4(rank:13)
=================================================
Progress: 511


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg149:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg149) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg149) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 512


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list4 : any list
---------------------------------------
forall (any_list2:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg149:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg149) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg149) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 513


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list2 : any list
---------------------------------------
forall (any_list1:any list) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list2
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg150:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg150) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg150) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 514


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any_list1:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg150:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg150) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg150) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 515


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list2
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg151:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg151) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg151) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 516


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
forall (any1:any), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg151:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg151) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg151) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 517


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any_list4:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list4(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
(((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list2
intro any_list4
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg152:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg152) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg152) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
(((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 518


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list), ((((reverse ((any_list3 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list3) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
any_list3 : any list
any2 : any
any_list5 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list), ((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((reverse (any_list5) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list3 = (any2::any_list5)
any1 : any
any_list1 : any list
any_list2 : any list
any_list4 : any list
---------------------------------------
(((((reverse ((any_list5 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ (any2::(Nil))) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list4:any list) (any_list5:any list) (arg152:any list), (((((reverse ((any_list5 @ (any1::(Nil)))) @ arg152) @ any_list4) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list5) @ arg152) @ any_list4) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:16)
=================================================
Progress: 519


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> induction any_list4(rank : 16)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
Base1 : any_list4 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse (((Nil) @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse ((Nil)) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

1 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15)
=================================================
Progress: 520


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
Base1 : any_list4 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse (((Nil) @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse ((Nil)) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

1 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse (((any2::any_list6) @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse ((any2::any_list6)) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:15)
=================================================
Progress: 521


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse (((any2::any_list6) @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse ((any2::any_list6)) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> simpl in goal(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 5
intro any1(rank:15)
intro any_list2(rank:15)
intro any_list3(rank:15)
intro any_list5(rank:15)
intro any_list1(rank:15)
=================================================
Progress: 522


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any1(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 4
intro any_list1(rank:15)
intro any_list2(rank:15)
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 523


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list1(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 3
intro any_list2(rank:15)
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 524


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list2(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 525


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 526


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg153:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg153) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg153) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 527


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg153:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg153) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg153) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 528


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list1(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 3
intro any_list2(rank:15)
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 529


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list2(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
---------------------------------------
forall (any_list1:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 530


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list3 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 531


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg154:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg154) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg154) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 532


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg154:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg154) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg154) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 533


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list2(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 534


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 535


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg155:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg155) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg155) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 536


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg155:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg155) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg155) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 537


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 538


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list2
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg156:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg156) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg156) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 539


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg156:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg156) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg156) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 540


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg157:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg157) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg157) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 541


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg157:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg157) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg157) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 542


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list2(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 543


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list3 : any list
---------------------------------------
forall (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 544


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list5 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg158:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg158) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg158) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list5 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 545


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list5 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg158:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg158) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg158) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 546


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
---------------------------------------
forall (any_list1:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any_list1:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 547


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
---------------------------------------
forall (any_list1:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list2
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg159:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg159) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg159) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 548


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg159:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg159) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg159) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 549


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list3 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg160:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg160) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg160) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 550


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg160:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg160) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg160) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 551


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 552


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list2
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg161:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg161) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg161) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 553


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg161:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg161) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg161) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 554


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg162:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg162) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg162) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 555


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg162:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg162) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg162) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 556


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list2
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg163:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg163) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg163) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 557


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg163:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg163) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg163) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 558


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 559


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list2
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg164:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg164) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg164) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 560


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg164:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg164) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg164) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 561


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list3 : any list
---------------------------------------
forall (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg165:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg165) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg165) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 562


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg165:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg165) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg165) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 563


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any_list1:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list2
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg166:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg166) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg166) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 564


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg166:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg166) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg166) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 565


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list2
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg167:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg167) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg167) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 566


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg167:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg167) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg167) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 567


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list2
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg168:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg168) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg168) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 568


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg168:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg168) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg168) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 569


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> induction any_list4(rank : 16)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
Base1 : any_list4 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse (((Nil) @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse ((Nil)) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

1 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15)
=================================================
Progress: 570


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
Base1 : any_list4 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse (((Nil) @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse ((Nil)) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

1 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse (((any2::any_list6) @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse ((any2::any_list6)) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:15)
=================================================
Progress: 571


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse (((any2::any_list6) @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse ((any2::any_list6)) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> simpl in goal(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 5
intro any1(rank:15)
intro any_list2(rank:15)
intro any_list3(rank:15)
intro any_list5(rank:15)
intro any_list1(rank:15)
=================================================
Progress: 572


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any1(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 4
intro any_list1(rank:15)
intro any_list2(rank:15)
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 573


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list1(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 3
intro any_list2(rank:15)
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 574


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list2(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 575


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 576


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg169:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg169) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg169) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 577


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg169:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg169) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg169) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 578


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list1(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 3
intro any_list2(rank:15)
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 579


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list2(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
---------------------------------------
forall (any_list1:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 580


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list3 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 581


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg170:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg170) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg170) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 582


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg170:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg170) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg170) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 583


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list2(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 584


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 585


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg171:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg171) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg171) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 586


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg171:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg171) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg171) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 587


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 588


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list2
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg172:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg172) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg172) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 589


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg172:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg172) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg172) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 590


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg173:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg173) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg173) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 591


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg173:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg173) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg173) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 592


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list2(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 593


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list3 : any list
---------------------------------------
forall (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 594


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list5 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg174:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg174) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg174) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list5 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 595


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list5 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg174:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg174) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg174) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 596


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
---------------------------------------
forall (any_list1:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any_list1:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 597


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
---------------------------------------
forall (any_list1:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list2
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg175:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg175) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg175) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 598


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg175:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg175) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg175) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 599


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list3 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg176:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg176) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg176) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 600


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg176:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg176) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg176) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 601


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 602


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list2
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg177:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg177) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg177) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 603


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg177:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg177) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg177) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 604


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg178:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg178) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg178) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 605


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg178:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg178) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg178) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 606


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list2
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg179:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg179) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg179) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 607


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg179:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg179) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg179) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 608


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 609


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list2
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg180:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg180) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg180) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 610


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg180:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg180) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg180) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 611


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list3 : any list
---------------------------------------
forall (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg181:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg181) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg181) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 612


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg181:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg181) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg181) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 613


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any_list1:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list2
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg182:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg182) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg182) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 614


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg182:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg182) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg182) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 615


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list2
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg183:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg183) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg183) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 616


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg183:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg183) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg183) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 617


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list2
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg184:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg184) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg184) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 618


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg184:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg184) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg184) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 619


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> induction any_list4(rank : 16)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
Base1 : any_list4 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse (((Nil) @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse ((Nil)) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

1 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15)
=================================================
Progress: 620


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
Base1 : any_list4 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse (((Nil) @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse ((Nil)) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

1 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse (((any2::any_list6) @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse ((any2::any_list6)) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:15)
=================================================
Progress: 621


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse (((any2::any_list6) @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse ((any2::any_list6)) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> simpl in goal(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 5
intro any1(rank:15)
intro any_list2(rank:15)
intro any_list3(rank:15)
intro any_list5(rank:15)
intro any_list1(rank:15)
=================================================
Progress: 622


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any1(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 4
intro any_list1(rank:15)
intro any_list2(rank:15)
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 623


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list1(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 3
intro any_list2(rank:15)
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 624


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list2(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 625


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 626


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg185:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg185) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg185) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 627


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg185:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg185) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg185) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 628


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list1(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 3
intro any_list2(rank:15)
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 629


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list2(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
---------------------------------------
forall (any_list1:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 630


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list3 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 631


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg186:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg186) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg186) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 632


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg186:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg186) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg186) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 633


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list2(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 634


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 635


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg187:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg187) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg187) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 636


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg187:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg187) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg187) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 637


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 638


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list2
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg188:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg188) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg188) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 639


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg188:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg188) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg188) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 640


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg189:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg189) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg189) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 641


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg189:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg189) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg189) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 642


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list2(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 643


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list3 : any list
---------------------------------------
forall (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 644


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list5 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg190:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg190) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg190) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list5 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 645


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list5 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg190:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg190) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg190) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 646


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
---------------------------------------
forall (any_list1:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any_list1:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 647


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
---------------------------------------
forall (any_list1:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list2
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg191:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg191) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg191) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 648


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg191:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg191) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg191) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 649


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list3 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg192:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg192) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg192) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 650


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg192:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg192) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg192) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 651


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 652


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list2
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg193:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg193) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg193) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 653


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg193:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg193) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg193) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 654


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg194:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg194) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg194) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 655


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg194:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg194) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg194) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 656


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list2
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg195:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg195) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg195) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 657


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg195:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg195) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg195) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 658


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 659


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list2
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg196:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg196) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg196) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 660


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg196:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg196) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg196) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 661


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list3 : any list
---------------------------------------
forall (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg197:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg197) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg197) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 662


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg197:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg197) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg197) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 663


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any_list1:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list2
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg198:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg198) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg198) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 664


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg198:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg198) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg198) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 665


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list2
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg199:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg199) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg199) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 666


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg199:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg199) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg199) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 667


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list2
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg200:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg200) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg200) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 668


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg200:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg200) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg200) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 669


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> induction any_list4(rank : 16)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
Base1 : any_list4 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse (((Nil) @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse ((Nil)) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

1 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15)
=================================================
Progress: 670


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
Base1 : any_list4 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse (((Nil) @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse ((Nil)) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

1 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse (((any2::any_list6) @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse ((any2::any_list6)) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:15)
=================================================
Progress: 671


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse (((any2::any_list6) @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse ((any2::any_list6)) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> simpl in goal(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 5
intro any1(rank:15)
intro any_list2(rank:15)
intro any_list3(rank:15)
intro any_list5(rank:15)
intro any_list1(rank:15)
=================================================
Progress: 672


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any1(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 4
intro any_list1(rank:15)
intro any_list2(rank:15)
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 673


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list1(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 3
intro any_list2(rank:15)
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 674


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list2(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 675


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 676


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg201:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg201) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg201) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 677


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg201:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg201) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg201) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 678


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list1(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 3
intro any_list2(rank:15)
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 679


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list2(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
---------------------------------------
forall (any_list1:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 680


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list3 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 681


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg202:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg202) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg202) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 682


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg202:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg202) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg202) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 683


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list2(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 684


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 685


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg203:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg203) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg203) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 686


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg203:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg203) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg203) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 687


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 688


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list2
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg204:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg204) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg204) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 689


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg204:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg204) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg204) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 690


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg205:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg205) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg205) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 691


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg205:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg205) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg205) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 692


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list2(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 693


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list3 : any list
---------------------------------------
forall (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 694


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list5 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg206:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg206) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg206) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list5 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 695


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list5 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg206:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg206) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg206) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 696


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
---------------------------------------
forall (any_list1:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any_list1:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 697


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
---------------------------------------
forall (any_list1:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list2
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg207:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg207) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg207) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 698


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg207:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg207) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg207) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 699


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list3 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg208:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg208) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg208) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 700


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg208:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg208) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg208) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 701


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 702


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list2
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg209:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg209) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg209) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 703


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg209:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg209) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg209) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 704


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg210:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg210) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg210) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 705


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg210:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg210) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg210) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 706


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list2
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg211:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg211) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg211) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 707


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg211:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg211) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg211) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 708


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 709


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list2
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg212:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg212) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg212) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 710


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg212:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg212) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg212) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 711


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list3 : any list
---------------------------------------
forall (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg213:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg213) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg213) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 712


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg213:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg213) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg213) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 713


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any_list1:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list2
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg214:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg214) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg214) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 714


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg214:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg214) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg214) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 715


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list2
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg215:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg215) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg215) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 716


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg215:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg215) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg215) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 717


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list2
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg216:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg216) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg216) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 718


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg216:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg216) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg216) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 719


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> induction any_list4(rank : 16)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
Base1 : any_list4 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse (((Nil) @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse ((Nil)) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

1 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15)
=================================================
Progress: 720


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
Base1 : any_list4 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse (((Nil) @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse ((Nil)) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

1 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse (((any2::any_list6) @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse ((any2::any_list6)) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:15)
=================================================
Progress: 721


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse (((any2::any_list6) @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse ((any2::any_list6)) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> simpl in goal(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 5
intro any1(rank:15)
intro any_list2(rank:15)
intro any_list3(rank:15)
intro any_list5(rank:15)
intro any_list1(rank:15)
=================================================
Progress: 722


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any1(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 4
intro any_list1(rank:15)
intro any_list2(rank:15)
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 723


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list1(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 3
intro any_list2(rank:15)
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 724


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list2(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 725


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 726


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg217:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg217) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg217) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 727


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg217:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg217) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg217) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 728


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list1(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 3
intro any_list2(rank:15)
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 729


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list2(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
---------------------------------------
forall (any_list1:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 730


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list3 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 731


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg218:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg218) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg218) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 732


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg218:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg218) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg218) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 733


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list2(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 734


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 735


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg219:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg219) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg219) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 736


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg219:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg219) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg219) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 737


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 738


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list2
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg220:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg220) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg220) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 739


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg220:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg220) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg220) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 740


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg221:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg221) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg221) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 741


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg221:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg221) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg221) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 742


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list2(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 743


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list3 : any list
---------------------------------------
forall (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 744


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list5 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg222:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg222) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg222) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list5 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 745


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list5 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg222:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg222) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg222) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 746


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
---------------------------------------
forall (any_list1:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any_list1:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 747


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
---------------------------------------
forall (any_list1:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list2
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg223:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg223) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg223) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 748


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg223:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg223) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg223) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 749


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list3 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg224:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg224) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg224) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 750


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg224:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg224) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg224) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 751


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 752


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list2
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg225:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg225) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg225) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 753


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg225:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg225) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg225) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 754


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg226:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg226) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg226) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 755


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg226:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg226) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg226) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 756


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list2
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg227:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg227) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg227) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 757


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg227:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg227) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg227) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 758


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 759


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list2
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg228:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg228) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg228) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 760


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg228:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg228) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg228) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 761


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list3 : any list
---------------------------------------
forall (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg229:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg229) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg229) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 762


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg229:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg229) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg229) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 763


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any_list1:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list2
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg230:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg230) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg230) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 764


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg230:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg230) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg230) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 765


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list2
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg231:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg231) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg231) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 766


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg231:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg231) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg231) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 767


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list2
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg232:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg232) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg232) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 768


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg232:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg232) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg232) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 769


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> induction any_list4(rank : 16)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
Base1 : any_list4 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse (((Nil) @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse ((Nil)) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

1 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15)
=================================================
Progress: 770


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
Base1 : any_list4 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse (((Nil) @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse ((Nil)) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

1 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse (((any2::any_list6) @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse ((any2::any_list6)) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:15)
=================================================
Progress: 771


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse (((any2::any_list6) @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse ((any2::any_list6)) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> simpl in goal(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 5
intro any1(rank:15)
intro any_list2(rank:15)
intro any_list3(rank:15)
intro any_list5(rank:15)
intro any_list1(rank:15)
=================================================
Progress: 772


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any1(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 4
intro any_list1(rank:15)
intro any_list2(rank:15)
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 773


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list1(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 3
intro any_list2(rank:15)
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 774


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list2(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 775


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 776


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg233:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg233) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg233) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 777


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg233:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg233) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg233) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 778


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list1(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 3
intro any_list2(rank:15)
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 779


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list2(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
---------------------------------------
forall (any_list1:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 780


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list3 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 781


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg234:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg234) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg234) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 782


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg234:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg234) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg234) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 783


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list2(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 784


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 785


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg235:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg235) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg235) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 786


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg235:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg235) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg235) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 787


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 788


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list2
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg236:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg236) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg236) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 789


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg236:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg236) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg236) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 790


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg237:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg237) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg237) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 791


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg237:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg237) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg237) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 792


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list2(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 793


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list3 : any list
---------------------------------------
forall (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 794


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list5 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg238:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg238) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg238) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list5 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 795


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list5 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg238:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg238) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg238) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 796


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
---------------------------------------
forall (any_list1:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any_list1:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 797


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
---------------------------------------
forall (any_list1:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list2
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg239:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg239) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg239) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 798


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg239:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg239) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg239) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 799


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list3 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg240:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg240) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg240) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 800


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg240:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg240) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg240) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 801


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 802


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list2
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg241:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg241) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg241) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 803


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg241:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg241) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg241) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 804


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg242:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg242) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg242) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 805


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg242:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg242) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg242) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 806


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list2
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg243:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg243) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg243) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 807


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg243:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg243) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg243) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 808


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 809


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list2
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg244:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg244) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg244) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 810


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg244:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg244) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg244) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 811


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list3 : any list
---------------------------------------
forall (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg245:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg245) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg245) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 812


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg245:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg245) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg245) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 813


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any_list1:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list2
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg246:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg246) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg246) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 814


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg246:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg246) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg246) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 815


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list2
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg247:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg247) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg247) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 816


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg247:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg247) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg247) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 817


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list2
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg248:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg248) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg248) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 818


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg248:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg248) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg248) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 819


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> induction any_list4(rank : 16)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
Base1 : any_list4 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse (((Nil) @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse ((Nil)) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

1 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15)
=================================================
Progress: 820


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
Base1 : any_list4 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse (((Nil) @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse ((Nil)) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

1 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse (((any2::any_list6) @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse ((any2::any_list6)) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:15)
=================================================
Progress: 821


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse (((any2::any_list6) @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse ((any2::any_list6)) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> simpl in goal(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 5
intro any1(rank:15)
intro any_list2(rank:15)
intro any_list3(rank:15)
intro any_list5(rank:15)
intro any_list1(rank:15)
=================================================
Progress: 822


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any1(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 4
intro any_list1(rank:15)
intro any_list2(rank:15)
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 823


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list1(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 3
intro any_list2(rank:15)
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 824


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list2(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 825


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 826


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg249:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg249) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg249) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 827


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg249:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg249) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg249) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 828


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list1(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 3
intro any_list2(rank:15)
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 829


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list2(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
---------------------------------------
forall (any_list1:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 830


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list3 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 831


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg250:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg250) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg250) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 832


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg250:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg250) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg250) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 833


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list2(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 834


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 835


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg251:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg251) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg251) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 836


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg251:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg251) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg251) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 837


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 838


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list2
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg252:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg252) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg252) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 839


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg252:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg252) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg252) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 840


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg253:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg253) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg253) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 841


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg253:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg253) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg253) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 842


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list2(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 843


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list3 : any list
---------------------------------------
forall (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 844


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list5 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg254:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg254) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg254) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list5 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 845


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list5 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg254:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg254) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg254) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 846


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
---------------------------------------
forall (any_list1:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any_list1:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 847


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
---------------------------------------
forall (any_list1:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list2
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg255:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg255) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg255) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 848


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg255:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg255) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg255) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 849


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list3 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg256:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg256) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg256) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 850


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg256:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg256) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg256) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 851


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 852


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list2
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg257:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg257) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg257) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 853


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg257:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg257) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg257) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 854


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg258:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg258) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg258) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 855


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg258:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg258) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg258) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 856


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list2
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg259:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg259) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg259) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 857


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg259:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg259) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg259) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 858


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 859


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list2
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg260:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg260) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg260) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 860


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg260:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg260) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg260) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 861


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list3 : any list
---------------------------------------
forall (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg261:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg261) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg261) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 862


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg261:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg261) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg261) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 863


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any_list1:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list2
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg262:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg262) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg262) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 864


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg262:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg262) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg262) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 865


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list2
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg263:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg263) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg263) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 866


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg263:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg263) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg263) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 867


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list2
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg264:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg264) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg264) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 868


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg264:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg264) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg264) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 869


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> induction any_list4(rank : 16)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
Base1 : any_list4 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse (((Nil) @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse ((Nil)) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

1 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15)
=================================================
Progress: 870


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
Base1 : any_list4 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse (((Nil) @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse ((Nil)) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

1 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse (((any2::any_list6) @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse ((any2::any_list6)) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:15)
=================================================
Progress: 871


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse (((any2::any_list6) @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse ((any2::any_list6)) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> simpl in goal(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 5
intro any1(rank:15)
intro any_list2(rank:15)
intro any_list3(rank:15)
intro any_list5(rank:15)
intro any_list1(rank:15)
=================================================
Progress: 872


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any1(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 4
intro any_list1(rank:15)
intro any_list2(rank:15)
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 873


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list1(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 3
intro any_list2(rank:15)
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 874


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list2(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 875


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 876


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg265:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg265) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg265) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 877


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg265:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg265) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg265) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 878


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list1(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 3
intro any_list2(rank:15)
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 879


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list2(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
---------------------------------------
forall (any_list1:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 880


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list3 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 881


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg266:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg266) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg266) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 882


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg266:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg266) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg266) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 883


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list2(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 884


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 885


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg267:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg267) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg267) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 886


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg267:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg267) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg267) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 887


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 888


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list2
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg268:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg268) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg268) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 889


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg268:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg268) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg268) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 890


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg269:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg269) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg269) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 891


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg269:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg269) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg269) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 892


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list2(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 893


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list3 : any list
---------------------------------------
forall (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 894


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list5 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg270:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg270) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg270) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list5 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 895


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list5 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg270:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg270) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg270) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 896


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
---------------------------------------
forall (any_list1:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any_list1:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 897


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
---------------------------------------
forall (any_list1:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list2
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg271:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg271) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg271) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 898


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg271:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg271) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg271) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 899


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list3 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg272:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg272) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg272) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 900


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg272:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg272) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg272) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 901


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 902


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list2
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg273:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg273) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg273) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 903


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg273:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg273) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg273) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 904


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg274:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg274) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg274) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 905


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg274:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg274) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg274) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 906


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list2
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg275:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg275) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg275) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 907


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg275:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg275) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg275) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 908


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 909


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list2
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg276:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg276) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg276) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 910


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg276:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg276) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg276) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 911


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list3 : any list
---------------------------------------
forall (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg277:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg277) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg277) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 912


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg277:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg277) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg277) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 913


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any_list1:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list2
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg278:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg278) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg278) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 914


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg278:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg278) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg278) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 915


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list2
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg279:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg279) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg279) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 916


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg279:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg279) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg279) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 917


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list2
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg280:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg280) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg280) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 918


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg280:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg280) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg280) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 919


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> induction any_list4(rank : 16)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
Base1 : any_list4 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse (((Nil) @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse ((Nil)) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

1 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15)
=================================================
Progress: 920


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
Base1 : any_list4 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse (((Nil) @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse ((Nil)) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

1 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse (((any2::any_list6) @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse ((any2::any_list6)) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:15)
=================================================
Progress: 921


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse (((any2::any_list6) @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse ((any2::any_list6)) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> simpl in goal(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 5
intro any1(rank:15)
intro any_list2(rank:15)
intro any_list3(rank:15)
intro any_list5(rank:15)
intro any_list1(rank:15)
=================================================
Progress: 922


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any1(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 4
intro any_list1(rank:15)
intro any_list2(rank:15)
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 923


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list1(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 3
intro any_list2(rank:15)
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 924


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list2(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 925


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 926


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg281:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg281) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg281) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 927


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg281:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg281) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg281) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 928


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list1(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 3
intro any_list2(rank:15)
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 929


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list2(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
---------------------------------------
forall (any_list1:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 930


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list3 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 931


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg282:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg282) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg282) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 932


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg282:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg282) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg282) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 933


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list2(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 934


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 935


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg283:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg283) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg283) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 936


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg283:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg283) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg283) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 937


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 938


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list2
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg284:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg284) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg284) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 939


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg284:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg284) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg284) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 940


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg285:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg285) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg285) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 941


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg285:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg285) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg285) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 942


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list2(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 943


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list3 : any list
---------------------------------------
forall (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 944


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list5 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg286:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg286) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg286) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list5 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 945


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list5 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg286:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg286) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg286) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 946


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
---------------------------------------
forall (any_list1:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any_list1:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 947


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
---------------------------------------
forall (any_list1:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list2
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg287:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg287) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg287) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 948


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg287:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg287) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg287) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 949


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list3 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg288:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg288) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg288) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 950


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg288:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg288) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg288) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 951


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 952


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list2
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg289:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg289) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg289) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 953


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg289:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg289) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg289) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 954


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg290:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg290) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg290) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 955


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg290:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg290) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg290) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 956


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list2
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg291:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg291) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg291) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 957


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg291:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg291) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg291) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 958


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 959


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list2
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg292:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg292) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg292) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 960


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg292:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg292) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg292) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 961


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list3 : any list
---------------------------------------
forall (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg293:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg293) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg293) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 962


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg293:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg293) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg293) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 963


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any_list1:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list2
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg294:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg294) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg294) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 964


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg294:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg294) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg294) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 965


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list2
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg295:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg295) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg295) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 966


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg295:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg295) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg295) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 967


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list2
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg296:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg296) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg296) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 968


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg296:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg296) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg296) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 969


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> induction any_list4(rank : 16)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
Base1 : any_list4 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse (((Nil) @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse ((Nil)) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

1 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15)
=================================================
Progress: 970


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
Base1 : any_list4 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse (((Nil) @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse ((Nil)) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

1 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse (((any2::any_list6) @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse ((any2::any_list6)) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:15)
=================================================
Progress: 971


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse (((any2::any_list6) @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse ((any2::any_list6)) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> simpl in goal(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 5
intro any1(rank:15)
intro any_list2(rank:15)
intro any_list3(rank:15)
intro any_list5(rank:15)
intro any_list1(rank:15)
=================================================
Progress: 972


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any1(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 4
intro any_list1(rank:15)
intro any_list2(rank:15)
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 973


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list1(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 3
intro any_list2(rank:15)
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 974


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list2(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 975


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 976


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg297:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg297) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg297) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 977


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg297:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg297) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg297) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 978


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list1(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 3
intro any_list2(rank:15)
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 979


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list2(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
---------------------------------------
forall (any_list1:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 980


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list3 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 981


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg298:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg298) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg298) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 982


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg298:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg298) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg298) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 983


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list2(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 984


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 985


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg299:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg299) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg299) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 986


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg299:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg299) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg299) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 987


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 988


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list2
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg300:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg300) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg300) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 989


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg300:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg300) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg300) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 990


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg301:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg301) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg301) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 991


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg301:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg301) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg301) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 992


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list2(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 993


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list3 : any list
---------------------------------------
forall (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 994


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list5 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg302:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg302) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg302) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list5 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 995


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list5 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg302:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg302) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg302) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 996


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
---------------------------------------
forall (any_list1:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any_list1:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 997


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
---------------------------------------
forall (any_list1:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list2
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg303:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg303) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg303) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 998


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg303:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg303) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg303) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 999


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list3 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg304:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg304) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg304) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 1000


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg304:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg304) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg304) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 1001


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 1002


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list2
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg305:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg305) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg305) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 1003


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg305:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg305) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg305) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 1004


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg306:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg306) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg306) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 1005


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg306:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg306) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg306) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 1006


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list2
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg307:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg307) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg307) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 1007


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg307:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg307) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg307) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 1008


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 1009


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list2
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg308:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg308) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg308) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 1010


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg308:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg308) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg308) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 1011


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list3 : any list
---------------------------------------
forall (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg309:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg309) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg309) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 1012


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg309:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg309) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg309) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 1013


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any_list1:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list2
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg310:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg310) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg310) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 1014


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg310:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg310) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg310) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 1015


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list2
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg311:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg311) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg311) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 1016


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg311:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg311) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg311) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 1017


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list2
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg312:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg312) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg312) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 1018


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg312:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg312) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg312) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 1019


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> induction any_list4(rank : 16)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
Base1 : any_list4 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse (((Nil) @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse ((Nil)) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

1 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15)
=================================================
Progress: 1020


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
Base1 : any_list4 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse (((Nil) @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse ((Nil)) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

1 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse (((any2::any_list6) @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse ((any2::any_list6)) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:15)
=================================================
Progress: 1021


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse (((any2::any_list6) @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse ((any2::any_list6)) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> simpl in goal(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 5
intro any1(rank:15)
intro any_list2(rank:15)
intro any_list3(rank:15)
intro any_list5(rank:15)
intro any_list1(rank:15)
=================================================
Progress: 1022


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any1(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 4
intro any_list1(rank:15)
intro any_list2(rank:15)
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 1023


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list1(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 3
intro any_list2(rank:15)
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 1024


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list2(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 1025


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 1026


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg313:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg313) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg313) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 1027


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg313:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg313) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg313) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 1028


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list1(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 3
intro any_list2(rank:15)
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 1029


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list2(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
---------------------------------------
forall (any_list1:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 1030


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list3 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 1031


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg314:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg314) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg314) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 1032


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg314:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg314) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg314) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 1033


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list2(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 1034


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 1035


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg315:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg315) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg315) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 1036


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg315:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg315) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg315) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 1037


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 1038


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list2
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg316:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg316) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg316) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 1039


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg316:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg316) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg316) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 1040


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg317:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg317) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg317) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 1041


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg317:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg317) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg317) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 1042


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list2(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 1043


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list3 : any list
---------------------------------------
forall (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 1044


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list5 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg318:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg318) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg318) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list5 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 1045


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list5 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg318:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg318) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg318) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 1046


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
---------------------------------------
forall (any_list1:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any_list1:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 1047


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
---------------------------------------
forall (any_list1:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list2
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg319:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg319) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg319) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 1048


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg319:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg319) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg319) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 1049


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list3 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg320:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg320) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg320) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 1050


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg320:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg320) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg320) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 1051


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 1052


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list2
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg321:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg321) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg321) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 1053


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg321:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg321) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg321) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 1054


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg322:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg322) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg322) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 1055


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg322:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg322) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg322) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 1056


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list2
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg323:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg323) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg323) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 1057


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg323:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg323) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg323) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 1058


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 1059


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list2
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg324:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg324) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg324) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 1060


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg324:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg324) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg324) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 1061


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list3 : any list
---------------------------------------
forall (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg325:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg325) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg325) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 1062


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg325:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg325) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg325) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 1063


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any_list1:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list2
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg326:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg326) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg326) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 1064


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg326:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg326) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg326) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 1065


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list2
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg327:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg327) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg327) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 1066


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg327:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg327) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg327) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 1067


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list2
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg328:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg328) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg328) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 1068


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg328:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg328) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg328) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 1069


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> induction any_list4(rank : 16)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
Base1 : any_list4 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse (((Nil) @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse ((Nil)) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

1 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15)
=================================================
Progress: 1070


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
Base1 : any_list4 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse (((Nil) @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse ((Nil)) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

1 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse (((any2::any_list6) @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse ((any2::any_list6)) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:15)
=================================================
Progress: 1071


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse (((any2::any_list6) @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse ((any2::any_list6)) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> simpl in goal(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 5
intro any1(rank:15)
intro any_list2(rank:15)
intro any_list3(rank:15)
intro any_list5(rank:15)
intro any_list1(rank:15)
=================================================
Progress: 1072


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any1(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 4
intro any_list1(rank:15)
intro any_list2(rank:15)
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 1073


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list1(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 3
intro any_list2(rank:15)
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 1074


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list2(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 1075


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 1076


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg329:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg329) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg329) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 1077


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg329:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg329) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg329) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 1078


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list1(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 3
intro any_list2(rank:15)
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 1079


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list2(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
---------------------------------------
forall (any_list1:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 1080


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list3 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 1081


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg330:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg330) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg330) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 1082


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg330:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg330) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg330) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 1083


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list2(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 1084


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 1085


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg331:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg331) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg331) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 1086


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg331:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg331) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg331) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 1087


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 1088


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list2
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg332:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg332) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg332) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 1089


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg332:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg332) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg332) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 1090


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg333:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg333) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg333) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 1091


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg333:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg333) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg333) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 1092


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list2(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 1093


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list3 : any list
---------------------------------------
forall (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 1094


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list5 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg334:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg334) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg334) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list5 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 1095


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list5 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg334:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg334) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg334) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 1096


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
---------------------------------------
forall (any_list1:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any_list1:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 1097


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
---------------------------------------
forall (any_list1:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list2
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg335:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg335) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg335) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 1098


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg335:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg335) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg335) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 1099


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list3 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg336:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg336) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg336) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 1100


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg336:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg336) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg336) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 1101


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 1102


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list2
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg337:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg337) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg337) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 1103


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg337:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg337) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg337) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 1104


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg338:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg338) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg338) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 1105


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg338:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg338) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg338) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 1106


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list2
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg339:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg339) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg339) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 1107


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg339:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg339) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg339) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 1108


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 1109


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list2
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg340:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg340) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg340) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 1110


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg340:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg340) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg340) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 1111


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list3 : any list
---------------------------------------
forall (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg341:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg341) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg341) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 1112


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg341:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg341) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg341) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 1113


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any_list1:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list2
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg342:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg342) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg342) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 1114


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg342:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg342) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg342) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 1115


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list2
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg343:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg343) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg343) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 1116


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg343:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg343) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg343) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 1117


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list2
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg344:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg344) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg344) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 1118


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg344:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg344) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg344) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 1119


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> induction any_list4(rank : 16)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
Base1 : any_list4 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse (((Nil) @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse ((Nil)) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

1 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15)
=================================================
Progress: 1120


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
Base1 : any_list4 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse (((Nil) @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse ((Nil)) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

1 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse (((any2::any_list6) @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse ((any2::any_list6)) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:15)
=================================================
Progress: 1121


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse (((any2::any_list6) @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse ((any2::any_list6)) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> simpl in goal(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 5
intro any1(rank:15)
intro any_list2(rank:15)
intro any_list3(rank:15)
intro any_list5(rank:15)
intro any_list1(rank:15)
=================================================
Progress: 1122


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any1(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 4
intro any_list1(rank:15)
intro any_list2(rank:15)
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 1123


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list1(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 3
intro any_list2(rank:15)
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 1124


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list2(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 1125


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 1126


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg345:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg345) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg345) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 1127


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg345:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg345) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg345) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 1128


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list1(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 3
intro any_list2(rank:15)
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 1129


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list2(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
---------------------------------------
forall (any_list1:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 1130


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list3 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 1131


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg346:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg346) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg346) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 1132


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg346:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg346) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg346) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 1133


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list2(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 1134


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 1135


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg347:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg347) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg347) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 1136


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg347:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg347) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg347) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 1137


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 1138


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list2
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg348:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg348) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg348) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 1139


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg348:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg348) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg348) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 1140


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg349:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg349) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg349) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 1141


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg349:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg349) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg349) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 1142


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list2(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 1143


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list3 : any list
---------------------------------------
forall (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 1144


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list5 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg350:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg350) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg350) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list5 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 1145


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list5 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg350:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg350) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg350) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 1146


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
---------------------------------------
forall (any_list1:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any_list1:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 1147


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
---------------------------------------
forall (any_list1:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list2
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg351:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg351) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg351) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 1148


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg351:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg351) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg351) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 1149


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list3 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg352:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg352) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg352) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 1150


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg352:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg352) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg352) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 1151


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 1152


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list2
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg353:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg353) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg353) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 1153


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg353:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg353) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg353) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 1154


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg354:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg354) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg354) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 1155


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg354:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg354) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg354) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 1156


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list2
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg355:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg355) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg355) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 1157


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg355:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg355) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg355) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 1158


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 1159


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list2
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg356:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg356) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg356) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 1160


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg356:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg356) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg356) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 1161


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list3 : any list
---------------------------------------
forall (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg357:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg357) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg357) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 1162


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg357:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg357) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg357) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 1163


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any_list1:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list2
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg358:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg358) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg358) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 1164


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg358:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg358) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg358) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 1165


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list2
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg359:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg359) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg359) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 1166


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg359:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg359) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg359) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 1167


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list2
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg360:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg360) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg360) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 1168


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg360:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg360) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg360) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 1169


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> induction any_list4(rank : 16)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
Base1 : any_list4 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse (((Nil) @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse ((Nil)) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

1 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15)
=================================================
Progress: 1170


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
Base1 : any_list4 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse (((Nil) @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse ((Nil)) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

1 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse (((any2::any_list6) @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse ((any2::any_list6)) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:15)
=================================================
Progress: 1171


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse (((any2::any_list6) @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse ((any2::any_list6)) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> simpl in goal(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 5
intro any1(rank:15)
intro any_list2(rank:15)
intro any_list3(rank:15)
intro any_list5(rank:15)
intro any_list1(rank:15)
=================================================
Progress: 1172


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any1(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 4
intro any_list1(rank:15)
intro any_list2(rank:15)
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 1173


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list1(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 3
intro any_list2(rank:15)
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 1174


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list2(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 1175


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 1176


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg361:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg361) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg361) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 1177


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg361:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg361) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg361) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 1178


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list1(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 3
intro any_list2(rank:15)
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 1179


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list2(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
---------------------------------------
forall (any_list1:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 1180


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list3 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 1181


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg362:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg362) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg362) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 1182


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg362:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg362) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg362) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 1183


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list2(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 1184


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 1185


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg363:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg363) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg363) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 1186


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg363:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg363) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg363) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 1187


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 1188


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list2
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg364:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg364) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg364) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 1189


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg364:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg364) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg364) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 1190


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg365:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg365) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg365) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 1191


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg365:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg365) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg365) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 1192


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list2(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 1193


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list3 : any list
---------------------------------------
forall (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 1194


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list5 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg366:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg366) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg366) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list5 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 1195


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list5 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg366:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg366) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg366) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 1196


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
---------------------------------------
forall (any_list1:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any_list1:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 1197


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
---------------------------------------
forall (any_list1:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list2
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg367:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg367) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg367) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 1198


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg367:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg367) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg367) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 1199


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list3 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg368:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg368) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg368) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 1200


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg368:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg368) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg368) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 1201


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 1202


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list2
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg369:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg369) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg369) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 1203


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg369:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg369) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg369) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 1204


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg370:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg370) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg370) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 1205


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg370:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg370) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg370) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 1206


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list2
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg371:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg371) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg371) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 1207


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg371:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg371) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg371) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 1208


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 1209


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
---------------------------------------
forall (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list2
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg372:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg372) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg372) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 1210


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list5 : any list
---------------------------------------
forall (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg372:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg372) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg372) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 1211


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list3 : any list
---------------------------------------
forall (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg373:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg373) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg373) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 1212


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list2:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg373:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg373) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg373) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 1213


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any_list1:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list2
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg374:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg374) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg374) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 1214


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any_list1:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg374:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg374) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg374) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 1215


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
intro any_list2
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg375:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg375) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg375) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 1216


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
forall (any1:any), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg375:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg375) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg375) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 1217


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list3 : any list
---------------------------------------
forall (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
intro any_list2
intro any_list3
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg376:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg376) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg376) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 1218


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
any_list2 : any list
any_list3 : any list
any_list5 : any list
---------------------------------------
((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg376:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg376) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg376) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 1219


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> induction any_list4(rank : 16)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
Base1 : any_list4 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse (((Nil) @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse ((Nil)) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

1 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15)
=================================================
Progress: 1220


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
Base1 : any_list4 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse (((Nil) @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse ((Nil)) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

1 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse (((any2::any_list6) @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse ((any2::any_list6)) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:15)
=================================================
Progress: 1221


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse (((any2::any_list6) @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse ((any2::any_list6)) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> simpl in goal(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 5
intro any1(rank:15)
intro any_list2(rank:15)
intro any_list3(rank:15)
intro any_list5(rank:15)
intro any_list1(rank:15)
=================================================
Progress: 1222


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any1(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 4
intro any_list1(rank:15)
intro any_list2(rank:15)
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 1223


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list1(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list1 : any list
---------------------------------------
forall (any1:any) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 3
intro any_list2(rank:15)
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 1224


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list2(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list2 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro any_list3(rank:15)
intro any_list5(rank:15)
=================================================
Progress: 1225


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list3(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list3 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any_list5(rank:15)
=================================================
Progress: 1226


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list5(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list5
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg377:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg377) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg377) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 1227


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any_list5 : any list
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list) (any_list6:any list) (arg377:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ arg377) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ arg377) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list), ((((((reverse ((any_list5 @ (any1::(Nil)))) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list5) @ any_list6) @ any_list4) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:18)
=================================================
Progress: 1228


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any_list1(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list), (((((reverse ((any_list4 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list4) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
any_list4 : any list
any2 : any
any_list6 : any list
IH1 : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list5:any list), (((((reverse ((any_list6 @ (any1::(Nil)))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::(((((reverse (any_list6) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))
Inductive1 : any_list4 = (any2::any_list6)
any1 : any
any_list1 : any list
---------------------------------------
forall (any_list2:any list) (any_list3:any list) (any_list5:any list), ((((((reverse ((any_list6 @ (any1::(Nil)))) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)) = (any1::((((((reverse (any_list6) @ (any2::(Nil))) @ any_list5) @ any_list3) @ any_list2) @ any_list1) @ (Nil)))

0 goal(s) more...

6 conjecture(s) more...
Dilemma timed out for benchmark clam with problem 11.File "_none_", lines 81-83, characters 2-22:
Warning 8 [partial-match]: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
[]

File "_none_", lines 81-83, characters 2-22:
Warning 8 [partial-match]: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
[]
