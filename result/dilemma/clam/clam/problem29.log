Enter the definition file path (1/2) : 
> Enter the definition file path (2/2) : 
> Choose the proof type :
1) Interactive Mode 	 2) Auto Mode
Enter the goal : =================================================
Progress: 1


No conjecture
>>> assert forall (x:any list), reverse (qreva (x) ((Nil))) = x(rank : 0)


1st goal of : forall (any_list1:any list), reverse (qreva (any_list1) ((Nil))) = any_list1

---------------------------------------
forall (any_list1:any list), reverse (qreva (any_list1) ((Nil))) = any_list1

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:4)
=================================================
Progress: 2


1st goal of : forall (any_list1:any list), reverse (qreva (any_list1) ((Nil))) = any_list1

---------------------------------------
forall (any_list1:any list), reverse (qreva (any_list1) ((Nil))) = any_list1

0 goal(s) more...

0 conjecture(s) more...
>>> induction any_list1(rank : 4)


1st goal of : forall (any_list1:any list), reverse (qreva (any_list1) ((Nil))) = any_list1
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
reverse (qreva ((Nil)) ((Nil))) = (Nil)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3)
=================================================
Progress: 3


1st goal of : forall (any_list1:any list), reverse (qreva (any_list1) ((Nil))) = any_list1
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
reverse (qreva ((Nil)) ((Nil))) = (Nil)

1 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 3)


1st goal of : forall (any_list1:any list), reverse (qreva (any_list1) ((Nil))) = any_list1
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : reverse (qreva (any_list2) ((Nil))) = any_list2
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
reverse (qreva ((any1::any_list2)) ((Nil))) = (any1::any_list2)

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:3)
=================================================
Progress: 4


1st goal of : forall (any_list1:any list), reverse (qreva (any_list1) ((Nil))) = any_list1
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : reverse (qreva (any_list2) ((Nil))) = any_list2
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
reverse (qreva ((any1::any_list2)) ((Nil))) = (any1::any_list2)

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3)


1st goal of : forall (any_list1:any list), reverse (qreva (any_list1) ((Nil))) = any_list1
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : reverse (qreva (any_list2) ((Nil))) = any_list2
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
reverse (qreva (any_list2) ((any1::(Nil)))) = (any1::any_list2)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
advanced_generalize done
Lemma : forall (any_list2:any list), mk_rhs1 ((Nil)) (any_list2) = any_list2
Model : any_list2: (Nil)
Model : any_list2: (4::(Nil))
Model : any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000053 seconds
Result : true
Lemma : forall (tl:any list) (hd:any) (any_list2:any list), mk_rhs1 ((hd::tl)) (any_list2) = mk_rhs1 (tl) ((hd::any_list2))
Model : tl: (Nil), hd: 6, any_list2: (Nil)
Model : tl: (Nil), hd: 4, any_list2: (Nil)
Model : tl: (Nil), hd: 0, any_list2: (1::(0::(Nil)))
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000236 seconds
Result : true
Lemma : forall (any_list2:any list) (lst:any list), reverse (qreva (any_list2) (lst)) = mk_rhs1 (lst) (any_list2)
Model : any_list2: (Nil), lst: (Nil)
Model : any_list2: (2::(Nil)), lst: (Nil)
Model : any_list2: (0::(Nil)), lst: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000164 seconds
Result : true
New Env
let rec mk_rhs1 arg_1 arg_2 =
match (arg_1) with
| Nil  -> arg_2
| Cons hd tl -> mk_rhs1 (tl) ((hd::arg_2))
;;
Lemma List
forall (any_list2:any list), mk_rhs1 ((Nil)) (any_list2) = any_list2
forall (tl:any list) (hd:any) (any_list2:any list), mk_rhs1 ((hd::tl)) (any_list2) = mk_rhs1 (tl) ((hd::any_list2))
forall (any_list2:any list) (lst:any list), reverse (qreva (any_list2) (lst)) = mk_rhs1 (lst) (any_list2)
End of Lemma List


1st goal of : forall (any_list1:any list), reverse (qreva (any_list1) ((Nil))) = any_list1
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : reverse (qreva (any_list2) ((Nil))) = any_list2
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
reverse (qreva (any_list2) ((any1::(Nil)))) = (any1::any_list2)

0 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 5


1st goal of : forall (any_list1:any list), reverse (qreva (any_list1) ((Nil))) = any_list1
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : reverse (qreva (any_list2) ((Nil))) = any_list2
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
reverse (qreva (any_list2) ((any1::(Nil)))) = (any1::any_list2)

0 goal(s) more...

0 conjecture(s) more...
>>> assert forall (any_list2:any list) (lst:any list), reverse (qreva (any_list2) (lst)) = mk_rhs1 (lst) (any_list2)(rank : 0)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)

---------------------------------------
forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:6)
=================================================
Progress: 6


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)

---------------------------------------
forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)

0 goal(s) more...

1 conjecture(s) more...
>>> induction any_list1(rank : 6)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), reverse (qreva ((Nil)) (any_list2)) = mk_rhs1 (any_list2) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6)
=================================================
Progress: 7


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), reverse (qreva ((Nil)) (any_list2)) = mk_rhs1 (any_list2) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), reverse (any_list2) = mk_rhs1 (any_list2) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction any_list2(rank:15)
intro any_list2(rank:22)
=================================================
Progress: 8


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), reverse (any_list2) = mk_rhs1 (any_list2) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> induction any_list2(rank : 15)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
reverse ((Nil)) = mk_rhs1 ((Nil)) ((Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6)
=================================================
Progress: 9


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
reverse ((Nil)) = mk_rhs1 ((Nil)) ((Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (any_list3) = mk_rhs1 (any_list3) ((Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
reverse ((any1::any_list3)) = mk_rhs1 ((any1::any_list3)) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:6)
=================================================
Progress: 10


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (any_list3) = mk_rhs1 (any_list3) ((Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
reverse ((any1::any_list3)) = mk_rhs1 ((any1::any_list3)) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (any_list3) = mk_rhs1 (any_list3) ((Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
(reverse (any_list3) @ (any1::(Nil))) = mk_rhs1 (any_list3) ((any1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:6)
=================================================
Progress: 11


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (any_list3) = mk_rhs1 (any_list3) ((Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
(reverse (any_list3) @ (any1::(Nil))) = mk_rhs1 (any_list3) ((any1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 6)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (any_list3) = mk_rhs1 (any_list3) ((Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
(mk_rhs1 (any_list3) ((Nil)) @ (any1::(Nil))) = mk_rhs1 (any_list3) ((any1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
advanced_generalize done
Lemma : forall (any_list3:any list) (arg3:any list), (mk_rhs1 (any_list3) ((Nil)) @ arg3) = mk_rhs1 (any_list3) (arg3)
Model : any_list3: (Nil), arg3: (Nil)
Model : any_list3: (2::(Nil)), arg3: (Nil)
Model : any_list3: (5::(Nil)), arg3: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000257 seconds
Result : true
New Env

;;
Lemma List
forall (any_list3:any list) (arg3:any list), (mk_rhs1 (any_list3) ((Nil)) @ arg3) = mk_rhs1 (any_list3) (arg3)
End of Lemma List


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (any_list3) = mk_rhs1 (any_list3) ((Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
(mk_rhs1 (any_list3) ((Nil)) @ (any1::(Nil))) = mk_rhs1 (any_list3) ((any1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 12


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (any_list3) = mk_rhs1 (any_list3) ((Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
(mk_rhs1 (any_list3) ((Nil)) @ (any1::(Nil))) = mk_rhs1 (any_list3) ((any1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (any_list3:any list) (arg3:any list), (mk_rhs1 (any_list3) ((Nil)) @ arg3) = mk_rhs1 (any_list3) (arg3)(rank : 0)


1st goal of : forall (any_list1:any list) (any_list2:any list), (mk_rhs1 (any_list1) ((Nil)) @ any_list2) = mk_rhs1 (any_list1) (any_list2)

---------------------------------------
forall (any_list1:any list) (any_list2:any list), (mk_rhs1 (any_list1) ((Nil)) @ any_list2) = mk_rhs1 (any_list1) (any_list2)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:8)
=================================================
Progress: 13


1st goal of : forall (any_list1:any list) (any_list2:any list), (mk_rhs1 (any_list1) ((Nil)) @ any_list2) = mk_rhs1 (any_list1) (any_list2)

---------------------------------------
forall (any_list1:any list) (any_list2:any list), (mk_rhs1 (any_list1) ((Nil)) @ any_list2) = mk_rhs1 (any_list1) (any_list2)

0 goal(s) more...

2 conjecture(s) more...
>>> induction any_list1(rank : 8)


1st goal of : forall (any_list1:any list) (any_list2:any list), (mk_rhs1 (any_list1) ((Nil)) @ any_list2) = mk_rhs1 (any_list1) (any_list2)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), (mk_rhs1 ((Nil)) ((Nil)) @ any_list2) = mk_rhs1 ((Nil)) (any_list2)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7)
=================================================
Progress: 14


1st goal of : forall (any_list1:any list) (any_list2:any list), (mk_rhs1 (any_list1) ((Nil)) @ any_list2) = mk_rhs1 (any_list1) (any_list2)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), (mk_rhs1 ((Nil)) ((Nil)) @ any_list2) = mk_rhs1 ((Nil)) (any_list2)

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7)


1st goal of : forall (any_list1:any list) (any_list2:any list), (mk_rhs1 (any_list1) ((Nil)) @ any_list2) = mk_rhs1 (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (mk_rhs1 (any_list3) ((Nil)) @ any_list2) = mk_rhs1 (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), (mk_rhs1 ((any1::any_list3)) ((Nil)) @ any_list2) = mk_rhs1 ((any1::any_list3)) (any_list2)

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7)
=================================================
Progress: 15


1st goal of : forall (any_list1:any list) (any_list2:any list), (mk_rhs1 (any_list1) ((Nil)) @ any_list2) = mk_rhs1 (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (mk_rhs1 (any_list3) ((Nil)) @ any_list2) = mk_rhs1 (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), (mk_rhs1 ((any1::any_list3)) ((Nil)) @ any_list2) = mk_rhs1 ((any1::any_list3)) (any_list2)

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7)


1st goal of : forall (any_list1:any list) (any_list2:any list), (mk_rhs1 (any_list1) ((Nil)) @ any_list2) = mk_rhs1 (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (mk_rhs1 (any_list3) ((Nil)) @ any_list2) = mk_rhs1 (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), (mk_rhs1 (any_list3) ((any1::(Nil))) @ any_list2) = mk_rhs1 (any_list3) ((any1::any_list2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
intro any_list2(rank:7)
rewrite <- IH1 in goal at 0(rank:23)
rewrite <- IH1 in goal at 1(rank:23)
rewrite <- IH1 in goal at 2(rank:23)
=================================================
Progress: 16


1st goal of : forall (any_list1:any list) (any_list2:any list), (mk_rhs1 (any_list1) ((Nil)) @ any_list2) = mk_rhs1 (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (mk_rhs1 (any_list3) ((Nil)) @ any_list2) = mk_rhs1 (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), (mk_rhs1 (any_list3) ((any1::(Nil))) @ any_list2) = mk_rhs1 (any_list3) ((any1::any_list2))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any_list2(rank : 7)


1st goal of : forall (any_list1:any list) (any_list2:any list), (mk_rhs1 (any_list1) ((Nil)) @ any_list2) = mk_rhs1 (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (mk_rhs1 (any_list3) ((Nil)) @ any_list2) = mk_rhs1 (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
---------------------------------------
(mk_rhs1 (any_list3) ((any1::(Nil))) @ any_list2) = mk_rhs1 (any_list3) ((any1::any_list2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite <- IH1 in goal at 0(rank:23)
rewrite <- IH1 in goal at 1(rank:23)
rewrite <- IH1 in goal at 2(rank:23)
=================================================
Progress: 17


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), reverse (any_list2) = mk_rhs1 (any_list2) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> intro any_list2(rank : 22)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
---------------------------------------
reverse (any_list2) = mk_rhs1 (any_list2) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list2
advanced_generalize done
Lemma : forall (any_list2:any list), reverse (any_list2) = mk_rhs1 (any_list2) ((Nil))
Model : any_list2: (Nil)
Model : any_list2: (Nil)
Model : any_list2: (7::(Nil))
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000146 seconds
Result : true
New Env

;;
Lemma List
forall (any_list2:any list), reverse (any_list2) = mk_rhs1 (any_list2) ((Nil))
End of Lemma List


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
---------------------------------------
reverse (any_list2) = mk_rhs1 (any_list2) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 18


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
---------------------------------------
reverse (any_list2) = mk_rhs1 (any_list2) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (any_list2:any list), reverse (any_list2) = mk_rhs1 (any_list2) ((Nil))(rank : 0)


1st goal of : forall (any_list1:any list), reverse (any_list1) = mk_rhs1 (any_list1) ((Nil))

---------------------------------------
forall (any_list1:any list), reverse (any_list1) = mk_rhs1 (any_list1) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:23)
induction any_list1(rank:24)
=================================================
Progress: 19


1st goal of : forall (any_list1:any list) (any_list2:any list), (mk_rhs1 (any_list1) ((Nil)) @ any_list2) = mk_rhs1 (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (mk_rhs1 (any_list3) ((Nil)) @ any_list2) = mk_rhs1 (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), (mk_rhs1 (any_list3) ((any1::(Nil))) @ any_list2) = mk_rhs1 (any_list3) ((any1::any_list2))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 23)


1st goal of : forall (any_list1:any list) (any_list2:any list), (mk_rhs1 (any_list1) ((Nil)) @ any_list2) = mk_rhs1 (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (mk_rhs1 (any_list3) ((Nil)) @ any_list2) = mk_rhs1 (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), ((mk_rhs1 (any_list3) ((Nil)) @ (any1::(Nil))) @ any_list2) = (mk_rhs1 (any_list3) ((Nil)) @ (any1::any_list2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite <- IH1 in goal at 0(rank:23)
rewrite <- IH1 in goal at 1(rank:23)
rewrite <- IH1 in goal at 2(rank:23)
=================================================
Progress: 20


1st goal of : forall (any_list1:any list) (any_list2:any list), (mk_rhs1 (any_list1) ((Nil)) @ any_list2) = mk_rhs1 (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (mk_rhs1 (any_list3) ((Nil)) @ any_list2) = mk_rhs1 (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), (mk_rhs1 (any_list3) ((any1::(Nil))) @ any_list2) = mk_rhs1 (any_list3) ((any1::any_list2))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 23)


1st goal of : forall (any_list1:any list) (any_list2:any list), (mk_rhs1 (any_list1) ((Nil)) @ any_list2) = mk_rhs1 (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (mk_rhs1 (any_list3) ((Nil)) @ any_list2) = mk_rhs1 (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), ((mk_rhs1 (any_list3) ((Nil)) @ (any1::(Nil))) @ any_list2) = mk_rhs1 (any_list3) ((any1::any_list2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 1(rank:7)
=================================================
Progress: 21


1st goal of : forall (any_list1:any list) (any_list2:any list), (mk_rhs1 (any_list1) ((Nil)) @ any_list2) = mk_rhs1 (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (mk_rhs1 (any_list3) ((Nil)) @ any_list2) = mk_rhs1 (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), ((mk_rhs1 (any_list3) ((Nil)) @ (any1::(Nil))) @ any_list2) = mk_rhs1 (any_list3) ((any1::any_list2))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 7)


1st goal of : forall (any_list1:any list) (any_list2:any list), (mk_rhs1 (any_list1) ((Nil)) @ any_list2) = mk_rhs1 (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (mk_rhs1 (any_list3) ((Nil)) @ any_list2) = mk_rhs1 (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), (((mk_rhs1 (any_list3) ((Nil)) @ (Nil)) @ (any1::(Nil))) @ any_list2) = mk_rhs1 (any_list3) ((any1::any_list2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro any_list2(rank:7)
rewrite <- IH1 in goal at 0(rank:23)
=================================================
Progress: 22


1st goal of : forall (any_list1:any list) (any_list2:any list), (mk_rhs1 (any_list1) ((Nil)) @ any_list2) = mk_rhs1 (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (mk_rhs1 (any_list3) ((Nil)) @ any_list2) = mk_rhs1 (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), (((mk_rhs1 (any_list3) ((Nil)) @ (Nil)) @ (any1::(Nil))) @ any_list2) = mk_rhs1 (any_list3) ((any1::any_list2))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any_list2(rank : 7)


1st goal of : forall (any_list1:any list) (any_list2:any list), (mk_rhs1 (any_list1) ((Nil)) @ any_list2) = mk_rhs1 (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (mk_rhs1 (any_list3) ((Nil)) @ any_list2) = mk_rhs1 (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
---------------------------------------
(((mk_rhs1 (any_list3) ((Nil)) @ (Nil)) @ (any1::(Nil))) @ any_list2) = mk_rhs1 (any_list3) ((any1::any_list2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 2(rank:15)
rewrite <- IH1 in goal at 0(rank:23)
=================================================
Progress: 23


1st goal of : forall (any_list1:any list) (any_list2:any list), (mk_rhs1 (any_list1) ((Nil)) @ any_list2) = mk_rhs1 (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (mk_rhs1 (any_list3) ((Nil)) @ any_list2) = mk_rhs1 (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
---------------------------------------
(((mk_rhs1 (any_list3) ((Nil)) @ (Nil)) @ (any1::(Nil))) @ any_list2) = mk_rhs1 (any_list3) ((any1::any_list2))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 15)


1st goal of : forall (any_list1:any list) (any_list2:any list), (mk_rhs1 (any_list1) ((Nil)) @ any_list2) = mk_rhs1 (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (mk_rhs1 (any_list3) ((Nil)) @ any_list2) = mk_rhs1 (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
---------------------------------------
(((mk_rhs1 (any_list3) ((Nil)) @ (Nil)) @ (any1::(Nil))) @ any_list2) = (mk_rhs1 (any_list3) ((Nil)) @ (any1::any_list2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
rewrite <- IH1 in goal at 1
intro any_list2
rewrite <- IH1 in goal at 2
advanced_generalize done
Lemma : forall (any1:any) (any_list2:any list) (arg4:any list), (((arg4 @ (Nil)) @ (any1::(Nil))) @ any_list2) = (arg4 @ (any1::any_list2))
Model : any1: 6, any_list2: (Nil), arg4: (Nil)
Model : any1: 6, any_list2: (Nil), arg4: (Nil)
Model : any1: 6, any_list2: (Nil), arg4: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000259 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any_list2:any list) (arg4:any list), (((arg4 @ (Nil)) @ (any1::(Nil))) @ any_list2) = (arg4 @ (any1::any_list2))
End of Lemma List


1st goal of : forall (any_list1:any list) (any_list2:any list), (mk_rhs1 (any_list1) ((Nil)) @ any_list2) = mk_rhs1 (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (mk_rhs1 (any_list3) ((Nil)) @ any_list2) = mk_rhs1 (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
---------------------------------------
(((mk_rhs1 (any_list3) ((Nil)) @ (Nil)) @ (any1::(Nil))) @ any_list2) = (mk_rhs1 (any_list3) ((Nil)) @ (any1::any_list2))

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 24


1st goal of : forall (any_list1:any list) (any_list2:any list), (mk_rhs1 (any_list1) ((Nil)) @ any_list2) = mk_rhs1 (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (mk_rhs1 (any_list3) ((Nil)) @ any_list2) = mk_rhs1 (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
---------------------------------------
(((mk_rhs1 (any_list3) ((Nil)) @ (Nil)) @ (any1::(Nil))) @ any_list2) = (mk_rhs1 (any_list3) ((Nil)) @ (any1::any_list2))

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (any1:any) (any_list2:any list) (arg4:any list), (((arg4 @ (Nil)) @ (any1::(Nil))) @ any_list2) = (arg4 @ (any1::any_list2))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), (((any_list2 @ (Nil)) @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (((any_list2 @ (Nil)) @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:10)
=================================================
Progress: 25


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), (((any_list2 @ (Nil)) @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (((any_list2 @ (Nil)) @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> induction any_list2(rank : 10)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), (((any_list2 @ (Nil)) @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list), ((((Nil) @ (Nil)) @ (any1::(Nil))) @ any_list1) = ((Nil) @ (any1::any_list1))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9)
=================================================
Progress: 26


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), (((any_list2 @ (Nil)) @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list), ((((Nil) @ (Nil)) @ (any1::(Nil))) @ any_list1) = ((Nil) @ (any1::any_list1))

1 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), (((any_list2 @ (Nil)) @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), (((any_list3 @ (Nil)) @ (any1::(Nil))) @ any_list1) = (any_list3 @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), ((((any2::any_list3) @ (Nil)) @ (any1::(Nil))) @ any_list1) = ((any2::any_list3) @ (any1::any_list1))

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 27


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), (((any_list2 @ (Nil)) @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), (((any_list3 @ (Nil)) @ (any1::(Nil))) @ any_list1) = (any_list3 @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), ((((any2::any_list3) @ (Nil)) @ (any1::(Nil))) @ any_list1) = ((any2::any_list3) @ (any1::any_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), (((any_list2 @ (Nil)) @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), (((any_list3 @ (Nil)) @ (any1::(Nil))) @ any_list1) = (any_list3 @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::(((any_list3 @ (Nil)) @ (any1::(Nil))) @ any_list1)) = (any2::(any_list3 @ (any1::any_list1)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
intro any1(rank:9)
intro any_list1(rank:9)
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 28


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), (((any_list2 @ (Nil)) @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), (((any_list3 @ (Nil)) @ (any1::(Nil))) @ any_list1) = (any_list3 @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::(((any_list3 @ (Nil)) @ (any1::(Nil))) @ any_list1)) = (any2::(any_list3 @ (any1::any_list1)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any1(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), (((any_list2 @ (Nil)) @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), (((any_list3 @ (Nil)) @ (any1::(Nil))) @ any_list1) = (any_list3 @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
any1 : any
---------------------------------------
forall (any_list1:any list), (any2::(((any_list3 @ (Nil)) @ (any1::(Nil))) @ any_list1)) = (any2::(any_list3 @ (any1::any_list1)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro any_list1(rank:9)
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 29


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), (((any_list2 @ (Nil)) @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), (((any_list3 @ (Nil)) @ (any1::(Nil))) @ any_list1) = (any_list3 @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::(((any_list3 @ (Nil)) @ (any1::(Nil))) @ any_list1)) = (any2::(any_list3 @ (any1::any_list1)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), (((any_list2 @ (Nil)) @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), (((any_list3 @ (Nil)) @ (any1::(Nil))) @ any_list1) = (any_list3 @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
any_list1 : any list
---------------------------------------
forall (any1:any), (any2::(((any_list3 @ (Nil)) @ (any1::(Nil))) @ any_list1)) = (any2::(any_list3 @ (any1::any_list1)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 30


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), (((any_list2 @ (Nil)) @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), (((any_list3 @ (Nil)) @ (any1::(Nil))) @ any_list1) = (any_list3 @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
any1 : any
---------------------------------------
forall (any_list1:any list), (any2::(((any_list3 @ (Nil)) @ (any1::(Nil))) @ any_list1)) = (any2::(any_list3 @ (any1::any_list1)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), (((any_list2 @ (Nil)) @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), (((any_list3 @ (Nil)) @ (any1::(Nil))) @ any_list1) = (any_list3 @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
any1 : any
any_list1 : any list
---------------------------------------
(any2::(((any_list3 @ (Nil)) @ (any1::(Nil))) @ any_list1)) = (any2::(any_list3 @ (any1::any_list1)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 31


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), (((any_list2 @ (Nil)) @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), (((any_list3 @ (Nil)) @ (any1::(Nil))) @ any_list1) = (any_list3 @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::(((any_list3 @ (Nil)) @ (any1::(Nil))) @ any_list1)) = (any2::(any_list3 @ (any1::any_list1)))

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 17)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), (((any_list2 @ (Nil)) @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), (((any_list3 @ (Nil)) @ (any1::(Nil))) @ any_list1) = (any_list3 @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::(any_list3 @ (any1::any_list1))) = (any2::(any_list3 @ (any1::any_list1)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7)
=================================================
Progress: 32


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), (((any_list2 @ (Nil)) @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), (((any_list3 @ (Nil)) @ (any1::(Nil))) @ any_list1) = (any_list3 @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::(any_list3 @ (any1::any_list1))) = (any2::(any_list3 @ (any1::any_list1)))

0 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 7)


1st goal of : forall (any_list1:any list) (any_list2:any list), (mk_rhs1 (any_list1) ((Nil)) @ any_list2) = mk_rhs1 (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (mk_rhs1 (any_list3) ((Nil)) @ any_list2) = mk_rhs1 (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
---------------------------------------
(((mk_rhs1 (any_list3) ((Nil)) @ (Nil)) @ (any1::(Nil))) @ any_list2) = (mk_rhs1 (any_list3) ((Nil)) @ (any1::any_list2))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 7
Tactic List : 4
rewrite lemma5 in goal at 0(rank:15)
rewrite <- lemma5 in goal at 0(rank:15)
rewrite <- lemma5 in goal at 2(rank:15)
rewrite <- lemma5 in goal at 1(rank:23)
=================================================
Progress: 33


1st goal of : forall (any_list1:any list) (any_list2:any list), (mk_rhs1 (any_list1) ((Nil)) @ any_list2) = mk_rhs1 (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (mk_rhs1 (any_list3) ((Nil)) @ any_list2) = mk_rhs1 (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
---------------------------------------
(((mk_rhs1 (any_list3) ((Nil)) @ (Nil)) @ (any1::(Nil))) @ any_list2) = (mk_rhs1 (any_list3) ((Nil)) @ (any1::any_list2))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma5 in goal at 0(rank : 15)


1st goal of : forall (any_list1:any list) (any_list2:any list), (mk_rhs1 (any_list1) ((Nil)) @ any_list2) = mk_rhs1 (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (mk_rhs1 (any_list3) ((Nil)) @ any_list2) = mk_rhs1 (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
---------------------------------------
(mk_rhs1 (any_list3) ((Nil)) @ (any1::any_list2)) = (mk_rhs1 (any_list3) ((Nil)) @ (any1::any_list2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6)
=================================================
Progress: 34


1st goal of : forall (any_list1:any list) (any_list2:any list), (mk_rhs1 (any_list1) ((Nil)) @ any_list2) = mk_rhs1 (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (mk_rhs1 (any_list3) ((Nil)) @ any_list2) = mk_rhs1 (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
---------------------------------------
(mk_rhs1 (any_list3) ((Nil)) @ (any1::any_list2)) = (mk_rhs1 (any_list3) ((Nil)) @ (any1::any_list2))

0 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 6)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (any_list3) = mk_rhs1 (any_list3) ((Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
(mk_rhs1 (any_list3) ((Nil)) @ (any1::(Nil))) = mk_rhs1 (any_list3) ((any1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 12
Tactic List : 5
rewrite lemma6 in goal at 0(rank:14)
rewrite <- lemma5 in goal at 0(rank:22)
rewrite <- lemma6 in goal at 2(rank:14)
rewrite <- lemma6 in goal at 0(rank:22)
rewrite <- lemma6 in goal at 1(rank:22)
=================================================
Progress: 35


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (any_list3) = mk_rhs1 (any_list3) ((Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
(mk_rhs1 (any_list3) ((Nil)) @ (any1::(Nil))) = mk_rhs1 (any_list3) ((any1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma6 in goal at 0(rank : 14)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (any_list3) = mk_rhs1 (any_list3) ((Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
mk_rhs1 (any_list3) ((any1::(Nil))) = mk_rhs1 (any_list3) ((any1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5)
=================================================
Progress: 36


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (any_list3) = mk_rhs1 (any_list3) ((Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
mk_rhs1 (any_list3) ((any1::(Nil))) = mk_rhs1 (any_list3) ((any1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (any_list2)) = mk_rhs1 (any_list2) (any_list3)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), reverse (qreva ((any1::any_list3)) (any_list2)) = mk_rhs1 (any_list2) ((any1::any_list3))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 6
Tactic List : 1
rewrite <- rhs_lemma4 in goal at 0(rank:5)
=================================================
Progress: 37


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (any_list2)) = mk_rhs1 (any_list2) (any_list3)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), reverse (qreva ((any1::any_list3)) (any_list2)) = mk_rhs1 (any_list2) ((any1::any_list3))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- rhs_lemma4 in goal at 0(rank : 5)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (any_list2)) = mk_rhs1 (any_list2) (any_list3)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), reverse (qreva ((any1::any_list3)) (any_list2)) = mk_rhs1 ((any1::any_list2)) (any_list3)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:21)
rewrite <- lemma6 in goal at 0(rank:21)
=================================================
Progress: 38


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (any_list2)) = mk_rhs1 (any_list2) (any_list3)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), reverse (qreva ((any1::any_list3)) (any_list2)) = mk_rhs1 ((any1::any_list2)) (any_list3)

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 21)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (any_list2)) = mk_rhs1 (any_list2) (any_list3)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), reverse (qreva ((any1::any_list3)) (any_list2)) = reverse (qreva (any_list3) ((any1::any_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3)
=================================================
Progress: 39


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (any_list2)) = mk_rhs1 (any_list2) (any_list3)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), reverse (qreva ((any1::any_list3)) (any_list2)) = reverse (qreva (any_list3) ((any1::any_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 3)


1st goal of : forall (any_list1:any list), reverse (qreva (any_list1) ((Nil))) = any_list1
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : reverse (qreva (any_list2) ((Nil))) = any_list2
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
reverse (qreva (any_list2) ((any1::(Nil)))) = (any1::any_list2)

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 1
Tactic List : 1
rewrite lemma7 in goal at 0(rank:3)
=================================================
Progress: 40


1st goal of : forall (any_list1:any list), reverse (qreva (any_list1) ((Nil))) = any_list1
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : reverse (qreva (any_list2) ((Nil))) = any_list2
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
reverse (qreva (any_list2) ((any1::(Nil)))) = (any1::any_list2)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma7 in goal at 0(rank : 3)


1st goal of : forall (any_list1:any list), reverse (qreva (any_list1) ((Nil))) = any_list1
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : reverse (qreva (any_list2) ((Nil))) = any_list2
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
mk_rhs1 ((any1::(Nil))) (any_list2) = (any1::any_list2)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:0)
=================================================
Progress: 41


1st goal of : forall (any_list1:any list), reverse (qreva (any_list1) ((Nil))) = any_list1
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : reverse (qreva (any_list2) ((Nil))) = any_list2
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
mk_rhs1 ((any1::(Nil))) (any_list2) = (any1::any_list2)

0 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 0)


No conjecture
Proof Success
Proof
assert forall (any_list1:any list), reverse (qreva (any_list1) ((Nil))) = any_list1
induction any_list1
reflexivity
simpl in goal
define mk_rhs1 arg_1 arg_2 =
match (arg_1) with
| Nil  -> arg_2
| Cons hd tl -> mk_rhs1 (tl) ((hd::arg_2))
assert forall (any_list1:any list), mk_rhs1 ((Nil)) (any_list1) = any_list1
reflexivity
assert forall (any_list1:any list) (any1:any) (any_list2:any list), mk_rhs1 ((any1::any_list1)) (any_list2) = mk_rhs1 (any_list1) ((any1::any_list2))
reflexivity
assert forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
induction any_list1
simpl in goal
induction any_list2
reflexivity
simpl in goal
rewrite IH1 in goal at 0
assert forall (any_list1:any list) (any_list2:any list), (mk_rhs1 (any_list1) ((Nil)) @ any_list2) = mk_rhs1 (any_list1) (any_list2)
induction any_list1
reflexivity
simpl in goal
rewrite <- IH1 in goal at 1
rewrite <- IH1 in goal at 1
intro any_list2
rewrite <- IH1 in goal at 2
assert forall (any1:any) (any_list1:any list) (any_list2:any list), (((any_list2 @ (Nil)) @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
induction any_list2
reflexivity
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma5 in goal at 0
reflexivity
rewrite lemma6 in goal at 0
reflexivity
rewrite <- rhs_lemma4 in goal at 0
rewrite <- IH1 in goal at 0
reflexivity
rewrite lemma7 in goal at 0
reflexivity
Qed
File "_none_", lines 88-90, characters 2-22:
Warning 8 [partial-match]: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
[]

File "_none_", lines 88-90, characters 2-22:
Warning 8 [partial-match]: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
[]
