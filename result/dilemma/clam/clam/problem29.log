Enter the definition file path (1/2) : 
> Enter the definition file path (2/2) : 
> Choose the proof type :
1) Interactive Mode 	 2) Auto Mode
Enter the goal : =================================================
Progress: 1


No conjecture
>>> assert forall (x:any list), reverse (qreva (x) ((Nil))) = x(rank : 0.)


1st goal of : forall (any_list1:any list), reverse (qreva (any_list1) ((Nil))) = any_list1

---------------------------------------
forall (any_list1:any list), reverse (qreva (any_list1) ((Nil))) = any_list1

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:4.)
=================================================
Progress: 2


1st goal of : forall (any_list1:any list), reverse (qreva (any_list1) ((Nil))) = any_list1

---------------------------------------
forall (any_list1:any list), reverse (qreva (any_list1) ((Nil))) = any_list1

0 goal(s) more...

0 conjecture(s) more...
>>> induction any_list1(rank : 4.)


1st goal of : forall (any_list1:any list), reverse (qreva (any_list1) ((Nil))) = any_list1
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
reverse (qreva ((Nil)) ((Nil))) = (Nil)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3.)
=================================================
Progress: 3


1st goal of : forall (any_list1:any list), reverse (qreva (any_list1) ((Nil))) = any_list1
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
reverse (qreva ((Nil)) ((Nil))) = (Nil)

1 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 3.)


1st goal of : forall (any_list1:any list), reverse (qreva (any_list1) ((Nil))) = any_list1
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : reverse (qreva (any_list2) ((Nil))) = any_list2
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
reverse (qreva ((any1::any_list2)) ((Nil))) = (any1::any_list2)

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 4


1st goal of : forall (any_list1:any list), reverse (qreva (any_list1) ((Nil))) = any_list1
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : reverse (qreva (any_list2) ((Nil))) = any_list2
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
reverse (qreva ((any1::any_list2)) ((Nil))) = (any1::any_list2)

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (any_list1:any list), reverse (qreva (any_list1) ((Nil))) = any_list1
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : reverse (qreva (any_list2) ((Nil))) = any_list2
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
reverse (qreva (any_list2) ((any1::(Nil)))) = (any1::any_list2)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
parent
(any1::(Nil))
lower
Cons(_, Nil())
upper
reverse(qreva(any_list2, _))
remove upper
Nil()
remove lower
Nil()
remove upper
Cons(any1, Nil())
remove lower
Cons(any1, Nil())
remove upper
Cons(any2, Cons(any1, Nil()))
remove lower
Cons(any2, Cons(any1, Nil()))
remove upper
Cons(any3, Cons(any2, Cons(any1, Nil())))
remove lower
Cons(any3, Cons(any2, Cons(any1, Nil())))
parent
(any1::any_list2)
lower
Cons(_, any_list2)
upper
_
remove upper
any_list2
remove lower
_
remove upper
Cons(any1, any_list2)
remove lower
Cons(any1, _)
remove upper
Cons(any1, Cons(any2, any_list3))
remove lower
Cons(any1, Cons(any2, _))
remove upper
Cons(any1, Cons(any2, Cons(any3, any_list4)))
remove lower
Cons(any1, Cons(any2, Cons(any3, _)))
New Env
let rec mk_rhs1 arg_1 arg_2 =
match (arg_1) with
| Nil -> arg_2
| Cons hd tl -> mk_rhs1 (tl) ((hd::arg_2))
;;
Lemma List
forall (any_list1:any list), mk_rhs1 ((Nil)) (any_list1) = any_list1
forall (any_list1:any list) (any1:any) (any_list2:any list), mk_rhs1 ((any1::any_list1)) (any_list2) = mk_rhs1 (any_list1) ((any1::any_list2))
forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
End of Lemma List


1st goal of : forall (any_list1:any list), reverse (qreva (any_list1) ((Nil))) = any_list1
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : reverse (qreva (any_list2) ((Nil))) = any_list2
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
reverse (qreva (any_list2) ((any1::(Nil)))) = (any1::any_list2)

0 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 5


1st goal of : forall (any_list1:any list), reverse (qreva (any_list1) ((Nil))) = any_list1
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : reverse (qreva (any_list2) ((Nil))) = any_list2
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
reverse (qreva (any_list2) ((any1::(Nil)))) = (any1::any_list2)

0 goal(s) more...

0 conjecture(s) more...
>>> assert forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)(rank : 0.)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)

---------------------------------------
forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:6.)
=================================================
Progress: 6


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)

---------------------------------------
forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)

0 goal(s) more...

1 conjecture(s) more...
>>> induction any_list1(rank : 6.)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), reverse (qreva ((Nil)) (any_list2)) = mk_rhs1 (any_list2) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 7


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), reverse (qreva ((Nil)) (any_list2)) = mk_rhs1 (any_list2) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), reverse (any_list2) = mk_rhs1 (any_list2) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction any_list2(rank:15.)
intro any_list2(rank:22.)
=================================================
Progress: 8


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), reverse (any_list2) = mk_rhs1 (any_list2) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> induction any_list2(rank : 15.)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
reverse ((Nil)) = mk_rhs1 ((Nil)) ((Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 9


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
reverse ((Nil)) = mk_rhs1 ((Nil)) ((Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (any_list3) = mk_rhs1 (any_list3) ((Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
reverse ((any1::any_list3)) = mk_rhs1 ((any1::any_list3)) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 10


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (any_list3) = mk_rhs1 (any_list3) ((Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
reverse ((any1::any_list3)) = mk_rhs1 ((any1::any_list3)) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (any_list3) = mk_rhs1 (any_list3) ((Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
(reverse (any_list3) @ (any1::(Nil))) = mk_rhs1 (any_list3) ((any1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:6.)
=================================================
Progress: 11


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (any_list3) = mk_rhs1 (any_list3) ((Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
(reverse (any_list3) @ (any1::(Nil))) = mk_rhs1 (any_list3) ((any1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 6.)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (any_list3) = mk_rhs1 (any_list3) ((Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
(mk_rhs1 (any_list3) ((Nil)) @ (any1::(Nil))) = mk_rhs1 (any_list3) ((any1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
Prop: (mk_rhs1 ((Nil)) ((Nil)) @ (Nil)) = mk_rhs1 ((Nil)) ((Nil))
Prop: (mk_rhs1 ((Nil)) ((Nil)) @ (Nil)) = mk_rhs1 ((Nil)) ((Nil))
Prop: (mk_rhs1 ((5::(8::(Nil)))) ((Nil)) @ (0::(Nil))) = mk_rhs1 ((5::(8::(Nil)))) ((0::(Nil)))
previous tactics
simpl in goal
parent
(any1::(Nil))
lower
Cons(_, Nil())
upper
@(reverse(any_list3), _)
remove upper
Cons(any1, Nil())
remove lower
Cons(any1, Nil())
parent
(any1::(Nil))
lower
Cons(_, Nil())
upper
mk_rhs1(any_list3, _)
remove upper
Nil()
remove lower
Nil()
remove upper
Cons(any1, Nil())
remove lower
Cons(any1, Nil())
remove upper
Cons(any2, Cons(any1, Nil()))
remove lower
Cons(any2, Cons(any1, Nil()))
remove upper
Cons(any3, Cons(any2, Cons(any1, Nil())))
remove lower
Cons(any3, Cons(any2, Cons(any1, Nil())))
Prop: (reverse ((5::(Nil))) @ (Nil)) = mk_rhs1 ((5::(Nil))) ((Nil))
Prop: (reverse ((Nil)) @ (Nil)) = mk_rhs1 ((Nil)) ((Nil))
Prop: (reverse ((Nil)) @ (8::(Nil))) = mk_rhs1 ((Nil)) ((8::(Nil)))
Lemma List
forall (any_list1:any list) (any_list2:any list), (reverse (any_list1) @ any_list2) = mk_rhs1 (any_list1) (any_list2)
End of Lemma List


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (any_list3) = mk_rhs1 (any_list3) ((Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
(reverse (any_list3) @ (any1::(Nil))) = mk_rhs1 (any_list3) ((any1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
Lemma List
forall (any_list1:any list) (any_list2:any list), (mk_rhs1 (any_list1) ((Nil)) @ any_list2) = mk_rhs1 (any_list1) (any_list2)
End of Lemma List


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (any_list3) = mk_rhs1 (any_list3) ((Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
(mk_rhs1 (any_list3) ((Nil)) @ (any1::(Nil))) = mk_rhs1 (any_list3) ((any1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 12


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (any_list3) = mk_rhs1 (any_list3) ((Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
(reverse (any_list3) @ (any1::(Nil))) = mk_rhs1 (any_list3) ((any1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (any_list1:any list) (any_list2:any list), (reverse (any_list1) @ any_list2) = mk_rhs1 (any_list1) (any_list2)(rank : 0.)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (any_list1) @ any_list2) = mk_rhs1 (any_list1) (any_list2)

---------------------------------------
forall (any_list1:any list) (any_list2:any list), (reverse (any_list1) @ any_list2) = mk_rhs1 (any_list1) (any_list2)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:8.)
=================================================
Progress: 13


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (any_list3) = mk_rhs1 (any_list3) ((Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
(mk_rhs1 (any_list3) ((Nil)) @ (any1::(Nil))) = mk_rhs1 (any_list3) ((any1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (any_list1:any list) (any_list2:any list), (mk_rhs1 (any_list1) ((Nil)) @ any_list2) = mk_rhs1 (any_list1) (any_list2)(rank : 0.)


1st goal of : forall (any_list1:any list) (any_list2:any list), (mk_rhs1 (any_list1) ((Nil)) @ any_list2) = mk_rhs1 (any_list1) (any_list2)

---------------------------------------
forall (any_list1:any list) (any_list2:any list), (mk_rhs1 (any_list1) ((Nil)) @ any_list2) = mk_rhs1 (any_list1) (any_list2)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:8.)
=================================================
Progress: 14


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (any_list1) @ any_list2) = mk_rhs1 (any_list1) (any_list2)

---------------------------------------
forall (any_list1:any list) (any_list2:any list), (reverse (any_list1) @ any_list2) = mk_rhs1 (any_list1) (any_list2)

0 goal(s) more...

2 conjecture(s) more...
>>> induction any_list1(rank : 8.)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (any_list1) @ any_list2) = mk_rhs1 (any_list1) (any_list2)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), (reverse ((Nil)) @ any_list2) = mk_rhs1 ((Nil)) (any_list2)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 15


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (any_list1) @ any_list2) = mk_rhs1 (any_list1) (any_list2)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), (reverse ((Nil)) @ any_list2) = mk_rhs1 ((Nil)) (any_list2)

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (any_list1) @ any_list2) = mk_rhs1 (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (reverse (any_list3) @ any_list2) = mk_rhs1 (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), (reverse ((any1::any_list3)) @ any_list2) = mk_rhs1 ((any1::any_list3)) (any_list2)

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 16


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (any_list1) @ any_list2) = mk_rhs1 (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (reverse (any_list3) @ any_list2) = mk_rhs1 (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), (reverse ((any1::any_list3)) @ any_list2) = mk_rhs1 ((any1::any_list3)) (any_list2)

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (any_list1) @ any_list2) = mk_rhs1 (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (reverse (any_list3) @ any_list2) = mk_rhs1 (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), ((reverse (any_list3) @ (any1::(Nil))) @ any_list2) = mk_rhs1 (any_list3) ((any1::any_list2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro any_list2(rank:7.)
rewrite IH1 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 17


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (any_list1) @ any_list2) = mk_rhs1 (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (reverse (any_list3) @ any_list2) = mk_rhs1 (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), ((reverse (any_list3) @ (any1::(Nil))) @ any_list2) = mk_rhs1 (any_list3) ((any1::any_list2))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any_list2(rank : 7.)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (any_list1) @ any_list2) = mk_rhs1 (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (reverse (any_list3) @ any_list2) = mk_rhs1 (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
---------------------------------------
((reverse (any_list3) @ (any1::(Nil))) @ any_list2) = mk_rhs1 (any_list3) ((any1::any_list2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 18


1st goal of : forall (any_list1:any list) (any_list2:any list), (mk_rhs1 (any_list1) ((Nil)) @ any_list2) = mk_rhs1 (any_list1) (any_list2)

---------------------------------------
forall (any_list1:any list) (any_list2:any list), (mk_rhs1 (any_list1) ((Nil)) @ any_list2) = mk_rhs1 (any_list1) (any_list2)

0 goal(s) more...

2 conjecture(s) more...
>>> induction any_list1(rank : 8.)


1st goal of : forall (any_list1:any list) (any_list2:any list), (mk_rhs1 (any_list1) ((Nil)) @ any_list2) = mk_rhs1 (any_list1) (any_list2)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), (mk_rhs1 ((Nil)) ((Nil)) @ any_list2) = mk_rhs1 ((Nil)) (any_list2)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 19


1st goal of : forall (any_list1:any list) (any_list2:any list), (mk_rhs1 (any_list1) ((Nil)) @ any_list2) = mk_rhs1 (any_list1) (any_list2)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), (mk_rhs1 ((Nil)) ((Nil)) @ any_list2) = mk_rhs1 ((Nil)) (any_list2)

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (any_list1:any list) (any_list2:any list), (mk_rhs1 (any_list1) ((Nil)) @ any_list2) = mk_rhs1 (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (mk_rhs1 (any_list3) ((Nil)) @ any_list2) = mk_rhs1 (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), (mk_rhs1 ((any1::any_list3)) ((Nil)) @ any_list2) = mk_rhs1 ((any1::any_list3)) (any_list2)

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 20


1st goal of : forall (any_list1:any list) (any_list2:any list), (mk_rhs1 (any_list1) ((Nil)) @ any_list2) = mk_rhs1 (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (mk_rhs1 (any_list3) ((Nil)) @ any_list2) = mk_rhs1 (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), (mk_rhs1 ((any1::any_list3)) ((Nil)) @ any_list2) = mk_rhs1 ((any1::any_list3)) (any_list2)

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (any_list1:any list) (any_list2:any list), (mk_rhs1 (any_list1) ((Nil)) @ any_list2) = mk_rhs1 (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (mk_rhs1 (any_list3) ((Nil)) @ any_list2) = mk_rhs1 (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), (mk_rhs1 (any_list3) ((any1::(Nil))) @ any_list2) = mk_rhs1 (any_list3) ((any1::any_list2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
intro any_list2(rank:7.)
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 1(rank:23.)
rewrite <- IH1 in goal at 2(rank:23.)
=================================================
Progress: 21


1st goal of : forall (any_list1:any list) (any_list2:any list), (mk_rhs1 (any_list1) ((Nil)) @ any_list2) = mk_rhs1 (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (mk_rhs1 (any_list3) ((Nil)) @ any_list2) = mk_rhs1 (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), (mk_rhs1 (any_list3) ((any1::(Nil))) @ any_list2) = mk_rhs1 (any_list3) ((any1::any_list2))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any_list2(rank : 7.)


1st goal of : forall (any_list1:any list) (any_list2:any list), (mk_rhs1 (any_list1) ((Nil)) @ any_list2) = mk_rhs1 (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (mk_rhs1 (any_list3) ((Nil)) @ any_list2) = mk_rhs1 (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
---------------------------------------
(mk_rhs1 (any_list3) ((any1::(Nil))) @ any_list2) = mk_rhs1 (any_list3) ((any1::any_list2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 1(rank:23.)
rewrite <- IH1 in goal at 2(rank:23.)
=================================================
Progress: 22


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (any_list1) @ any_list2) = mk_rhs1 (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (reverse (any_list3) @ any_list2) = mk_rhs1 (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), ((reverse (any_list3) @ (any1::(Nil))) @ any_list2) = mk_rhs1 (any_list3) ((any1::any_list2))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 15.)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (any_list1) @ any_list2) = mk_rhs1 (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (reverse (any_list3) @ any_list2) = mk_rhs1 (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), (mk_rhs1 (any_list3) ((any1::(Nil))) @ any_list2) = mk_rhs1 (any_list3) ((any1::any_list2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 2(rank:7.)
=================================================
Progress: 23


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (any_list1) @ any_list2) = mk_rhs1 (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (reverse (any_list3) @ any_list2) = mk_rhs1 (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), (mk_rhs1 (any_list3) ((any1::(Nil))) @ any_list2) = mk_rhs1 (any_list3) ((any1::any_list2))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 7.)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (any_list1) @ any_list2) = mk_rhs1 (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (reverse (any_list3) @ any_list2) = mk_rhs1 (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), (mk_rhs1 (any_list3) ((any1::(Nil))) @ any_list2) = (reverse (any_list3) @ (any1::any_list2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro any_list2(rank:7.)
=================================================
Progress: 24


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (any_list1) @ any_list2) = mk_rhs1 (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (reverse (any_list3) @ any_list2) = mk_rhs1 (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), (mk_rhs1 (any_list3) ((any1::(Nil))) @ any_list2) = (reverse (any_list3) @ (any1::any_list2))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any_list2(rank : 7.)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (any_list1) @ any_list2) = mk_rhs1 (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (reverse (any_list3) @ any_list2) = mk_rhs1 (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
---------------------------------------
(mk_rhs1 (any_list3) ((any1::(Nil))) @ any_list2) = (reverse (any_list3) @ (any1::any_list2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
rewrite <- IH1 in goal at 2
intro any_list2
validate generalize_common_subterm_goal
Prop: (mk_rhs1 ((Nil)) ((5::(Nil))) @ (5::(Nil))) = (reverse ((Nil)) @ (5::(5::(Nil))))
Prop: (mk_rhs1 ((6::(Nil))) ((1::(Nil))) @ (Nil)) = (reverse ((6::(Nil))) @ (1::(Nil)))
Prop: (mk_rhs1 ((Nil)) ((6::(Nil))) @ (5::(Nil))) = (reverse ((Nil)) @ (6::(5::(Nil))))
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list), (mk_rhs1 (any_list2) ((any1::(Nil))) @ any_list1) = (reverse (any_list2) @ (any1::any_list1))
End of Lemma List


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (any_list1) @ any_list2) = mk_rhs1 (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (reverse (any_list3) @ any_list2) = mk_rhs1 (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
---------------------------------------
(mk_rhs1 (any_list3) ((any1::(Nil))) @ any_list2) = (reverse (any_list3) @ (any1::any_list2))

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 25


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (any_list1) @ any_list2) = mk_rhs1 (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (reverse (any_list3) @ any_list2) = mk_rhs1 (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
---------------------------------------
(mk_rhs1 (any_list3) ((any1::(Nil))) @ any_list2) = (reverse (any_list3) @ (any1::any_list2))

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list), (mk_rhs1 (any_list2) ((any1::(Nil))) @ any_list1) = (reverse (any_list2) @ (any1::any_list1))(rank : 0.)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), (mk_rhs1 (any_list2) ((any1::(Nil))) @ any_list1) = (reverse (any_list2) @ (any1::any_list1))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (mk_rhs1 (any_list2) ((any1::(Nil))) @ any_list1) = (reverse (any_list2) @ (any1::any_list1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:10.)
=================================================
Progress: 26


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), (mk_rhs1 (any_list2) ((any1::(Nil))) @ any_list1) = (reverse (any_list2) @ (any1::any_list1))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (mk_rhs1 (any_list2) ((any1::(Nil))) @ any_list1) = (reverse (any_list2) @ (any1::any_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> induction any_list2(rank : 10.)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), (mk_rhs1 (any_list2) ((any1::(Nil))) @ any_list1) = (reverse (any_list2) @ (any1::any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list), (mk_rhs1 ((Nil)) ((any1::(Nil))) @ any_list1) = (reverse ((Nil)) @ (any1::any_list1))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 27


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), (mk_rhs1 (any_list2) ((any1::(Nil))) @ any_list1) = (reverse (any_list2) @ (any1::any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list), (mk_rhs1 ((Nil)) ((any1::(Nil))) @ any_list1) = (reverse ((Nil)) @ (any1::any_list1))

1 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), (mk_rhs1 (any_list2) ((any1::(Nil))) @ any_list1) = (reverse (any_list2) @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), (mk_rhs1 (any_list3) ((any1::(Nil))) @ any_list1) = (reverse (any_list3) @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), (mk_rhs1 ((any2::any_list3)) ((any1::(Nil))) @ any_list1) = (reverse ((any2::any_list3)) @ (any1::any_list1))

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
rewrite <- rhs_lemma4 in goal at 0(rank:9.)
=================================================
Progress: 28


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), (mk_rhs1 (any_list2) ((any1::(Nil))) @ any_list1) = (reverse (any_list2) @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), (mk_rhs1 (any_list3) ((any1::(Nil))) @ any_list1) = (reverse (any_list3) @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), (mk_rhs1 ((any2::any_list3)) ((any1::(Nil))) @ any_list1) = (reverse ((any2::any_list3)) @ (any1::any_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- rhs_lemma4 in goal at 0(rank : 9.)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), (mk_rhs1 (any_list2) ((any1::(Nil))) @ any_list1) = (reverse (any_list2) @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), (mk_rhs1 (any_list3) ((any1::(Nil))) @ any_list1) = (reverse (any_list3) @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), (mk_rhs1 ((any1::(any2::any_list3))) ((Nil)) @ any_list1) = (reverse ((any2::any_list3)) @ (any1::any_list1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
rewrite <- rhs_lemma4 in goal at 0
Prop: (mk_rhs1 ((5::(Nil))) ((Nil)) @ (Nil)) = (reverse ((Nil)) @ (5::(Nil)))
Prop: (mk_rhs1 ((0::(Nil))) ((Nil)) @ (6::(Nil))) = (reverse ((Nil)) @ (0::(6::(Nil))))
Prop: (mk_rhs1 ((0::(Nil))) ((Nil)) @ (Nil)) = (reverse ((Nil)) @ (0::(Nil)))
previous tactics
parent
(any2::any_list3)
lower
Cons(_, any_list3)
upper
@(mk_rhs1(_, Cons(any1, Nil())), any_list1)
remove upper
Cons(any2, any_list3)
remove lower
Cons(any2, _)
remove upper
Cons(any2, Cons(any3, any_list4))
remove lower
Cons(any2, Cons(any3, _))
remove upper
Cons(any2, Cons(any3, Cons(any4, any_list5)))
remove lower
Cons(any2, Cons(any3, Cons(any4, _)))
parent
(any2::any_list3)
lower
Cons(_, any_list3)
upper
@(reverse(_), Cons(any1, any_list1))
remove upper
Cons(any2, any_list3)
remove lower
Cons(any2, _)
remove upper
Cons(any2, Cons(any3, any_list4))
remove lower
Cons(any2, Cons(any3, _))
remove upper
Cons(any2, Cons(any3, Cons(any4, any_list5)))
remove lower
Cons(any2, Cons(any3, Cons(any4, _)))
New Env
let rec mk_lhs3 arg_6 arg_7 =
match (arg_6) with
| Nil -> arg_7
| Cons hd tl -> mk_lhs3 (tl) ((hd::arg_7))
;;
let rec mk_rhs3 arg_8 arg_9 =
match (arg_8) with
| Nil -> arg_9
| Cons hd tl -> mk_rhs3 (tl) ((hd::arg_9))
;;
Lemma List
forall (any_list1:any list), mk_lhs3 ((Nil)) (any_list1) = any_list1
forall (any_list1:any list) (any1:any) (any_list2:any list), mk_lhs3 ((any1::any_list1)) (any_list2) = mk_lhs3 (any_list1) ((any1::any_list2))
forall (any_list1:any list), mk_rhs3 ((Nil)) (any_list1) = any_list1
forall (any_list1:any list) (any1:any) (any_list2:any list), mk_rhs3 ((any1::any_list1)) (any_list2) = mk_rhs3 (any_list1) ((any1::any_list2))
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (mk_rhs1 (mk_lhs3 (any_list3) (any_list2)) ((any1::(Nil))) @ any_list1) = (reverse (mk_rhs3 (any_list3) (any_list2)) @ (any1::any_list1))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), (mk_rhs1 (any_list2) ((any1::(Nil))) @ any_list1) = (reverse (any_list2) @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), (mk_rhs1 (any_list3) ((any1::(Nil))) @ any_list1) = (reverse (any_list3) @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), (mk_rhs1 ((any2::any_list3)) ((any1::(Nil))) @ any_list1) = (reverse ((any2::any_list3)) @ (any1::any_list1))

0 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 29


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), (mk_rhs1 (any_list2) ((any1::(Nil))) @ any_list1) = (reverse (any_list2) @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), (mk_rhs1 (any_list3) ((any1::(Nil))) @ any_list1) = (reverse (any_list3) @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), (mk_rhs1 ((any2::any_list3)) ((any1::(Nil))) @ any_list1) = (reverse ((any2::any_list3)) @ (any1::any_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (mk_rhs1 (mk_lhs3 (any_list3) (any_list2)) ((any1::(Nil))) @ any_list1) = (reverse (mk_rhs3 (any_list3) (any_list2)) @ (any1::any_list1))(rank : 0.)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (mk_rhs1 (mk_lhs3 (any_list3) (any_list2)) ((any1::(Nil))) @ any_list1) = (reverse (mk_rhs3 (any_list3) (any_list2)) @ (any1::any_list1))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (mk_rhs1 (mk_lhs3 (any_list3) (any_list2)) ((any1::(Nil))) @ any_list1) = (reverse (mk_rhs3 (any_list3) (any_list2)) @ (any1::any_list1))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_list3(rank:12.)
=================================================
Progress: 30


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (mk_rhs1 (mk_lhs3 (any_list3) (any_list2)) ((any1::(Nil))) @ any_list1) = (reverse (mk_rhs3 (any_list3) (any_list2)) @ (any1::any_list1))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (mk_rhs1 (mk_lhs3 (any_list3) (any_list2)) ((any1::(Nil))) @ any_list1) = (reverse (mk_rhs3 (any_list3) (any_list2)) @ (any1::any_list1))

0 goal(s) more...

4 conjecture(s) more...
>>> induction any_list3(rank : 12.)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (mk_rhs1 (mk_lhs3 (any_list3) (any_list2)) ((any1::(Nil))) @ any_list1) = (reverse (mk_rhs3 (any_list3) (any_list2)) @ (any1::any_list1))
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (mk_rhs1 (mk_lhs3 ((Nil)) (any_list2)) ((any1::(Nil))) @ any_list1) = (reverse (mk_rhs3 ((Nil)) (any_list2)) @ (any1::any_list1))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- rhs_lemma4 in goal at 0(rank:12.)
=================================================
Progress: 31


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (mk_rhs1 (mk_lhs3 (any_list3) (any_list2)) ((any1::(Nil))) @ any_list1) = (reverse (mk_rhs3 (any_list3) (any_list2)) @ (any1::any_list1))
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (mk_rhs1 (mk_lhs3 ((Nil)) (any_list2)) ((any1::(Nil))) @ any_list1) = (reverse (mk_rhs3 ((Nil)) (any_list2)) @ (any1::any_list1))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- rhs_lemma4 in goal at 0(rank : 12.)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (mk_rhs1 (mk_lhs3 (any_list3) (any_list2)) ((any1::(Nil))) @ any_list1) = (reverse (mk_rhs3 (any_list3) (any_list2)) @ (any1::any_list1))
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (mk_rhs1 ((any1::mk_lhs3 ((Nil)) (any_list2))) ((Nil)) @ any_list1) = (reverse (mk_rhs3 ((Nil)) (any_list2)) @ (any1::any_list1))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
rewrite <- lhs_lemma5 in goal at 1(rank:20.)
rewrite <- lhs_lemma5 in goal at 2(rank:20.)
rewrite <- lhs_lemma5 in goal at 3(rank:20.)
=================================================
Progress: 32


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (any_list1) @ any_list2) = mk_rhs1 (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (reverse (any_list3) @ any_list2) = mk_rhs1 (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), ((reverse (any_list3) @ (any1::(Nil))) @ any_list2) = mk_rhs1 (any_list3) ((any1::any_list2))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 15.)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (any_list1) @ any_list2) = mk_rhs1 (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (reverse (any_list3) @ any_list2) = mk_rhs1 (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), ((reverse (any_list3) @ (any1::(Nil))) @ any_list2) = (reverse (any_list3) @ (any1::any_list2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
Prop: (((Nil) @ (2::(Nil))) @ (Nil)) = ((Nil) @ (2::(Nil)))
Prop: (((4::(Nil)) @ (4::(Nil))) @ (Nil)) = ((4::(Nil)) @ (4::(Nil)))
Prop: (((Nil) @ (0::(Nil))) @ (Nil)) = ((Nil) @ (0::(Nil)))
previous tactics
simpl in goal
parent
(any1::(Nil))
lower
Cons(_, Nil())
upper
@(@(reverse(any_list3), _), any_list2)
remove upper
Cons(any1, Nil())
remove lower
Cons(any1, Nil())
parent
(any1::any_list2)
lower
Cons(_, any_list2)
upper
mk_rhs1(any_list3, _)
remove upper
any_list2
remove lower
any_list2
remove upper
Cons(any1, any_list2)
remove lower
Cons(any1, any_list2)
remove upper
Cons(any2, Cons(any1, any_list2))
remove lower
Cons(any2, Cons(any1, any_list2))
remove upper
Cons(any3, Cons(any2, Cons(any1, any_list2)))
remove lower
Cons(any3, Cons(any2, Cons(any1, any_list2)))
validate generalize_common_subterm_goal
Prop: ((reverse ((Nil)) @ (4::(Nil))) @ (1::(1::(Nil)))) = mk_rhs1 ((Nil)) ((4::(1::(1::(Nil)))))
Prop: ((reverse ((8::(7::(Nil)))) @ (7::(Nil))) @ (0::(Nil))) = mk_rhs1 ((8::(7::(Nil)))) ((7::(0::(Nil))))
Prop: ((reverse ((2::(4::(Nil)))) @ (4::(Nil))) @ (Nil)) = mk_rhs1 ((2::(4::(Nil)))) ((4::(Nil)))
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
End of Lemma List


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (any_list1) @ any_list2) = mk_rhs1 (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (reverse (any_list3) @ any_list2) = mk_rhs1 (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), ((reverse (any_list3) @ (any1::(Nil))) @ any_list2) = (reverse (any_list3) @ (any1::any_list2))

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 33


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (any_list1) @ any_list2) = mk_rhs1 (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (reverse (any_list3) @ any_list2) = mk_rhs1 (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), ((reverse (any_list3) @ (any1::(Nil))) @ any_list2) = (reverse (any_list3) @ (any1::any_list2))

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))(rank : 0.)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:10.)
=================================================
Progress: 34


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> induction any_list2(rank : 10.)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list), (((Nil) @ (any1::(Nil))) @ any_list1) = ((Nil) @ (any1::any_list1))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 35


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list), (((Nil) @ (any1::(Nil))) @ any_list1) = ((Nil) @ (any1::any_list1))

1 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), ((any_list3 @ (any1::(Nil))) @ any_list1) = (any_list3 @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), (((any2::any_list3) @ (any1::(Nil))) @ any_list1) = ((any2::any_list3) @ (any1::any_list1))

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 36


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), ((any_list3 @ (any1::(Nil))) @ any_list1) = (any_list3 @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), (((any2::any_list3) @ (any1::(Nil))) @ any_list1) = ((any2::any_list3) @ (any1::any_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), ((any_list3 @ (any1::(Nil))) @ any_list1) = (any_list3 @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::((any_list3 @ (any1::(Nil))) @ any_list1)) = (any2::(any_list3 @ (any1::any_list1)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 6
intro any1(rank:9.)
rewrite IH1 in goal at 0(rank:17.)
rewrite <- IH1 in goal at 0(rank:17.)
rewrite <- IH1 in goal at 2(rank:17.)
rewrite <- IH1 in goal at 1(rank:25.)
intro any_list1(rank:9.)
=================================================
Progress: 37


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), ((any_list3 @ (any1::(Nil))) @ any_list1) = (any_list3 @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::((any_list3 @ (any1::(Nil))) @ any_list1)) = (any2::(any_list3 @ (any1::any_list1)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any1(rank : 9.)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), ((any_list3 @ (any1::(Nil))) @ any_list1) = (any_list3 @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
any1 : any
---------------------------------------
forall (any_list1:any list), (any2::((any_list3 @ (any1::(Nil))) @ any_list1)) = (any2::(any_list3 @ (any1::any_list1)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
intro any_list1(rank:9.)
rewrite <- IH1 in goal at 0(rank:17.)
rewrite <- IH1 in goal at 1(rank:25.)
rewrite <- IH1 in goal at 2(rank:17.)
rewrite IH1 in goal at 0(rank:17.)
=================================================
Progress: 38


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), ((any_list3 @ (any1::(Nil))) @ any_list1) = (any_list3 @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::((any_list3 @ (any1::(Nil))) @ any_list1)) = (any2::(any_list3 @ (any1::any_list1)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 9.)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), ((any_list3 @ (any1::(Nil))) @ any_list1) = (any_list3 @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
any_list1 : any list
---------------------------------------
forall (any1:any), (any2::((any_list3 @ (any1::(Nil))) @ any_list1)) = (any2::(any_list3 @ (any1::any_list1)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:17.)
rewrite <- IH1 in goal at 0(rank:17.)
rewrite <- IH1 in goal at 2(rank:17.)
rewrite <- IH1 in goal at 1(rank:25.)
=================================================
Progress: 39


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), ((any_list3 @ (any1::(Nil))) @ any_list1) = (any_list3 @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
any1 : any
---------------------------------------
forall (any_list1:any list), (any2::((any_list3 @ (any1::(Nil))) @ any_list1)) = (any2::(any_list3 @ (any1::any_list1)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 9.)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), ((any_list3 @ (any1::(Nil))) @ any_list1) = (any_list3 @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
any1 : any
any_list1 : any list
---------------------------------------
(any2::((any_list3 @ (any1::(Nil))) @ any_list1)) = (any2::(any_list3 @ (any1::any_list1)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:17.)
rewrite <- IH1 in goal at 0(rank:17.)
rewrite <- IH1 in goal at 2(rank:17.)
rewrite <- IH1 in goal at 1(rank:25.)
=================================================
Progress: 40


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (any_list1) @ any_list2) = mk_rhs1 (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (reverse (any_list3) @ any_list2) = mk_rhs1 (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
---------------------------------------
((reverse (any_list3) @ (any1::(Nil))) @ any_list2) = mk_rhs1 (any_list3) ((any1::any_list2))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 15.)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (any_list1) @ any_list2) = mk_rhs1 (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (reverse (any_list3) @ any_list2) = mk_rhs1 (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
---------------------------------------
(mk_rhs1 (any_list3) ((any1::(Nil))) @ any_list2) = mk_rhs1 (any_list3) ((any1::any_list2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list2
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: (mk_rhs1 ((Nil)) ((4::(Nil))) @ (Nil)) = mk_rhs1 ((Nil)) ((4::(Nil)))
Prop: (mk_rhs1 ((Nil)) ((6::(Nil))) @ (Nil)) = mk_rhs1 ((Nil)) ((6::(Nil)))
Prop: (mk_rhs1 ((Nil)) ((7::(Nil))) @ (2::(0::(Nil)))) = mk_rhs1 ((Nil)) ((7::(2::(0::(Nil)))))
previous tactics
simpl in goal
intro any_list2
validate generalize_common_subterm_goal
Prop: ((reverse ((Nil)) @ (1::(Nil))) @ (Nil)) = mk_rhs1 ((Nil)) ((1::(Nil)))
Prop: ((reverse ((Nil)) @ (4::(Nil))) @ (Nil)) = mk_rhs1 ((Nil)) ((4::(Nil)))
Prop: ((reverse ((0::(Nil))) @ (6::(Nil))) @ (Nil)) = mk_rhs1 ((0::(Nil))) ((6::(Nil)))
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list), ((reverse (any_list2) @ (any1::(Nil))) @ any_list1) = mk_rhs1 (any_list2) ((any1::any_list1))
End of Lemma List


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (any_list1) @ any_list2) = mk_rhs1 (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (reverse (any_list3) @ any_list2) = mk_rhs1 (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
---------------------------------------
((reverse (any_list3) @ (any1::(Nil))) @ any_list2) = mk_rhs1 (any_list3) ((any1::any_list2))

0 goal(s) more...

2 conjecture(s) more...
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list), (mk_rhs1 (any_list2) ((any1::(Nil))) @ any_list1) = mk_rhs1 (any_list2) ((any1::any_list1))
End of Lemma List


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (any_list1) @ any_list2) = mk_rhs1 (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (reverse (any_list3) @ any_list2) = mk_rhs1 (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
---------------------------------------
(mk_rhs1 (any_list3) ((any1::(Nil))) @ any_list2) = mk_rhs1 (any_list3) ((any1::any_list2))

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 41


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (any_list1) @ any_list2) = mk_rhs1 (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (reverse (any_list3) @ any_list2) = mk_rhs1 (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
---------------------------------------
((reverse (any_list3) @ (any1::(Nil))) @ any_list2) = mk_rhs1 (any_list3) ((any1::any_list2))

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list), ((reverse (any_list2) @ (any1::(Nil))) @ any_list1) = mk_rhs1 (any_list2) ((any1::any_list1))(rank : 0.)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((reverse (any_list2) @ (any1::(Nil))) @ any_list1) = mk_rhs1 (any_list2) ((any1::any_list1))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), ((reverse (any_list2) @ (any1::(Nil))) @ any_list1) = mk_rhs1 (any_list2) ((any1::any_list1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:10.)
=================================================
Progress: 42


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (any_list1) @ any_list2) = mk_rhs1 (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (reverse (any_list3) @ any_list2) = mk_rhs1 (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
---------------------------------------
(mk_rhs1 (any_list3) ((any1::(Nil))) @ any_list2) = mk_rhs1 (any_list3) ((any1::any_list2))

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list), (mk_rhs1 (any_list2) ((any1::(Nil))) @ any_list1) = mk_rhs1 (any_list2) ((any1::any_list1))(rank : 0.)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), (mk_rhs1 (any_list2) ((any1::(Nil))) @ any_list1) = mk_rhs1 (any_list2) ((any1::any_list1))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (mk_rhs1 (any_list2) ((any1::(Nil))) @ any_list1) = mk_rhs1 (any_list2) ((any1::any_list1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:10.)
=================================================
Progress: 43


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((reverse (any_list2) @ (any1::(Nil))) @ any_list1) = mk_rhs1 (any_list2) ((any1::any_list1))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), ((reverse (any_list2) @ (any1::(Nil))) @ any_list1) = mk_rhs1 (any_list2) ((any1::any_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> induction any_list2(rank : 10.)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((reverse (any_list2) @ (any1::(Nil))) @ any_list1) = mk_rhs1 (any_list2) ((any1::any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list), ((reverse ((Nil)) @ (any1::(Nil))) @ any_list1) = mk_rhs1 ((Nil)) ((any1::any_list1))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 44


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((reverse (any_list2) @ (any1::(Nil))) @ any_list1) = mk_rhs1 (any_list2) ((any1::any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list), ((reverse ((Nil)) @ (any1::(Nil))) @ any_list1) = mk_rhs1 ((Nil)) ((any1::any_list1))

1 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((reverse (any_list2) @ (any1::(Nil))) @ any_list1) = mk_rhs1 (any_list2) ((any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), ((reverse (any_list3) @ (any1::(Nil))) @ any_list1) = mk_rhs1 (any_list3) ((any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), ((reverse ((any2::any_list3)) @ (any1::(Nil))) @ any_list1) = mk_rhs1 ((any2::any_list3)) ((any1::any_list1))

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
rewrite <- rhs_lemma4 in goal at 0(rank:9.)
=================================================
Progress: 45


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((reverse (any_list2) @ (any1::(Nil))) @ any_list1) = mk_rhs1 (any_list2) ((any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), ((reverse (any_list3) @ (any1::(Nil))) @ any_list1) = mk_rhs1 (any_list3) ((any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), ((reverse ((any2::any_list3)) @ (any1::(Nil))) @ any_list1) = mk_rhs1 ((any2::any_list3)) ((any1::any_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- rhs_lemma4 in goal at 0(rank : 9.)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((reverse (any_list2) @ (any1::(Nil))) @ any_list1) = mk_rhs1 (any_list2) ((any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), ((reverse (any_list3) @ (any1::(Nil))) @ any_list1) = mk_rhs1 (any_list3) ((any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), ((reverse ((any2::any_list3)) @ (any1::(Nil))) @ any_list1) = mk_rhs1 ((any1::(any2::any_list3))) (any_list1)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
rewrite <- rhs_lemma4 in goal at 0
Prop: ((reverse ((5::(Nil))) @ (5::(Nil))) @ (6::(Nil))) = mk_rhs1 ((5::(5::(Nil)))) ((6::(Nil)))
Prop: ((reverse ((1::(Nil))) @ (8::(Nil))) @ (Nil)) = mk_rhs1 ((8::(1::(Nil)))) ((Nil))
Prop: ((reverse ((5::(5::(0::(Nil))))) @ (8::(Nil))) @ (Nil)) = mk_rhs1 ((8::(5::(5::(0::(Nil)))))) ((Nil))
previous tactics
parent
(any2::any_list3)
lower
Cons(_, any_list3)
upper
@(@(reverse(_), Cons(any1, Nil())), any_list1)
remove upper
Cons(any2, any_list3)
remove lower
Cons(any2, _)
remove upper
Cons(any2, Cons(any3, any_list4))
remove lower
Cons(any2, Cons(any3, _))
remove upper
Cons(any2, Cons(any3, Cons(any4, any_list5)))
remove lower
Cons(any2, Cons(any3, Cons(any4, _)))
parent
(any2::any_list3)
lower
Cons(_, any_list3)
upper
mk_rhs1(_, Cons(any1, any_list1))
remove upper
Cons(any2, any_list3)
remove lower
Cons(any2, _)
remove upper
Cons(any2, Cons(any3, any_list4))
remove lower
Cons(any2, Cons(any3, _))
remove upper
Cons(any2, Cons(any3, Cons(any4, any_list5)))
remove lower
Cons(any2, Cons(any3, Cons(any4, _)))
New Env
let rec mk_lhs3 arg_12 arg_13 =
match (arg_12) with
| Nil -> arg_13
| Cons hd tl -> mk_lhs3 (tl) ((hd::arg_13))
;;
let rec mk_rhs3 arg_14 arg_15 =
match (arg_14) with
| Nil -> arg_15
| Cons hd tl -> mk_rhs3 (tl) ((hd::arg_15))
;;
Lemma List
forall (any_list1:any list), mk_lhs3 ((Nil)) (any_list1) = any_list1
forall (any_list1:any list) (any1:any) (any_list2:any list), mk_lhs3 ((any1::any_list1)) (any_list2) = mk_lhs3 (any_list1) ((any1::any_list2))
forall (any_list1:any list), mk_rhs3 ((Nil)) (any_list1) = any_list1
forall (any_list1:any list) (any1:any) (any_list2:any list), mk_rhs3 ((any1::any_list1)) (any_list2) = mk_rhs3 (any_list1) ((any1::any_list2))
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), ((reverse (mk_lhs3 (any_list3) (any_list2)) @ (any1::(Nil))) @ any_list1) = mk_rhs1 (mk_rhs3 (any_list3) (any_list2)) ((any1::any_list1))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((reverse (any_list2) @ (any1::(Nil))) @ any_list1) = mk_rhs1 (any_list2) ((any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), ((reverse (any_list3) @ (any1::(Nil))) @ any_list1) = mk_rhs1 (any_list3) ((any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), ((reverse ((any2::any_list3)) @ (any1::(Nil))) @ any_list1) = mk_rhs1 ((any2::any_list3)) ((any1::any_list1))

0 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 46


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((reverse (any_list2) @ (any1::(Nil))) @ any_list1) = mk_rhs1 (any_list2) ((any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), ((reverse (any_list3) @ (any1::(Nil))) @ any_list1) = mk_rhs1 (any_list3) ((any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), ((reverse ((any2::any_list3)) @ (any1::(Nil))) @ any_list1) = mk_rhs1 ((any2::any_list3)) ((any1::any_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), ((reverse (mk_lhs3 (any_list3) (any_list2)) @ (any1::(Nil))) @ any_list1) = mk_rhs1 (mk_rhs3 (any_list3) (any_list2)) ((any1::any_list1))(rank : 0.)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), ((reverse (mk_lhs3 (any_list3) (any_list2)) @ (any1::(Nil))) @ any_list1) = mk_rhs1 (mk_rhs3 (any_list3) (any_list2)) ((any1::any_list1))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), ((reverse (mk_lhs3 (any_list3) (any_list2)) @ (any1::(Nil))) @ any_list1) = mk_rhs1 (mk_rhs3 (any_list3) (any_list2)) ((any1::any_list1))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_list3(rank:12.)
=================================================
Progress: 47


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), (mk_rhs1 (any_list2) ((any1::(Nil))) @ any_list1) = mk_rhs1 (any_list2) ((any1::any_list1))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (mk_rhs1 (any_list2) ((any1::(Nil))) @ any_list1) = mk_rhs1 (any_list2) ((any1::any_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> induction any_list2(rank : 10.)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), (mk_rhs1 (any_list2) ((any1::(Nil))) @ any_list1) = mk_rhs1 (any_list2) ((any1::any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list), (mk_rhs1 ((Nil)) ((any1::(Nil))) @ any_list1) = mk_rhs1 ((Nil)) ((any1::any_list1))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 48


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), (mk_rhs1 (any_list2) ((any1::(Nil))) @ any_list1) = mk_rhs1 (any_list2) ((any1::any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list), (mk_rhs1 ((Nil)) ((any1::(Nil))) @ any_list1) = mk_rhs1 ((Nil)) ((any1::any_list1))

1 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), (mk_rhs1 (any_list2) ((any1::(Nil))) @ any_list1) = mk_rhs1 (any_list2) ((any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), (mk_rhs1 (any_list3) ((any1::(Nil))) @ any_list1) = mk_rhs1 (any_list3) ((any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), (mk_rhs1 ((any2::any_list3)) ((any1::(Nil))) @ any_list1) = mk_rhs1 ((any2::any_list3)) ((any1::any_list1))

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
rewrite <- rhs_lemma4 in goal at 0(rank:9.)
=================================================
Progress: 49


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), (mk_rhs1 (any_list2) ((any1::(Nil))) @ any_list1) = mk_rhs1 (any_list2) ((any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), (mk_rhs1 (any_list3) ((any1::(Nil))) @ any_list1) = mk_rhs1 (any_list3) ((any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), (mk_rhs1 ((any2::any_list3)) ((any1::(Nil))) @ any_list1) = mk_rhs1 ((any2::any_list3)) ((any1::any_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- rhs_lemma4 in goal at 0(rank : 9.)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), (mk_rhs1 (any_list2) ((any1::(Nil))) @ any_list1) = mk_rhs1 (any_list2) ((any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), (mk_rhs1 (any_list3) ((any1::(Nil))) @ any_list1) = mk_rhs1 (any_list3) ((any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), (mk_rhs1 ((any1::(any2::any_list3))) ((Nil)) @ any_list1) = mk_rhs1 ((any1::(any2::any_list3))) (any_list1)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
rewrite <- rhs_lemma4 in goal at 0
Prop: (mk_rhs1 ((Nil)) ((Nil)) @ (Nil)) = mk_rhs1 ((Nil)) ((Nil))
Prop: (mk_rhs1 ((0::(Nil))) ((Nil)) @ (Nil)) = mk_rhs1 ((0::(Nil))) ((Nil))
Prop: (mk_rhs1 ((0::(Nil))) ((Nil)) @ (Nil)) = mk_rhs1 ((0::(Nil))) ((Nil))
previous tactics
parent
(any2::any_list3)
lower
Cons(_, any_list3)
upper
@(mk_rhs1(_, Cons(any1, Nil())), any_list1)
remove upper
Cons(any2, any_list3)
remove lower
Cons(any2, _)
remove upper
Cons(any2, Cons(any3, any_list4))
remove lower
Cons(any2, Cons(any3, _))
remove upper
Cons(any2, Cons(any3, Cons(any4, any_list5)))
remove lower
Cons(any2, Cons(any3, Cons(any4, _)))
parent
(any2::any_list3)
lower
Cons(_, any_list3)
upper
mk_rhs1(_, Cons(any1, any_list1))
remove upper
Cons(any2, any_list3)
remove lower
Cons(any2, _)
remove upper
Cons(any2, Cons(any3, any_list4))
remove lower
Cons(any2, Cons(any3, _))
remove upper
Cons(any2, Cons(any3, Cons(any4, any_list5)))
remove lower
Cons(any2, Cons(any3, Cons(any4, _)))
New Env
let rec mk_lhs3 arg_17 arg_18 =
match (arg_17) with
| Nil -> arg_18
| Cons hd tl -> mk_lhs3 (tl) ((hd::arg_18))
;;
let rec mk_rhs3 arg_19 arg_20 =
match (arg_19) with
| Nil -> arg_20
| Cons hd tl -> mk_rhs3 (tl) ((hd::arg_20))
;;
Lemma List
forall (any_list1:any list), mk_lhs3 ((Nil)) (any_list1) = any_list1
forall (any_list1:any list) (any1:any) (any_list2:any list), mk_lhs3 ((any1::any_list1)) (any_list2) = mk_lhs3 (any_list1) ((any1::any_list2))
forall (any_list1:any list), mk_rhs3 ((Nil)) (any_list1) = any_list1
forall (any_list1:any list) (any1:any) (any_list2:any list), mk_rhs3 ((any1::any_list1)) (any_list2) = mk_rhs3 (any_list1) ((any1::any_list2))
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (mk_rhs1 (mk_lhs3 (any_list3) (any_list2)) ((any1::(Nil))) @ any_list1) = mk_rhs1 (mk_rhs3 (any_list3) (any_list2)) ((any1::any_list1))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), (mk_rhs1 (any_list2) ((any1::(Nil))) @ any_list1) = mk_rhs1 (any_list2) ((any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), (mk_rhs1 (any_list3) ((any1::(Nil))) @ any_list1) = mk_rhs1 (any_list3) ((any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), (mk_rhs1 ((any2::any_list3)) ((any1::(Nil))) @ any_list1) = mk_rhs1 ((any2::any_list3)) ((any1::any_list1))

0 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 50


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), (mk_rhs1 (any_list2) ((any1::(Nil))) @ any_list1) = mk_rhs1 (any_list2) ((any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), (mk_rhs1 (any_list3) ((any1::(Nil))) @ any_list1) = mk_rhs1 (any_list3) ((any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), (mk_rhs1 ((any2::any_list3)) ((any1::(Nil))) @ any_list1) = mk_rhs1 ((any2::any_list3)) ((any1::any_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (mk_rhs1 (mk_lhs3 (any_list3) (any_list2)) ((any1::(Nil))) @ any_list1) = mk_rhs1 (mk_rhs3 (any_list3) (any_list2)) ((any1::any_list1))(rank : 0.)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (mk_rhs1 (mk_lhs3 (any_list3) (any_list2)) ((any1::(Nil))) @ any_list1) = mk_rhs1 (mk_rhs3 (any_list3) (any_list2)) ((any1::any_list1))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (mk_rhs1 (mk_lhs3 (any_list3) (any_list2)) ((any1::(Nil))) @ any_list1) = mk_rhs1 (mk_rhs3 (any_list3) (any_list2)) ((any1::any_list1))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_list3(rank:12.)
=================================================
Progress: 51


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), ((reverse (mk_lhs3 (any_list3) (any_list2)) @ (any1::(Nil))) @ any_list1) = mk_rhs1 (mk_rhs3 (any_list3) (any_list2)) ((any1::any_list1))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), ((reverse (mk_lhs3 (any_list3) (any_list2)) @ (any1::(Nil))) @ any_list1) = mk_rhs1 (mk_rhs3 (any_list3) (any_list2)) ((any1::any_list1))

0 goal(s) more...

4 conjecture(s) more...
>>> induction any_list3(rank : 12.)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), ((reverse (mk_lhs3 (any_list3) (any_list2)) @ (any1::(Nil))) @ any_list1) = mk_rhs1 (mk_rhs3 (any_list3) (any_list2)) ((any1::any_list1))
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), ((reverse (mk_lhs3 ((Nil)) (any_list2)) @ (any1::(Nil))) @ any_list1) = mk_rhs1 (mk_rhs3 ((Nil)) (any_list2)) ((any1::any_list1))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- rhs_lemma4 in goal at 0(rank:12.)
=================================================
Progress: 52


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (mk_rhs1 (mk_lhs3 (any_list3) (any_list2)) ((any1::(Nil))) @ any_list1) = mk_rhs1 (mk_rhs3 (any_list3) (any_list2)) ((any1::any_list1))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (mk_rhs1 (mk_lhs3 (any_list3) (any_list2)) ((any1::(Nil))) @ any_list1) = mk_rhs1 (mk_rhs3 (any_list3) (any_list2)) ((any1::any_list1))

0 goal(s) more...

4 conjecture(s) more...
>>> induction any_list3(rank : 12.)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (mk_rhs1 (mk_lhs3 (any_list3) (any_list2)) ((any1::(Nil))) @ any_list1) = mk_rhs1 (mk_rhs3 (any_list3) (any_list2)) ((any1::any_list1))
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (mk_rhs1 (mk_lhs3 ((Nil)) (any_list2)) ((any1::(Nil))) @ any_list1) = mk_rhs1 (mk_rhs3 ((Nil)) (any_list2)) ((any1::any_list1))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite <- rhs_lemma4 in goal at 0(rank:12.)
=================================================
Progress: 53


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), ((reverse (mk_lhs3 (any_list3) (any_list2)) @ (any1::(Nil))) @ any_list1) = mk_rhs1 (mk_rhs3 (any_list3) (any_list2)) ((any1::any_list1))
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), ((reverse (mk_lhs3 ((Nil)) (any_list2)) @ (any1::(Nil))) @ any_list1) = mk_rhs1 (mk_rhs3 ((Nil)) (any_list2)) ((any1::any_list1))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- rhs_lemma4 in goal at 0(rank : 12.)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), ((reverse (mk_lhs3 (any_list3) (any_list2)) @ (any1::(Nil))) @ any_list1) = mk_rhs1 (mk_rhs3 (any_list3) (any_list2)) ((any1::any_list1))
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), ((reverse (mk_lhs3 ((Nil)) (any_list2)) @ (any1::(Nil))) @ any_list1) = mk_rhs1 ((any1::mk_rhs3 ((Nil)) (any_list2))) (any_list1)

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
rewrite <- lhs_lemma5 in goal at 1(rank:20.)
rewrite <- lhs_lemma5 in goal at 2(rank:20.)
rewrite <- lhs_lemma5 in goal at 3(rank:20.)
=================================================
Progress: 54


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (mk_rhs1 (mk_lhs3 (any_list3) (any_list2)) ((any1::(Nil))) @ any_list1) = mk_rhs1 (mk_rhs3 (any_list3) (any_list2)) ((any1::any_list1))
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (mk_rhs1 (mk_lhs3 ((Nil)) (any_list2)) ((any1::(Nil))) @ any_list1) = mk_rhs1 (mk_rhs3 ((Nil)) (any_list2)) ((any1::any_list1))

1 goal(s) more...

4 conjecture(s) more...
>>> rewrite <- rhs_lemma4 in goal at 0(rank : 12.)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (any_list3:any list), (mk_rhs1 (mk_lhs3 (any_list3) (any_list2)) ((any1::(Nil))) @ any_list1) = mk_rhs1 (mk_rhs3 (any_list3) (any_list2)) ((any1::any_list1))
any_list3 : any list
Base1 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), (mk_rhs1 ((any1::mk_lhs3 ((Nil)) (any_list2))) ((Nil)) @ any_list1) = mk_rhs1 ((any1::mk_rhs3 ((Nil)) (any_list2))) (any_list1)

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
rewrite <- lhs_lemma5 in goal at 1(rank:20.)
rewrite <- lhs_lemma5 in goal at 2(rank:20.)
rewrite <- lhs_lemma5 in goal at 3(rank:20.)
=================================================
Progress: 55


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (any_list1) @ any_list2) = mk_rhs1 (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (reverse (any_list3) @ any_list2) = mk_rhs1 (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
---------------------------------------
((reverse (any_list3) @ (any1::(Nil))) @ any_list2) = mk_rhs1 (any_list3) ((any1::any_list2))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 15.)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (any_list1) @ any_list2) = mk_rhs1 (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (reverse (any_list3) @ any_list2) = mk_rhs1 (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
---------------------------------------
((reverse (any_list3) @ (any1::(Nil))) @ any_list2) = (reverse (any_list3) @ (any1::any_list2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list2
rewrite <- IH1 in goal at 0
Prop: (((4::(Nil)) @ (6::(Nil))) @ (Nil)) = ((4::(Nil)) @ (6::(Nil)))
Prop: (((0::(Nil)) @ (0::(Nil))) @ (Nil)) = ((0::(Nil)) @ (0::(Nil)))
Prop: (((Nil) @ (3::(Nil))) @ (Nil)) = ((Nil) @ (3::(Nil)))
previous tactics
simpl in goal
intro any_list2
validate generalize_common_subterm_goal
Prop: ((reverse ((Nil)) @ (6::(Nil))) @ (Nil)) = mk_rhs1 ((Nil)) ((6::(Nil)))
Prop: ((reverse ((3::(Nil))) @ (5::(Nil))) @ (Nil)) = mk_rhs1 ((3::(Nil))) ((5::(Nil)))
Prop: ((reverse ((Nil)) @ (0::(Nil))) @ (5::(Nil))) = mk_rhs1 ((Nil)) ((0::(5::(Nil))))
=================================================
Progress: 56


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), ((any_list3 @ (any1::(Nil))) @ any_list1) = (any_list3 @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::((any_list3 @ (any1::(Nil))) @ any_list1)) = (any2::(any_list3 @ (any1::any_list1)))

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 17.)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), ((any_list3 @ (any1::(Nil))) @ any_list1) = (any_list3 @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::(any_list3 @ (any1::any_list1))) = (any2::(any_list3 @ (any1::any_list1)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 57


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), ((any_list3 @ (any1::(Nil))) @ any_list1) = (any_list3 @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::(any_list3 @ (any1::any_list1))) = (any2::(any_list3 @ (any1::any_list1)))

0 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (any_list1) @ any_list2) = mk_rhs1 (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (reverse (any_list3) @ any_list2) = mk_rhs1 (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), ((reverse (any_list3) @ (any1::(Nil))) @ any_list2) = (reverse (any_list3) @ (any1::any_list2))

0 goal(s) more...

2 conjecture(s) more...
original goal
forall (any_list1:any list) (any_list2:any list), (reverse (any_list1) @ any_list2) = mk_rhs1 (any_list1) (any_list2)
lemma
forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
tactics
assert forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
induction any_list2
reflexivity
simpl in goal
rewrite IH1 in goal at 0
reflexivity
Deduplication: 15
Tactic List : 6
intro any_list2(rank:7.)
rewrite lemma5 in goal at 0(rank:15.)
rewrite <- lemma5 in goal at 0(rank:15.)
rewrite <- lemma5 in goal at 2(rank:15.)
rewrite <- lemma5 in goal at 1(rank:23.)
rewrite IH1 in goal at 1(rank:23.)
=================================================
Progress: 58


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (any_list1) @ any_list2) = mk_rhs1 (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (reverse (any_list3) @ any_list2) = mk_rhs1 (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), ((reverse (any_list3) @ (any1::(Nil))) @ any_list2) = (reverse (any_list3) @ (any1::any_list2))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any_list2(rank : 7.)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (any_list1) @ any_list2) = mk_rhs1 (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (reverse (any_list3) @ any_list2) = mk_rhs1 (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
---------------------------------------
((reverse (any_list3) @ (any1::(Nil))) @ any_list2) = (reverse (any_list3) @ (any1::any_list2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite lemma5 in goal at 0(rank:15.)
rewrite <- lemma5 in goal at 0(rank:15.)
rewrite <- lemma5 in goal at 1(rank:23.)
rewrite <- lemma5 in goal at 2(rank:15.)
rewrite IH1 in goal at 1(rank:23.)
=================================================
Progress: 59


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (any_list1) @ any_list2) = mk_rhs1 (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (reverse (any_list3) @ any_list2) = mk_rhs1 (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), ((reverse (any_list3) @ (any1::(Nil))) @ any_list2) = (reverse (any_list3) @ (any1::any_list2))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma5 in goal at 0(rank : 15.)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (any_list1) @ any_list2) = mk_rhs1 (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (reverse (any_list3) @ any_list2) = mk_rhs1 (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), (reverse (any_list3) @ (any1::any_list2)) = (reverse (any_list3) @ (any1::any_list2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 60


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (any_list1) @ any_list2) = mk_rhs1 (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), (reverse (any_list3) @ any_list2) = mk_rhs1 (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), (reverse (any_list3) @ (any1::any_list2)) = (reverse (any_list3) @ (any1::any_list2))

0 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (any_list3) = mk_rhs1 (any_list3) ((Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
(reverse (any_list3) @ (any1::(Nil))) = mk_rhs1 (any_list3) ((any1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
original goal
forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
lemma
forall (any_list1:any list) (any_list2:any list), (reverse (any_list1) @ any_list2) = mk_rhs1 (any_list1) (any_list2)
tactics
assert forall (any_list1:any list) (any_list2:any list), (reverse (any_list1) @ any_list2) = mk_rhs1 (any_list1) (any_list2)
induction any_list1
reflexivity
simpl in goal
rewrite <- IH1 in goal at 0
assert forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
induction any_list2
reflexivity
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma5 in goal at 0
reflexivity
Deduplication: 18
Tactic List : 4
rewrite lemma6 in goal at 0(rank:14.)
rewrite IH1 in goal at 0(rank:22.)
rewrite <- lemma6 in goal at 0(rank:14.)
rewrite <- lemma5 in goal at 0(rank:22.)
=================================================
Progress: 61


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (any_list3) = mk_rhs1 (any_list3) ((Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
(reverse (any_list3) @ (any1::(Nil))) = mk_rhs1 (any_list3) ((any1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma6 in goal at 0(rank : 14.)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (any_list3) = mk_rhs1 (any_list3) ((Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
mk_rhs1 (any_list3) ((any1::(Nil))) = mk_rhs1 (any_list3) ((any1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5.)
=================================================
Progress: 62


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (any_list3) = mk_rhs1 (any_list3) ((Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
mk_rhs1 (any_list3) ((any1::(Nil))) = mk_rhs1 (any_list3) ((any1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5.)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (any_list2)) = mk_rhs1 (any_list2) (any_list3)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), reverse (qreva ((any1::any_list3)) (any_list2)) = mk_rhs1 (any_list2) ((any1::any_list3))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 10
Tactic List : 1
rewrite <- rhs_lemma4 in goal at 0(rank:5.)
=================================================
Progress: 63


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (any_list2)) = mk_rhs1 (any_list2) (any_list3)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), reverse (qreva ((any1::any_list3)) (any_list2)) = mk_rhs1 (any_list2) ((any1::any_list3))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- rhs_lemma4 in goal at 0(rank : 5.)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (any_list2)) = mk_rhs1 (any_list2) (any_list3)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), reverse (qreva ((any1::any_list3)) (any_list2)) = mk_rhs1 ((any1::any_list2)) (any_list3)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- lemma6 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
=================================================
Progress: 64


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (any_list2)) = mk_rhs1 (any_list2) (any_list3)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), reverse (qreva ((any1::any_list3)) (any_list2)) = mk_rhs1 ((any1::any_list2)) (any_list3)

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 0(rank : 13.)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (any_list2)) = mk_rhs1 (any_list2) (any_list3)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), reverse (qreva ((any1::any_list3)) (any_list2)) = (reverse ((any1::any_list2)) @ any_list3)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 65


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (any_list2)) = mk_rhs1 (any_list2) (any_list3)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), reverse (qreva ((any1::any_list3)) (any_list2)) = (reverse ((any1::any_list2)) @ any_list3)

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (any_list2)) = mk_rhs1 (any_list2) (any_list3)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), reverse (qreva (any_list3) ((any1::any_list2))) = ((reverse (any_list2) @ (any1::(Nil))) @ any_list3)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite lemma5 in goal at 0(rank:13.)
induction any_list2(rank:14.)
rewrite IH1 in goal at 0(rank:21.)
rewrite <- lemma5 in goal at 0(rank:21.)
rewrite lemma6 in goal at 0(rank:21.)
=================================================
Progress: 66


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (any_list2)) = mk_rhs1 (any_list2) (any_list3)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), reverse (qreva (any_list3) ((any1::any_list2))) = ((reverse (any_list2) @ (any1::(Nil))) @ any_list3)

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma5 in goal at 0(rank : 13.)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (any_list2)) = mk_rhs1 (any_list2) (any_list3)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), reverse (qreva (any_list3) ((any1::any_list2))) = (reverse (any_list2) @ (any1::any_list3))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction any_list2(rank:14.)
rewrite IH1 in goal at 0(rank:21.)
=================================================
Progress: 67


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (any_list2)) = mk_rhs1 (any_list2) (any_list3)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), reverse (qreva (any_list3) ((any1::any_list2))) = ((reverse (any_list2) @ (any1::(Nil))) @ any_list3)

0 goal(s) more...

1 conjecture(s) more...
>>> induction any_list2(rank : 14.)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (any_list2)) = mk_rhs1 (any_list2) (any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
reverse (qreva (any_list3) ((any1::(Nil)))) = ((reverse ((Nil)) @ (any1::(Nil))) @ any_list3)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 68


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (any_list2)) = mk_rhs1 (any_list2) (any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
reverse (qreva (any_list3) ((any1::(Nil)))) = ((reverse ((Nil)) @ (any1::(Nil))) @ any_list3)

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (any_list2)) = mk_rhs1 (any_list2) (any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
reverse (qreva (any_list3) ((any1::(Nil)))) = (any1::any_list3)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:6.)
=================================================
Progress: 69


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (any_list2)) = mk_rhs1 (any_list2) (any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
reverse (qreva (any_list3) ((any1::(Nil)))) = (any1::any_list3)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 6.)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (any_list2)) = mk_rhs1 (any_list2) (any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
mk_rhs1 ((any1::(Nil))) (any_list3) = (any1::any_list3)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5.)
=================================================
Progress: 70


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (any_list2)) = mk_rhs1 (any_list2) (any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
mk_rhs1 ((any1::(Nil))) (any_list3) = (any1::any_list3)

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5.)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (any_list2)) = mk_rhs1 (any_list2) (any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : reverse (qreva (any_list3) ((any1::any_list4))) = ((reverse (any_list4) @ (any1::(Nil))) @ any_list3)
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
reverse (qreva (any_list3) ((any1::(any2::any_list4)))) = ((reverse ((any2::any_list4)) @ (any1::(Nil))) @ any_list3)

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 71


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (any_list2)) = mk_rhs1 (any_list2) (any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : reverse (qreva (any_list3) ((any1::any_list4))) = ((reverse (any_list4) @ (any1::(Nil))) @ any_list3)
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
reverse (qreva (any_list3) ((any1::(any2::any_list4)))) = ((reverse ((any2::any_list4)) @ (any1::(Nil))) @ any_list3)

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (any_list2)) = mk_rhs1 (any_list2) (any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : reverse (qreva (any_list3) ((any1::any_list4))) = ((reverse (any_list4) @ (any1::(Nil))) @ any_list3)
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
reverse (qreva (any_list3) ((any1::(any2::any_list4)))) = (((reverse (any_list4) @ (any2::(Nil))) @ (any1::(Nil))) @ any_list3)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
rewrite lemma5 in goal at 0(rank:13.)
rewrite lemma5 in goal at 2(rank:13.)
rewrite lemma6 in goal at 0(rank:21.)
rewrite <- lemma5 in goal at 0(rank:21.)
rewrite <- lemma5 in goal at 2(rank:21.)
rewrite IH1 in goal at 0(rank:21.)
=================================================
Progress: 72


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (any_list2)) = mk_rhs1 (any_list2) (any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : reverse (qreva (any_list3) ((any1::any_list4))) = ((reverse (any_list4) @ (any1::(Nil))) @ any_list3)
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
reverse (qreva (any_list3) ((any1::(any2::any_list4)))) = (((reverse (any_list4) @ (any2::(Nil))) @ (any1::(Nil))) @ any_list3)

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma5 in goal at 0(rank : 13.)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (any_list2)) = mk_rhs1 (any_list2) (any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : reverse (qreva (any_list3) ((any1::any_list4))) = ((reverse (any_list4) @ (any1::(Nil))) @ any_list3)
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
reverse (qreva (any_list3) ((any1::(any2::any_list4)))) = ((reverse (any_list4) @ (any2::(Nil))) @ (any1::any_list3))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite lemma5 in goal at 0(rank:13.)
rewrite IH1 in goal at 0(rank:21.)
rewrite lemma6 in goal at 0(rank:21.)
rewrite <- lemma5 in goal at 2(rank:21.)
=================================================
Progress: 73


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (any_list2)) = mk_rhs1 (any_list2) (any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : reverse (qreva (any_list3) ((any1::any_list4))) = ((reverse (any_list4) @ (any1::(Nil))) @ any_list3)
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
reverse (qreva (any_list3) ((any1::(any2::any_list4)))) = (((reverse (any_list4) @ (any2::(Nil))) @ (any1::(Nil))) @ any_list3)

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma5 in goal at 2(rank : 13.)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (any_list2)) = mk_rhs1 (any_list2) (any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : reverse (qreva (any_list3) ((any1::any_list4))) = ((reverse (any_list4) @ (any1::(Nil))) @ any_list3)
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
reverse (qreva (any_list3) ((any1::(any2::any_list4)))) = ((reverse (any_list4) @ (any2::(any1::(Nil)))) @ any_list3)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:21.)
rewrite lemma6 in goal at 0(rank:21.)
=================================================
Progress: 74


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (any_list2)) = mk_rhs1 (any_list2) (any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : reverse (qreva (any_list3) ((any1::any_list4))) = ((reverse (any_list4) @ (any1::(Nil))) @ any_list3)
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
reverse (qreva (any_list3) ((any1::(any2::any_list4)))) = ((reverse (any_list4) @ (any2::(Nil))) @ (any1::any_list3))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma5 in goal at 0(rank : 13.)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (any_list2)) = mk_rhs1 (any_list2) (any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : reverse (qreva (any_list3) ((any1::any_list4))) = ((reverse (any_list4) @ (any1::(Nil))) @ any_list3)
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
reverse (qreva (any_list3) ((any1::(any2::any_list4)))) = (reverse (any_list4) @ (any2::(any1::any_list3)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:21.)
rewrite lemma6 in goal at 0(rank:21.)
=================================================
Progress: 75


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (any_list2)) = mk_rhs1 (any_list2) (any_list3)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), reverse (qreva (any_list3) ((any1::any_list2))) = (reverse (any_list2) @ (any1::any_list3))

0 goal(s) more...

1 conjecture(s) more...
>>> induction any_list2(rank : 14.)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (any_list2)) = mk_rhs1 (any_list2) (any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
reverse (qreva (any_list3) ((any1::(Nil)))) = (reverse ((Nil)) @ (any1::any_list3))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 76


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (any_list2)) = mk_rhs1 (any_list2) (any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
reverse (qreva (any_list3) ((any1::(Nil)))) = (reverse ((Nil)) @ (any1::any_list3))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (any_list2)) = mk_rhs1 (any_list2) (any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
reverse (qreva (any_list3) ((any1::(Nil)))) = (any1::any_list3)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:6.)
=================================================
Progress: 77


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (any_list2)) = mk_rhs1 (any_list2) (any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
reverse (qreva (any_list3) ((any1::(Nil)))) = (any1::any_list3)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 6.)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (any_list2)) = mk_rhs1 (any_list2) (any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
mk_rhs1 ((any1::(Nil))) (any_list3) = (any1::any_list3)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5.)
=================================================
Progress: 78


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (any_list2)) = mk_rhs1 (any_list2) (any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
mk_rhs1 ((any1::(Nil))) (any_list3) = (any1::any_list3)

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5.)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (any_list2)) = mk_rhs1 (any_list2) (any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : reverse (qreva (any_list3) ((any1::any_list4))) = (reverse (any_list4) @ (any1::any_list3))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
reverse (qreva (any_list3) ((any1::(any2::any_list4)))) = (reverse ((any2::any_list4)) @ (any1::any_list3))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 79


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (any_list2)) = mk_rhs1 (any_list2) (any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : reverse (qreva (any_list3) ((any1::any_list4))) = (reverse (any_list4) @ (any1::any_list3))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
reverse (qreva (any_list3) ((any1::(any2::any_list4)))) = (reverse ((any2::any_list4)) @ (any1::any_list3))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (any_list2)) = mk_rhs1 (any_list2) (any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : reverse (qreva (any_list3) ((any1::any_list4))) = (reverse (any_list4) @ (any1::any_list3))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
reverse (qreva (any_list3) ((any1::(any2::any_list4)))) = ((reverse (any_list4) @ (any2::(Nil))) @ (any1::any_list3))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite lemma5 in goal at 0(rank:13.)
rewrite lemma6 in goal at 0(rank:21.)
rewrite <- lemma5 in goal at 0(rank:21.)
rewrite <- lemma5 in goal at 2(rank:21.)
rewrite IH1 in goal at 0(rank:21.)
=================================================
Progress: 80


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (any_list2)) = mk_rhs1 (any_list2) (any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : reverse (qreva (any_list3) ((any1::any_list4))) = (reverse (any_list4) @ (any1::any_list3))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
reverse (qreva (any_list3) ((any1::(any2::any_list4)))) = ((reverse (any_list4) @ (any2::(Nil))) @ (any1::any_list3))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma5 in goal at 0(rank : 13.)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (any_list2)) = mk_rhs1 (any_list2) (any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : reverse (qreva (any_list3) ((any1::any_list4))) = (reverse (any_list4) @ (any1::any_list3))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
reverse (qreva (any_list3) ((any1::(any2::any_list4)))) = (reverse (any_list4) @ (any2::(any1::any_list3)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:21.)
rewrite lemma6 in goal at 0(rank:21.)
=================================================
Progress: 81


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (any_list2)) = mk_rhs1 (any_list2) (any_list3)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), reverse (qreva ((any1::any_list3)) (any_list2)) = mk_rhs1 ((any1::any_list2)) (any_list3)

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 21.)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (any_list2)) = mk_rhs1 (any_list2) (any_list3)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), reverse (qreva ((any1::any_list3)) (any_list2)) = reverse (qreva (any_list3) ((any1::any_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3.)
=================================================
Progress: 82


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (any_list2)) = mk_rhs1 (any_list2) (any_list3)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), reverse (qreva ((any1::any_list3)) (any_list2)) = reverse (qreva (any_list3) ((any1::any_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 3.)


1st goal of : forall (any_list1:any list), reverse (qreva (any_list1) ((Nil))) = any_list1
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : reverse (qreva (any_list2) ((Nil))) = any_list2
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
reverse (qreva (any_list2) ((any1::(Nil)))) = (any1::any_list2)

0 goal(s) more...

0 conjecture(s) more...
original goal
forall (any_list1:any list), reverse (qreva (any_list1) ((Nil))) = any_list1
lemma
forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
tactics
assert forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
induction any_list1
simpl in goal
induction any_list2
reflexivity
simpl in goal
assert forall (any_list1:any list) (any_list2:any list), (reverse (any_list1) @ any_list2) = mk_rhs1 (any_list1) (any_list2)
induction any_list1
reflexivity
simpl in goal
rewrite <- IH1 in goal at 0
assert forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
induction any_list2
reflexivity
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma5 in goal at 0
reflexivity
rewrite lemma6 in goal at 0
reflexivity
rewrite <- rhs_lemma4 in goal at 0
rewrite <- IH1 in goal at 0
reflexivity
Deduplication: 21
Tactic List : 1
rewrite lemma7 in goal at 0(rank:3.)
=================================================
Progress: 83


1st goal of : forall (any_list1:any list), reverse (qreva (any_list1) ((Nil))) = any_list1
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : reverse (qreva (any_list2) ((Nil))) = any_list2
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
reverse (qreva (any_list2) ((any1::(Nil)))) = (any1::any_list2)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma7 in goal at 0(rank : 3.)


1st goal of : forall (any_list1:any list), reverse (qreva (any_list1) ((Nil))) = any_list1
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : reverse (qreva (any_list2) ((Nil))) = any_list2
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
mk_rhs1 ((any1::(Nil))) (any_list2) = (any1::any_list2)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:0.)
=================================================
Progress: 84


1st goal of : forall (any_list1:any list), reverse (qreva (any_list1) ((Nil))) = any_list1
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : reverse (qreva (any_list2) ((Nil))) = any_list2
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
mk_rhs1 ((any1::(Nil))) (any_list2) = (any1::any_list2)

0 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 0.)


No conjecture
Proof Success
Proof
assert forall (any_list1:any list), reverse (qreva (any_list1) ((Nil))) = any_list1
induction any_list1
reflexivity
simpl in goal
define mk_rhs1 arg_1 arg_2 =
match (arg_1) with
| Nil -> arg_2
| Cons hd tl -> mk_rhs1 (tl) ((hd::arg_2))
assert forall (any_list1:any list), mk_rhs1 ((Nil)) (any_list1) = any_list1
reflexivity
assert forall (any_list1:any list) (any1:any) (any_list2:any list), mk_rhs1 ((any1::any_list1)) (any_list2) = mk_rhs1 (any_list1) ((any1::any_list2))
reflexivity
assert forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
induction any_list1
simpl in goal
induction any_list2
reflexivity
simpl in goal
assert forall (any_list1:any list) (any_list2:any list), (reverse (any_list1) @ any_list2) = mk_rhs1 (any_list1) (any_list2)
induction any_list1
reflexivity
simpl in goal
rewrite <- IH1 in goal at 0
assert forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
induction any_list2
reflexivity
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma5 in goal at 0
reflexivity
rewrite lemma6 in goal at 0
reflexivity
rewrite <- rhs_lemma4 in goal at 0
rewrite <- IH1 in goal at 0
reflexivity
rewrite lemma7 in goal at 0
reflexivity
Qed
File "_none_", lines 88-90, characters 2-22:
Warning 8 [partial-match]: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
[]

File "_none_", lines 88-90, characters 2-22:
Warning 8 [partial-match]: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
[]
