Enter the definition file path (1/2) : 
> Enter the definition file path (2/2) : 
> Choose the proof type :
1) Interactive Mode 	 2) Auto Mode
Enter the goal : =================================================
Progress: 1


No conjecture
>>> assert forall (x:nat), plus (x) (SUCC (x)) = SUCC (plus (x) (x))(rank : 0)


1st goal of : forall (nat1:nat), plus (nat1) (SUCC (nat1)) = SUCC (plus (nat1) (nat1))

---------------------------------------
forall (nat1:nat), plus (nat1) (SUCC (nat1)) = SUCC (plus (nat1) (nat1))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction nat1(rank:4)
=================================================
Progress: 2


1st goal of : forall (nat1:nat), plus (nat1) (SUCC (nat1)) = SUCC (plus (nat1) (nat1))

---------------------------------------
forall (nat1:nat), plus (nat1) (SUCC (nat1)) = SUCC (plus (nat1) (nat1))

0 goal(s) more...

0 conjecture(s) more...
>>> induction nat1(rank : 4)


1st goal of : forall (nat1:nat), plus (nat1) (SUCC (nat1)) = SUCC (plus (nat1) (nat1))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
plus (ZERO) (SUCC (ZERO)) = SUCC (plus (ZERO) (ZERO))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3)
=================================================
Progress: 3


1st goal of : forall (nat1:nat), plus (nat1) (SUCC (nat1)) = SUCC (plus (nat1) (nat1))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
plus (ZERO) (SUCC (ZERO)) = SUCC (plus (ZERO) (ZERO))

1 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 3)


1st goal of : forall (nat1:nat), plus (nat1) (SUCC (nat1)) = SUCC (plus (nat1) (nat1))
nat1 : nat
nat2 : nat
IH1 : plus (nat2) (SUCC (nat2)) = SUCC (plus (nat2) (nat2))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
plus (SUCC (nat2)) (SUCC (SUCC (nat2))) = SUCC (plus (SUCC (nat2)) (SUCC (nat2)))

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:3)
=================================================
Progress: 4


1st goal of : forall (nat1:nat), plus (nat1) (SUCC (nat1)) = SUCC (plus (nat1) (nat1))
nat1 : nat
nat2 : nat
IH1 : plus (nat2) (SUCC (nat2)) = SUCC (plus (nat2) (nat2))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
plus (SUCC (nat2)) (SUCC (SUCC (nat2))) = SUCC (plus (SUCC (nat2)) (SUCC (nat2)))

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3)


1st goal of : forall (nat1:nat), plus (nat1) (SUCC (nat1)) = SUCC (plus (nat1) (nat1))
nat1 : nat
nat2 : nat
IH1 : plus (nat2) (SUCC (nat2)) = SUCC (plus (nat2) (nat2))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (nat2) (SUCC (SUCC (nat2)))) = SUCC (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:3)
=================================================
Progress: 5


1st goal of : forall (nat1:nat), plus (nat1) (SUCC (nat1)) = SUCC (plus (nat1) (nat1))
nat1 : nat
nat2 : nat
IH1 : plus (nat2) (SUCC (nat2)) = SUCC (plus (nat2) (nat2))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (nat2) (SUCC (SUCC (nat2)))) = SUCC (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 3)


1st goal of : forall (nat1:nat), plus (nat1) (SUCC (nat1)) = SUCC (plus (nat1) (nat1))
nat1 : nat
nat2 : nat
IH1 : plus (nat2) (SUCC (nat2)) = SUCC (plus (nat2) (nat2))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (nat2) (SUCC (SUCC (nat2)))) = SUCC (SUCC (SUCC (plus (nat2) (nat2))))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Lemma : forall (nat2:nat), plus (nat2) (SUCC (SUCC (nat2))) = SUCC (SUCC (plus (nat2) (nat2)))
Model : nat2: ZERO
Model : nat2: ZERO
Model : nat2: SUCC (ZERO)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
plus (ZERO) (SUCC (SUCC (ZERO))) = SUCC (SUCC (plus (ZERO) (ZERO)))
plus (ZERO) (SUCC (SUCC (ZERO))) = SUCC (SUCC (plus (ZERO) (ZERO)))
plus (SUCC (ZERO)) (SUCC (SUCC (SUCC (ZERO)))) = SUCC (SUCC (plus (SUCC (ZERO)) (SUCC (ZERO))))
Simplifying took 0.000088 seconds
Result : true
advanced_generalize done


1st goal of : forall (nat1:nat), plus (nat1) (SUCC (nat1)) = SUCC (plus (nat1) (nat1))
nat1 : nat
nat2 : nat
IH1 : plus (nat2) (SUCC (nat2)) = SUCC (plus (nat2) (nat2))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (nat2) (SUCC (SUCC (nat2)))) = SUCC (SUCC (SUCC (plus (nat2) (nat2))))

0 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 6


1st goal of : forall (nat1:nat), plus (nat1) (SUCC (nat1)) = SUCC (plus (nat1) (nat1))
nat1 : nat
nat2 : nat
IH1 : plus (nat2) (SUCC (nat2)) = SUCC (plus (nat2) (nat2))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (nat2) (SUCC (SUCC (nat2)))) = SUCC (SUCC (SUCC (plus (nat2) (nat2))))

0 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat2:nat), plus (nat2) (SUCC (SUCC (nat2))) = SUCC (SUCC (plus (nat2) (nat2)))(rank : 0)


1st goal of : forall (nat1:nat), plus (nat1) (SUCC (SUCC (nat1))) = SUCC (SUCC (plus (nat1) (nat1)))

---------------------------------------
forall (nat1:nat), plus (nat1) (SUCC (SUCC (nat1))) = SUCC (SUCC (plus (nat1) (nat1)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:6)
=================================================
Progress: 7


1st goal of : forall (nat1:nat), plus (nat1) (SUCC (SUCC (nat1))) = SUCC (SUCC (plus (nat1) (nat1)))

---------------------------------------
forall (nat1:nat), plus (nat1) (SUCC (SUCC (nat1))) = SUCC (SUCC (plus (nat1) (nat1)))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 6)


1st goal of : forall (nat1:nat), plus (nat1) (SUCC (SUCC (nat1))) = SUCC (SUCC (plus (nat1) (nat1)))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
plus (ZERO) (SUCC (SUCC (ZERO))) = SUCC (SUCC (plus (ZERO) (ZERO)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5)
=================================================
Progress: 8


1st goal of : forall (nat1:nat), plus (nat1) (SUCC (SUCC (nat1))) = SUCC (SUCC (plus (nat1) (nat1)))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
plus (ZERO) (SUCC (SUCC (ZERO))) = SUCC (SUCC (plus (ZERO) (ZERO)))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5)


1st goal of : forall (nat1:nat), plus (nat1) (SUCC (SUCC (nat1))) = SUCC (SUCC (plus (nat1) (nat1)))
nat1 : nat
nat2 : nat
IH1 : plus (nat2) (SUCC (SUCC (nat2))) = SUCC (SUCC (plus (nat2) (nat2)))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
plus (SUCC (nat2)) (SUCC (SUCC (SUCC (nat2)))) = SUCC (SUCC (plus (SUCC (nat2)) (SUCC (nat2))))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5)
=================================================
Progress: 9


1st goal of : forall (nat1:nat), plus (nat1) (SUCC (SUCC (nat1))) = SUCC (SUCC (plus (nat1) (nat1)))
nat1 : nat
nat2 : nat
IH1 : plus (nat2) (SUCC (SUCC (nat2))) = SUCC (SUCC (plus (nat2) (nat2)))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
plus (SUCC (nat2)) (SUCC (SUCC (SUCC (nat2)))) = SUCC (SUCC (plus (SUCC (nat2)) (SUCC (nat2))))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5)


1st goal of : forall (nat1:nat), plus (nat1) (SUCC (SUCC (nat1))) = SUCC (SUCC (plus (nat1) (nat1)))
nat1 : nat
nat2 : nat
IH1 : plus (nat2) (SUCC (SUCC (nat2))) = SUCC (SUCC (plus (nat2) (nat2)))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (nat2) (SUCC (SUCC (SUCC (nat2))))) = SUCC (SUCC (SUCC (plus (nat2) (SUCC (nat2)))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Lemma : forall (arg1:nat) (nat2:nat), SUCC (plus (nat2) (SUCC (SUCC (arg1)))) = SUCC (SUCC (SUCC (plus (nat2) (arg1))))
Model : arg1: ZERO, nat2: ZERO
Model : arg1: SUCC (ZERO), nat2: ZERO
Model : arg1: SUCC (ZERO), nat2: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
SUCC (plus (ZERO) (SUCC (SUCC (ZERO)))) = SUCC (SUCC (SUCC (plus (ZERO) (ZERO))))
SUCC (plus (ZERO) (SUCC (SUCC (SUCC (ZERO))))) = SUCC (SUCC (SUCC (plus (ZERO) (SUCC (ZERO)))))
SUCC (plus (ZERO) (SUCC (SUCC (SUCC (ZERO))))) = SUCC (SUCC (SUCC (plus (ZERO) (SUCC (ZERO)))))
Simplifying took 0.000077 seconds
Result : true
advanced_generalize done


1st goal of : forall (nat1:nat), plus (nat1) (SUCC (SUCC (nat1))) = SUCC (SUCC (plus (nat1) (nat1)))
nat1 : nat
nat2 : nat
IH1 : plus (nat2) (SUCC (SUCC (nat2))) = SUCC (SUCC (plus (nat2) (nat2)))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (nat2) (SUCC (SUCC (SUCC (nat2))))) = SUCC (SUCC (SUCC (plus (nat2) (SUCC (nat2)))))

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 10


1st goal of : forall (nat1:nat), plus (nat1) (SUCC (SUCC (nat1))) = SUCC (SUCC (plus (nat1) (nat1)))
nat1 : nat
nat2 : nat
IH1 : plus (nat2) (SUCC (SUCC (nat2))) = SUCC (SUCC (plus (nat2) (nat2)))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (nat2) (SUCC (SUCC (SUCC (nat2))))) = SUCC (SUCC (SUCC (plus (nat2) (SUCC (nat2)))))

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (arg1:nat) (nat2:nat), SUCC (plus (nat2) (SUCC (SUCC (arg1)))) = SUCC (SUCC (SUCC (plus (nat2) (arg1))))(rank : 0)


1st goal of : forall (nat1:nat) (nat2:nat), SUCC (plus (nat2) (SUCC (SUCC (nat1)))) = SUCC (SUCC (SUCC (plus (nat2) (nat1))))

---------------------------------------
forall (nat1:nat) (nat2:nat), SUCC (plus (nat2) (SUCC (SUCC (nat1)))) = SUCC (SUCC (SUCC (plus (nat2) (nat1))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat2(rank:8)
=================================================
Progress: 11


1st goal of : forall (nat1:nat) (nat2:nat), SUCC (plus (nat2) (SUCC (SUCC (nat1)))) = SUCC (SUCC (SUCC (plus (nat2) (nat1))))

---------------------------------------
forall (nat1:nat) (nat2:nat), SUCC (plus (nat2) (SUCC (SUCC (nat1)))) = SUCC (SUCC (SUCC (plus (nat2) (nat1))))

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat2(rank : 8)


1st goal of : forall (nat1:nat) (nat2:nat), SUCC (plus (nat2) (SUCC (SUCC (nat1)))) = SUCC (SUCC (SUCC (plus (nat2) (nat1))))
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat1:nat), SUCC (plus (ZERO) (SUCC (SUCC (nat1)))) = SUCC (SUCC (SUCC (plus (ZERO) (nat1))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7)
=================================================
Progress: 12


1st goal of : forall (nat1:nat) (nat2:nat), SUCC (plus (nat2) (SUCC (SUCC (nat1)))) = SUCC (SUCC (SUCC (plus (nat2) (nat1))))
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat1:nat), SUCC (plus (ZERO) (SUCC (SUCC (nat1)))) = SUCC (SUCC (SUCC (plus (ZERO) (nat1))))

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7)


1st goal of : forall (nat1:nat) (nat2:nat), SUCC (plus (nat2) (SUCC (SUCC (nat1)))) = SUCC (SUCC (SUCC (plus (nat2) (nat1))))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), SUCC (plus (nat3) (SUCC (SUCC (nat1)))) = SUCC (SUCC (SUCC (plus (nat3) (nat1))))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat), SUCC (plus (SUCC (nat3)) (SUCC (SUCC (nat1)))) = SUCC (SUCC (SUCC (plus (SUCC (nat3)) (nat1))))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7)
=================================================
Progress: 13


1st goal of : forall (nat1:nat) (nat2:nat), SUCC (plus (nat2) (SUCC (SUCC (nat1)))) = SUCC (SUCC (SUCC (plus (nat2) (nat1))))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), SUCC (plus (nat3) (SUCC (SUCC (nat1)))) = SUCC (SUCC (SUCC (plus (nat3) (nat1))))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat), SUCC (plus (SUCC (nat3)) (SUCC (SUCC (nat1)))) = SUCC (SUCC (SUCC (plus (SUCC (nat3)) (nat1))))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7)


1st goal of : forall (nat1:nat) (nat2:nat), SUCC (plus (nat2) (SUCC (SUCC (nat1)))) = SUCC (SUCC (SUCC (plus (nat2) (nat1))))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), SUCC (plus (nat3) (SUCC (SUCC (nat1)))) = SUCC (SUCC (SUCC (plus (nat3) (nat1))))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat), SUCC (SUCC (plus (nat3) (SUCC (SUCC (nat1))))) = SUCC (SUCC (SUCC (SUCC (plus (nat3) (nat1)))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro nat1(rank:7)
rewrite IH1 in goal at 0(rank:15)
rewrite <- IH1 in goal at 0(rank:15)
=================================================
Progress: 14


1st goal of : forall (nat1:nat) (nat2:nat), SUCC (plus (nat2) (SUCC (SUCC (nat1)))) = SUCC (SUCC (SUCC (plus (nat2) (nat1))))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), SUCC (plus (nat3) (SUCC (SUCC (nat1)))) = SUCC (SUCC (SUCC (plus (nat3) (nat1))))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat), SUCC (SUCC (plus (nat3) (SUCC (SUCC (nat1))))) = SUCC (SUCC (SUCC (SUCC (plus (nat3) (nat1)))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7)


1st goal of : forall (nat1:nat) (nat2:nat), SUCC (plus (nat2) (SUCC (SUCC (nat1)))) = SUCC (SUCC (SUCC (plus (nat2) (nat1))))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), SUCC (plus (nat3) (SUCC (SUCC (nat1)))) = SUCC (SUCC (SUCC (plus (nat3) (nat1))))
Inductive1 : nat2 = SUCC (nat3)
nat1 : nat
---------------------------------------
SUCC (SUCC (plus (nat3) (SUCC (SUCC (nat1))))) = SUCC (SUCC (SUCC (SUCC (plus (nat3) (nat1)))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:15)
rewrite <- IH1 in goal at 0(rank:15)
=================================================
Progress: 15


1st goal of : forall (nat1:nat) (nat2:nat), SUCC (plus (nat2) (SUCC (SUCC (nat1)))) = SUCC (SUCC (SUCC (plus (nat2) (nat1))))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), SUCC (plus (nat3) (SUCC (SUCC (nat1)))) = SUCC (SUCC (SUCC (plus (nat3) (nat1))))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat), SUCC (SUCC (plus (nat3) (SUCC (SUCC (nat1))))) = SUCC (SUCC (SUCC (SUCC (plus (nat3) (nat1)))))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 15)


1st goal of : forall (nat1:nat) (nat2:nat), SUCC (plus (nat2) (SUCC (SUCC (nat1)))) = SUCC (SUCC (SUCC (plus (nat2) (nat1))))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), SUCC (plus (nat3) (SUCC (SUCC (nat1)))) = SUCC (SUCC (SUCC (plus (nat3) (nat1))))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat), SUCC (SUCC (SUCC (SUCC (plus (nat3) (nat1))))) = SUCC (SUCC (SUCC (SUCC (plus (nat3) (nat1)))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5)
=================================================
Progress: 16


1st goal of : forall (nat1:nat) (nat2:nat), SUCC (plus (nat2) (SUCC (SUCC (nat1)))) = SUCC (SUCC (SUCC (plus (nat2) (nat1))))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), SUCC (plus (nat3) (SUCC (SUCC (nat1)))) = SUCC (SUCC (SUCC (plus (nat3) (nat1))))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat), SUCC (SUCC (SUCC (SUCC (plus (nat3) (nat1))))) = SUCC (SUCC (SUCC (SUCC (plus (nat3) (nat1)))))

0 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 5)


1st goal of : forall (nat1:nat), plus (nat1) (SUCC (SUCC (nat1))) = SUCC (SUCC (plus (nat1) (nat1)))
nat1 : nat
nat2 : nat
IH1 : plus (nat2) (SUCC (SUCC (nat2))) = SUCC (SUCC (plus (nat2) (nat2)))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (nat2) (SUCC (SUCC (SUCC (nat2))))) = SUCC (SUCC (SUCC (plus (nat2) (SUCC (nat2)))))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 3
Tactic List : 2
rewrite lemma3 in goal at 0(rank:13)
rewrite <- lemma3 in goal at 0(rank:13)
=================================================
Progress: 17


1st goal of : forall (nat1:nat), plus (nat1) (SUCC (SUCC (nat1))) = SUCC (SUCC (plus (nat1) (nat1)))
nat1 : nat
nat2 : nat
IH1 : plus (nat2) (SUCC (SUCC (nat2))) = SUCC (SUCC (plus (nat2) (nat2)))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (nat2) (SUCC (SUCC (SUCC (nat2))))) = SUCC (SUCC (SUCC (plus (nat2) (SUCC (nat2)))))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 13)


1st goal of : forall (nat1:nat), plus (nat1) (SUCC (SUCC (nat1))) = SUCC (SUCC (plus (nat1) (nat1)))
nat1 : nat
nat2 : nat
IH1 : plus (nat2) (SUCC (SUCC (nat2))) = SUCC (SUCC (plus (nat2) (nat2)))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (SUCC (SUCC (plus (nat2) (SUCC (nat2))))) = SUCC (SUCC (SUCC (plus (nat2) (SUCC (nat2)))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3)
=================================================
Progress: 18


1st goal of : forall (nat1:nat), plus (nat1) (SUCC (SUCC (nat1))) = SUCC (SUCC (plus (nat1) (nat1)))
nat1 : nat
nat2 : nat
IH1 : plus (nat2) (SUCC (SUCC (nat2))) = SUCC (SUCC (plus (nat2) (nat2)))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (SUCC (SUCC (plus (nat2) (SUCC (nat2))))) = SUCC (SUCC (SUCC (plus (nat2) (SUCC (nat2)))))

0 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 3)


1st goal of : forall (nat1:nat), plus (nat1) (SUCC (nat1)) = SUCC (plus (nat1) (nat1))
nat1 : nat
nat2 : nat
IH1 : plus (nat2) (SUCC (nat2)) = SUCC (plus (nat2) (nat2))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (nat2) (SUCC (SUCC (nat2)))) = SUCC (SUCC (SUCC (plus (nat2) (nat2))))

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 1
Tactic List : 2
rewrite lemma3 in goal at 0(rank:11)
rewrite <- lemma3 in goal at 0(rank:11)
=================================================
Progress: 19


1st goal of : forall (nat1:nat), plus (nat1) (SUCC (nat1)) = SUCC (plus (nat1) (nat1))
nat1 : nat
nat2 : nat
IH1 : plus (nat2) (SUCC (nat2)) = SUCC (plus (nat2) (nat2))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (nat2) (SUCC (SUCC (nat2)))) = SUCC (SUCC (SUCC (plus (nat2) (nat2))))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 11)


1st goal of : forall (nat1:nat), plus (nat1) (SUCC (nat1)) = SUCC (plus (nat1) (nat1))
nat1 : nat
nat2 : nat
IH1 : plus (nat2) (SUCC (nat2)) = SUCC (plus (nat2) (nat2))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (SUCC (SUCC (plus (nat2) (nat2)))) = SUCC (SUCC (SUCC (plus (nat2) (nat2))))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:0)
=================================================
Progress: 20


1st goal of : forall (nat1:nat), plus (nat1) (SUCC (nat1)) = SUCC (plus (nat1) (nat1))
nat1 : nat
nat2 : nat
IH1 : plus (nat2) (SUCC (nat2)) = SUCC (plus (nat2) (nat2))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (SUCC (SUCC (plus (nat2) (nat2)))) = SUCC (SUCC (SUCC (plus (nat2) (nat2))))

0 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 0)


No conjecture
Proof Success
Proof
assert forall (nat1:nat), plus (nat1) (SUCC (nat1)) = SUCC (plus (nat1) (nat1))
induction nat1
reflexivity
simpl in goal
rewrite IH1 in goal at 0
assert forall (nat1:nat), plus (nat1) (SUCC (SUCC (nat1))) = SUCC (SUCC (plus (nat1) (nat1)))
induction nat1
reflexivity
simpl in goal
assert forall (nat1:nat) (nat2:nat), SUCC (plus (nat2) (SUCC (SUCC (nat1)))) = SUCC (SUCC (SUCC (plus (nat2) (nat1))))
induction nat2
reflexivity
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 0
reflexivity
rewrite lemma3 in goal at 0
reflexivity
Qed
File "_none_", lines 88-90, characters 2-22:
Warning 8 [partial-match]: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
[]

File "_none_", lines 88-90, characters 2-22:
Warning 8 [partial-match]: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
[]
