Enter the definition file path (1/2) : 
> Enter the definition file path (2/2) : 
> Choose the proof type :
1) Interactive Mode 	 2) Auto Mode
Enter the goal : =================================================
Progress: 1


No conjecture
>>> assert forall (x:any list) (y:any list), len (qreva (x) (y)) = plus (len (x)) (len (y))(rank : 0.)


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))

---------------------------------------
forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
induction any_list1(rank:12.)
induction any_list2(rank:12.)
=================================================
Progress: 2


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))

---------------------------------------
forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))

0 goal(s) more...

0 conjecture(s) more...
>>> induction any_list1(rank : 12.)


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), len (qreva ((Nil)) (any_list2)) = plus (len ((Nil))) (len (any_list2))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3.)
=================================================
Progress: 3


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), len (qreva ((Nil)) (any_list2)) = plus (len ((Nil))) (len (any_list2))

1 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 3.)


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), len (qreva ((any1::any_list3)) (any_list2)) = plus (len ((any1::any_list3))) (len (any_list2))

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 4


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), len (qreva ((any1::any_list3)) (any_list2)) = plus (len ((any1::any_list3))) (len (any_list2))

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), len (qreva (any_list3) ((any1::any_list2))) = SUCC (plus (len (any_list3)) (len (any_list2)))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH1 in goal at 0(rank:11.)
induction any_list2(rank:12.)
rewrite <- IH1 in goal at 0(rank:11.)
=================================================
Progress: 5


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), len (qreva (any_list3) ((any1::any_list2))) = SUCC (plus (len (any_list3)) (len (any_list2)))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 11.)


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), plus (len (any_list3)) (len ((any1::any_list2))) = SUCC (plus (len (any_list3)) (len (any_list2)))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 6


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), plus (len (any_list3)) (len ((any1::any_list2))) = SUCC (plus (len (any_list3)) (len (any_list2)))

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), plus (len (any_list3)) (SUCC (len (any_list2))) = SUCC (plus (len (any_list3)) (len (any_list2)))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
induction any_list2(rank:12.)
rewrite <- IH1 in goal at 0(rank:19.)
=================================================
Progress: 7


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), len (qreva (any_list3) ((any1::any_list2))) = SUCC (plus (len (any_list3)) (len (any_list2)))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 11.)


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), len (qreva (any_list3) ((any1::any_list2))) = SUCC (len (qreva (any_list3) (any_list2)))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
intro any_list2(rank:3.)
=================================================
Progress: 8


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), len (qreva (any_list3) ((any1::any_list2))) = SUCC (len (qreva (any_list3) (any_list2)))

0 goal(s) more...

0 conjecture(s) more...
>>> intro any_list2(rank : 3.)


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
---------------------------------------
len (qreva (any_list3) ((any1::any_list2))) = SUCC (len (qreva (any_list3) (any_list2)))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 1(rank:3.)
=================================================
Progress: 9


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
---------------------------------------
len (qreva (any_list3) ((any1::any_list2))) = SUCC (len (qreva (any_list3) (any_list2)))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 3.)


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
---------------------------------------
plus (len (any_list3)) (len ((any1::any_list2))) = SUCC (len (qreva (any_list3) (any_list2)))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 10


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
---------------------------------------
plus (len (any_list3)) (len ((any1::any_list2))) = SUCC (len (qreva (any_list3) (any_list2)))

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
---------------------------------------
plus (len (any_list3)) (SUCC (len (any_list2))) = SUCC (len (qreva (any_list3) (any_list2)))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
intro any_list2
rewrite IH1 in goal at 1
simpl in goal
validate generalize_common_subterm_goal
Lemma List
forall (any_list1:any list) (any_list2:any list), plus (len (any_list2)) (SUCC (len (any_list1))) = SUCC (len (qreva (any_list2) (any_list1)))
End of Lemma List


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
---------------------------------------
plus (len (any_list3)) (SUCC (len (any_list2))) = SUCC (len (qreva (any_list3) (any_list2)))

0 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 11


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
---------------------------------------
plus (len (any_list3)) (SUCC (len (any_list2))) = SUCC (len (qreva (any_list3) (any_list2)))

0 goal(s) more...

0 conjecture(s) more...
>>> assert forall (any_list1:any list) (any_list2:any list), plus (len (any_list2)) (SUCC (len (any_list1))) = SUCC (len (qreva (any_list2) (any_list1)))(rank : 0.)


1st goal of : forall (any_list1:any list) (any_list2:any list), plus (len (any_list2)) (SUCC (len (any_list1))) = SUCC (len (qreva (any_list2) (any_list1)))

---------------------------------------
forall (any_list1:any list) (any_list2:any list), plus (len (any_list2)) (SUCC (len (any_list1))) = SUCC (len (qreva (any_list2) (any_list1)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction any_list1(rank:14.)
induction any_list2(rank:14.)
=================================================
Progress: 12


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))

---------------------------------------
forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))

0 goal(s) more...

0 conjecture(s) more...
>>> induction any_list2(rank : 12.)


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any_list1:any list), len (qreva (any_list1) ((Nil))) = plus (len (any_list1)) (len ((Nil)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4.)
=================================================
Progress: 13


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any_list1:any list), len (qreva (any_list1) ((Nil))) = plus (len (any_list1)) (len ((Nil)))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4.)


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any_list1:any list), len (qreva (any_list1) ((Nil))) = plus (len (any_list1)) (ZERO)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:5.)
=================================================
Progress: 14


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any_list1:any list), len (qreva (any_list1) ((Nil))) = plus (len (any_list1)) (ZERO)

1 goal(s) more...

0 conjecture(s) more...
>>> induction any_list1(rank : 5.)


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
---------------------------------------
len (qreva ((Nil)) ((Nil))) = plus (len ((Nil))) (ZERO)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:4.)
=================================================
Progress: 15


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
---------------------------------------
len (qreva ((Nil)) ((Nil))) = plus (len ((Nil))) (ZERO)

2 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 4.)


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : len (qreva (any_list3) ((Nil))) = plus (len (any_list3)) (ZERO)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
len (qreva ((any1::any_list3)) ((Nil))) = plus (len ((any1::any_list3))) (ZERO)

1 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:4.)
=================================================
Progress: 16


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : len (qreva (any_list3) ((Nil))) = plus (len (any_list3)) (ZERO)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
len (qreva ((any1::any_list3)) ((Nil))) = plus (len ((any1::any_list3))) (ZERO)

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4.)


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : len (qreva (any_list3) ((Nil))) = plus (len (any_list3)) (ZERO)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
len (qreva (any_list3) ((any1::(Nil)))) = SUCC (plus (len (any_list3)) (ZERO))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:4.)
=================================================
Progress: 17


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : len (qreva (any_list3) ((Nil))) = plus (len (any_list3)) (ZERO)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
len (qreva (any_list3) ((any1::(Nil)))) = SUCC (plus (len (any_list3)) (ZERO))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 4.)


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : len (qreva (any_list3) ((Nil))) = plus (len (any_list3)) (ZERO)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
len (qreva (any_list3) ((any1::(Nil)))) = SUCC (len (qreva (any_list3) ((Nil))))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
previous tactics
simpl in goal
New Env
let rec mk_rhs1 arg_1 arg_2 =
match (arg_1) with
| Nil -> len (arg_2)
| Cons Unit tl -> SUCC (mk_rhs1 (tl) (arg_2))
;;
Lemma List
forall (any_list1:any list), mk_rhs1 ((Nil)) (any_list1) = len (any_list1)
forall (unit_list1:unit list) (any_list1:any list), mk_rhs1 ((Unit::unit_list1)) (any_list1) = SUCC (mk_rhs1 (unit_list1) (any_list1))
forall (any_list1:any list) (any_list2:any list) (unit_list1:unit list), len (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
End of Lemma List


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : len (qreva (any_list3) ((Nil))) = plus (len (any_list3)) (ZERO)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
len (qreva (any_list3) ((any1::(Nil)))) = SUCC (plus (len (any_list3)) (ZERO))

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 18


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : len (qreva (any_list3) ((Nil))) = plus (len (any_list3)) (ZERO)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
len (qreva (any_list3) ((any1::(Nil)))) = SUCC (plus (len (any_list3)) (ZERO))

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (any_list1:any list) (any_list2:any list) (unit_list1:unit list), len (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)(rank : 0.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (unit_list1:unit list), len (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)

---------------------------------------
forall (any_list1:any list) (any_list2:any list) (unit_list1:unit list), len (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:6.)
=================================================
Progress: 19


1st goal of : forall (any_list1:any list) (any_list2:any list) (unit_list1:unit list), len (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)

---------------------------------------
forall (any_list1:any list) (any_list2:any list) (unit_list1:unit list), len (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)

0 goal(s) more...

1 conjecture(s) more...
>>> induction any_list1(rank : 6.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (unit_list1:unit list), len (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list) (unit_list1:unit list), len (qreva ((Nil)) (any_list2)) = mk_rhs1 (any_list2) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 20


1st goal of : forall (any_list1:any list) (any_list2:any list) (unit_list1:unit list), len (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list) (unit_list1:unit list), len (qreva ((Nil)) (any_list2)) = mk_rhs1 (any_list2) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (unit_list1:unit list), len (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list) (unit_list1:unit list), len (any_list2) = mk_rhs1 (any_list2) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:7.)
=================================================
Progress: 21


1st goal of : forall (any_list1:any list) (any_list2:any list) (unit_list1:unit list), len (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list) (unit_list1:unit list), len (any_list2) = mk_rhs1 (any_list2) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> induction any_list2(rank : 7.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (unit_list1:unit list), len (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (unit_list1:unit list), len ((Nil)) = mk_rhs1 ((Nil)) ((Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 22


1st goal of : forall (any_list1:any list) (any_list2:any list) (unit_list1:unit list), len (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (unit_list1:unit list), len ((Nil)) = mk_rhs1 ((Nil)) ((Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (unit_list1:unit list), len (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (unit_list1:unit list), len (any_list3) = mk_rhs1 (any_list3) ((Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (unit_list1:unit list), len ((any1::any_list3)) = mk_rhs1 ((any1::any_list3)) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 23


1st goal of : forall (any_list1:any list) (any_list2:any list) (unit_list1:unit list), len (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (unit_list1:unit list), len (any_list3) = mk_rhs1 (any_list3) ((Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (unit_list1:unit list), len ((any1::any_list3)) = mk_rhs1 ((any1::any_list3)) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (unit_list1:unit list), len (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (unit_list1:unit list), len (any_list3) = mk_rhs1 (any_list3) ((Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (unit_list1:unit list), SUCC (len (any_list3)) = mk_rhs1 ((any1::any_list3)) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro unit_list1(rank:6.)
=================================================
Progress: 24


1st goal of : forall (any_list1:any list) (any_list2:any list) (unit_list1:unit list), len (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (unit_list1:unit list), len (any_list3) = mk_rhs1 (any_list3) ((Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (unit_list1:unit list), SUCC (len (any_list3)) = mk_rhs1 ((any1::any_list3)) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> intro unit_list1(rank : 6.)


1st goal of : forall (any_list1:any list) (any_list2:any list) (unit_list1:unit list), len (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (unit_list1:unit list), len (any_list3) = mk_rhs1 (any_list3) ((Nil))
Inductive1 : any_list2 = (any1::any_list3)
unit_list1 : unit list
---------------------------------------
SUCC (len (any_list3)) = mk_rhs1 ((any1::any_list3)) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro unit_list1
validate generalize_common_subterm_goal
asdf
=================================================
Progress: 25


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), len (qreva (any_list3) ((any1::any_list2))) = SUCC (plus (len (any_list3)) (len (any_list2)))

0 goal(s) more...

0 conjecture(s) more...
>>> induction any_list2(rank : 12.)


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
len (qreva (any_list3) ((any1::(Nil)))) = SUCC (plus (len (any_list3)) (len ((Nil))))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4.)
=================================================
Progress: 26


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
len (qreva (any_list3) ((any1::(Nil)))) = SUCC (plus (len (any_list3)) (len ((Nil))))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4.)


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
len (qreva (any_list3) ((any1::(Nil)))) = SUCC (plus (len (any_list3)) (ZERO))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:4.)
=================================================
Progress: 27


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
len (qreva (any_list3) ((any1::(Nil)))) = SUCC (plus (len (any_list3)) (ZERO))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 4.)


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
plus (len (any_list3)) (len ((any1::(Nil)))) = SUCC (plus (len (any_list3)) (ZERO))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4.)
=================================================
Progress: 28


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
plus (len (any_list3)) (len ((any1::(Nil)))) = SUCC (plus (len (any_list3)) (ZERO))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4.)


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
plus (len (any_list3)) (SUCC (ZERO)) = SUCC (plus (len (any_list3)) (ZERO))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
simpl in goal
Lemma List
forall (nat1:nat), plus (nat1) (SUCC (ZERO)) = SUCC (plus (nat1) (ZERO))
End of Lemma List


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
plus (len (any_list3)) (SUCC (ZERO)) = SUCC (plus (len (any_list3)) (ZERO))

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 29


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
plus (len (any_list3)) (SUCC (ZERO)) = SUCC (plus (len (any_list3)) (ZERO))

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat), plus (nat1) (SUCC (ZERO)) = SUCC (plus (nat1) (ZERO))(rank : 0.)


1st goal of : forall (nat1:nat), plus (nat1) (SUCC (ZERO)) = SUCC (plus (nat1) (ZERO))

---------------------------------------
forall (nat1:nat), plus (nat1) (SUCC (ZERO)) = SUCC (plus (nat1) (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:6.)
=================================================
Progress: 30


1st goal of : forall (nat1:nat), plus (nat1) (SUCC (ZERO)) = SUCC (plus (nat1) (ZERO))

---------------------------------------
forall (nat1:nat), plus (nat1) (SUCC (ZERO)) = SUCC (plus (nat1) (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 6.)


1st goal of : forall (nat1:nat), plus (nat1) (SUCC (ZERO)) = SUCC (plus (nat1) (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
plus (ZERO) (SUCC (ZERO)) = SUCC (plus (ZERO) (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5.)
=================================================
Progress: 31


1st goal of : forall (nat1:nat), plus (nat1) (SUCC (ZERO)) = SUCC (plus (nat1) (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
plus (ZERO) (SUCC (ZERO)) = SUCC (plus (ZERO) (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5.)


1st goal of : forall (nat1:nat), plus (nat1) (SUCC (ZERO)) = SUCC (plus (nat1) (ZERO))
nat1 : nat
nat2 : nat
IH1 : plus (nat2) (SUCC (ZERO)) = SUCC (plus (nat2) (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
plus (SUCC (nat2)) (SUCC (ZERO)) = SUCC (plus (SUCC (nat2)) (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 32


1st goal of : forall (nat1:nat), plus (nat1) (SUCC (ZERO)) = SUCC (plus (nat1) (ZERO))
nat1 : nat
nat2 : nat
IH1 : plus (nat2) (SUCC (ZERO)) = SUCC (plus (nat2) (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
plus (SUCC (nat2)) (SUCC (ZERO)) = SUCC (plus (SUCC (nat2)) (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (nat1:nat), plus (nat1) (SUCC (ZERO)) = SUCC (plus (nat1) (ZERO))
nat1 : nat
nat2 : nat
IH1 : plus (nat2) (SUCC (ZERO)) = SUCC (plus (nat2) (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (nat2) (SUCC (ZERO))) = SUCC (SUCC (plus (nat2) (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
=================================================
Progress: 33


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), plus (len (any_list3)) (SUCC (len (any_list2))) = SUCC (plus (len (any_list3)) (len (any_list2)))

0 goal(s) more...

0 conjecture(s) more...
>>> induction any_list2(rank : 12.)


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
plus (len (any_list3)) (SUCC (len ((Nil)))) = SUCC (plus (len (any_list3)) (len ((Nil))))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4.)
=================================================
Progress: 34


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
plus (len (any_list3)) (SUCC (len ((Nil)))) = SUCC (plus (len (any_list3)) (len ((Nil))))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4.)


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
plus (len (any_list3)) (SUCC (ZERO)) = SUCC (plus (len (any_list3)) (ZERO))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
=================================================
Progress: 35


1st goal of : forall (nat1:nat), plus (nat1) (SUCC (ZERO)) = SUCC (plus (nat1) (ZERO))
nat1 : nat
nat2 : nat
IH1 : plus (nat2) (SUCC (ZERO)) = SUCC (plus (nat2) (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (nat2) (SUCC (ZERO))) = SUCC (SUCC (plus (nat2) (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13.)


1st goal of : forall (nat1:nat), plus (nat1) (SUCC (ZERO)) = SUCC (plus (nat1) (ZERO))
nat1 : nat
nat2 : nat
IH1 : plus (nat2) (SUCC (ZERO)) = SUCC (plus (nat2) (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (SUCC (plus (nat2) (ZERO))) = SUCC (SUCC (plus (nat2) (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:4.)
=================================================
Progress: 36


1st goal of : forall (nat1:nat), plus (nat1) (SUCC (ZERO)) = SUCC (plus (nat1) (ZERO))
nat1 : nat
nat2 : nat
IH1 : plus (nat2) (SUCC (ZERO)) = SUCC (plus (nat2) (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (SUCC (plus (nat2) (ZERO))) = SUCC (SUCC (plus (nat2) (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 4.)


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
plus (len (any_list3)) (SUCC (ZERO)) = SUCC (plus (len (any_list3)) (ZERO))

1 goal(s) more...

0 conjecture(s) more...
original goal
forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
lemma
forall (nat1:nat), plus (nat1) (SUCC (ZERO)) = SUCC (plus (nat1) (ZERO))
tactics
assert forall (nat1:nat), plus (nat1) (SUCC (ZERO)) = SUCC (plus (nat1) (ZERO))
induction nat1
reflexivity
simpl in goal
rewrite IH1 in goal at 0
reflexivity
Deduplication: 1
Tactic List : 2
rewrite lemma3 in goal at 0(rank:12.)
rewrite <- lemma3 in goal at 0(rank:12.)
=================================================
Progress: 37


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
plus (len (any_list3)) (SUCC (ZERO)) = SUCC (plus (len (any_list3)) (ZERO))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 12.)


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
SUCC (plus (len (any_list3)) (ZERO)) = SUCC (plus (len (any_list3)) (ZERO))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3.)
=================================================
Progress: 38


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
SUCC (plus (len (any_list3)) (ZERO)) = SUCC (plus (len (any_list3)) (ZERO))

1 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 3.)


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : len (qreva (any_list3) ((any1::any_list4))) = SUCC (plus (len (any_list3)) (len (any_list4)))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
len (qreva (any_list3) ((any1::(any2::any_list4)))) = SUCC (plus (len (any_list3)) (len ((any2::any_list4))))

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 1
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 39


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : len (qreva (any_list3) ((any1::any_list4))) = SUCC (plus (len (any_list3)) (len (any_list4)))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
len (qreva (any_list3) ((any1::(any2::any_list4)))) = SUCC (plus (len (any_list3)) (len ((any2::any_list4))))

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : len (qreva (any_list3) ((any1::any_list4))) = SUCC (plus (len (any_list3)) (len (any_list4)))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
len (qreva (any_list3) ((any1::(any2::any_list4)))) = SUCC (plus (len (any_list3)) (SUCC (len (any_list4))))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:3.)
=================================================
Progress: 40


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : len (qreva (any_list3) ((any1::any_list4))) = SUCC (plus (len (any_list3)) (len (any_list4)))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
len (qreva (any_list3) ((any1::(any2::any_list4)))) = SUCC (plus (len (any_list3)) (SUCC (len (any_list4))))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 3.)


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : len (qreva (any_list3) ((any1::any_list4))) = SUCC (plus (len (any_list3)) (len (any_list4)))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
plus (len (any_list3)) (len ((any1::(any2::any_list4)))) = SUCC (plus (len (any_list3)) (SUCC (len (any_list4))))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 41


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : len (qreva (any_list3) ((any1::any_list4))) = SUCC (plus (len (any_list3)) (len (any_list4)))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
plus (len (any_list3)) (len ((any1::(any2::any_list4)))) = SUCC (plus (len (any_list3)) (SUCC (len (any_list4))))

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : len (qreva (any_list3) ((any1::any_list4))) = SUCC (plus (len (any_list3)) (len (any_list4)))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
plus (len (any_list3)) (SUCC (SUCC (len (any_list4)))) = SUCC (plus (len (any_list3)) (SUCC (len (any_list4))))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 0
reflexivity
simpl in goal
rewrite IH1 in goal at 0
simpl in goal
Lemma List
forall (nat1:nat) (nat2:nat), plus (nat2) (SUCC (nat1)) = SUCC (plus (nat2) (nat1))
End of Lemma List


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : len (qreva (any_list3) ((any1::any_list4))) = SUCC (plus (len (any_list3)) (len (any_list4)))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
plus (len (any_list3)) (SUCC (SUCC (len (any_list4)))) = SUCC (plus (len (any_list3)) (SUCC (len (any_list4))))

0 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 42


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : len (qreva (any_list3) ((any1::any_list4))) = SUCC (plus (len (any_list3)) (len (any_list4)))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
plus (len (any_list3)) (SUCC (SUCC (len (any_list4)))) = SUCC (plus (len (any_list3)) (SUCC (len (any_list4))))

0 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat), plus (nat2) (SUCC (nat1)) = SUCC (plus (nat2) (nat1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat), plus (nat2) (SUCC (nat1)) = SUCC (plus (nat2) (nat1))

---------------------------------------
forall (nat1:nat) (nat2:nat), plus (nat2) (SUCC (nat1)) = SUCC (plus (nat2) (nat1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat2(rank:6.)
=================================================
Progress: 43


1st goal of : forall (nat1:nat) (nat2:nat), plus (nat2) (SUCC (nat1)) = SUCC (plus (nat2) (nat1))

---------------------------------------
forall (nat1:nat) (nat2:nat), plus (nat2) (SUCC (nat1)) = SUCC (plus (nat2) (nat1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat2(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat), plus (nat2) (SUCC (nat1)) = SUCC (plus (nat2) (nat1))
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat1:nat), plus (ZERO) (SUCC (nat1)) = SUCC (plus (ZERO) (nat1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5.)
=================================================
Progress: 44


1st goal of : forall (nat1:nat) (nat2:nat), plus (nat2) (SUCC (nat1)) = SUCC (plus (nat2) (nat1))
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat1:nat), plus (ZERO) (SUCC (nat1)) = SUCC (plus (ZERO) (nat1))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat), plus (nat2) (SUCC (nat1)) = SUCC (plus (nat2) (nat1))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), plus (nat3) (SUCC (nat1)) = SUCC (plus (nat3) (nat1))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat), plus (SUCC (nat3)) (SUCC (nat1)) = SUCC (plus (SUCC (nat3)) (nat1))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 45


1st goal of : forall (nat1:nat) (nat2:nat), plus (nat2) (SUCC (nat1)) = SUCC (plus (nat2) (nat1))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), plus (nat3) (SUCC (nat1)) = SUCC (plus (nat3) (nat1))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat), plus (SUCC (nat3)) (SUCC (nat1)) = SUCC (plus (SUCC (nat3)) (nat1))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat), plus (nat2) (SUCC (nat1)) = SUCC (plus (nat2) (nat1))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), plus (nat3) (SUCC (nat1)) = SUCC (plus (nat3) (nat1))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat3) (SUCC (nat1))) = SUCC (SUCC (plus (nat3) (nat1)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
intro nat1(rank:5.)
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 2(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
=================================================
Progress: 46


1st goal of : forall (nat1:nat) (nat2:nat), plus (nat2) (SUCC (nat1)) = SUCC (plus (nat2) (nat1))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), plus (nat3) (SUCC (nat1)) = SUCC (plus (nat3) (nat1))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat3) (SUCC (nat1))) = SUCC (SUCC (plus (nat3) (nat1)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat), plus (nat2) (SUCC (nat1)) = SUCC (plus (nat2) (nat1))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), plus (nat3) (SUCC (nat1)) = SUCC (plus (nat3) (nat1))
Inductive1 : nat2 = SUCC (nat3)
nat1 : nat
---------------------------------------
SUCC (plus (nat3) (SUCC (nat1))) = SUCC (SUCC (plus (nat3) (nat1)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 2(rank:13.)
rewrite <- IH1 in goal at 1(rank:21.)
=================================================
Progress: 47


1st goal of : forall (nat1:nat) (nat2:nat), plus (nat2) (SUCC (nat1)) = SUCC (plus (nat2) (nat1))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), plus (nat3) (SUCC (nat1)) = SUCC (plus (nat3) (nat1))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat3) (SUCC (nat1))) = SUCC (SUCC (plus (nat3) (nat1)))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13.)


1st goal of : forall (nat1:nat) (nat2:nat), plus (nat2) (SUCC (nat1)) = SUCC (plus (nat2) (nat1))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), plus (nat3) (SUCC (nat1)) = SUCC (plus (nat3) (nat1))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat), SUCC (SUCC (plus (nat3) (nat1))) = SUCC (SUCC (plus (nat3) (nat1)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3.)
=================================================
Progress: 48


1st goal of : forall (nat1:nat) (nat2:nat), plus (nat2) (SUCC (nat1)) = SUCC (plus (nat2) (nat1))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), plus (nat3) (SUCC (nat1)) = SUCC (plus (nat3) (nat1))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat), SUCC (SUCC (plus (nat3) (nat1))) = SUCC (SUCC (plus (nat3) (nat1)))

0 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 3.)


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : len (qreva (any_list3) ((any1::any_list4))) = SUCC (plus (len (any_list3)) (len (any_list4)))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
plus (len (any_list3)) (SUCC (SUCC (len (any_list4)))) = SUCC (plus (len (any_list3)) (SUCC (len (any_list4))))

0 goal(s) more...

0 conjecture(s) more...
original goal
forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
lemma
forall (nat1:nat) (nat2:nat), plus (nat2) (SUCC (nat1)) = SUCC (plus (nat2) (nat1))
tactics
assert forall (nat1:nat) (nat2:nat), plus (nat2) (SUCC (nat1)) = SUCC (plus (nat2) (nat1))
induction nat2
reflexivity
simpl in goal
rewrite IH1 in goal at 0
reflexivity
Deduplication: 7
Tactic List : 4
rewrite lemma4 in goal at 1(rank:11.)
rewrite lemma4 in goal at 0(rank:19.)
rewrite <- lemma4 in goal at 0(rank:11.)
rewrite lemma4 in goal at 2(rank:19.)
=================================================
Progress: 49


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : len (qreva (any_list3) ((any1::any_list4))) = SUCC (plus (len (any_list3)) (len (any_list4)))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
plus (len (any_list3)) (SUCC (SUCC (len (any_list4)))) = SUCC (plus (len (any_list3)) (SUCC (len (any_list4))))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma4 in goal at 1(rank : 11.)


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : len (qreva (any_list3) ((any1::any_list4))) = SUCC (plus (len (any_list3)) (len (any_list4)))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
SUCC (plus (len (any_list3)) (SUCC (len (any_list4)))) = SUCC (plus (len (any_list3)) (SUCC (len (any_list4))))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:0.)
=================================================
Progress: 50


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : len (qreva (any_list3) ((any1::any_list4))) = SUCC (plus (len (any_list3)) (len (any_list4)))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
SUCC (plus (len (any_list3)) (SUCC (len (any_list4)))) = SUCC (plus (len (any_list3)) (SUCC (len (any_list4))))

0 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 0.)


No conjecture
Proof Success
Proof
assert forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
induction any_list1
reflexivity
simpl in goal
induction any_list2
simpl in goal
rewrite IH1 in goal at 0
simpl in goal
assert forall (nat1:nat), plus (nat1) (SUCC (ZERO)) = SUCC (plus (nat1) (ZERO))
induction nat1
reflexivity
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 0
reflexivity
simpl in goal
rewrite IH1 in goal at 0
simpl in goal
assert forall (nat1:nat) (nat2:nat), plus (nat2) (SUCC (nat1)) = SUCC (plus (nat2) (nat1))
induction nat2
reflexivity
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma4 in goal at 1
reflexivity
Qed
File "_none_", lines 88-90, characters 2-22:
Warning 8 [partial-match]: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
[]

File "_none_", lines 88-90, characters 2-22:
Warning 8 [partial-match]: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
[]
