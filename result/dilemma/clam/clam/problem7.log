Enter the definition file path (1/2) : 
> Enter the definition file path (2/2) : 
> Choose the proof type :
1) Interactive Mode 	 2) Auto Mode
Enter the goal : =================================================
Progress: 1


No conjecture
>>> assert forall (x:any list) (y:any list), len (qreva (x) (y)) = plus (len (x)) (len (y))(rank : 0)


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))

---------------------------------------
forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
induction any_list1(rank:12)
induction any_list2(rank:12)
=================================================
Progress: 2


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))

---------------------------------------
forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))

0 goal(s) more...

0 conjecture(s) more...
>>> induction any_list1(rank : 12)


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), len (qreva ((Nil)) (any_list2)) = plus (len ((Nil))) (len (any_list2))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3)
=================================================
Progress: 3


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), len (qreva ((Nil)) (any_list2)) = plus (len ((Nil))) (len (any_list2))

1 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 3)


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), len (qreva ((any1::any_list3)) (any_list2)) = plus (len ((any1::any_list3))) (len (any_list2))

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:3)
=================================================
Progress: 4


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), len (qreva ((any1::any_list3)) (any_list2)) = plus (len ((any1::any_list3))) (len (any_list2))

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3)


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), len (qreva (any_list3) ((any1::any_list2))) = SUCC (plus (len (any_list3)) (len (any_list2)))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH1 in goal at 0(rank:11)
induction any_list2(rank:12)
rewrite <- IH1 in goal at 0(rank:11)
=================================================
Progress: 5


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), len (qreva (any_list3) ((any1::any_list2))) = SUCC (plus (len (any_list3)) (len (any_list2)))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 11)


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), plus (len (any_list3)) (len ((any1::any_list2))) = SUCC (plus (len (any_list3)) (len (any_list2)))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:3)
=================================================
Progress: 6


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), plus (len (any_list3)) (len ((any1::any_list2))) = SUCC (plus (len (any_list3)) (len (any_list2)))

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3)


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), plus (len (any_list3)) (SUCC (len (any_list2))) = SUCC (plus (len (any_list3)) (len (any_list2)))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
induction any_list2(rank:12)
rewrite <- IH1 in goal at 0(rank:19)
=================================================
Progress: 7


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), len (qreva (any_list3) ((any1::any_list2))) = SUCC (plus (len (any_list3)) (len (any_list2)))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 11)


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), len (qreva (any_list3) ((any1::any_list2))) = SUCC (len (qreva (any_list3) (any_list2)))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
intro any_list2(rank:3)
=================================================
Progress: 8


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), len (qreva (any_list3) ((any1::any_list2))) = SUCC (len (qreva (any_list3) (any_list2)))

0 goal(s) more...

0 conjecture(s) more...
>>> intro any_list2(rank : 3)


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
---------------------------------------
len (qreva (any_list3) ((any1::any_list2))) = SUCC (len (qreva (any_list3) (any_list2)))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 1(rank:3)
=================================================
Progress: 9


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
---------------------------------------
len (qreva (any_list3) ((any1::any_list2))) = SUCC (len (qreva (any_list3) (any_list2)))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 3)


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
---------------------------------------
plus (len (any_list3)) (len ((any1::any_list2))) = SUCC (len (qreva (any_list3) (any_list2)))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:3)
=================================================
Progress: 10


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
---------------------------------------
plus (len (any_list3)) (len ((any1::any_list2))) = SUCC (len (qreva (any_list3) (any_list2)))

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3)


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
---------------------------------------
plus (len (any_list3)) (SUCC (len (any_list2))) = SUCC (len (qreva (any_list3) (any_list2)))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
intro any_list2
rewrite IH1 in goal at 1
simpl in goal
advanced_generalize done
Lemma : forall (any_list2:any list) (any_list3:any list), plus (len (any_list3)) (SUCC (len (any_list2))) = SUCC (len (qreva (any_list3) (any_list2)))
Model : any_list2: (Nil), any_list3: (8::(Nil))
Model : any_list2: (8::(0::(Nil))), any_list3: (Nil)
Model : any_list2: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000316 seconds
Result : true
New Env

;;
Lemma List
forall (any_list2:any list) (any_list3:any list), plus (len (any_list3)) (SUCC (len (any_list2))) = SUCC (len (qreva (any_list3) (any_list2)))
End of Lemma List


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
---------------------------------------
plus (len (any_list3)) (SUCC (len (any_list2))) = SUCC (len (qreva (any_list3) (any_list2)))

0 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 11


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
---------------------------------------
plus (len (any_list3)) (SUCC (len (any_list2))) = SUCC (len (qreva (any_list3) (any_list2)))

0 goal(s) more...

0 conjecture(s) more...
>>> assert forall (any_list2:any list) (any_list3:any list), plus (len (any_list3)) (SUCC (len (any_list2))) = SUCC (len (qreva (any_list3) (any_list2)))(rank : 0)


1st goal of : forall (any_list1:any list) (any_list2:any list), plus (len (any_list2)) (SUCC (len (any_list1))) = SUCC (len (qreva (any_list2) (any_list1)))

---------------------------------------
forall (any_list1:any list) (any_list2:any list), plus (len (any_list2)) (SUCC (len (any_list1))) = SUCC (len (qreva (any_list2) (any_list1)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction any_list1(rank:14)
induction any_list2(rank:14)
=================================================
Progress: 12


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))

---------------------------------------
forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))

0 goal(s) more...

0 conjecture(s) more...
>>> induction any_list2(rank : 12)


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any_list1:any list), len (qreva (any_list1) ((Nil))) = plus (len (any_list1)) (len ((Nil)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4)
=================================================
Progress: 13


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any_list1:any list), len (qreva (any_list1) ((Nil))) = plus (len (any_list1)) (len ((Nil)))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any_list1:any list), len (qreva (any_list1) ((Nil))) = plus (len (any_list1)) (ZERO)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:5)
=================================================
Progress: 14


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any_list1:any list), len (qreva (any_list1) ((Nil))) = plus (len (any_list1)) (ZERO)

1 goal(s) more...

0 conjecture(s) more...
>>> induction any_list1(rank : 5)


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
---------------------------------------
len (qreva ((Nil)) ((Nil))) = plus (len ((Nil))) (ZERO)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:4)
=================================================
Progress: 15


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
---------------------------------------
len (qreva ((Nil)) ((Nil))) = plus (len ((Nil))) (ZERO)

2 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : len (qreva (any_list3) ((Nil))) = plus (len (any_list3)) (ZERO)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
len (qreva ((any1::any_list3)) ((Nil))) = plus (len ((any1::any_list3))) (ZERO)

1 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:4)
=================================================
Progress: 16


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : len (qreva (any_list3) ((Nil))) = plus (len (any_list3)) (ZERO)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
len (qreva ((any1::any_list3)) ((Nil))) = plus (len ((any1::any_list3))) (ZERO)

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : len (qreva (any_list3) ((Nil))) = plus (len (any_list3)) (ZERO)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
len (qreva (any_list3) ((any1::(Nil)))) = SUCC (plus (len (any_list3)) (ZERO))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:4)
=================================================
Progress: 17


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : len (qreva (any_list3) ((Nil))) = plus (len (any_list3)) (ZERO)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
len (qreva (any_list3) ((any1::(Nil)))) = SUCC (plus (len (any_list3)) (ZERO))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : len (qreva (any_list3) ((Nil))) = plus (len (any_list3)) (ZERO)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
len (qreva (any_list3) ((any1::(Nil)))) = SUCC (len (qreva (any_list3) ((Nil))))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any_list3:any list), len (qreva (any_list3) ((any1::(Nil)))) = SUCC (len (qreva (any_list3) ((Nil))))
Model : any1: 1, any_list3: (Nil)
Model : any1: 3, any_list3: (Nil)
Model : any1: 1, any_list3: (6::(Nil))
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000279 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any_list3:any list), len (qreva (any_list3) ((any1::(Nil)))) = SUCC (len (qreva (any_list3) ((Nil))))
End of Lemma List


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : len (qreva (any_list3) ((Nil))) = plus (len (any_list3)) (ZERO)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
len (qreva (any_list3) ((any1::(Nil)))) = SUCC (len (qreva (any_list3) ((Nil))))

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 18


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : len (qreva (any_list3) ((Nil))) = plus (len (any_list3)) (ZERO)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
len (qreva (any_list3) ((any1::(Nil)))) = SUCC (len (qreva (any_list3) ((Nil))))

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (any1:any) (any_list3:any list), len (qreva (any_list3) ((any1::(Nil)))) = SUCC (len (qreva (any_list3) ((Nil))))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list), len (qreva (any_list1) ((any1::(Nil)))) = SUCC (len (qreva (any_list1) ((Nil))))

---------------------------------------
forall (any1:any) (any_list1:any list), len (qreva (any_list1) ((any1::(Nil)))) = SUCC (len (qreva (any_list1) ((Nil))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:6)
=================================================
Progress: 19


1st goal of : forall (any1:any) (any_list1:any list), len (qreva (any_list1) ((any1::(Nil)))) = SUCC (len (qreva (any_list1) ((Nil))))

---------------------------------------
forall (any1:any) (any_list1:any list), len (qreva (any_list1) ((any1::(Nil)))) = SUCC (len (qreva (any_list1) ((Nil))))

0 goal(s) more...

1 conjecture(s) more...
>>> induction any_list1(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list), len (qreva (any_list1) ((any1::(Nil)))) = SUCC (len (qreva (any_list1) ((Nil))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any), len (qreva ((Nil)) ((any1::(Nil)))) = SUCC (len (qreva ((Nil)) ((Nil))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5)
=================================================
Progress: 20


1st goal of : forall (any1:any) (any_list1:any list), len (qreva (any_list1) ((any1::(Nil)))) = SUCC (len (qreva (any_list1) ((Nil))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any), len (qreva ((Nil)) ((any1::(Nil)))) = SUCC (len (qreva ((Nil)) ((Nil))))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list), len (qreva (any_list1) ((any1::(Nil)))) = SUCC (len (qreva (any_list1) ((Nil))))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), len (qreva (any_list2) ((any1::(Nil)))) = SUCC (len (qreva (any_list2) ((Nil))))
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), len (qreva ((any2::any_list2)) ((any1::(Nil)))) = SUCC (len (qreva ((any2::any_list2)) ((Nil))))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5)
=================================================
Progress: 21


1st goal of : forall (any1:any) (any_list1:any list), len (qreva (any_list1) ((any1::(Nil)))) = SUCC (len (qreva (any_list1) ((Nil))))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), len (qreva (any_list2) ((any1::(Nil)))) = SUCC (len (qreva (any_list2) ((Nil))))
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), len (qreva ((any2::any_list2)) ((any1::(Nil)))) = SUCC (len (qreva ((any2::any_list2)) ((Nil))))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list), len (qreva (any_list1) ((any1::(Nil)))) = SUCC (len (qreva (any_list1) ((Nil))))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), len (qreva (any_list2) ((any1::(Nil)))) = SUCC (len (qreva (any_list2) ((Nil))))
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), len (qreva (any_list2) ((any2::(any1::(Nil))))) = SUCC (len (qreva (any_list2) ((any2::(Nil)))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
intro any1(rank:5)
rewrite IH1 in goal at 0(rank:21)
=================================================
Progress: 22


1st goal of : forall (any1:any) (any_list1:any list), len (qreva (any_list1) ((any1::(Nil)))) = SUCC (len (qreva (any_list1) ((Nil))))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), len (qreva (any_list2) ((any1::(Nil)))) = SUCC (len (qreva (any_list2) ((Nil))))
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), len (qreva (any_list2) ((any2::(any1::(Nil))))) = SUCC (len (qreva (any_list2) ((any2::(Nil)))))

0 goal(s) more...

1 conjecture(s) more...
>>> intro any1(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list), len (qreva (any_list1) ((any1::(Nil)))) = SUCC (len (qreva (any_list1) ((Nil))))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), len (qreva (any_list2) ((any1::(Nil)))) = SUCC (len (qreva (any_list2) ((Nil))))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
len (qreva (any_list2) ((any2::(any1::(Nil))))) = SUCC (len (qreva (any_list2) ((any2::(Nil)))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:5)
=================================================
Progress: 23


1st goal of : forall (any1:any) (any_list1:any list), len (qreva (any_list1) ((any1::(Nil)))) = SUCC (len (qreva (any_list1) ((Nil))))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), len (qreva (any_list2) ((any1::(Nil)))) = SUCC (len (qreva (any_list2) ((Nil))))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
len (qreva (any_list2) ((any2::(any1::(Nil))))) = SUCC (len (qreva (any_list2) ((any2::(Nil)))))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list), len (qreva (any_list1) ((any1::(Nil)))) = SUCC (len (qreva (any_list1) ((Nil))))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), len (qreva (any_list2) ((any1::(Nil)))) = SUCC (len (qreva (any_list2) ((Nil))))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
len (qreva (any_list2) ((any2::(any1::(Nil))))) = SUCC (SUCC (len (qreva (any_list2) ((Nil)))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
rewrite IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any_list2:any list), len (qreva (any_list2) ((any2::(any1::(Nil))))) = SUCC (SUCC (len (qreva (any_list2) ((Nil)))))
Model : any1: 0, any2: 6, any_list2: (Nil)
Model : any1: 6, any2: 0, any_list2: (Nil)
Model : any1: 8, any2: 0, any_list2: (2::(Nil))
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000426 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any_list2:any list), len (qreva (any_list2) ((any2::(any1::(Nil))))) = SUCC (SUCC (len (qreva (any_list2) ((Nil)))))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list), len (qreva (any_list1) ((any1::(Nil)))) = SUCC (len (qreva (any_list1) ((Nil))))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), len (qreva (any_list2) ((any1::(Nil)))) = SUCC (len (qreva (any_list2) ((Nil))))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
len (qreva (any_list2) ((any2::(any1::(Nil))))) = SUCC (SUCC (len (qreva (any_list2) ((Nil)))))

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 24


1st goal of : forall (any1:any) (any_list1:any list), len (qreva (any_list1) ((any1::(Nil)))) = SUCC (len (qreva (any_list1) ((Nil))))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), len (qreva (any_list2) ((any1::(Nil)))) = SUCC (len (qreva (any_list2) ((Nil))))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
len (qreva (any_list2) ((any2::(any1::(Nil))))) = SUCC (SUCC (len (qreva (any_list2) ((Nil)))))

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any_list2:any list), len (qreva (any_list2) ((any2::(any1::(Nil))))) = SUCC (SUCC (len (qreva (any_list2) ((Nil)))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list), len (qreva (any_list1) ((any2::(any1::(Nil))))) = SUCC (SUCC (len (qreva (any_list1) ((Nil)))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), len (qreva (any_list1) ((any2::(any1::(Nil))))) = SUCC (SUCC (len (qreva (any_list1) ((Nil)))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:8)
=================================================
Progress: 25


1st goal of : forall (any1:any) (any2:any) (any_list1:any list), len (qreva (any_list1) ((any2::(any1::(Nil))))) = SUCC (SUCC (len (qreva (any_list1) ((Nil)))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), len (qreva (any_list1) ((any2::(any1::(Nil))))) = SUCC (SUCC (len (qreva (any_list1) ((Nil)))))

0 goal(s) more...

2 conjecture(s) more...
>>> induction any_list1(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list), len (qreva (any_list1) ((any2::(any1::(Nil))))) = SUCC (SUCC (len (qreva (any_list1) ((Nil)))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any), len (qreva ((Nil)) ((any2::(any1::(Nil))))) = SUCC (SUCC (len (qreva ((Nil)) ((Nil)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7)
=================================================
Progress: 26


1st goal of : forall (any1:any) (any2:any) (any_list1:any list), len (qreva (any_list1) ((any2::(any1::(Nil))))) = SUCC (SUCC (len (qreva (any_list1) ((Nil)))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any), len (qreva ((Nil)) ((any2::(any1::(Nil))))) = SUCC (SUCC (len (qreva ((Nil)) ((Nil)))))

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list), len (qreva (any_list1) ((any2::(any1::(Nil))))) = SUCC (SUCC (len (qreva (any_list1) ((Nil)))))
any_list1 : any list
any3 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any), len (qreva (any_list2) ((any2::(any1::(Nil))))) = SUCC (SUCC (len (qreva (any_list2) ((Nil)))))
Inductive1 : any_list1 = (any3::any_list2)
---------------------------------------
forall (any1:any) (any2:any), len (qreva ((any3::any_list2)) ((any2::(any1::(Nil))))) = SUCC (SUCC (len (qreva ((any3::any_list2)) ((Nil)))))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7)
=================================================
Progress: 27


1st goal of : forall (any1:any) (any2:any) (any_list1:any list), len (qreva (any_list1) ((any2::(any1::(Nil))))) = SUCC (SUCC (len (qreva (any_list1) ((Nil)))))
any_list1 : any list
any3 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any), len (qreva (any_list2) ((any2::(any1::(Nil))))) = SUCC (SUCC (len (qreva (any_list2) ((Nil)))))
Inductive1 : any_list1 = (any3::any_list2)
---------------------------------------
forall (any1:any) (any2:any), len (qreva ((any3::any_list2)) ((any2::(any1::(Nil))))) = SUCC (SUCC (len (qreva ((any3::any_list2)) ((Nil)))))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list), len (qreva (any_list1) ((any2::(any1::(Nil))))) = SUCC (SUCC (len (qreva (any_list1) ((Nil)))))
any_list1 : any list
any3 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any), len (qreva (any_list2) ((any2::(any1::(Nil))))) = SUCC (SUCC (len (qreva (any_list2) ((Nil)))))
Inductive1 : any_list1 = (any3::any_list2)
---------------------------------------
forall (any1:any) (any2:any), len (qreva (any_list2) ((any3::(any2::(any1::(Nil)))))) = SUCC (SUCC (len (qreva (any_list2) ((any3::(Nil))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro any1(rank:7)
intro any2(rank:7)
=================================================
Progress: 28


1st goal of : forall (any1:any) (any2:any) (any_list1:any list), len (qreva (any_list1) ((any2::(any1::(Nil))))) = SUCC (SUCC (len (qreva (any_list1) ((Nil)))))
any_list1 : any list
any3 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any), len (qreva (any_list2) ((any2::(any1::(Nil))))) = SUCC (SUCC (len (qreva (any_list2) ((Nil)))))
Inductive1 : any_list1 = (any3::any_list2)
---------------------------------------
forall (any1:any) (any2:any), len (qreva (any_list2) ((any3::(any2::(any1::(Nil)))))) = SUCC (SUCC (len (qreva (any_list2) ((any3::(Nil))))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any1(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list), len (qreva (any_list1) ((any2::(any1::(Nil))))) = SUCC (SUCC (len (qreva (any_list1) ((Nil)))))
any_list1 : any list
any3 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any), len (qreva (any_list2) ((any2::(any1::(Nil))))) = SUCC (SUCC (len (qreva (any_list2) ((Nil)))))
Inductive1 : any_list1 = (any3::any_list2)
any1 : any
---------------------------------------
forall (any2:any), len (qreva (any_list2) ((any3::(any2::(any1::(Nil)))))) = SUCC (SUCC (len (qreva (any_list2) ((any3::(Nil))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro any2(rank:7)
=================================================
Progress: 29


1st goal of : forall (any1:any) (any2:any) (any_list1:any list), len (qreva (any_list1) ((any2::(any1::(Nil))))) = SUCC (SUCC (len (qreva (any_list1) ((Nil)))))
any_list1 : any list
any3 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any), len (qreva (any_list2) ((any2::(any1::(Nil))))) = SUCC (SUCC (len (qreva (any_list2) ((Nil)))))
Inductive1 : any_list1 = (any3::any_list2)
---------------------------------------
forall (any1:any) (any2:any), len (qreva (any_list2) ((any3::(any2::(any1::(Nil)))))) = SUCC (SUCC (len (qreva (any_list2) ((any3::(Nil))))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any2(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list), len (qreva (any_list1) ((any2::(any1::(Nil))))) = SUCC (SUCC (len (qreva (any_list1) ((Nil)))))
any_list1 : any list
any3 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any), len (qreva (any_list2) ((any2::(any1::(Nil))))) = SUCC (SUCC (len (qreva (any_list2) ((Nil)))))
Inductive1 : any_list1 = (any3::any_list2)
any2 : any
---------------------------------------
forall (any1:any), len (qreva (any_list2) ((any3::(any2::(any1::(Nil)))))) = SUCC (SUCC (len (qreva (any_list2) ((any3::(Nil))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any_list2:any list), len (qreva (any_list2) ((any3::(any2::(any1::(Nil)))))) = SUCC (SUCC (len (qreva (any_list2) ((any3::(Nil))))))
Model : any1: 0, any2: 4, any3: 1, any_list2: (Nil)
Model : any1: 4, any2: 2, any3: 7, any_list2: (Nil)
Model : any1: 0, any2: 7, any3: 4, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000491 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any_list2:any list), len (qreva (any_list2) ((any3::(any2::(any1::(Nil)))))) = SUCC (SUCC (len (qreva (any_list2) ((any3::(Nil))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any_list1:any list), len (qreva (any_list1) ((any2::(any1::(Nil))))) = SUCC (SUCC (len (qreva (any_list1) ((Nil)))))
any_list1 : any list
any3 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any), len (qreva (any_list2) ((any2::(any1::(Nil))))) = SUCC (SUCC (len (qreva (any_list2) ((Nil)))))
Inductive1 : any_list1 = (any3::any_list2)
any2 : any
---------------------------------------
forall (any1:any), len (qreva (any_list2) ((any3::(any2::(any1::(Nil)))))) = SUCC (SUCC (len (qreva (any_list2) ((any3::(Nil))))))

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 30


1st goal of : forall (any1:any) (any2:any) (any_list1:any list), len (qreva (any_list1) ((any2::(any1::(Nil))))) = SUCC (SUCC (len (qreva (any_list1) ((Nil)))))
any_list1 : any list
any3 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any), len (qreva (any_list2) ((any2::(any1::(Nil))))) = SUCC (SUCC (len (qreva (any_list2) ((Nil)))))
Inductive1 : any_list1 = (any3::any_list2)
any2 : any
---------------------------------------
forall (any1:any), len (qreva (any_list2) ((any3::(any2::(any1::(Nil)))))) = SUCC (SUCC (len (qreva (any_list2) ((any3::(Nil))))))

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any_list2:any list), len (qreva (any_list2) ((any3::(any2::(any1::(Nil)))))) = SUCC (SUCC (len (qreva (any_list2) ((any3::(Nil))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), len (qreva (any_list1) ((any3::(any2::(any1::(Nil)))))) = SUCC (SUCC (len (qreva (any_list1) ((any3::(Nil))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), len (qreva (any_list1) ((any3::(any2::(any1::(Nil)))))) = SUCC (SUCC (len (qreva (any_list1) ((any3::(Nil))))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:10)
=================================================
Progress: 31


1st goal of : forall (any1:any) (any2:any) (any_list1:any list), len (qreva (any_list1) ((any2::(any1::(Nil))))) = SUCC (SUCC (len (qreva (any_list1) ((Nil)))))
any_list1 : any list
any3 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any), len (qreva (any_list2) ((any2::(any1::(Nil))))) = SUCC (SUCC (len (qreva (any_list2) ((Nil)))))
Inductive1 : any_list1 = (any3::any_list2)
any1 : any
---------------------------------------
forall (any2:any), len (qreva (any_list2) ((any3::(any2::(any1::(Nil)))))) = SUCC (SUCC (len (qreva (any_list2) ((any3::(Nil))))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any2(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list), len (qreva (any_list1) ((any2::(any1::(Nil))))) = SUCC (SUCC (len (qreva (any_list1) ((Nil)))))
any_list1 : any list
any3 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any), len (qreva (any_list2) ((any2::(any1::(Nil))))) = SUCC (SUCC (len (qreva (any_list2) ((Nil)))))
Inductive1 : any_list1 = (any3::any_list2)
any1 : any
any2 : any
---------------------------------------
len (qreva (any_list2) ((any3::(any2::(any1::(Nil)))))) = SUCC (SUCC (len (qreva (any_list2) ((any3::(Nil))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any_list2:any list), len (qreva (any_list2) ((any3::(any2::(any1::(Nil)))))) = SUCC (SUCC (len (qreva (any_list2) ((any3::(Nil))))))
Model : any1: 4, any2: 7, any3: 8, any_list2: (Nil)
Model : any1: 6, any2: 7, any3: 5, any_list2: (Nil)
Model : any1: 3, any2: 2, any3: 7, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000670 seconds
Result : true
=================================================
Progress: 32


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), len (qreva (any_list1) ((any3::(any2::(any1::(Nil)))))) = SUCC (SUCC (len (qreva (any_list1) ((any3::(Nil))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), len (qreva (any_list1) ((any3::(any2::(any1::(Nil)))))) = SUCC (SUCC (len (qreva (any_list1) ((any3::(Nil))))))

0 goal(s) more...

3 conjecture(s) more...
>>> induction any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), len (qreva (any_list1) ((any3::(any2::(any1::(Nil)))))) = SUCC (SUCC (len (qreva (any_list1) ((any3::(Nil))))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any), len (qreva ((Nil)) ((any3::(any2::(any1::(Nil)))))) = SUCC (SUCC (len (qreva ((Nil)) ((any3::(Nil))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9)
=================================================
Progress: 33


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), len (qreva (any_list1) ((any3::(any2::(any1::(Nil)))))) = SUCC (SUCC (len (qreva (any_list1) ((any3::(Nil))))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any), len (qreva ((Nil)) ((any3::(any2::(any1::(Nil)))))) = SUCC (SUCC (len (qreva ((Nil)) ((any3::(Nil))))))

1 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), len (qreva (any_list1) ((any3::(any2::(any1::(Nil)))))) = SUCC (SUCC (len (qreva (any_list1) ((any3::(Nil))))))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), len (qreva (any_list2) ((any3::(any2::(any1::(Nil)))))) = SUCC (SUCC (len (qreva (any_list2) ((any3::(Nil))))))
Inductive1 : any_list1 = (any4::any_list2)
---------------------------------------
forall (any1:any) (any2:any) (any3:any), len (qreva ((any4::any_list2)) ((any3::(any2::(any1::(Nil)))))) = SUCC (SUCC (len (qreva ((any4::any_list2)) ((any3::(Nil))))))

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 34


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), len (qreva (any_list1) ((any3::(any2::(any1::(Nil)))))) = SUCC (SUCC (len (qreva (any_list1) ((any3::(Nil))))))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), len (qreva (any_list2) ((any3::(any2::(any1::(Nil)))))) = SUCC (SUCC (len (qreva (any_list2) ((any3::(Nil))))))
Inductive1 : any_list1 = (any4::any_list2)
---------------------------------------
forall (any1:any) (any2:any) (any3:any), len (qreva ((any4::any_list2)) ((any3::(any2::(any1::(Nil)))))) = SUCC (SUCC (len (qreva ((any4::any_list2)) ((any3::(Nil))))))

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), len (qreva (any_list1) ((any3::(any2::(any1::(Nil)))))) = SUCC (SUCC (len (qreva (any_list1) ((any3::(Nil))))))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), len (qreva (any_list2) ((any3::(any2::(any1::(Nil)))))) = SUCC (SUCC (len (qreva (any_list2) ((any3::(Nil))))))
Inductive1 : any_list1 = (any4::any_list2)
---------------------------------------
forall (any1:any) (any2:any) (any3:any), len (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list2) ((any4::(any3::(Nil)))))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro any1(rank:9)
intro any2(rank:9)
intro any3(rank:9)
=================================================
Progress: 35


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), len (qreva (any_list1) ((any3::(any2::(any1::(Nil)))))) = SUCC (SUCC (len (qreva (any_list1) ((any3::(Nil))))))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), len (qreva (any_list2) ((any3::(any2::(any1::(Nil)))))) = SUCC (SUCC (len (qreva (any_list2) ((any3::(Nil))))))
Inductive1 : any_list1 = (any4::any_list2)
---------------------------------------
forall (any1:any) (any2:any) (any3:any), len (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list2) ((any4::(any3::(Nil)))))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any1(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), len (qreva (any_list1) ((any3::(any2::(any1::(Nil)))))) = SUCC (SUCC (len (qreva (any_list1) ((any3::(Nil))))))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), len (qreva (any_list2) ((any3::(any2::(any1::(Nil)))))) = SUCC (SUCC (len (qreva (any_list2) ((any3::(Nil))))))
Inductive1 : any_list1 = (any4::any_list2)
any1 : any
---------------------------------------
forall (any2:any) (any3:any), len (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list2) ((any4::(any3::(Nil)))))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro any2(rank:9)
intro any3(rank:9)
=================================================
Progress: 36


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), len (qreva (any_list1) ((any3::(any2::(any1::(Nil)))))) = SUCC (SUCC (len (qreva (any_list1) ((any3::(Nil))))))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), len (qreva (any_list2) ((any3::(any2::(any1::(Nil)))))) = SUCC (SUCC (len (qreva (any_list2) ((any3::(Nil))))))
Inductive1 : any_list1 = (any4::any_list2)
---------------------------------------
forall (any1:any) (any2:any) (any3:any), len (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list2) ((any4::(any3::(Nil)))))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any2(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), len (qreva (any_list1) ((any3::(any2::(any1::(Nil)))))) = SUCC (SUCC (len (qreva (any_list1) ((any3::(Nil))))))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), len (qreva (any_list2) ((any3::(any2::(any1::(Nil)))))) = SUCC (SUCC (len (qreva (any_list2) ((any3::(Nil))))))
Inductive1 : any_list1 = (any4::any_list2)
any2 : any
---------------------------------------
forall (any1:any) (any3:any), len (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list2) ((any4::(any3::(Nil)))))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro any3(rank:9)
=================================================
Progress: 37


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), len (qreva (any_list1) ((any3::(any2::(any1::(Nil)))))) = SUCC (SUCC (len (qreva (any_list1) ((any3::(Nil))))))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), len (qreva (any_list2) ((any3::(any2::(any1::(Nil)))))) = SUCC (SUCC (len (qreva (any_list2) ((any3::(Nil))))))
Inductive1 : any_list1 = (any4::any_list2)
---------------------------------------
forall (any1:any) (any2:any) (any3:any), len (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list2) ((any4::(any3::(Nil)))))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any3(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), len (qreva (any_list1) ((any3::(any2::(any1::(Nil)))))) = SUCC (SUCC (len (qreva (any_list1) ((any3::(Nil))))))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), len (qreva (any_list2) ((any3::(any2::(any1::(Nil)))))) = SUCC (SUCC (len (qreva (any_list2) ((any3::(Nil))))))
Inductive1 : any_list1 = (any4::any_list2)
any3 : any
---------------------------------------
forall (any1:any) (any2:any), len (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list2) ((any4::(any3::(Nil)))))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), len (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list2) ((any4::(any3::(Nil)))))))
Model : any1: 8, any2: 8, any3: 0, any4: 7, any_list2: (Nil)
Model : any1: 6, any2: 0, any3: 0, any4: 1, any_list2: (Nil)
Model : any1: 4, any2: 5, any3: 3, any4: 3, any_list2: (5::(Nil))
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.001190 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), len (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list2) ((any4::(any3::(Nil)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), len (qreva (any_list1) ((any3::(any2::(any1::(Nil)))))) = SUCC (SUCC (len (qreva (any_list1) ((any3::(Nil))))))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), len (qreva (any_list2) ((any3::(any2::(any1::(Nil)))))) = SUCC (SUCC (len (qreva (any_list2) ((any3::(Nil))))))
Inductive1 : any_list1 = (any4::any_list2)
any3 : any
---------------------------------------
forall (any1:any) (any2:any), len (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list2) ((any4::(any3::(Nil)))))))

0 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 38


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), len (qreva (any_list1) ((any3::(any2::(any1::(Nil)))))) = SUCC (SUCC (len (qreva (any_list1) ((any3::(Nil))))))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), len (qreva (any_list2) ((any3::(any2::(any1::(Nil)))))) = SUCC (SUCC (len (qreva (any_list2) ((any3::(Nil))))))
Inductive1 : any_list1 = (any4::any_list2)
any3 : any
---------------------------------------
forall (any1:any) (any2:any), len (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list2) ((any4::(any3::(Nil)))))))

0 goal(s) more...

3 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), len (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list2) ((any4::(any3::(Nil)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), len (qreva (any_list1) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list1) ((any4::(any3::(Nil)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), len (qreva (any_list1) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list1) ((any4::(any3::(Nil)))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:12)
=================================================
Progress: 39


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), len (qreva (any_list1) ((any3::(any2::(any1::(Nil)))))) = SUCC (SUCC (len (qreva (any_list1) ((any3::(Nil))))))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), len (qreva (any_list2) ((any3::(any2::(any1::(Nil)))))) = SUCC (SUCC (len (qreva (any_list2) ((any3::(Nil))))))
Inductive1 : any_list1 = (any4::any_list2)
any1 : any
---------------------------------------
forall (any2:any) (any3:any), len (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list2) ((any4::(any3::(Nil)))))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any2(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), len (qreva (any_list1) ((any3::(any2::(any1::(Nil)))))) = SUCC (SUCC (len (qreva (any_list1) ((any3::(Nil))))))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), len (qreva (any_list2) ((any3::(any2::(any1::(Nil)))))) = SUCC (SUCC (len (qreva (any_list2) ((any3::(Nil))))))
Inductive1 : any_list1 = (any4::any_list2)
any1 : any
any2 : any
---------------------------------------
forall (any3:any), len (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list2) ((any4::(any3::(Nil)))))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro any3(rank:9)
=================================================
Progress: 40


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), len (qreva (any_list1) ((any3::(any2::(any1::(Nil)))))) = SUCC (SUCC (len (qreva (any_list1) ((any3::(Nil))))))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), len (qreva (any_list2) ((any3::(any2::(any1::(Nil)))))) = SUCC (SUCC (len (qreva (any_list2) ((any3::(Nil))))))
Inductive1 : any_list1 = (any4::any_list2)
any1 : any
---------------------------------------
forall (any2:any) (any3:any), len (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list2) ((any4::(any3::(Nil)))))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any3(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), len (qreva (any_list1) ((any3::(any2::(any1::(Nil)))))) = SUCC (SUCC (len (qreva (any_list1) ((any3::(Nil))))))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), len (qreva (any_list2) ((any3::(any2::(any1::(Nil)))))) = SUCC (SUCC (len (qreva (any_list2) ((any3::(Nil))))))
Inductive1 : any_list1 = (any4::any_list2)
any1 : any
any3 : any
---------------------------------------
forall (any2:any), len (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list2) ((any4::(any3::(Nil)))))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), len (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list2) ((any4::(any3::(Nil)))))))
Model : any1: 4, any2: 0, any3: 1, any4: 0, any_list2: (0::(Nil))
Model : any1: 6, any2: 5, any3: 0, any4: 1, any_list2: (Nil)
Model : any1: 8, any2: 2, any3: 8, any4: 7, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.001068 seconds
Result : true
=================================================
Progress: 41


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), len (qreva (any_list1) ((any3::(any2::(any1::(Nil)))))) = SUCC (SUCC (len (qreva (any_list1) ((any3::(Nil))))))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), len (qreva (any_list2) ((any3::(any2::(any1::(Nil)))))) = SUCC (SUCC (len (qreva (any_list2) ((any3::(Nil))))))
Inductive1 : any_list1 = (any4::any_list2)
any2 : any
---------------------------------------
forall (any1:any) (any3:any), len (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list2) ((any4::(any3::(Nil)))))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any3(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), len (qreva (any_list1) ((any3::(any2::(any1::(Nil)))))) = SUCC (SUCC (len (qreva (any_list1) ((any3::(Nil))))))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), len (qreva (any_list2) ((any3::(any2::(any1::(Nil)))))) = SUCC (SUCC (len (qreva (any_list2) ((any3::(Nil))))))
Inductive1 : any_list1 = (any4::any_list2)
any2 : any
any3 : any
---------------------------------------
forall (any1:any), len (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list2) ((any4::(any3::(Nil)))))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), len (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list2) ((any4::(any3::(Nil)))))))
Model : any1: 8, any2: 6, any3: 0, any4: 2, any_list2: (Nil)
Model : any1: 3, any2: 1, any3: 0, any4: 1, any_list2: (Nil)
Model : any1: 4, any2: 2, any3: 3, any4: 3, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000836 seconds
Result : true
=================================================
Progress: 42


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), len (qreva (any_list1) ((any3::(any2::(any1::(Nil)))))) = SUCC (SUCC (len (qreva (any_list1) ((any3::(Nil))))))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), len (qreva (any_list2) ((any3::(any2::(any1::(Nil)))))) = SUCC (SUCC (len (qreva (any_list2) ((any3::(Nil))))))
Inductive1 : any_list1 = (any4::any_list2)
any1 : any
any2 : any
---------------------------------------
forall (any3:any), len (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list2) ((any4::(any3::(Nil)))))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any3(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), len (qreva (any_list1) ((any3::(any2::(any1::(Nil)))))) = SUCC (SUCC (len (qreva (any_list1) ((any3::(Nil))))))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), len (qreva (any_list2) ((any3::(any2::(any1::(Nil)))))) = SUCC (SUCC (len (qreva (any_list2) ((any3::(Nil))))))
Inductive1 : any_list1 = (any4::any_list2)
any1 : any
any2 : any
any3 : any
---------------------------------------
len (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list2) ((any4::(any3::(Nil)))))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), len (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list2) ((any4::(any3::(Nil)))))))
Model : any1: 4, any2: 8, any3: 5, any4: 6, any_list2: (Nil)
Model : any1: 3, any2: 2, any3: 1, any4: 6, any_list2: (Nil)
Model : any1: 7, any2: 1, any3: 4, any4: 8, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.001033 seconds
Result : true
=================================================
Progress: 43


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), len (qreva (any_list3) ((any1::any_list2))) = SUCC (plus (len (any_list3)) (len (any_list2)))

0 goal(s) more...

0 conjecture(s) more...
>>> induction any_list2(rank : 12)


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
len (qreva (any_list3) ((any1::(Nil)))) = SUCC (plus (len (any_list3)) (len ((Nil))))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4)
=================================================
Progress: 44


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
len (qreva (any_list3) ((any1::(Nil)))) = SUCC (plus (len (any_list3)) (len ((Nil))))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
len (qreva (any_list3) ((any1::(Nil)))) = SUCC (plus (len (any_list3)) (ZERO))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:4)
=================================================
Progress: 45


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
len (qreva (any_list3) ((any1::(Nil)))) = SUCC (plus (len (any_list3)) (ZERO))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
plus (len (any_list3)) (len ((any1::(Nil)))) = SUCC (plus (len (any_list3)) (ZERO))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4)
=================================================
Progress: 46


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
plus (len (any_list3)) (len ((any1::(Nil)))) = SUCC (plus (len (any_list3)) (ZERO))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
plus (len (any_list3)) (SUCC (ZERO)) = SUCC (plus (len (any_list3)) (ZERO))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
simpl in goal
advanced_generalize done
Lemma : forall (arg1:nat), plus (arg1) (SUCC (ZERO)) = SUCC (plus (arg1) (ZERO))
Model : arg1: ZERO
Model : arg1: ZERO
Model : arg1: ZERO
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000047 seconds
Result : true
New Env

;;
Lemma List
forall (arg1:nat), plus (arg1) (SUCC (ZERO)) = SUCC (plus (arg1) (ZERO))
End of Lemma List


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
plus (len (any_list3)) (SUCC (ZERO)) = SUCC (plus (len (any_list3)) (ZERO))

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 47


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
plus (len (any_list3)) (SUCC (ZERO)) = SUCC (plus (len (any_list3)) (ZERO))

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (arg1:nat), plus (arg1) (SUCC (ZERO)) = SUCC (plus (arg1) (ZERO))(rank : 0)


1st goal of : forall (nat1:nat), plus (nat1) (SUCC (ZERO)) = SUCC (plus (nat1) (ZERO))

---------------------------------------
forall (nat1:nat), plus (nat1) (SUCC (ZERO)) = SUCC (plus (nat1) (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:6)
=================================================
Progress: 48


1st goal of : forall (nat1:nat), plus (nat1) (SUCC (ZERO)) = SUCC (plus (nat1) (ZERO))

---------------------------------------
forall (nat1:nat), plus (nat1) (SUCC (ZERO)) = SUCC (plus (nat1) (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 6)


1st goal of : forall (nat1:nat), plus (nat1) (SUCC (ZERO)) = SUCC (plus (nat1) (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
plus (ZERO) (SUCC (ZERO)) = SUCC (plus (ZERO) (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5)
=================================================
Progress: 49


1st goal of : forall (nat1:nat), plus (nat1) (SUCC (ZERO)) = SUCC (plus (nat1) (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
plus (ZERO) (SUCC (ZERO)) = SUCC (plus (ZERO) (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5)


1st goal of : forall (nat1:nat), plus (nat1) (SUCC (ZERO)) = SUCC (plus (nat1) (ZERO))
nat1 : nat
nat2 : nat
IH1 : plus (nat2) (SUCC (ZERO)) = SUCC (plus (nat2) (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
plus (SUCC (nat2)) (SUCC (ZERO)) = SUCC (plus (SUCC (nat2)) (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5)
=================================================
Progress: 50


1st goal of : forall (nat1:nat), plus (nat1) (SUCC (ZERO)) = SUCC (plus (nat1) (ZERO))
nat1 : nat
nat2 : nat
IH1 : plus (nat2) (SUCC (ZERO)) = SUCC (plus (nat2) (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
plus (SUCC (nat2)) (SUCC (ZERO)) = SUCC (plus (SUCC (nat2)) (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5)


1st goal of : forall (nat1:nat), plus (nat1) (SUCC (ZERO)) = SUCC (plus (nat1) (ZERO))
nat1 : nat
nat2 : nat
IH1 : plus (nat2) (SUCC (ZERO)) = SUCC (plus (nat2) (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (nat2) (SUCC (ZERO))) = SUCC (SUCC (plus (nat2) (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:13)
rewrite <- IH1 in goal at 0(rank:13)
=================================================
Progress: 51


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), plus (len (any_list3)) (SUCC (len (any_list2))) = SUCC (plus (len (any_list3)) (len (any_list2)))

0 goal(s) more...

0 conjecture(s) more...
>>> induction any_list2(rank : 12)


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
plus (len (any_list3)) (SUCC (len ((Nil)))) = SUCC (plus (len (any_list3)) (len ((Nil))))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4)
=================================================
Progress: 52


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
plus (len (any_list3)) (SUCC (len ((Nil)))) = SUCC (plus (len (any_list3)) (len ((Nil))))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
plus (len (any_list3)) (SUCC (ZERO)) = SUCC (plus (len (any_list3)) (ZERO))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
advanced_generalize done
Lemma : forall (arg2:nat), plus (arg2) (SUCC (ZERO)) = SUCC (plus (arg2) (ZERO))
Model : arg2: ZERO
Model : arg2: ZERO
Model : arg2: SUCC (ZERO)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000064 seconds
Result : true
New Env

;;
Lemma List
forall (arg2:nat), plus (arg2) (SUCC (ZERO)) = SUCC (plus (arg2) (ZERO))
End of Lemma List


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
plus (len (any_list3)) (SUCC (ZERO)) = SUCC (plus (len (any_list3)) (ZERO))

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 53


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
plus (len (any_list3)) (SUCC (ZERO)) = SUCC (plus (len (any_list3)) (ZERO))

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (arg2:nat), plus (arg2) (SUCC (ZERO)) = SUCC (plus (arg2) (ZERO))(rank : 0)


1st goal of : forall (nat1:nat), plus (nat1) (SUCC (ZERO)) = SUCC (plus (nat1) (ZERO))

---------------------------------------
forall (nat1:nat), plus (nat1) (SUCC (ZERO)) = SUCC (plus (nat1) (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:6)
=================================================
Progress: 54


1st goal of : forall (nat1:nat), plus (nat1) (SUCC (ZERO)) = SUCC (plus (nat1) (ZERO))

---------------------------------------
forall (nat1:nat), plus (nat1) (SUCC (ZERO)) = SUCC (plus (nat1) (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 6)


1st goal of : forall (nat1:nat), plus (nat1) (SUCC (ZERO)) = SUCC (plus (nat1) (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
plus (ZERO) (SUCC (ZERO)) = SUCC (plus (ZERO) (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5)
=================================================
Progress: 55


1st goal of : forall (nat1:nat), plus (nat1) (SUCC (ZERO)) = SUCC (plus (nat1) (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
plus (ZERO) (SUCC (ZERO)) = SUCC (plus (ZERO) (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5)


1st goal of : forall (nat1:nat), plus (nat1) (SUCC (ZERO)) = SUCC (plus (nat1) (ZERO))
nat1 : nat
nat2 : nat
IH1 : plus (nat2) (SUCC (ZERO)) = SUCC (plus (nat2) (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
plus (SUCC (nat2)) (SUCC (ZERO)) = SUCC (plus (SUCC (nat2)) (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5)
=================================================
Progress: 56


1st goal of : forall (nat1:nat), plus (nat1) (SUCC (ZERO)) = SUCC (plus (nat1) (ZERO))
nat1 : nat
nat2 : nat
IH1 : plus (nat2) (SUCC (ZERO)) = SUCC (plus (nat2) (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
plus (SUCC (nat2)) (SUCC (ZERO)) = SUCC (plus (SUCC (nat2)) (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5)


1st goal of : forall (nat1:nat), plus (nat1) (SUCC (ZERO)) = SUCC (plus (nat1) (ZERO))
nat1 : nat
nat2 : nat
IH1 : plus (nat2) (SUCC (ZERO)) = SUCC (plus (nat2) (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (nat2) (SUCC (ZERO))) = SUCC (SUCC (plus (nat2) (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:13)
rewrite <- IH1 in goal at 0(rank:13)
=================================================
Progress: 57


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), len (qreva (any_list1) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list1) ((any4::(any3::(Nil)))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), len (qreva (any_list1) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list1) ((any4::(any3::(Nil)))))))

0 goal(s) more...

4 conjecture(s) more...
>>> induction any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), len (qreva (any_list1) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list1) ((any4::(any3::(Nil)))))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), len (qreva ((Nil)) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva ((Nil)) ((any4::(any3::(Nil)))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11)
=================================================
Progress: 58


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), len (qreva (any_list1) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list1) ((any4::(any3::(Nil)))))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), len (qreva ((Nil)) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva ((Nil)) ((any4::(any3::(Nil)))))))

1 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), len (qreva (any_list1) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list1) ((any4::(any3::(Nil)))))))
any_list1 : any list
any5 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), len (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list2) ((any4::(any3::(Nil)))))))
Inductive1 : any_list1 = (any5::any_list2)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), len (qreva ((any5::any_list2)) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva ((any5::any_list2)) ((any4::(any3::(Nil)))))))

0 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:11)
=================================================
Progress: 59


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), len (qreva (any_list1) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list1) ((any4::(any3::(Nil)))))))
any_list1 : any list
any5 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), len (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list2) ((any4::(any3::(Nil)))))))
Inductive1 : any_list1 = (any5::any_list2)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), len (qreva ((any5::any_list2)) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva ((any5::any_list2)) ((any4::(any3::(Nil)))))))

0 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), len (qreva (any_list1) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list1) ((any4::(any3::(Nil)))))))
any_list1 : any list
any5 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), len (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list2) ((any4::(any3::(Nil)))))))
Inductive1 : any_list1 = (any5::any_list2)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), len (qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil)))))))) = SUCC (SUCC (len (qreva (any_list2) ((any5::(any4::(any3::(Nil))))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
intro any1(rank:11)
intro any2(rank:11)
intro any3(rank:11)
intro any4(rank:11)
=================================================
Progress: 60


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), len (qreva (any_list1) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list1) ((any4::(any3::(Nil)))))))
any_list1 : any list
any5 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), len (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list2) ((any4::(any3::(Nil)))))))
Inductive1 : any_list1 = (any5::any_list2)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), len (qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil)))))))) = SUCC (SUCC (len (qreva (any_list2) ((any5::(any4::(any3::(Nil))))))))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any1(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), len (qreva (any_list1) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list1) ((any4::(any3::(Nil)))))))
any_list1 : any list
any5 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), len (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list2) ((any4::(any3::(Nil)))))))
Inductive1 : any_list1 = (any5::any_list2)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any), len (qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil)))))))) = SUCC (SUCC (len (qreva (any_list2) ((any5::(any4::(any3::(Nil))))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any2(rank:11)
intro any3(rank:11)
intro any4(rank:11)
=================================================
Progress: 61


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), len (qreva (any_list1) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list1) ((any4::(any3::(Nil)))))))
any_list1 : any list
any5 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), len (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list2) ((any4::(any3::(Nil)))))))
Inductive1 : any_list1 = (any5::any_list2)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), len (qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil)))))))) = SUCC (SUCC (len (qreva (any_list2) ((any5::(any4::(any3::(Nil))))))))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any2(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), len (qreva (any_list1) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list1) ((any4::(any3::(Nil)))))))
any_list1 : any list
any5 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), len (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list2) ((any4::(any3::(Nil)))))))
Inductive1 : any_list1 = (any5::any_list2)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any), len (qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil)))))))) = SUCC (SUCC (len (qreva (any_list2) ((any5::(any4::(any3::(Nil))))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any3(rank:11)
intro any4(rank:11)
=================================================
Progress: 62


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), len (qreva (any_list1) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list1) ((any4::(any3::(Nil)))))))
any_list1 : any list
any5 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), len (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list2) ((any4::(any3::(Nil)))))))
Inductive1 : any_list1 = (any5::any_list2)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), len (qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil)))))))) = SUCC (SUCC (len (qreva (any_list2) ((any5::(any4::(any3::(Nil))))))))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), len (qreva (any_list1) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list1) ((any4::(any3::(Nil)))))))
any_list1 : any list
any5 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), len (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list2) ((any4::(any3::(Nil)))))))
Inductive1 : any_list1 = (any5::any_list2)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any), len (qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil)))))))) = SUCC (SUCC (len (qreva (any_list2) ((any5::(any4::(any3::(Nil))))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro any4(rank:11)
=================================================
Progress: 63


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), len (qreva (any_list1) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list1) ((any4::(any3::(Nil)))))))
any_list1 : any list
any5 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), len (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list2) ((any4::(any3::(Nil)))))))
Inductive1 : any_list1 = (any5::any_list2)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), len (qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil)))))))) = SUCC (SUCC (len (qreva (any_list2) ((any5::(any4::(any3::(Nil))))))))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), len (qreva (any_list1) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list1) ((any4::(any3::(Nil)))))))
any_list1 : any list
any5 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), len (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list2) ((any4::(any3::(Nil)))))))
Inductive1 : any_list1 = (any5::any_list2)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any), len (qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil)))))))) = SUCC (SUCC (len (qreva (any_list2) ((any5::(any4::(any3::(Nil))))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any4
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list2:any list), len (qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil)))))))) = SUCC (SUCC (len (qreva (any_list2) ((any5::(any4::(any3::(Nil))))))))
Model : any1: 1, any2: 5, any3: 0, any4: 5, any5: 5, any_list2: (Nil)
Model : any1: 1, any2: 5, any3: 1, any4: 0, any5: 5, any_list2: (1::(Nil))
Model : any1: 3, any2: 8, any3: 1, any4: 5, any5: 0, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.001445 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list2:any list), len (qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil)))))))) = SUCC (SUCC (len (qreva (any_list2) ((any5::(any4::(any3::(Nil))))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), len (qreva (any_list1) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list1) ((any4::(any3::(Nil)))))))
any_list1 : any list
any5 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), len (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list2) ((any4::(any3::(Nil)))))))
Inductive1 : any_list1 = (any5::any_list2)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any), len (qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil)))))))) = SUCC (SUCC (len (qreva (any_list2) ((any5::(any4::(any3::(Nil))))))))

0 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 64


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), len (qreva (any_list1) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list1) ((any4::(any3::(Nil)))))))
any_list1 : any list
any5 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), len (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list2) ((any4::(any3::(Nil)))))))
Inductive1 : any_list1 = (any5::any_list2)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any), len (qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil)))))))) = SUCC (SUCC (len (qreva (any_list2) ((any5::(any4::(any3::(Nil))))))))

0 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list2:any list), len (qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil)))))))) = SUCC (SUCC (len (qreva (any_list2) ((any5::(any4::(any3::(Nil))))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), len (qreva (any_list1) ((any5::(any4::(any3::(any2::(any1::(Nil)))))))) = SUCC (SUCC (len (qreva (any_list1) ((any5::(any4::(any3::(Nil))))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), len (qreva (any_list1) ((any5::(any4::(any3::(any2::(any1::(Nil)))))))) = SUCC (SUCC (len (qreva (any_list1) ((any5::(any4::(any3::(Nil))))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:14)
=================================================
Progress: 65


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), len (qreva (any_list1) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list1) ((any4::(any3::(Nil)))))))
any_list1 : any list
any5 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), len (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list2) ((any4::(any3::(Nil)))))))
Inductive1 : any_list1 = (any5::any_list2)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any), len (qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil)))))))) = SUCC (SUCC (len (qreva (any_list2) ((any5::(any4::(any3::(Nil))))))))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any2(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), len (qreva (any_list1) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list1) ((any4::(any3::(Nil)))))))
any_list1 : any list
any5 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), len (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list2) ((any4::(any3::(Nil)))))))
Inductive1 : any_list1 = (any5::any_list2)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any), len (qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil)))))))) = SUCC (SUCC (len (qreva (any_list2) ((any5::(any4::(any3::(Nil))))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any3(rank:11)
intro any4(rank:11)
=================================================
Progress: 66


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), len (qreva (any_list1) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list1) ((any4::(any3::(Nil)))))))
any_list1 : any list
any5 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), len (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list2) ((any4::(any3::(Nil)))))))
Inductive1 : any_list1 = (any5::any_list2)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any), len (qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil)))))))) = SUCC (SUCC (len (qreva (any_list2) ((any5::(any4::(any3::(Nil))))))))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), len (qreva (any_list1) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list1) ((any4::(any3::(Nil)))))))
any_list1 : any list
any5 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), len (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list2) ((any4::(any3::(Nil)))))))
Inductive1 : any_list1 = (any5::any_list2)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any), len (qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil)))))))) = SUCC (SUCC (len (qreva (any_list2) ((any5::(any4::(any3::(Nil))))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro any4(rank:11)
=================================================
Progress: 67


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), len (qreva (any_list1) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list1) ((any4::(any3::(Nil)))))))
any_list1 : any list
any5 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), len (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list2) ((any4::(any3::(Nil)))))))
Inductive1 : any_list1 = (any5::any_list2)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any), len (qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil)))))))) = SUCC (SUCC (len (qreva (any_list2) ((any5::(any4::(any3::(Nil))))))))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), len (qreva (any_list1) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list1) ((any4::(any3::(Nil)))))))
any_list1 : any list
any5 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), len (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list2) ((any4::(any3::(Nil)))))))
Inductive1 : any_list1 = (any5::any_list2)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any), len (qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil)))))))) = SUCC (SUCC (len (qreva (any_list2) ((any5::(any4::(any3::(Nil))))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any4
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list2:any list), len (qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil)))))))) = SUCC (SUCC (len (qreva (any_list2) ((any5::(any4::(any3::(Nil))))))))
Model : any1: 0, any2: 3, any3: 0, any4: 3, any5: 1, any_list2: (Nil)
Model : any1: 8, any2: 3, any3: 6, any4: 0, any5: 0, any_list2: (6::(Nil))
Model : any1: 8, any2: 8, any3: 0, any4: 4, any5: 6, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.001576 seconds
Result : true
=================================================
Progress: 68


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), len (qreva (any_list1) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list1) ((any4::(any3::(Nil)))))))
any_list1 : any list
any5 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), len (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list2) ((any4::(any3::(Nil)))))))
Inductive1 : any_list1 = (any5::any_list2)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any), len (qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil)))))))) = SUCC (SUCC (len (qreva (any_list2) ((any5::(any4::(any3::(Nil))))))))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), len (qreva (any_list1) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list1) ((any4::(any3::(Nil)))))))
any_list1 : any list
any5 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), len (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list2) ((any4::(any3::(Nil)))))))
Inductive1 : any_list1 = (any5::any_list2)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any), len (qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil)))))))) = SUCC (SUCC (len (qreva (any_list2) ((any5::(any4::(any3::(Nil))))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro any4(rank:11)
=================================================
Progress: 69


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), len (qreva (any_list1) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list1) ((any4::(any3::(Nil)))))))
any_list1 : any list
any5 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), len (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list2) ((any4::(any3::(Nil)))))))
Inductive1 : any_list1 = (any5::any_list2)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any), len (qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil)))))))) = SUCC (SUCC (len (qreva (any_list2) ((any5::(any4::(any3::(Nil))))))))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), len (qreva (any_list1) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list1) ((any4::(any3::(Nil)))))))
any_list1 : any list
any5 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), len (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list2) ((any4::(any3::(Nil)))))))
Inductive1 : any_list1 = (any5::any_list2)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any), len (qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil)))))))) = SUCC (SUCC (len (qreva (any_list2) ((any5::(any4::(any3::(Nil))))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any4
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list2:any list), len (qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil)))))))) = SUCC (SUCC (len (qreva (any_list2) ((any5::(any4::(any3::(Nil))))))))
Model : any1: 0, any2: 8, any3: 3, any4: 2, any5: 3, any_list2: (Nil)
Model : any1: 0, any2: 1, any3: 8, any4: 8, any5: 4, any_list2: (Nil)
Model : any1: 1, any2: 2, any3: 0, any4: 6, any5: 6, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.001415 seconds
Result : true
=================================================
Progress: 70


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), len (qreva (any_list1) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list1) ((any4::(any3::(Nil)))))))
any_list1 : any list
any5 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), len (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list2) ((any4::(any3::(Nil)))))))
Inductive1 : any_list1 = (any5::any_list2)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any), len (qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil)))))))) = SUCC (SUCC (len (qreva (any_list2) ((any5::(any4::(any3::(Nil))))))))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), len (qreva (any_list1) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list1) ((any4::(any3::(Nil)))))))
any_list1 : any list
any5 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), len (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list2) ((any4::(any3::(Nil)))))))
Inductive1 : any_list1 = (any5::any_list2)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any), len (qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil)))))))) = SUCC (SUCC (len (qreva (any_list2) ((any5::(any4::(any3::(Nil))))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any4
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list2:any list), len (qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil)))))))) = SUCC (SUCC (len (qreva (any_list2) ((any5::(any4::(any3::(Nil))))))))
Model : any1: 3, any2: 7, any3: 0, any4: 4, any5: 8, any_list2: (Nil)
Model : any1: 1, any2: 3, any3: 1, any4: 6, any5: 6, any_list2: (Nil)
Model : any1: 1, any2: 0, any3: 0, any4: 3, any5: 5, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.001279 seconds
Result : true
=================================================
Progress: 71


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), len (qreva (any_list1) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list1) ((any4::(any3::(Nil)))))))
any_list1 : any list
any5 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), len (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list2) ((any4::(any3::(Nil)))))))
Inductive1 : any_list1 = (any5::any_list2)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any), len (qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil)))))))) = SUCC (SUCC (len (qreva (any_list2) ((any5::(any4::(any3::(Nil))))))))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), len (qreva (any_list1) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list1) ((any4::(any3::(Nil)))))))
any_list1 : any list
any5 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), len (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list2) ((any4::(any3::(Nil)))))))
Inductive1 : any_list1 = (any5::any_list2)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any), len (qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil)))))))) = SUCC (SUCC (len (qreva (any_list2) ((any5::(any4::(any3::(Nil))))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro any4(rank:11)
=================================================
Progress: 72


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), len (qreva (any_list1) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list1) ((any4::(any3::(Nil)))))))
any_list1 : any list
any5 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), len (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list2) ((any4::(any3::(Nil)))))))
Inductive1 : any_list1 = (any5::any_list2)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any), len (qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil)))))))) = SUCC (SUCC (len (qreva (any_list2) ((any5::(any4::(any3::(Nil))))))))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), len (qreva (any_list1) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list1) ((any4::(any3::(Nil)))))))
any_list1 : any list
any5 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), len (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list2) ((any4::(any3::(Nil)))))))
Inductive1 : any_list1 = (any5::any_list2)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any), len (qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil)))))))) = SUCC (SUCC (len (qreva (any_list2) ((any5::(any4::(any3::(Nil))))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any4
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list2:any list), len (qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil)))))))) = SUCC (SUCC (len (qreva (any_list2) ((any5::(any4::(any3::(Nil))))))))
Model : any1: 2, any2: 6, any3: 2, any4: 6, any5: 0, any_list2: (Nil)
Model : any1: 4, any2: 0, any3: 5, any4: 8, any5: 0, any_list2: (0::(Nil))
Model : any1: 7, any2: 5, any3: 2, any4: 1, any5: 8, any_list2: (2::(Nil))
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.002240 seconds
Result : true
=================================================
Progress: 73


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), len (qreva (any_list1) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list1) ((any4::(any3::(Nil)))))))
any_list1 : any list
any5 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), len (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list2) ((any4::(any3::(Nil)))))))
Inductive1 : any_list1 = (any5::any_list2)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any), len (qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil)))))))) = SUCC (SUCC (len (qreva (any_list2) ((any5::(any4::(any3::(Nil))))))))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), len (qreva (any_list1) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list1) ((any4::(any3::(Nil)))))))
any_list1 : any list
any5 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), len (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list2) ((any4::(any3::(Nil)))))))
Inductive1 : any_list1 = (any5::any_list2)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any), len (qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil)))))))) = SUCC (SUCC (len (qreva (any_list2) ((any5::(any4::(any3::(Nil))))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any4
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list2:any list), len (qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil)))))))) = SUCC (SUCC (len (qreva (any_list2) ((any5::(any4::(any3::(Nil))))))))
Model : any1: 7, any2: 8, any3: 0, any4: 1, any5: 6, any_list2: (Nil)
Model : any1: 0, any2: 3, any3: 7, any4: 4, any5: 0, any_list2: (7::(5::(Nil)))
Model : any1: 6, any2: 1, any3: 0, any4: 0, any5: 2, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.002002 seconds
Result : true
=================================================
Progress: 74


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), len (qreva (any_list1) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list1) ((any4::(any3::(Nil)))))))
any_list1 : any list
any5 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), len (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list2) ((any4::(any3::(Nil)))))))
Inductive1 : any_list1 = (any5::any_list2)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any), len (qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil)))))))) = SUCC (SUCC (len (qreva (any_list2) ((any5::(any4::(any3::(Nil))))))))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), len (qreva (any_list1) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list1) ((any4::(any3::(Nil)))))))
any_list1 : any list
any5 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), len (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list2) ((any4::(any3::(Nil)))))))
Inductive1 : any_list1 = (any5::any_list2)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any), len (qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil)))))))) = SUCC (SUCC (len (qreva (any_list2) ((any5::(any4::(any3::(Nil))))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any4
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list2:any list), len (qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil)))))))) = SUCC (SUCC (len (qreva (any_list2) ((any5::(any4::(any3::(Nil))))))))
Model : any1: 1, any2: 0, any3: 8, any4: 7, any5: 3, any_list2: (7::(Nil))
Model : any1: 1, any2: 0, any3: 0, any4: 7, any5: 1, any_list2: (Nil)
Model : any1: 4, any2: 4, any3: 8, any4: 0, any5: 5, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.001897 seconds
Result : true
=================================================
Progress: 75


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), len (qreva (any_list1) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list1) ((any4::(any3::(Nil)))))))
any_list1 : any list
any5 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), len (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list2) ((any4::(any3::(Nil)))))))
Inductive1 : any_list1 = (any5::any_list2)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any), len (qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil)))))))) = SUCC (SUCC (len (qreva (any_list2) ((any5::(any4::(any3::(Nil))))))))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), len (qreva (any_list1) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list1) ((any4::(any3::(Nil)))))))
any_list1 : any list
any5 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), len (qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil))))))) = SUCC (SUCC (len (qreva (any_list2) ((any4::(any3::(Nil)))))))
Inductive1 : any_list1 = (any5::any_list2)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
len (qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil)))))))) = SUCC (SUCC (len (qreva (any_list2) ((any5::(any4::(any3::(Nil))))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any4
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list2:any list), len (qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil)))))))) = SUCC (SUCC (len (qreva (any_list2) ((any5::(any4::(any3::(Nil))))))))
Model : any1: 5, any2: 0, any3: 0, any4: 8, any5: 1, any_list2: (Nil)
Model : any1: 6, any2: 2, any3: 0, any4: 1, any5: 5, any_list2: (Nil)
Model : any1: 0, any2: 3, any3: 6, any4: 5, any5: 6, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.001377 seconds
Result : true
=================================================
Progress: 76


1st goal of : forall (nat1:nat), plus (nat1) (SUCC (ZERO)) = SUCC (plus (nat1) (ZERO))
nat1 : nat
nat2 : nat
IH1 : plus (nat2) (SUCC (ZERO)) = SUCC (plus (nat2) (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (nat2) (SUCC (ZERO))) = SUCC (SUCC (plus (nat2) (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13)


1st goal of : forall (nat1:nat), plus (nat1) (SUCC (ZERO)) = SUCC (plus (nat1) (ZERO))
nat1 : nat
nat2 : nat
IH1 : plus (nat2) (SUCC (ZERO)) = SUCC (plus (nat2) (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (SUCC (plus (nat2) (ZERO))) = SUCC (SUCC (plus (nat2) (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:4)
=================================================
Progress: 77


1st goal of : forall (nat1:nat), plus (nat1) (SUCC (ZERO)) = SUCC (plus (nat1) (ZERO))
nat1 : nat
nat2 : nat
IH1 : plus (nat2) (SUCC (ZERO)) = SUCC (plus (nat2) (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (SUCC (plus (nat2) (ZERO))) = SUCC (SUCC (plus (nat2) (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
plus (len (any_list3)) (SUCC (ZERO)) = SUCC (plus (len (any_list3)) (ZERO))

1 goal(s) more...

0 conjecture(s) more...
Deduplication: 1
Tactic List : 2
rewrite lemma3 in goal at 0(rank:12)
rewrite <- lemma3 in goal at 0(rank:12)
=================================================
Progress: 78


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
plus (len (any_list3)) (SUCC (ZERO)) = SUCC (plus (len (any_list3)) (ZERO))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 12)


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
SUCC (plus (len (any_list3)) (ZERO)) = SUCC (plus (len (any_list3)) (ZERO))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3)
=================================================
Progress: 79


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
SUCC (plus (len (any_list3)) (ZERO)) = SUCC (plus (len (any_list3)) (ZERO))

1 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 3)


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : len (qreva (any_list3) ((any1::any_list4))) = SUCC (plus (len (any_list3)) (len (any_list4)))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
len (qreva (any_list3) ((any1::(any2::any_list4)))) = SUCC (plus (len (any_list3)) (len ((any2::any_list4))))

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 1
Tactic List : 1
simpl in goal(rank:3)
=================================================
Progress: 80


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : len (qreva (any_list3) ((any1::any_list4))) = SUCC (plus (len (any_list3)) (len (any_list4)))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
len (qreva (any_list3) ((any1::(any2::any_list4)))) = SUCC (plus (len (any_list3)) (len ((any2::any_list4))))

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3)


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : len (qreva (any_list3) ((any1::any_list4))) = SUCC (plus (len (any_list3)) (len (any_list4)))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
len (qreva (any_list3) ((any1::(any2::any_list4)))) = SUCC (plus (len (any_list3)) (SUCC (len (any_list4))))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:3)
=================================================
Progress: 81


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : len (qreva (any_list3) ((any1::any_list4))) = SUCC (plus (len (any_list3)) (len (any_list4)))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
len (qreva (any_list3) ((any1::(any2::any_list4)))) = SUCC (plus (len (any_list3)) (SUCC (len (any_list4))))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 3)


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : len (qreva (any_list3) ((any1::any_list4))) = SUCC (plus (len (any_list3)) (len (any_list4)))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
plus (len (any_list3)) (len ((any1::(any2::any_list4)))) = SUCC (plus (len (any_list3)) (SUCC (len (any_list4))))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:3)
=================================================
Progress: 82


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : len (qreva (any_list3) ((any1::any_list4))) = SUCC (plus (len (any_list3)) (len (any_list4)))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
plus (len (any_list3)) (len ((any1::(any2::any_list4)))) = SUCC (plus (len (any_list3)) (SUCC (len (any_list4))))

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3)


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : len (qreva (any_list3) ((any1::any_list4))) = SUCC (plus (len (any_list3)) (len (any_list4)))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
plus (len (any_list3)) (SUCC (SUCC (len (any_list4)))) = SUCC (plus (len (any_list3)) (SUCC (len (any_list4))))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 0
reflexivity
simpl in goal
rewrite IH1 in goal at 0
simpl in goal
advanced_generalize done
Lemma : forall (arg3:nat) (arg4:nat), plus (arg4) (SUCC (arg3)) = SUCC (plus (arg4) (arg3))
Model : arg3: SUCC (ZERO), arg4: ZERO
Model : arg3: SUCC (ZERO), arg4: ZERO
Model : arg3: ZERO, arg4: ZERO
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000055 seconds
Result : true
New Env

;;
Lemma List
forall (arg3:nat) (arg4:nat), plus (arg4) (SUCC (arg3)) = SUCC (plus (arg4) (arg3))
End of Lemma List


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : len (qreva (any_list3) ((any1::any_list4))) = SUCC (plus (len (any_list3)) (len (any_list4)))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
plus (len (any_list3)) (SUCC (SUCC (len (any_list4)))) = SUCC (plus (len (any_list3)) (SUCC (len (any_list4))))

0 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 83


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : len (qreva (any_list3) ((any1::any_list4))) = SUCC (plus (len (any_list3)) (len (any_list4)))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
plus (len (any_list3)) (SUCC (SUCC (len (any_list4)))) = SUCC (plus (len (any_list3)) (SUCC (len (any_list4))))

0 goal(s) more...

0 conjecture(s) more...
>>> assert forall (arg3:nat) (arg4:nat), plus (arg4) (SUCC (arg3)) = SUCC (plus (arg4) (arg3))(rank : 0)


1st goal of : forall (nat1:nat) (nat2:nat), plus (nat2) (SUCC (nat1)) = SUCC (plus (nat2) (nat1))

---------------------------------------
forall (nat1:nat) (nat2:nat), plus (nat2) (SUCC (nat1)) = SUCC (plus (nat2) (nat1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat2(rank:6)
=================================================
Progress: 84


1st goal of : forall (nat1:nat) (nat2:nat), plus (nat2) (SUCC (nat1)) = SUCC (plus (nat2) (nat1))

---------------------------------------
forall (nat1:nat) (nat2:nat), plus (nat2) (SUCC (nat1)) = SUCC (plus (nat2) (nat1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat2(rank : 6)


1st goal of : forall (nat1:nat) (nat2:nat), plus (nat2) (SUCC (nat1)) = SUCC (plus (nat2) (nat1))
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat1:nat), plus (ZERO) (SUCC (nat1)) = SUCC (plus (ZERO) (nat1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5)
=================================================
Progress: 85


1st goal of : forall (nat1:nat) (nat2:nat), plus (nat2) (SUCC (nat1)) = SUCC (plus (nat2) (nat1))
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (nat1:nat), plus (ZERO) (SUCC (nat1)) = SUCC (plus (ZERO) (nat1))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5)


1st goal of : forall (nat1:nat) (nat2:nat), plus (nat2) (SUCC (nat1)) = SUCC (plus (nat2) (nat1))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), plus (nat3) (SUCC (nat1)) = SUCC (plus (nat3) (nat1))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat), plus (SUCC (nat3)) (SUCC (nat1)) = SUCC (plus (SUCC (nat3)) (nat1))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5)
=================================================
Progress: 86


1st goal of : forall (nat1:nat) (nat2:nat), plus (nat2) (SUCC (nat1)) = SUCC (plus (nat2) (nat1))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), plus (nat3) (SUCC (nat1)) = SUCC (plus (nat3) (nat1))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat), plus (SUCC (nat3)) (SUCC (nat1)) = SUCC (plus (SUCC (nat3)) (nat1))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5)


1st goal of : forall (nat1:nat) (nat2:nat), plus (nat2) (SUCC (nat1)) = SUCC (plus (nat2) (nat1))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), plus (nat3) (SUCC (nat1)) = SUCC (plus (nat3) (nat1))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat3) (SUCC (nat1))) = SUCC (SUCC (plus (nat3) (nat1)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
intro nat1(rank:5)
rewrite IH1 in goal at 0(rank:13)
rewrite <- IH1 in goal at 2(rank:13)
rewrite <- IH1 in goal at 0(rank:21)
rewrite <- IH1 in goal at 1(rank:21)
=================================================
Progress: 87


1st goal of : forall (nat1:nat) (nat2:nat), plus (nat2) (SUCC (nat1)) = SUCC (plus (nat2) (nat1))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), plus (nat3) (SUCC (nat1)) = SUCC (plus (nat3) (nat1))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat3) (SUCC (nat1))) = SUCC (SUCC (plus (nat3) (nat1)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 5)


1st goal of : forall (nat1:nat) (nat2:nat), plus (nat2) (SUCC (nat1)) = SUCC (plus (nat2) (nat1))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), plus (nat3) (SUCC (nat1)) = SUCC (plus (nat3) (nat1))
Inductive1 : nat2 = SUCC (nat3)
nat1 : nat
---------------------------------------
SUCC (plus (nat3) (SUCC (nat1))) = SUCC (SUCC (plus (nat3) (nat1)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:13)
rewrite <- IH1 in goal at 0(rank:21)
rewrite <- IH1 in goal at 2(rank:13)
rewrite <- IH1 in goal at 1(rank:21)
=================================================
Progress: 88


1st goal of : forall (nat1:nat), plus (nat1) (SUCC (ZERO)) = SUCC (plus (nat1) (ZERO))
nat1 : nat
nat2 : nat
IH1 : plus (nat2) (SUCC (ZERO)) = SUCC (plus (nat2) (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (nat2) (SUCC (ZERO))) = SUCC (SUCC (plus (nat2) (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13)


1st goal of : forall (nat1:nat), plus (nat1) (SUCC (ZERO)) = SUCC (plus (nat1) (ZERO))
nat1 : nat
nat2 : nat
IH1 : plus (nat2) (SUCC (ZERO)) = SUCC (plus (nat2) (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (SUCC (plus (nat2) (ZERO))) = SUCC (SUCC (plus (nat2) (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:4)
=================================================
Progress: 89


1st goal of : forall (nat1:nat), plus (nat1) (SUCC (ZERO)) = SUCC (plus (nat1) (ZERO))
nat1 : nat
nat2 : nat
IH1 : plus (nat2) (SUCC (ZERO)) = SUCC (plus (nat2) (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (SUCC (plus (nat2) (ZERO))) = SUCC (SUCC (plus (nat2) (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
plus (len (any_list3)) (SUCC (ZERO)) = SUCC (plus (len (any_list3)) (ZERO))

1 goal(s) more...

0 conjecture(s) more...
Deduplication: 1
Tactic List : 2
rewrite lemma3 in goal at 0(rank:12)
rewrite <- lemma3 in goal at 0(rank:12)
=================================================
Progress: 90


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
plus (len (any_list3)) (SUCC (ZERO)) = SUCC (plus (len (any_list3)) (ZERO))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 12)


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
SUCC (plus (len (any_list3)) (ZERO)) = SUCC (plus (len (any_list3)) (ZERO))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3)
=================================================
Progress: 91


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
SUCC (plus (len (any_list3)) (ZERO)) = SUCC (plus (len (any_list3)) (ZERO))

1 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 3)


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : plus (len (any_list3)) (SUCC (len (any_list4))) = SUCC (plus (len (any_list3)) (len (any_list4)))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
plus (len (any_list3)) (SUCC (len ((any2::any_list4)))) = SUCC (plus (len (any_list3)) (len ((any2::any_list4))))

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 1
Tactic List : 1
simpl in goal(rank:3)
=================================================
Progress: 92


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : plus (len (any_list3)) (SUCC (len (any_list4))) = SUCC (plus (len (any_list3)) (len (any_list4)))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
plus (len (any_list3)) (SUCC (len ((any2::any_list4)))) = SUCC (plus (len (any_list3)) (len ((any2::any_list4))))

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3)


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : plus (len (any_list3)) (SUCC (len (any_list4))) = SUCC (plus (len (any_list3)) (len (any_list4)))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
plus (len (any_list3)) (SUCC (SUCC (len (any_list4)))) = SUCC (plus (len (any_list3)) (SUCC (len (any_list4))))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:3)
=================================================
Progress: 93


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : plus (len (any_list3)) (SUCC (len (any_list4))) = SUCC (plus (len (any_list3)) (len (any_list4)))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
plus (len (any_list3)) (SUCC (SUCC (len (any_list4)))) = SUCC (plus (len (any_list3)) (SUCC (len (any_list4))))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 3)


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : plus (len (any_list3)) (SUCC (len (any_list4))) = SUCC (plus (len (any_list3)) (len (any_list4)))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
plus (len (any_list3)) (SUCC (SUCC (len (any_list4)))) = SUCC (SUCC (plus (len (any_list3)) (len (any_list4))))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:3)
=================================================
Progress: 94


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : plus (len (any_list3)) (SUCC (len (any_list4))) = SUCC (plus (len (any_list3)) (len (any_list4)))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
plus (len (any_list3)) (SUCC (SUCC (len (any_list4)))) = SUCC (SUCC (plus (len (any_list3)) (len (any_list4))))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 3)


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : plus (len (any_list3)) (SUCC (len (any_list4))) = SUCC (plus (len (any_list3)) (len (any_list4)))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
plus (len (any_list3)) (SUCC (SUCC (len (any_list4)))) = SUCC (SUCC (len (qreva (any_list3) (any_list4))))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 0
reflexivity
simpl in goal
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any_list3:any list) (any_list4:any list), plus (len (any_list3)) (SUCC (SUCC (len (any_list4)))) = SUCC (SUCC (len (qreva (any_list3) (any_list4))))
Model : any_list3: (Nil), any_list4: (Nil)
Model : any_list3: (8::(Nil)), any_list4: (Nil)
Model : any_list3: (Nil), any_list4: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000210 seconds
Result : true
New Env

;;
Lemma List
forall (any_list3:any list) (any_list4:any list), plus (len (any_list3)) (SUCC (SUCC (len (any_list4)))) = SUCC (SUCC (len (qreva (any_list3) (any_list4))))
End of Lemma List


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : plus (len (any_list3)) (SUCC (len (any_list4))) = SUCC (plus (len (any_list3)) (len (any_list4)))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
plus (len (any_list3)) (SUCC (SUCC (len (any_list4)))) = SUCC (SUCC (len (qreva (any_list3) (any_list4))))

0 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 95


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : plus (len (any_list3)) (SUCC (len (any_list4))) = SUCC (plus (len (any_list3)) (len (any_list4)))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
plus (len (any_list3)) (SUCC (SUCC (len (any_list4)))) = SUCC (SUCC (len (qreva (any_list3) (any_list4))))

0 goal(s) more...

0 conjecture(s) more...
>>> assert forall (any_list3:any list) (any_list4:any list), plus (len (any_list3)) (SUCC (SUCC (len (any_list4)))) = SUCC (SUCC (len (qreva (any_list3) (any_list4))))(rank : 0)


1st goal of : forall (any_list1:any list) (any_list2:any list), plus (len (any_list1)) (SUCC (SUCC (len (any_list2)))) = SUCC (SUCC (len (qreva (any_list1) (any_list2))))

---------------------------------------
forall (any_list1:any list) (any_list2:any list), plus (len (any_list1)) (SUCC (SUCC (len (any_list2)))) = SUCC (SUCC (len (qreva (any_list1) (any_list2))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction any_list1(rank:14)
induction any_list2(rank:14)
=================================================
Progress: 96


1st goal of : forall (nat1:nat) (nat2:nat), plus (nat2) (SUCC (nat1)) = SUCC (plus (nat2) (nat1))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), plus (nat3) (SUCC (nat1)) = SUCC (plus (nat3) (nat1))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat), SUCC (plus (nat3) (SUCC (nat1))) = SUCC (SUCC (plus (nat3) (nat1)))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13)


1st goal of : forall (nat1:nat) (nat2:nat), plus (nat2) (SUCC (nat1)) = SUCC (plus (nat2) (nat1))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), plus (nat3) (SUCC (nat1)) = SUCC (plus (nat3) (nat1))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat), SUCC (SUCC (plus (nat3) (nat1))) = SUCC (SUCC (plus (nat3) (nat1)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3)
=================================================
Progress: 97


1st goal of : forall (nat1:nat) (nat2:nat), plus (nat2) (SUCC (nat1)) = SUCC (plus (nat2) (nat1))
nat2 : nat
nat3 : nat
IH1 : forall (nat1:nat), plus (nat3) (SUCC (nat1)) = SUCC (plus (nat3) (nat1))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (nat1:nat), SUCC (SUCC (plus (nat3) (nat1))) = SUCC (SUCC (plus (nat3) (nat1)))

0 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 3)


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : len (qreva (any_list3) ((any1::any_list4))) = SUCC (plus (len (any_list3)) (len (any_list4)))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
plus (len (any_list3)) (SUCC (SUCC (len (any_list4)))) = SUCC (plus (len (any_list3)) (SUCC (len (any_list4))))

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 7
Tactic List : 4
rewrite lemma4 in goal at 1(rank:11)
rewrite lemma4 in goal at 0(rank:19)
rewrite <- lemma4 in goal at 0(rank:11)
rewrite lemma4 in goal at 2(rank:19)
=================================================
Progress: 98


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : len (qreva (any_list3) ((any1::any_list4))) = SUCC (plus (len (any_list3)) (len (any_list4)))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
plus (len (any_list3)) (SUCC (SUCC (len (any_list4)))) = SUCC (plus (len (any_list3)) (SUCC (len (any_list4))))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma4 in goal at 1(rank : 11)


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : len (qreva (any_list3) ((any1::any_list4))) = SUCC (plus (len (any_list3)) (len (any_list4)))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
SUCC (plus (len (any_list3)) (SUCC (len (any_list4)))) = SUCC (plus (len (any_list3)) (SUCC (len (any_list4))))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:0)
=================================================
Progress: 99


1st goal of : forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), len (qreva (any_list3) (any_list2)) = plus (len (any_list3)) (len (any_list2))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : len (qreva (any_list3) ((any1::any_list4))) = SUCC (plus (len (any_list3)) (len (any_list4)))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
SUCC (plus (len (any_list3)) (SUCC (len (any_list4)))) = SUCC (plus (len (any_list3)) (SUCC (len (any_list4))))

0 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 0)


No conjecture
Proof Success
Proof
assert forall (any_list1:any list) (any_list2:any list), len (qreva (any_list1) (any_list2)) = plus (len (any_list1)) (len (any_list2))
induction any_list1
reflexivity
simpl in goal
induction any_list2
simpl in goal
rewrite IH1 in goal at 0
simpl in goal
assert forall (nat1:nat), plus (nat1) (SUCC (ZERO)) = SUCC (plus (nat1) (ZERO))
induction nat1
reflexivity
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 0
reflexivity
simpl in goal
rewrite IH1 in goal at 0
simpl in goal
assert forall (nat1:nat) (nat2:nat), plus (nat2) (SUCC (nat1)) = SUCC (plus (nat2) (nat1))
induction nat2
reflexivity
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma4 in goal at 1
reflexivity
Qed
File "_none_", lines 88-90, characters 2-22:
Warning 8 [partial-match]: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
[]

File "_none_", lines 88-90, characters 2-22:
Warning 8 [partial-match]: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
[]
