Enter the definition file path (1/2) : 
> Enter the definition file path (2/2) : 
> Choose the proof type :
1) Interactive Mode 	 2) Auto Mode
Enter the goal : =================================================
Progress: 1


No conjecture
>>> assert forall (x:any list) (y:any list), half (len ((x @ y))) = half (len ((y @ x)))(rank : 0)


1st goal of : forall (any_list1:any list) (any_list2:any list), half (len ((any_list1 @ any_list2))) = half (len ((any_list2 @ any_list1)))

---------------------------------------
forall (any_list1:any list) (any_list2:any list), half (len ((any_list1 @ any_list2))) = half (len ((any_list2 @ any_list1)))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
induction any_list1(rank:12)
induction any_list2(rank:12)
=================================================
Progress: 2


1st goal of : forall (any_list1:any list) (any_list2:any list), half (len ((any_list1 @ any_list2))) = half (len ((any_list2 @ any_list1)))

---------------------------------------
forall (any_list1:any list) (any_list2:any list), half (len ((any_list1 @ any_list2))) = half (len ((any_list2 @ any_list1)))

0 goal(s) more...

0 conjecture(s) more...
>>> induction any_list1(rank : 12)


1st goal of : forall (any_list1:any list) (any_list2:any list), half (len ((any_list1 @ any_list2))) = half (len ((any_list2 @ any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), half (len (((Nil) @ any_list2))) = half (len ((any_list2 @ (Nil))))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4)
=================================================
Progress: 3


1st goal of : forall (any_list1:any list) (any_list2:any list), half (len ((any_list1 @ any_list2))) = half (len ((any_list2 @ any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), half (len (((Nil) @ any_list2))) = half (len ((any_list2 @ (Nil))))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), half (len ((any_list1 @ any_list2))) = half (len ((any_list2 @ any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), half (len (any_list2)) = half (len ((any_list2 @ (Nil))))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:5)
=================================================
Progress: 4


1st goal of : forall (any_list1:any list) (any_list2:any list), half (len ((any_list1 @ any_list2))) = half (len ((any_list2 @ any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), half (len (any_list2)) = half (len ((any_list2 @ (Nil))))

1 goal(s) more...

0 conjecture(s) more...
>>> induction any_list2(rank : 5)


1st goal of : forall (any_list1:any list) (any_list2:any list), half (len ((any_list1 @ any_list2))) = half (len ((any_list2 @ any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
half (len ((Nil))) = half (len (((Nil) @ (Nil))))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:4)
=================================================
Progress: 5


1st goal of : forall (any_list1:any list) (any_list2:any list), half (len ((any_list1 @ any_list2))) = half (len ((any_list2 @ any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
half (len ((Nil))) = half (len (((Nil) @ (Nil))))

2 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), half (len ((any_list1 @ any_list2))) = half (len ((any_list2 @ any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : half (len (any_list3)) = half (len ((any_list3 @ (Nil))))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
half (len ((any1::any_list3))) = half (len (((any1::any_list3) @ (Nil))))

1 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Dilemma timed out for benchmark clam with problem 23.File "_none_", lines 81-83, characters 2-22:
Warning 8 [partial-match]: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
[]

File "_none_", lines 81-83, characters 2-22:
Warning 8 [partial-match]: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
[]
