Enter the definition file path (1/2) : 
> Enter the definition file path (2/2) : 
> Choose the proof type :
1) Interactive Mode 	 2) Auto Mode
Enter the goal : =================================================
Progress: 1


No conjecture
>>> assert forall (x:any list) (y:any list), qreva (qreva (x) (y)) ((Nil)) = (reverse (y) @ x)(rank : 0.)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list1)

---------------------------------------
forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
induction any_list1(rank:12.)
induction any_list2(rank:12.)
=================================================
Progress: 2


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list1)

---------------------------------------
forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> induction any_list1(rank : 12.)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), qreva (qreva ((Nil)) (any_list2)) ((Nil)) = (reverse (any_list2) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4.)
=================================================
Progress: 3


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), qreva (qreva ((Nil)) (any_list2)) ((Nil)) = (reverse (any_list2) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4.)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), qreva (any_list2) ((Nil)) = (reverse (any_list2) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:5.)
=================================================
Progress: 4


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), qreva (any_list2) ((Nil)) = (reverse (any_list2) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> induction any_list2(rank : 5.)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
qreva ((Nil)) ((Nil)) = (reverse ((Nil)) @ (Nil))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:4.)
=================================================
Progress: 5


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
qreva ((Nil)) ((Nil)) = (reverse ((Nil)) @ (Nil))

2 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 4.)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : qreva (any_list3) ((Nil)) = (reverse (any_list3) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
qreva ((any1::any_list3)) ((Nil)) = (reverse ((any1::any_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:4.)
=================================================
Progress: 6


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : qreva (any_list3) ((Nil)) = (reverse (any_list3) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
qreva ((any1::any_list3)) ((Nil)) = (reverse ((any1::any_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4.)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : qreva (any_list3) ((Nil)) = (reverse (any_list3) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
qreva (any_list3) ((any1::(Nil))) = ((reverse (any_list3) @ (any1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
parent
(any1::(Nil))
lower
Cons(_, Nil())
upper
qreva(any_list3, _)
remove upper
Nil()
remove lower
Nil()
remove upper
Cons(any1, Nil())
remove lower
Cons(any1, Nil())
remove upper
Cons(any2, Cons(any1, Nil()))
remove lower
Cons(any2, Cons(any1, Nil()))
remove upper
Cons(any3, Cons(any2, Cons(any1, Nil())))
remove lower
Cons(any3, Cons(any2, Cons(any1, Nil())))
parent
(any1::(Nil))
lower
Cons(_, Nil())
upper
@(@(reverse(any_list3), _), Nil())
remove upper
Cons(any1, Nil())
remove lower
Cons(any1, Nil())
Prop: qreva ((Nil)) ((8::(Nil))) = ((reverse ((Nil)) @ (8::(Nil))) @ (Nil))
Prop: qreva ((0::(Nil))) ((Nil)) = ((reverse ((0::(Nil))) @ (Nil)) @ (Nil))
Prop: qreva ((Nil)) ((Nil)) = ((reverse ((Nil)) @ (Nil)) @ (Nil))
Lemma List
forall (any_list1:any list) (any_list2:any list), qreva (any_list1) (any_list2) = ((reverse (any_list1) @ any_list2) @ (Nil))
End of Lemma List


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : qreva (any_list3) ((Nil)) = (reverse (any_list3) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
qreva (any_list3) ((any1::(Nil))) = ((reverse (any_list3) @ (any1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 7


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : qreva (any_list3) ((Nil)) = (reverse (any_list3) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
qreva (any_list3) ((any1::(Nil))) = ((reverse (any_list3) @ (any1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (any_list1:any list) (any_list2:any list), qreva (any_list1) (any_list2) = ((reverse (any_list1) @ any_list2) @ (Nil))(rank : 0.)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (any_list1) (any_list2) = ((reverse (any_list1) @ any_list2) @ (Nil))

---------------------------------------
forall (any_list1:any list) (any_list2:any list), qreva (any_list1) (any_list2) = ((reverse (any_list1) @ any_list2) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:6.)
=================================================
Progress: 8


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (any_list1) (any_list2) = ((reverse (any_list1) @ any_list2) @ (Nil))

---------------------------------------
forall (any_list1:any list) (any_list2:any list), qreva (any_list1) (any_list2) = ((reverse (any_list1) @ any_list2) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> induction any_list1(rank : 6.)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (any_list1) (any_list2) = ((reverse (any_list1) @ any_list2) @ (Nil))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), qreva ((Nil)) (any_list2) = ((reverse ((Nil)) @ any_list2) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 9


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (any_list1) (any_list2) = ((reverse (any_list1) @ any_list2) @ (Nil))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), qreva ((Nil)) (any_list2) = ((reverse ((Nil)) @ any_list2) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (any_list1) (any_list2) = ((reverse (any_list1) @ any_list2) @ (Nil))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), any_list2 = (any_list2 @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:7.)
=================================================
Progress: 10


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (any_list1) (any_list2) = ((reverse (any_list1) @ any_list2) @ (Nil))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), any_list2 = (any_list2 @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> induction any_list2(rank : 7.)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (any_list1) (any_list2) = ((reverse (any_list1) @ any_list2) @ (Nil))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
(Nil) = ((Nil) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 11


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (any_list1) (any_list2) = ((reverse (any_list1) @ any_list2) @ (Nil))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
(Nil) = ((Nil) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (any_list1) (any_list2) = ((reverse (any_list1) @ any_list2) @ (Nil))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : any_list3 = (any_list3 @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
(any1::any_list3) = ((any1::any_list3) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 12


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (any_list1) (any_list2) = ((reverse (any_list1) @ any_list2) @ (Nil))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : any_list3 = (any_list3 @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
(any1::any_list3) = ((any1::any_list3) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (any_list1) (any_list2) = ((reverse (any_list1) @ any_list2) @ (Nil))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : any_list3 = (any_list3 @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
(any1::any_list3) = (any1::(any_list3 @ (Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:6.)
=================================================
Progress: 13


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (any_list1) (any_list2) = ((reverse (any_list1) @ any_list2) @ (Nil))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : any_list3 = (any_list3 @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
(any1::any_list3) = (any1::(any_list3 @ (Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 6.)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (any_list1) (any_list2) = ((reverse (any_list1) @ any_list2) @ (Nil))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : any_list3 = (any_list3 @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
(any1::any_list3) = (any1::any_list3)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5.)
=================================================
Progress: 14


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (any_list1) (any_list2) = ((reverse (any_list1) @ any_list2) @ (Nil))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : any_list3 = (any_list3 @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
(any1::any_list3) = (any1::any_list3)

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5.)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (any_list1) (any_list2) = ((reverse (any_list1) @ any_list2) @ (Nil))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), qreva (any_list3) (any_list2) = ((reverse (any_list3) @ any_list2) @ (Nil))
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), qreva ((any1::any_list3)) (any_list2) = ((reverse ((any1::any_list3)) @ any_list2) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 15


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (any_list1) (any_list2) = ((reverse (any_list1) @ any_list2) @ (Nil))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), qreva (any_list3) (any_list2) = ((reverse (any_list3) @ any_list2) @ (Nil))
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), qreva ((any1::any_list3)) (any_list2) = ((reverse ((any1::any_list3)) @ any_list2) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (any_list1) (any_list2) = ((reverse (any_list1) @ any_list2) @ (Nil))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), qreva (any_list3) (any_list2) = ((reverse (any_list3) @ any_list2) @ (Nil))
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), qreva (any_list3) ((any1::any_list2)) = (((reverse (any_list3) @ (any1::(Nil))) @ any_list2) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
intro any_list2(rank:5.)
rewrite IH1 in goal at 0(rank:13.)
=================================================
Progress: 16


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (any_list1) (any_list2) = ((reverse (any_list1) @ any_list2) @ (Nil))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), qreva (any_list3) (any_list2) = ((reverse (any_list3) @ any_list2) @ (Nil))
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), qreva (any_list3) ((any1::any_list2)) = (((reverse (any_list3) @ (any1::(Nil))) @ any_list2) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> intro any_list2(rank : 5.)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (any_list1) (any_list2) = ((reverse (any_list1) @ any_list2) @ (Nil))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), qreva (any_list3) (any_list2) = ((reverse (any_list3) @ any_list2) @ (Nil))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
---------------------------------------
qreva (any_list3) ((any1::any_list2)) = (((reverse (any_list3) @ (any1::(Nil))) @ any_list2) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:5.)
=================================================
Progress: 17


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (any_list1) (any_list2) = ((reverse (any_list1) @ any_list2) @ (Nil))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), qreva (any_list3) (any_list2) = ((reverse (any_list3) @ any_list2) @ (Nil))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
---------------------------------------
qreva (any_list3) ((any1::any_list2)) = (((reverse (any_list3) @ (any1::(Nil))) @ any_list2) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 5.)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (any_list1) (any_list2) = ((reverse (any_list1) @ any_list2) @ (Nil))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), qreva (any_list3) (any_list2) = ((reverse (any_list3) @ any_list2) @ (Nil))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
---------------------------------------
((reverse (any_list3) @ (any1::any_list2)) @ (Nil)) = (((reverse (any_list3) @ (any1::(Nil))) @ any_list2) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
reflexivity
simpl in goal
intro any_list2
rewrite IH1 in goal at 0
Prop: (((8::(Nil)) @ (4::(Nil))) @ (Nil)) = ((((8::(Nil)) @ (4::(Nil))) @ (Nil)) @ (Nil))
Prop: (((0::(4::(Nil))) @ (2::(7::(0::(Nil))))) @ (Nil)) = ((((0::(4::(Nil))) @ (2::(Nil))) @ (7::(0::(Nil)))) @ (Nil))
Prop: (((Nil) @ (5::(Nil))) @ (Nil)) = ((((Nil) @ (5::(Nil))) @ (Nil)) @ (Nil))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
reflexivity
simpl in goal
intro any_list2
validate generalize_common_subterm_goal
Prop: qreva ((Nil)) ((0::(Nil))) = (((reverse ((Nil)) @ (0::(Nil))) @ (Nil)) @ (Nil))
Prop: qreva ((7::(5::(Nil)))) ((1::(Nil))) = (((reverse ((7::(5::(Nil)))) @ (1::(Nil))) @ (Nil)) @ (Nil))
Prop: qreva ((Nil)) ((1::(3::(Nil)))) = (((reverse ((Nil)) @ (1::(Nil))) @ (3::(Nil))) @ (Nil))
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::any_list1)) @ (Nil)) = (((any_list2 @ (any1::(Nil))) @ any_list1) @ (Nil))
End of Lemma List


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (any_list1) (any_list2) = ((reverse (any_list1) @ any_list2) @ (Nil))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), qreva (any_list3) (any_list2) = ((reverse (any_list3) @ any_list2) @ (Nil))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
---------------------------------------
((reverse (any_list3) @ (any1::any_list2)) @ (Nil)) = (((reverse (any_list3) @ (any1::(Nil))) @ any_list2) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 18


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (any_list1) (any_list2) = ((reverse (any_list1) @ any_list2) @ (Nil))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), qreva (any_list3) (any_list2) = ((reverse (any_list3) @ any_list2) @ (Nil))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
---------------------------------------
((reverse (any_list3) @ (any1::any_list2)) @ (Nil)) = (((reverse (any_list3) @ (any1::(Nil))) @ any_list2) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::any_list1)) @ (Nil)) = (((any_list2 @ (any1::(Nil))) @ any_list1) @ (Nil))(rank : 0.)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::any_list1)) @ (Nil)) = (((any_list2 @ (any1::(Nil))) @ any_list1) @ (Nil))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::any_list1)) @ (Nil)) = (((any_list2 @ (any1::(Nil))) @ any_list1) @ (Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:8.)
=================================================
Progress: 19


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::any_list1)) @ (Nil)) = (((any_list2 @ (any1::(Nil))) @ any_list1) @ (Nil))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::any_list1)) @ (Nil)) = (((any_list2 @ (any1::(Nil))) @ any_list1) @ (Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> induction any_list2(rank : 8.)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::any_list1)) @ (Nil)) = (((any_list2 @ (any1::(Nil))) @ any_list1) @ (Nil))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list), (((Nil) @ (any1::any_list1)) @ (Nil)) = ((((Nil) @ (any1::(Nil))) @ any_list1) @ (Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 20


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::any_list1)) @ (Nil)) = (((any_list2 @ (any1::(Nil))) @ any_list1) @ (Nil))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list), (((Nil) @ (any1::any_list1)) @ (Nil)) = ((((Nil) @ (any1::(Nil))) @ any_list1) @ (Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::any_list1)) @ (Nil)) = (((any_list2 @ (any1::(Nil))) @ any_list1) @ (Nil))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), ((any_list3 @ (any1::any_list1)) @ (Nil)) = (((any_list3 @ (any1::(Nil))) @ any_list1) @ (Nil))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), (((any2::any_list3) @ (any1::any_list1)) @ (Nil)) = ((((any2::any_list3) @ (any1::(Nil))) @ any_list1) @ (Nil))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 21


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::any_list1)) @ (Nil)) = (((any_list2 @ (any1::(Nil))) @ any_list1) @ (Nil))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), ((any_list3 @ (any1::any_list1)) @ (Nil)) = (((any_list3 @ (any1::(Nil))) @ any_list1) @ (Nil))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), (((any2::any_list3) @ (any1::any_list1)) @ (Nil)) = ((((any2::any_list3) @ (any1::(Nil))) @ any_list1) @ (Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::any_list1)) @ (Nil)) = (((any_list2 @ (any1::(Nil))) @ any_list1) @ (Nil))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), ((any_list3 @ (any1::any_list1)) @ (Nil)) = (((any_list3 @ (any1::(Nil))) @ any_list1) @ (Nil))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::((any_list3 @ (any1::any_list1)) @ (Nil))) = (any2::(((any_list3 @ (any1::(Nil))) @ any_list1) @ (Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
intro any1(rank:7.)
intro any_list1(rank:7.)
rewrite IH1 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 22


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::any_list1)) @ (Nil)) = (((any_list2 @ (any1::(Nil))) @ any_list1) @ (Nil))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), ((any_list3 @ (any1::any_list1)) @ (Nil)) = (((any_list3 @ (any1::(Nil))) @ any_list1) @ (Nil))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::((any_list3 @ (any1::any_list1)) @ (Nil))) = (any2::(((any_list3 @ (any1::(Nil))) @ any_list1) @ (Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any1(rank : 7.)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::any_list1)) @ (Nil)) = (((any_list2 @ (any1::(Nil))) @ any_list1) @ (Nil))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), ((any_list3 @ (any1::any_list1)) @ (Nil)) = (((any_list3 @ (any1::(Nil))) @ any_list1) @ (Nil))
Inductive1 : any_list2 = (any2::any_list3)
any1 : any
---------------------------------------
forall (any_list1:any list), (any2::((any_list3 @ (any1::any_list1)) @ (Nil))) = (any2::(((any_list3 @ (any1::(Nil))) @ any_list1) @ (Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro any_list1(rank:7.)
rewrite IH1 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 23


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::any_list1)) @ (Nil)) = (((any_list2 @ (any1::(Nil))) @ any_list1) @ (Nil))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), ((any_list3 @ (any1::any_list1)) @ (Nil)) = (((any_list3 @ (any1::(Nil))) @ any_list1) @ (Nil))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::((any_list3 @ (any1::any_list1)) @ (Nil))) = (any2::(((any_list3 @ (any1::(Nil))) @ any_list1) @ (Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 7.)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::any_list1)) @ (Nil)) = (((any_list2 @ (any1::(Nil))) @ any_list1) @ (Nil))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), ((any_list3 @ (any1::any_list1)) @ (Nil)) = (((any_list3 @ (any1::(Nil))) @ any_list1) @ (Nil))
Inductive1 : any_list2 = (any2::any_list3)
any_list1 : any list
---------------------------------------
forall (any1:any), (any2::((any_list3 @ (any1::any_list1)) @ (Nil))) = (any2::(((any_list3 @ (any1::(Nil))) @ any_list1) @ (Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 24


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::any_list1)) @ (Nil)) = (((any_list2 @ (any1::(Nil))) @ any_list1) @ (Nil))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), ((any_list3 @ (any1::any_list1)) @ (Nil)) = (((any_list3 @ (any1::(Nil))) @ any_list1) @ (Nil))
Inductive1 : any_list2 = (any2::any_list3)
any1 : any
---------------------------------------
forall (any_list1:any list), (any2::((any_list3 @ (any1::any_list1)) @ (Nil))) = (any2::(((any_list3 @ (any1::(Nil))) @ any_list1) @ (Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any_list1(rank : 7.)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::any_list1)) @ (Nil)) = (((any_list2 @ (any1::(Nil))) @ any_list1) @ (Nil))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), ((any_list3 @ (any1::any_list1)) @ (Nil)) = (((any_list3 @ (any1::(Nil))) @ any_list1) @ (Nil))
Inductive1 : any_list2 = (any2::any_list3)
any1 : any
any_list1 : any list
---------------------------------------
(any2::((any_list3 @ (any1::any_list1)) @ (Nil))) = (any2::(((any_list3 @ (any1::(Nil))) @ any_list1) @ (Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 25


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list1)

---------------------------------------
forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> induction any_list2(rank : 12.)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any_list1:any list), qreva (qreva (any_list1) ((Nil))) ((Nil)) = (reverse ((Nil)) @ any_list1)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4.)
=================================================
Progress: 26


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any_list1:any list), qreva (qreva (any_list1) ((Nil))) ((Nil)) = (reverse ((Nil)) @ any_list1)

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4.)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any_list1:any list), qreva (qreva (any_list1) ((Nil))) ((Nil)) = any_list1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:5.)
=================================================
Progress: 27


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any_list1:any list), qreva (qreva (any_list1) ((Nil))) ((Nil)) = any_list1

1 goal(s) more...

0 conjecture(s) more...
>>> induction any_list1(rank : 5.)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
---------------------------------------
qreva (qreva ((Nil)) ((Nil))) ((Nil)) = (Nil)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:4.)
=================================================
Progress: 28


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
---------------------------------------
qreva (qreva ((Nil)) ((Nil))) ((Nil)) = (Nil)

2 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 4.)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : qreva (qreva (any_list3) ((Nil))) ((Nil)) = any_list3
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
qreva (qreva ((any1::any_list3)) ((Nil))) ((Nil)) = (any1::any_list3)

1 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:4.)
=================================================
Progress: 29


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : qreva (qreva (any_list3) ((Nil))) ((Nil)) = any_list3
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
qreva (qreva ((any1::any_list3)) ((Nil))) ((Nil)) = (any1::any_list3)

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4.)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : qreva (qreva (any_list3) ((Nil))) ((Nil)) = any_list3
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
qreva (qreva (any_list3) ((any1::(Nil)))) ((Nil)) = (any1::any_list3)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
parent
(any1::(Nil))
lower
Cons(_, Nil())
upper
qreva(qreva(any_list3, _), Nil())
remove upper
Nil()
remove lower
Nil()
remove upper
Cons(any1, Nil())
remove lower
Cons(any1, Nil())
remove upper
Cons(any2, Cons(any1, Nil()))
remove lower
Cons(any2, Cons(any1, Nil()))
remove upper
Cons(any3, Cons(any2, Cons(any1, Nil())))
remove lower
Cons(any3, Cons(any2, Cons(any1, Nil())))
parent
(any1::any_list3)
lower
Cons(_, any_list3)
upper
_
remove upper
any_list3
remove lower
_
remove upper
Cons(any1, any_list3)
remove lower
Cons(any1, _)
remove upper
Cons(any1, Cons(any2, any_list4))
remove lower
Cons(any1, Cons(any2, _))
remove upper
Cons(any1, Cons(any2, Cons(any3, any_list5)))
remove lower
Cons(any1, Cons(any2, Cons(any3, _)))
New Env
let rec mk_rhs1 arg_3 arg_4 =
match (arg_3) with
| Nil -> arg_4
| Cons hd tl -> mk_rhs1 (tl) ((hd::arg_4))
;;
Lemma List
forall (any_list1:any list), mk_rhs1 ((Nil)) (any_list1) = any_list1
forall (any_list1:any list) (any1:any) (any_list2:any list), mk_rhs1 ((any1::any_list1)) (any_list2) = mk_rhs1 (any_list1) ((any1::any_list2))
forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = mk_rhs1 (any_list2) (any_list1)
End of Lemma List


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : qreva (qreva (any_list3) ((Nil))) ((Nil)) = any_list3
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
qreva (qreva (any_list3) ((any1::(Nil)))) ((Nil)) = (any1::any_list3)

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 30


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : qreva (qreva (any_list3) ((Nil))) ((Nil)) = any_list3
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
qreva (qreva (any_list3) ((any1::(Nil)))) ((Nil)) = (any1::any_list3)

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = mk_rhs1 (any_list2) (any_list1)(rank : 0.)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = mk_rhs1 (any_list2) (any_list1)

---------------------------------------
forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = mk_rhs1 (any_list2) (any_list1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:6.)
=================================================
Progress: 31


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = mk_rhs1 (any_list2) (any_list1)

---------------------------------------
forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = mk_rhs1 (any_list2) (any_list1)

0 goal(s) more...

1 conjecture(s) more...
>>> induction any_list1(rank : 6.)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), qreva (qreva ((Nil)) (any_list2)) ((Nil)) = mk_rhs1 (any_list2) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 32


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), qreva (qreva ((Nil)) (any_list2)) ((Nil)) = mk_rhs1 (any_list2) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), qreva (any_list2) ((Nil)) = mk_rhs1 (any_list2) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction any_list2(rank:15.)
intro any_list2(rank:22.)
=================================================
Progress: 33


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (any_list1) (any_list2) = ((reverse (any_list1) @ any_list2) @ (Nil))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), qreva (any_list3) (any_list2) = ((reverse (any_list3) @ any_list2) @ (Nil))
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), qreva (any_list3) ((any1::any_list2)) = (((reverse (any_list3) @ (any1::(Nil))) @ any_list2) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13.)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (any_list1) (any_list2) = ((reverse (any_list1) @ any_list2) @ (Nil))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), qreva (any_list3) (any_list2) = ((reverse (any_list3) @ any_list2) @ (Nil))
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), ((reverse (any_list3) @ (any1::any_list2)) @ (Nil)) = (((reverse (any_list3) @ (any1::(Nil))) @ any_list2) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
reflexivity
simpl in goal
rewrite IH1 in goal at 0
Prop: (((Nil) @ (0::(Nil))) @ (Nil)) = ((((Nil) @ (0::(Nil))) @ (Nil)) @ (Nil))
Prop: (((0::(Nil)) @ (4::(Nil))) @ (Nil)) = ((((0::(Nil)) @ (4::(Nil))) @ (Nil)) @ (Nil))
Prop: (((Nil) @ (4::(Nil))) @ (Nil)) = ((((Nil) @ (4::(Nil))) @ (Nil)) @ (Nil))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
reflexivity
simpl in goal
validate generalize_common_subterm_goal
Prop: qreva ((Nil)) ((5::(Nil))) = (((reverse ((Nil)) @ (5::(Nil))) @ (Nil)) @ (Nil))
Prop: qreva ((Nil)) ((5::(Nil))) = (((reverse ((Nil)) @ (5::(Nil))) @ (Nil)) @ (Nil))
Prop: qreva ((Nil)) ((0::(Nil))) = (((reverse ((Nil)) @ (0::(Nil))) @ (Nil)) @ (Nil))
=================================================
Progress: 34


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::any_list1)) @ (Nil)) = (((any_list2 @ (any1::(Nil))) @ any_list1) @ (Nil))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), ((any_list3 @ (any1::any_list1)) @ (Nil)) = (((any_list3 @ (any1::(Nil))) @ any_list1) @ (Nil))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::((any_list3 @ (any1::any_list1)) @ (Nil))) = (any2::(((any_list3 @ (any1::(Nil))) @ any_list1) @ (Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 15.)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::any_list1)) @ (Nil)) = (((any_list2 @ (any1::(Nil))) @ any_list1) @ (Nil))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), ((any_list3 @ (any1::any_list1)) @ (Nil)) = (((any_list3 @ (any1::(Nil))) @ any_list1) @ (Nil))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::(((any_list3 @ (any1::(Nil))) @ any_list1) @ (Nil))) = (any2::(((any_list3 @ (any1::(Nil))) @ any_list1) @ (Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5.)
=================================================
Progress: 35


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::any_list1)) @ (Nil)) = (((any_list2 @ (any1::(Nil))) @ any_list1) @ (Nil))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), ((any_list3 @ (any1::any_list1)) @ (Nil)) = (((any_list3 @ (any1::(Nil))) @ any_list1) @ (Nil))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::(((any_list3 @ (any1::(Nil))) @ any_list1) @ (Nil))) = (any2::(((any_list3 @ (any1::(Nil))) @ any_list1) @ (Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 5.)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (any_list1) (any_list2) = ((reverse (any_list1) @ any_list2) @ (Nil))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), qreva (any_list3) (any_list2) = ((reverse (any_list3) @ any_list2) @ (Nil))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
---------------------------------------
((reverse (any_list3) @ (any1::any_list2)) @ (Nil)) = (((reverse (any_list3) @ (any1::(Nil))) @ any_list2) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
original goal
forall (any_list1:any list) (any_list2:any list), qreva (any_list1) (any_list2) = ((reverse (any_list1) @ any_list2) @ (Nil))
lemma
forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::any_list1)) @ (Nil)) = (((any_list2 @ (any1::(Nil))) @ any_list1) @ (Nil))
tactics
assert forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::any_list1)) @ (Nil)) = (((any_list2 @ (any1::(Nil))) @ any_list1) @ (Nil))
induction any_list2
reflexivity
simpl in goal
rewrite IH1 in goal at 0
reflexivity
Deduplication: 7
Tactic List : 2
rewrite lemma3 in goal at 0(rank:13.)
rewrite <- lemma3 in goal at 0(rank:13.)
=================================================
Progress: 36


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (any_list1) (any_list2) = ((reverse (any_list1) @ any_list2) @ (Nil))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), qreva (any_list3) (any_list2) = ((reverse (any_list3) @ any_list2) @ (Nil))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
---------------------------------------
((reverse (any_list3) @ (any1::any_list2)) @ (Nil)) = (((reverse (any_list3) @ (any1::(Nil))) @ any_list2) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 13.)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (any_list1) (any_list2) = ((reverse (any_list1) @ any_list2) @ (Nil))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), qreva (any_list3) (any_list2) = ((reverse (any_list3) @ any_list2) @ (Nil))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
---------------------------------------
(((reverse (any_list3) @ (any1::(Nil))) @ any_list2) @ (Nil)) = (((reverse (any_list3) @ (any1::(Nil))) @ any_list2) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:4.)
=================================================
Progress: 37


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (any_list1) (any_list2) = ((reverse (any_list1) @ any_list2) @ (Nil))
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), qreva (any_list3) (any_list2) = ((reverse (any_list3) @ any_list2) @ (Nil))
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
---------------------------------------
(((reverse (any_list3) @ (any1::(Nil))) @ any_list2) @ (Nil)) = (((reverse (any_list3) @ (any1::(Nil))) @ any_list2) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 4.)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : qreva (any_list3) ((Nil)) = (reverse (any_list3) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
qreva (any_list3) ((any1::(Nil))) = ((reverse (any_list3) @ (any1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
original goal
forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list1)
lemma
forall (any_list1:any list) (any_list2:any list), qreva (any_list1) (any_list2) = ((reverse (any_list1) @ any_list2) @ (Nil))
tactics
assert forall (any_list1:any list) (any_list2:any list), qreva (any_list1) (any_list2) = ((reverse (any_list1) @ any_list2) @ (Nil))
induction any_list1
simpl in goal
induction any_list2
reflexivity
simpl in goal
rewrite <- IH1 in goal at 0
reflexivity
simpl in goal
intro any_list2
rewrite IH1 in goal at 0
assert forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::any_list1)) @ (Nil)) = (((any_list2 @ (any1::(Nil))) @ any_list1) @ (Nil))
induction any_list2
reflexivity
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 0
reflexivity
Deduplication: 1
Tactic List : 3
rewrite lemma4 in goal at 0(rank:12.)
rewrite lemma3 in goal at 0(rank:20.)
rewrite <- lemma4 in goal at 0(rank:12.)
=================================================
Progress: 38


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : qreva (any_list3) ((Nil)) = (reverse (any_list3) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
qreva (any_list3) ((any1::(Nil))) = ((reverse (any_list3) @ (any1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma4 in goal at 0(rank : 12.)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : qreva (any_list3) ((Nil)) = (reverse (any_list3) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
((reverse (any_list3) @ (any1::(Nil))) @ (Nil)) = ((reverse (any_list3) @ (any1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3.)
=================================================
Progress: 39


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : qreva (any_list3) ((Nil)) = (reverse (any_list3) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
((reverse (any_list3) @ (any1::(Nil))) @ (Nil)) = ((reverse (any_list3) @ (any1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 3.)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), qreva (qreva (any_list3) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), qreva (qreva ((any1::any_list3)) (any_list2)) ((Nil)) = (reverse (any_list2) @ (any1::any_list3))

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 2
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 40


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), qreva (qreva (any_list3) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), qreva (qreva ((any1::any_list3)) (any_list2)) ((Nil)) = (reverse (any_list2) @ (any1::any_list3))

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), qreva (qreva (any_list3) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), qreva (qreva (any_list3) ((any1::any_list2))) ((Nil)) = (reverse (any_list2) @ (any1::any_list3))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:11.)
induction any_list2(rank:12.)
rewrite lemma4 in goal at 0(rank:19.)
rewrite lemma4 in goal at 2(rank:19.)
=================================================
Progress: 41


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), qreva (qreva (any_list3) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), qreva (qreva (any_list3) ((any1::any_list2))) ((Nil)) = (reverse (any_list2) @ (any1::any_list3))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 11.)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), qreva (qreva (any_list3) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), (reverse ((any1::any_list2)) @ any_list3) = (reverse (any_list2) @ (any1::any_list3))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 42


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), qreva (qreva (any_list3) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), (reverse ((any1::any_list2)) @ any_list3) = (reverse (any_list2) @ (any1::any_list3))

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), qreva (qreva (any_list3) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), ((reverse (any_list2) @ (any1::(Nil))) @ any_list3) = (reverse (any_list2) @ (any1::any_list3))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:4.)
=================================================
Progress: 43


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), qreva (qreva (any_list3) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), ((reverse (any_list2) @ (any1::(Nil))) @ any_list3) = (reverse (any_list2) @ (any1::any_list3))

0 goal(s) more...

0 conjecture(s) more...
>>> induction any_list2(rank : 4.)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), qreva (qreva (any_list3) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
((reverse ((Nil)) @ (any1::(Nil))) @ any_list3) = (reverse ((Nil)) @ (any1::any_list3))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3.)
=================================================
Progress: 44


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), qreva (qreva (any_list3) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
((reverse ((Nil)) @ (any1::(Nil))) @ any_list3) = (reverse ((Nil)) @ (any1::any_list3))

1 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 3.)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), qreva (qreva (any_list3) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : ((reverse (any_list4) @ (any1::(Nil))) @ any_list3) = (reverse (any_list4) @ (any1::any_list3))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
((reverse ((any2::any_list4)) @ (any1::(Nil))) @ any_list3) = (reverse ((any2::any_list4)) @ (any1::any_list3))

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 45


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), qreva (qreva (any_list3) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : ((reverse (any_list4) @ (any1::(Nil))) @ any_list3) = (reverse (any_list4) @ (any1::any_list3))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
((reverse ((any2::any_list4)) @ (any1::(Nil))) @ any_list3) = (reverse ((any2::any_list4)) @ (any1::any_list3))

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), qreva (qreva (any_list3) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : ((reverse (any_list4) @ (any1::(Nil))) @ any_list3) = (reverse (any_list4) @ (any1::any_list3))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
(((reverse (any_list4) @ (any2::(Nil))) @ (any1::(Nil))) @ any_list3) = ((reverse (any_list4) @ (any2::(Nil))) @ (any1::any_list3))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
parent
(any2::(Nil))
lower
Cons(_, Nil())
upper
@(@(@(reverse(any_list4), _), Cons(any1, Nil())), any_list3)
remove upper
Cons(any2, Nil())
remove lower
Cons(any2, Nil())
parent
(any2::(Nil))
lower
Cons(_, Nil())
upper
@(@(reverse(any_list4), _), Cons(any1, any_list3))
remove upper
Cons(any2, Nil())
remove lower
Cons(any2, Nil())
Prop: (((Nil) @ (0::(Nil))) @ (Nil)) = ((Nil) @ (0::(Nil)))
Prop: (((Nil) @ (5::(Nil))) @ (Nil)) = ((Nil) @ (5::(Nil)))
Prop: (((Nil) @ (0::(Nil))) @ (Nil)) = ((Nil) @ (0::(Nil)))
Lemma List
forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
End of Lemma List


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), qreva (qreva (any_list3) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : ((reverse (any_list4) @ (any1::(Nil))) @ any_list3) = (reverse (any_list4) @ (any1::any_list3))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
(((reverse (any_list4) @ (any2::(Nil))) @ (any1::(Nil))) @ any_list3) = ((reverse (any_list4) @ (any2::(Nil))) @ (any1::any_list3))

0 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 46


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), qreva (qreva (any_list3) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : ((reverse (any_list4) @ (any1::(Nil))) @ any_list3) = (reverse (any_list4) @ (any1::any_list3))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
(((reverse (any_list4) @ (any2::(Nil))) @ (any1::(Nil))) @ any_list3) = ((reverse (any_list4) @ (any2::(Nil))) @ (any1::any_list3))

0 goal(s) more...

0 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))(rank : 0.)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:6.)
=================================================
Progress: 47


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction any_list2(rank : 6.)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list), (((Nil) @ (any1::(Nil))) @ any_list1) = ((Nil) @ (any1::any_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5.)
=================================================
Progress: 48


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list), (((Nil) @ (any1::(Nil))) @ any_list1) = ((Nil) @ (any1::any_list1))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5.)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), ((any_list3 @ (any1::(Nil))) @ any_list1) = (any_list3 @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), (((any2::any_list3) @ (any1::(Nil))) @ any_list1) = ((any2::any_list3) @ (any1::any_list1))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 49


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), ((any_list3 @ (any1::(Nil))) @ any_list1) = (any_list3 @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), (((any2::any_list3) @ (any1::(Nil))) @ any_list1) = ((any2::any_list3) @ (any1::any_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), ((any_list3 @ (any1::(Nil))) @ any_list1) = (any_list3 @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::((any_list3 @ (any1::(Nil))) @ any_list1)) = (any2::(any_list3 @ (any1::any_list1)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
intro any1(rank:5.)
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 2(rank:13.)
rewrite <- IH1 in goal at 1(rank:21.)
intro any_list1(rank:5.)
=================================================
Progress: 50


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), ((any_list3 @ (any1::(Nil))) @ any_list1) = (any_list3 @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::((any_list3 @ (any1::(Nil))) @ any_list1)) = (any2::(any_list3 @ (any1::any_list1)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro any1(rank : 5.)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), ((any_list3 @ (any1::(Nil))) @ any_list1) = (any_list3 @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
any1 : any
---------------------------------------
forall (any_list1:any list), (any2::((any_list3 @ (any1::(Nil))) @ any_list1)) = (any2::(any_list3 @ (any1::any_list1)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
intro any_list1(rank:5.)
rewrite <- IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:13.)
rewrite IH1 in goal at 0(rank:13.)
=================================================
Progress: 51


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), ((any_list3 @ (any1::(Nil))) @ any_list1) = (any_list3 @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::((any_list3 @ (any1::(Nil))) @ any_list1)) = (any2::(any_list3 @ (any1::any_list1)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro any_list1(rank : 5.)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), ((any_list3 @ (any1::(Nil))) @ any_list1) = (any_list3 @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
any_list1 : any list
---------------------------------------
forall (any1:any), (any2::((any_list3 @ (any1::(Nil))) @ any_list1)) = (any2::(any_list3 @ (any1::any_list1)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 2(rank:13.)
rewrite <- IH1 in goal at 1(rank:21.)
=================================================
Progress: 52


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), ((any_list3 @ (any1::(Nil))) @ any_list1) = (any_list3 @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
any1 : any
---------------------------------------
forall (any_list1:any list), (any2::((any_list3 @ (any1::(Nil))) @ any_list1)) = (any2::(any_list3 @ (any1::any_list1)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro any_list1(rank : 5.)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), ((any_list3 @ (any1::(Nil))) @ any_list1) = (any_list3 @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
any1 : any
any_list1 : any list
---------------------------------------
(any2::((any_list3 @ (any1::(Nil))) @ any_list1)) = (any2::(any_list3 @ (any1::any_list1)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 2(rank:13.)
rewrite <- IH1 in goal at 1(rank:21.)
=================================================
Progress: 53


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), qreva (qreva (any_list3) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), qreva (qreva (any_list3) ((any1::any_list2))) ((Nil)) = (reverse (any_list2) @ (any1::any_list3))

0 goal(s) more...

0 conjecture(s) more...
>>> induction any_list2(rank : 12.)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), qreva (qreva (any_list3) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
qreva (qreva (any_list3) ((any1::(Nil)))) ((Nil)) = (reverse ((Nil)) @ (any1::any_list3))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4.)
=================================================
Progress: 54


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), qreva (qreva (any_list3) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
qreva (qreva (any_list3) ((any1::(Nil)))) ((Nil)) = (reverse ((Nil)) @ (any1::any_list3))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4.)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), qreva (qreva (any_list3) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
qreva (qreva (any_list3) ((any1::(Nil)))) ((Nil)) = (any1::any_list3)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH1 in goal at 0(rank:12.)
rewrite lemma4 in goal at 0(rank:20.)
rewrite lemma4 in goal at 2(rank:20.)
=================================================
Progress: 55


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), qreva (qreva (any_list3) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
qreva (qreva (any_list3) ((any1::(Nil)))) ((Nil)) = (any1::any_list3)

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 12.)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), qreva (qreva (any_list3) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
(reverse ((any1::(Nil))) @ any_list3) = (any1::any_list3)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3.)
=================================================
Progress: 56


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), qreva (qreva (any_list3) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
(reverse ((any1::(Nil))) @ any_list3) = (any1::any_list3)

1 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 3.)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), qreva (qreva (any_list3) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : qreva (qreva (any_list3) ((any1::any_list4))) ((Nil)) = (reverse (any_list4) @ (any1::any_list3))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
qreva (qreva (any_list3) ((any1::(any2::any_list4)))) ((Nil)) = (reverse ((any2::any_list4)) @ (any1::any_list3))

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 2
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 57


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), qreva (qreva (any_list3) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : qreva (qreva (any_list3) ((any1::any_list4))) ((Nil)) = (reverse (any_list4) @ (any1::any_list3))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
qreva (qreva (any_list3) ((any1::(any2::any_list4)))) ((Nil)) = (reverse ((any2::any_list4)) @ (any1::any_list3))

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), qreva (qreva (any_list3) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : qreva (qreva (any_list3) ((any1::any_list4))) ((Nil)) = (reverse (any_list4) @ (any1::any_list3))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
qreva (qreva (any_list3) ((any1::(any2::any_list4)))) ((Nil)) = ((reverse (any_list4) @ (any2::(Nil))) @ (any1::any_list3))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH1 in goal at 0(rank:11.)
rewrite lemma4 in goal at 0(rank:19.)
rewrite lemma4 in goal at 2(rank:19.)
=================================================
Progress: 58


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), qreva (qreva (any_list3) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : qreva (qreva (any_list3) ((any1::any_list4))) ((Nil)) = (reverse (any_list4) @ (any1::any_list3))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
qreva (qreva (any_list3) ((any1::(any2::any_list4)))) ((Nil)) = ((reverse (any_list4) @ (any2::(Nil))) @ (any1::any_list3))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 11.)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), qreva (qreva (any_list3) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : qreva (qreva (any_list3) ((any1::any_list4))) ((Nil)) = (reverse (any_list4) @ (any1::any_list3))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
(reverse ((any1::(any2::any_list4))) @ any_list3) = ((reverse (any_list4) @ (any2::(Nil))) @ (any1::any_list3))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 59


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), qreva (qreva (any_list3) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : qreva (qreva (any_list3) ((any1::any_list4))) ((Nil)) = (reverse (any_list4) @ (any1::any_list3))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
(reverse ((any1::(any2::any_list4))) @ any_list3) = ((reverse (any_list4) @ (any2::(Nil))) @ (any1::any_list3))

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), qreva (qreva (any_list3) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : qreva (qreva (any_list3) ((any1::any_list4))) ((Nil)) = (reverse (any_list4) @ (any1::any_list3))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
(((reverse (any_list4) @ (any2::(Nil))) @ (any1::(Nil))) @ any_list3) = ((reverse (any_list4) @ (any2::(Nil))) @ (any1::any_list3))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
simpl in goal
Prop: (((Nil) @ (0::(Nil))) @ (2::(Nil))) = ((Nil) @ (0::(2::(Nil))))
Prop: (((Nil) @ (7::(Nil))) @ (2::(Nil))) = ((Nil) @ (7::(2::(Nil))))
Prop: (((0::(Nil)) @ (1::(Nil))) @ (0::(Nil))) = ((0::(Nil)) @ (1::(0::(Nil))))
=================================================
Progress: 60


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), ((any_list3 @ (any1::(Nil))) @ any_list1) = (any_list3 @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::((any_list3 @ (any1::(Nil))) @ any_list1)) = (any2::(any_list3 @ (any1::any_list1)))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13.)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), ((any_list3 @ (any1::(Nil))) @ any_list1) = (any_list3 @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::(any_list3 @ (any1::any_list1))) = (any2::(any_list3 @ (any1::any_list1)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3.)
=================================================
Progress: 61


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), ((any_list3 @ (any1::(Nil))) @ any_list1) = (any_list3 @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::(any_list3 @ (any1::any_list1))) = (any2::(any_list3 @ (any1::any_list1)))

0 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 3.)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), qreva (qreva (any_list3) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : ((reverse (any_list4) @ (any1::(Nil))) @ any_list3) = (reverse (any_list4) @ (any1::any_list3))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
(((reverse (any_list4) @ (any2::(Nil))) @ (any1::(Nil))) @ any_list3) = ((reverse (any_list4) @ (any2::(Nil))) @ (any1::any_list3))

0 goal(s) more...

0 conjecture(s) more...
original goal
forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list1)
lemma
forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
tactics
assert forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
induction any_list2
reflexivity
simpl in goal
rewrite IH1 in goal at 0
reflexivity
Deduplication: 15
Tactic List : 8
rewrite lemma5 in goal at 1(rank:11.)
rewrite <- lemma5 in goal at 0(rank:11.)
rewrite <- lemma5 in goal at 3(rank:11.)
rewrite <- lemma5 in goal at 2(rank:19.)
rewrite lemma5 in goal at 2(rank:19.)
rewrite lemma5 in goal at 3(rank:19.)
rewrite <- lemma5 in goal at 1(rank:19.)
rewrite lemma5 in goal at 0(rank:19.)
=================================================
Progress: 62


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), qreva (qreva (any_list3) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : ((reverse (any_list4) @ (any1::(Nil))) @ any_list3) = (reverse (any_list4) @ (any1::any_list3))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
(((reverse (any_list4) @ (any2::(Nil))) @ (any1::(Nil))) @ any_list3) = ((reverse (any_list4) @ (any2::(Nil))) @ (any1::any_list3))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma5 in goal at 1(rank : 11.)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), qreva (qreva (any_list3) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : ((reverse (any_list4) @ (any1::(Nil))) @ any_list3) = (reverse (any_list4) @ (any1::any_list3))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
((reverse (any_list4) @ (any2::(Nil))) @ (any1::any_list3)) = ((reverse (any_list4) @ (any2::(Nil))) @ (any1::any_list3))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:0.)
=================================================
Progress: 63


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), qreva (qreva (any_list3) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : ((reverse (any_list4) @ (any1::(Nil))) @ any_list3) = (reverse (any_list4) @ (any1::any_list3))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
((reverse (any_list4) @ (any2::(Nil))) @ (any1::any_list3)) = ((reverse (any_list4) @ (any2::(Nil))) @ (any1::any_list3))

0 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 0.)


No conjecture
Proof Success
Proof
assert forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = (reverse (any_list2) @ any_list1)
induction any_list1
simpl in goal
induction any_list2
reflexivity
simpl in goal
assert forall (any_list1:any list) (any_list2:any list), qreva (any_list1) (any_list2) = ((reverse (any_list1) @ any_list2) @ (Nil))
induction any_list1
simpl in goal
induction any_list2
reflexivity
simpl in goal
rewrite <- IH1 in goal at 0
reflexivity
simpl in goal
intro any_list2
rewrite IH1 in goal at 0
assert forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::any_list1)) @ (Nil)) = (((any_list2 @ (any1::(Nil))) @ any_list1) @ (Nil))
induction any_list2
reflexivity
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 0
reflexivity
rewrite lemma4 in goal at 0
reflexivity
simpl in goal
rewrite IH1 in goal at 0
simpl in goal
induction any_list2
reflexivity
simpl in goal
assert forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
induction any_list2
reflexivity
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma5 in goal at 1
reflexivity
Qed
File "_none_", lines 88-90, characters 2-22:
Warning 8 [partial-match]: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
[]

File "_none_", lines 88-90, characters 2-22:
Warning 8 [partial-match]: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
[]
