Enter the definition file path (1/2) : 
> Enter the definition file path (2/2) : 
> Choose the proof type :
1) Interactive Mode 	 2) Auto Mode
Enter the goal : =================================================
Progress: 1


No conjecture
>>> assert forall (x:any list) (y:any list), reverse ((reverse (x) @ y)) = (reverse (y) @ x)(rank : 0)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)

---------------------------------------
forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
induction any_list1(rank:12)
induction any_list2(rank:12)
=================================================
Progress: 2


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)

---------------------------------------
forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> induction any_list1(rank : 12)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), reverse ((reverse ((Nil)) @ any_list2)) = (reverse (any_list2) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4)
=================================================
Progress: 3


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), reverse ((reverse ((Nil)) @ any_list2)) = (reverse (any_list2) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), reverse (any_list2) = (reverse (any_list2) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:5)
=================================================
Progress: 4


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), reverse (any_list2) = (reverse (any_list2) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> induction any_list2(rank : 5)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
reverse ((Nil)) = (reverse ((Nil)) @ (Nil))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:4)
=================================================
Progress: 5


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
reverse ((Nil)) = (reverse ((Nil)) @ (Nil))

2 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (any_list3) = (reverse (any_list3) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
reverse ((any1::any_list3)) = (reverse ((any1::any_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:4)
=================================================
Progress: 6


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (any_list3) = (reverse (any_list3) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
reverse ((any1::any_list3)) = (reverse ((any1::any_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (any_list3) = (reverse (any_list3) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
(reverse (any_list3) @ (any1::(Nil))) = ((reverse (any_list3) @ (any1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
advanced_generalize done
Lemma : forall (arg1:any list), arg1 = (arg1 @ (Nil))
Model : arg1: (Nil)
Model : arg1: (Nil)
Model : arg1: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000039 seconds
Result : true
New Env

;;
Lemma List
forall (arg1:any list), arg1 = (arg1 @ (Nil))
End of Lemma List


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (any_list3) = (reverse (any_list3) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
(reverse (any_list3) @ (any1::(Nil))) = ((reverse (any_list3) @ (any1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 7


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (any_list3) = (reverse (any_list3) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
(reverse (any_list3) @ (any1::(Nil))) = ((reverse (any_list3) @ (any1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (arg1:any list), arg1 = (arg1 @ (Nil))(rank : 0)


1st goal of : forall (any_list1:any list), any_list1 = (any_list1 @ (Nil))

---------------------------------------
forall (any_list1:any list), any_list1 = (any_list1 @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:6)
=================================================
Progress: 8


1st goal of : forall (any_list1:any list), any_list1 = (any_list1 @ (Nil))

---------------------------------------
forall (any_list1:any list), any_list1 = (any_list1 @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> induction any_list1(rank : 6)


1st goal of : forall (any_list1:any list), any_list1 = (any_list1 @ (Nil))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
(Nil) = ((Nil) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5)
=================================================
Progress: 9


1st goal of : forall (any_list1:any list), any_list1 = (any_list1 @ (Nil))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
(Nil) = ((Nil) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5)


1st goal of : forall (any_list1:any list), any_list1 = (any_list1 @ (Nil))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : any_list2 = (any_list2 @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
(any1::any_list2) = ((any1::any_list2) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5)
=================================================
Progress: 10


1st goal of : forall (any_list1:any list), any_list1 = (any_list1 @ (Nil))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : any_list2 = (any_list2 @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
(any1::any_list2) = ((any1::any_list2) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5)


1st goal of : forall (any_list1:any list), any_list1 = (any_list1 @ (Nil))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : any_list2 = (any_list2 @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
(any1::any_list2) = (any1::(any_list2 @ (Nil)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:5)
=================================================
Progress: 11


1st goal of : forall (any_list1:any list), any_list1 = (any_list1 @ (Nil))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : any_list2 = (any_list2 @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
(any1::any_list2) = (any1::(any_list2 @ (Nil)))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 5)


1st goal of : forall (any_list1:any list), any_list1 = (any_list1 @ (Nil))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : any_list2 = (any_list2 @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
(any1::any_list2) = (any1::any_list2)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:4)
=================================================
Progress: 12


1st goal of : forall (any_list1:any list), any_list1 = (any_list1 @ (Nil))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : any_list2 = (any_list2 @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
(any1::any_list2) = (any1::any_list2)

0 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (any_list3) = (reverse (any_list3) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
(reverse (any_list3) @ (any1::(Nil))) = ((reverse (any_list3) @ (any1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
rewrite <- lemma3 in goal at 0(rank:4)
=================================================
Progress: 13


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (any_list3) = (reverse (any_list3) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
(reverse (any_list3) @ (any1::(Nil))) = ((reverse (any_list3) @ (any1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (any_list3) = (reverse (any_list3) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
(reverse (any_list3) @ (any1::(Nil))) = (reverse (any_list3) @ (any1::(Nil)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3)
=================================================
Progress: 14


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (any_list3) = (reverse (any_list3) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
(reverse (any_list3) @ (any1::(Nil))) = (reverse (any_list3) @ (any1::(Nil)))

1 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 3)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse ((reverse (any_list3) @ any_list2)) = (reverse (any_list2) @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), reverse ((reverse ((any1::any_list3)) @ any_list2)) = (reverse (any_list2) @ (any1::any_list3))

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:3)
=================================================
Progress: 15


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse ((reverse (any_list3) @ any_list2)) = (reverse (any_list2) @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), reverse ((reverse ((any1::any_list3)) @ any_list2)) = (reverse (any_list2) @ (any1::any_list3))

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse ((reverse (any_list3) @ any_list2)) = (reverse (any_list2) @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), reverse (((reverse (any_list3) @ (any1::(Nil))) @ any_list2)) = (reverse (any_list2) @ (any1::any_list3))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:4)
=================================================
Progress: 16


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse ((reverse (any_list3) @ any_list2)) = (reverse (any_list2) @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), reverse (((reverse (any_list3) @ (any1::(Nil))) @ any_list2)) = (reverse (any_list2) @ (any1::any_list3))

0 goal(s) more...

0 conjecture(s) more...
>>> induction any_list2(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse ((reverse (any_list3) @ any_list2)) = (reverse (any_list2) @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
reverse (((reverse (any_list3) @ (any1::(Nil))) @ (Nil))) = (reverse ((Nil)) @ (any1::any_list3))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4)
=================================================
Progress: 17


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse ((reverse (any_list3) @ any_list2)) = (reverse (any_list2) @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
reverse (((reverse (any_list3) @ (any1::(Nil))) @ (Nil))) = (reverse ((Nil)) @ (any1::any_list3))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse ((reverse (any_list3) @ any_list2)) = (reverse (any_list2) @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
reverse (((reverse (any_list3) @ (any1::(Nil))) @ (Nil))) = (any1::any_list3)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- lemma3 in goal at 0(rank:4)
=================================================
Progress: 18


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse ((reverse (any_list3) @ any_list2)) = (reverse (any_list2) @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
reverse (((reverse (any_list3) @ (any1::(Nil))) @ (Nil))) = (any1::any_list3)

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse ((reverse (any_list3) @ any_list2)) = (reverse (any_list2) @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
reverse ((reverse (any_list3) @ (any1::(Nil)))) = (any1::any_list3)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:4)
=================================================
Progress: 19


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse ((reverse (any_list3) @ any_list2)) = (reverse (any_list2) @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
reverse ((reverse (any_list3) @ (any1::(Nil)))) = (any1::any_list3)

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse ((reverse (any_list3) @ any_list2)) = (reverse (any_list2) @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
(reverse ((any1::(Nil))) @ any_list3) = (any1::any_list3)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3)
=================================================
Progress: 20


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse ((reverse (any_list3) @ any_list2)) = (reverse (any_list2) @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
(reverse ((any1::(Nil))) @ any_list3) = (any1::any_list3)

1 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 3)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse ((reverse (any_list3) @ any_list2)) = (reverse (any_list2) @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : reverse (((reverse (any_list3) @ (any1::(Nil))) @ any_list4)) = (reverse (any_list4) @ (any1::any_list3))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
reverse (((reverse (any_list3) @ (any1::(Nil))) @ (any2::any_list4))) = (reverse ((any2::any_list4)) @ (any1::any_list3))

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:3)
=================================================
Progress: 21


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse ((reverse (any_list3) @ any_list2)) = (reverse (any_list2) @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : reverse (((reverse (any_list3) @ (any1::(Nil))) @ any_list4)) = (reverse (any_list4) @ (any1::any_list3))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
reverse (((reverse (any_list3) @ (any1::(Nil))) @ (any2::any_list4))) = (reverse ((any2::any_list4)) @ (any1::any_list3))

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse ((reverse (any_list3) @ any_list2)) = (reverse (any_list2) @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : reverse (((reverse (any_list3) @ (any1::(Nil))) @ any_list4)) = (reverse (any_list4) @ (any1::any_list3))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
reverse (((reverse (any_list3) @ (any1::(Nil))) @ (any2::any_list4))) = ((reverse (any_list4) @ (any2::(Nil))) @ (any1::any_list3))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any_list3:any list) (any_list4:any list), reverse (((reverse (any_list3) @ (any1::(Nil))) @ (any2::any_list4))) = ((reverse (any_list4) @ (any2::(Nil))) @ (any1::any_list3))
Model : any1: 2, any2: 0, any_list3: (Nil), any_list4: (Nil)
Model : any1: 1, any2: 3, any_list3: (Nil), any_list4: (Nil)
Model : any1: 5, any2: 8, any_list3: (Nil), any_list4: (4::(Nil))
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.001049 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any_list3:any list) (any_list4:any list), reverse (((reverse (any_list3) @ (any1::(Nil))) @ (any2::any_list4))) = ((reverse (any_list4) @ (any2::(Nil))) @ (any1::any_list3))
End of Lemma List


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse ((reverse (any_list3) @ any_list2)) = (reverse (any_list2) @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : reverse (((reverse (any_list3) @ (any1::(Nil))) @ any_list4)) = (reverse (any_list4) @ (any1::any_list3))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
reverse (((reverse (any_list3) @ (any1::(Nil))) @ (any2::any_list4))) = ((reverse (any_list4) @ (any2::(Nil))) @ (any1::any_list3))

0 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 22


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse ((reverse (any_list3) @ any_list2)) = (reverse (any_list2) @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : reverse (((reverse (any_list3) @ (any1::(Nil))) @ any_list4)) = (reverse (any_list4) @ (any1::any_list3))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
reverse (((reverse (any_list3) @ (any1::(Nil))) @ (any2::any_list4))) = ((reverse (any_list4) @ (any2::(Nil))) @ (any1::any_list3))

0 goal(s) more...

0 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any_list3:any list) (any_list4:any list), reverse (((reverse (any_list3) @ (any1::(Nil))) @ (any2::any_list4))) = ((reverse (any_list4) @ (any2::(Nil))) @ (any1::any_list3))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), reverse (((reverse (any_list1) @ (any1::(Nil))) @ (any2::any_list2))) = ((reverse (any_list2) @ (any2::(Nil))) @ (any1::any_list1))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), reverse (((reverse (any_list1) @ (any1::(Nil))) @ (any2::any_list2))) = ((reverse (any_list2) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:6)
=================================================
Progress: 23


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), reverse (((reverse (any_list1) @ (any1::(Nil))) @ (any2::any_list2))) = ((reverse (any_list2) @ (any2::(Nil))) @ (any1::any_list1))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), reverse (((reverse (any_list1) @ (any1::(Nil))) @ (any2::any_list2))) = ((reverse (any_list2) @ (any2::(Nil))) @ (any1::any_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction any_list1(rank : 6)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), reverse (((reverse (any_list1) @ (any1::(Nil))) @ (any2::any_list2))) = ((reverse (any_list2) @ (any2::(Nil))) @ (any1::any_list1))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list), reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (any2::any_list2))) = ((reverse (any_list2) @ (any2::(Nil))) @ (any1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5)
=================================================
Progress: 24


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), reverse (((reverse (any_list1) @ (any1::(Nil))) @ (any2::any_list2))) = ((reverse (any_list2) @ (any2::(Nil))) @ (any1::any_list1))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list), reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (any2::any_list2))) = ((reverse (any_list2) @ (any2::(Nil))) @ (any1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), reverse (((reverse (any_list1) @ (any1::(Nil))) @ (any2::any_list2))) = ((reverse (any_list2) @ (any2::(Nil))) @ (any1::any_list1))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), reverse (((reverse (any_list3) @ (any1::(Nil))) @ (any2::any_list2))) = ((reverse (any_list2) @ (any2::(Nil))) @ (any1::any_list3))
Inductive1 : any_list1 = (any3::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list), reverse (((reverse ((any3::any_list3)) @ (any1::(Nil))) @ (any2::any_list2))) = ((reverse (any_list2) @ (any2::(Nil))) @ (any1::(any3::any_list3)))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5)
=================================================
Progress: 25


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), reverse (((reverse (any_list1) @ (any1::(Nil))) @ (any2::any_list2))) = ((reverse (any_list2) @ (any2::(Nil))) @ (any1::any_list1))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), reverse (((reverse (any_list3) @ (any1::(Nil))) @ (any2::any_list2))) = ((reverse (any_list2) @ (any2::(Nil))) @ (any1::any_list3))
Inductive1 : any_list1 = (any3::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list), reverse (((reverse ((any3::any_list3)) @ (any1::(Nil))) @ (any2::any_list2))) = ((reverse (any_list2) @ (any2::(Nil))) @ (any1::(any3::any_list3)))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), reverse (((reverse (any_list1) @ (any1::(Nil))) @ (any2::any_list2))) = ((reverse (any_list2) @ (any2::(Nil))) @ (any1::any_list1))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), reverse (((reverse (any_list3) @ (any1::(Nil))) @ (any2::any_list2))) = ((reverse (any_list2) @ (any2::(Nil))) @ (any1::any_list3))
Inductive1 : any_list1 = (any3::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::any_list2))) = ((reverse (any_list2) @ (any2::(Nil))) @ (any1::(any3::any_list3)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:6)
=================================================
Progress: 26


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), reverse (((reverse (any_list1) @ (any1::(Nil))) @ (any2::any_list2))) = ((reverse (any_list2) @ (any2::(Nil))) @ (any1::any_list1))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), reverse (((reverse (any_list3) @ (any1::(Nil))) @ (any2::any_list2))) = ((reverse (any_list2) @ (any2::(Nil))) @ (any1::any_list3))
Inductive1 : any_list1 = (any3::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::any_list2))) = ((reverse (any_list2) @ (any2::(Nil))) @ (any1::(any3::any_list3)))

0 goal(s) more...

1 conjecture(s) more...
>>> induction any_list2(rank : 6)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), reverse (((reverse (any_list1) @ (any1::(Nil))) @ (any2::any_list2))) = ((reverse (any_list2) @ (any2::(Nil))) @ (any1::any_list1))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), reverse (((reverse (any_list3) @ (any1::(Nil))) @ (any2::any_list2))) = ((reverse (any_list2) @ (any2::(Nil))) @ (any1::any_list3))
Inductive1 : any_list1 = (any3::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = ((reverse ((Nil)) @ (any2::(Nil))) @ (any1::(any3::any_list3)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6)
=================================================
Progress: 27


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), reverse (((reverse (any_list1) @ (any1::(Nil))) @ (any2::any_list2))) = ((reverse (any_list2) @ (any2::(Nil))) @ (any1::any_list1))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), reverse (((reverse (any_list3) @ (any1::(Nil))) @ (any2::any_list2))) = ((reverse (any_list2) @ (any2::(Nil))) @ (any1::any_list3))
Inductive1 : any_list1 = (any3::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = ((reverse ((Nil)) @ (any2::(Nil))) @ (any1::(any3::any_list3)))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), reverse (((reverse (any_list1) @ (any1::(Nil))) @ (any2::any_list2))) = ((reverse (any_list2) @ (any2::(Nil))) @ (any1::any_list1))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), reverse (((reverse (any_list3) @ (any1::(Nil))) @ (any2::any_list2))) = ((reverse (any_list2) @ (any2::(Nil))) @ (any1::any_list3))
Inductive1 : any_list1 = (any3::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list3)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
intro any1(rank:6)
intro any2(rank:6)
=================================================
Progress: 28


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), reverse (((reverse (any_list1) @ (any1::(Nil))) @ (any2::any_list2))) = ((reverse (any_list2) @ (any2::(Nil))) @ (any1::any_list1))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), reverse (((reverse (any_list3) @ (any1::(Nil))) @ (any2::any_list2))) = ((reverse (any_list2) @ (any2::(Nil))) @ (any1::any_list3))
Inductive1 : any_list1 = (any3::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list3)))

1 goal(s) more...

1 conjecture(s) more...
>>> intro any1(rank : 6)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), reverse (((reverse (any_list1) @ (any1::(Nil))) @ (any2::any_list2))) = ((reverse (any_list2) @ (any2::(Nil))) @ (any1::any_list1))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), reverse (((reverse (any_list3) @ (any1::(Nil))) @ (any2::any_list2))) = ((reverse (any_list2) @ (any2::(Nil))) @ (any1::any_list3))
Inductive1 : any_list1 = (any3::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
---------------------------------------
forall (any2:any), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list3)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro any2(rank:6)
=================================================
Progress: 29


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), reverse (((reverse (any_list1) @ (any1::(Nil))) @ (any2::any_list2))) = ((reverse (any_list2) @ (any2::(Nil))) @ (any1::any_list1))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), reverse (((reverse (any_list3) @ (any1::(Nil))) @ (any2::any_list2))) = ((reverse (any_list2) @ (any2::(Nil))) @ (any1::any_list3))
Inductive1 : any_list1 = (any3::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list3)))

1 goal(s) more...

1 conjecture(s) more...
>>> intro any2(rank : 6)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), reverse (((reverse (any_list1) @ (any1::(Nil))) @ (any2::any_list2))) = ((reverse (any_list2) @ (any2::(Nil))) @ (any1::any_list1))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), reverse (((reverse (any_list3) @ (any1::(Nil))) @ (any2::any_list2))) = ((reverse (any_list2) @ (any2::(Nil))) @ (any1::any_list3))
Inductive1 : any_list1 = (any3::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
---------------------------------------
forall (any1:any), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list3)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any_list3:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list3)))
Model : any1: 6, any2: 4, any3: 0, any_list3: (Nil)
Model : any1: 8, any2: 3, any3: 4, any_list3: (Nil)
Model : any1: 1, any2: 2, any3: 8, any_list3: (5::(3::(Nil)))
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.002447 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any_list3:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list3)))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), reverse (((reverse (any_list1) @ (any1::(Nil))) @ (any2::any_list2))) = ((reverse (any_list2) @ (any2::(Nil))) @ (any1::any_list1))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), reverse (((reverse (any_list3) @ (any1::(Nil))) @ (any2::any_list2))) = ((reverse (any_list2) @ (any2::(Nil))) @ (any1::any_list3))
Inductive1 : any_list1 = (any3::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
---------------------------------------
forall (any1:any), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list3)))

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 30


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), reverse (((reverse (any_list1) @ (any1::(Nil))) @ (any2::any_list2))) = ((reverse (any_list2) @ (any2::(Nil))) @ (any1::any_list1))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), reverse (((reverse (any_list3) @ (any1::(Nil))) @ (any2::any_list2))) = ((reverse (any_list2) @ (any2::(Nil))) @ (any1::any_list3))
Inductive1 : any_list1 = (any3::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
---------------------------------------
forall (any1:any), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list3)))

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any_list3:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list3)))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list1)))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list1)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:8)
=================================================
Progress: 31


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), reverse (((reverse (any_list1) @ (any1::(Nil))) @ (any2::any_list2))) = ((reverse (any_list2) @ (any2::(Nil))) @ (any1::any_list1))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), reverse (((reverse (any_list3) @ (any1::(Nil))) @ (any2::any_list2))) = ((reverse (any_list2) @ (any2::(Nil))) @ (any1::any_list3))
Inductive1 : any_list1 = (any3::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
---------------------------------------
forall (any2:any), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list3)))

1 goal(s) more...

1 conjecture(s) more...
>>> intro any2(rank : 6)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), reverse (((reverse (any_list1) @ (any1::(Nil))) @ (any2::any_list2))) = ((reverse (any_list2) @ (any2::(Nil))) @ (any1::any_list1))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), reverse (((reverse (any_list3) @ (any1::(Nil))) @ (any2::any_list2))) = ((reverse (any_list2) @ (any2::(Nil))) @ (any1::any_list3))
Inductive1 : any_list1 = (any3::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
---------------------------------------
reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list3)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any_list3:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list3)))
Model : any1: 3, any2: 3, any3: 0, any_list3: (Nil)
Model : any1: 5, any2: 8, any3: 0, any_list3: (5::(Nil))
Model : any1: 0, any2: 8, any3: 4, any_list3: (5::(Nil))
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.002201 seconds
Result : true
=================================================
Progress: 32


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list1)))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list1)))

0 goal(s) more...

2 conjecture(s) more...
>>> induction any_list1(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any), reverse ((((reverse ((Nil)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7)
=================================================
Progress: 33


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any), reverse ((((reverse ((Nil)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list1)))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), reverse ((((reverse (any_list2) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list2)))
Inductive1 : any_list1 = (any4::any_list2)
---------------------------------------
forall (any1:any) (any2:any) (any3:any), reverse ((((reverse ((any4::any_list2)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::(any4::any_list2))))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7)
=================================================
Progress: 34


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list1)))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), reverse ((((reverse (any_list2) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list2)))
Inductive1 : any_list1 = (any4::any_list2)
---------------------------------------
forall (any1:any) (any2:any) (any3:any), reverse ((((reverse ((any4::any_list2)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::(any4::any_list2))))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list1)))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), reverse ((((reverse (any_list2) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list2)))
Inductive1 : any_list1 = (any4::any_list2)
---------------------------------------
forall (any1:any) (any2:any) (any3:any), reverse (((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::(any4::any_list2))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
intro any1(rank:7)
intro any2(rank:7)
intro any3(rank:7)
rewrite <- IH1 in goal at 0(rank:15)
=================================================
Progress: 35


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list1)))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), reverse ((((reverse (any_list2) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list2)))
Inductive1 : any_list1 = (any4::any_list2)
---------------------------------------
forall (any1:any) (any2:any) (any3:any), reverse (((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::(any4::any_list2))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any1(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list1)))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), reverse ((((reverse (any_list2) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list2)))
Inductive1 : any_list1 = (any4::any_list2)
any1 : any
---------------------------------------
forall (any2:any) (any3:any), reverse (((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::(any4::any_list2))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro any2(rank:7)
intro any3(rank:7)
rewrite <- IH1 in goal at 0(rank:15)
=================================================
Progress: 36


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list1)))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), reverse ((((reverse (any_list2) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list2)))
Inductive1 : any_list1 = (any4::any_list2)
---------------------------------------
forall (any1:any) (any2:any) (any3:any), reverse (((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::(any4::any_list2))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any2(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list1)))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), reverse ((((reverse (any_list2) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list2)))
Inductive1 : any_list1 = (any4::any_list2)
any2 : any
---------------------------------------
forall (any1:any) (any3:any), reverse (((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::(any4::any_list2))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro any3(rank:7)
rewrite <- IH1 in goal at 0(rank:15)
=================================================
Progress: 37


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list1)))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), reverse ((((reverse (any_list2) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list2)))
Inductive1 : any_list1 = (any4::any_list2)
---------------------------------------
forall (any1:any) (any2:any) (any3:any), reverse (((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::(any4::any_list2))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any3(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list1)))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), reverse ((((reverse (any_list2) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list2)))
Inductive1 : any_list1 = (any4::any_list2)
any3 : any
---------------------------------------
forall (any1:any) (any2:any), reverse (((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::(any4::any_list2))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:7)
=================================================
Progress: 38


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list1)))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), reverse ((((reverse (any_list2) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list2)))
Inductive1 : any_list1 = (any4::any_list2)
any1 : any
---------------------------------------
forall (any2:any) (any3:any), reverse (((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::(any4::any_list2))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any2(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list1)))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), reverse ((((reverse (any_list2) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list2)))
Inductive1 : any_list1 = (any4::any_list2)
any1 : any
any2 : any
---------------------------------------
forall (any3:any), reverse (((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::(any4::any_list2))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro any3(rank:7)
rewrite <- IH1 in goal at 0(rank:15)
=================================================
Progress: 39


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list1)))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), reverse ((((reverse (any_list2) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list2)))
Inductive1 : any_list1 = (any4::any_list2)
any1 : any
---------------------------------------
forall (any2:any) (any3:any), reverse (((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::(any4::any_list2))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any3(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list1)))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), reverse ((((reverse (any_list2) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list2)))
Inductive1 : any_list1 = (any4::any_list2)
any1 : any
any3 : any
---------------------------------------
forall (any2:any), reverse (((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::(any4::any_list2))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:7)
=================================================
Progress: 40


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list1)))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), reverse ((((reverse (any_list2) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list2)))
Inductive1 : any_list1 = (any4::any_list2)
any2 : any
---------------------------------------
forall (any1:any) (any3:any), reverse (((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::(any4::any_list2))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any3(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list1)))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), reverse ((((reverse (any_list2) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list2)))
Inductive1 : any_list1 = (any4::any_list2)
any2 : any
any3 : any
---------------------------------------
forall (any1:any), reverse (((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::(any4::any_list2))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:7)
=================================================
Progress: 41


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list1)))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), reverse ((((reverse (any_list2) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list2)))
Inductive1 : any_list1 = (any4::any_list2)
any3 : any
---------------------------------------
forall (any1:any) (any2:any), reverse (((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::(any4::any_list2))))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list1)))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), reverse ((((reverse (any_list2) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list2)))
Inductive1 : any_list1 = (any4::any_list2)
any3 : any
---------------------------------------
forall (any1:any) (any2:any), reverse (((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::reverse ((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any2:any) (arg2:any list), reverse ((arg2 @ (any2::(Nil)))) = (any2::reverse (arg2))
Model : any2: 1, arg2: (0::(4::(Nil)))
Model : any2: 1, arg2: (Nil)
Model : any2: 4, arg2: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000510 seconds
Result : true
New Env

;;
Lemma List
forall (any2:any) (arg2:any list), reverse ((arg2 @ (any2::(Nil)))) = (any2::reverse (arg2))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list1)))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), reverse ((((reverse (any_list2) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list2)))
Inductive1 : any_list1 = (any4::any_list2)
any3 : any
---------------------------------------
forall (any1:any) (any2:any), reverse (((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::reverse ((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 42


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list1)))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), reverse ((((reverse (any_list2) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list2)))
Inductive1 : any_list1 = (any4::any_list2)
any3 : any
---------------------------------------
forall (any1:any) (any2:any), reverse (((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::reverse ((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (any2:any) (arg2:any list), reverse ((arg2 @ (any2::(Nil)))) = (any2::reverse (arg2))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))

---------------------------------------
forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:10)
=================================================
Progress: 43


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list1)))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), reverse ((((reverse (any_list2) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list2)))
Inductive1 : any_list1 = (any4::any_list2)
any1 : any
any2 : any
---------------------------------------
forall (any3:any), reverse (((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::(any4::any_list2))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any3(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list1)))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), reverse ((((reverse (any_list2) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list2)))
Inductive1 : any_list1 = (any4::any_list2)
any1 : any
any2 : any
any3 : any
---------------------------------------
reverse (((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::(any4::any_list2))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:7)
=================================================
Progress: 44


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list1)))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), reverse ((((reverse (any_list2) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list2)))
Inductive1 : any_list1 = (any4::any_list2)
any1 : any
any3 : any
---------------------------------------
forall (any2:any), reverse (((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::(any4::any_list2))))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list1)))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), reverse ((((reverse (any_list2) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list2)))
Inductive1 : any_list1 = (any4::any_list2)
any1 : any
any3 : any
---------------------------------------
forall (any2:any), reverse (((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::reverse ((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any2:any) (arg3:any list), reverse ((arg3 @ (any2::(Nil)))) = (any2::reverse (arg3))
Model : any2: 3, arg3: (0::(0::(3::(Nil))))
Model : any2: 4, arg3: (Nil)
Model : any2: 5, arg3: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000870 seconds
Result : true
New Env

;;
Lemma List
forall (any2:any) (arg3:any list), reverse ((arg3 @ (any2::(Nil)))) = (any2::reverse (arg3))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list1)))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), reverse ((((reverse (any_list2) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list2)))
Inductive1 : any_list1 = (any4::any_list2)
any1 : any
any3 : any
---------------------------------------
forall (any2:any), reverse (((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::reverse ((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 45


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list1)))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), reverse ((((reverse (any_list2) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list2)))
Inductive1 : any_list1 = (any4::any_list2)
any1 : any
any3 : any
---------------------------------------
forall (any2:any), reverse (((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::reverse ((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (any2:any) (arg3:any list), reverse ((arg3 @ (any2::(Nil)))) = (any2::reverse (arg3))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))

---------------------------------------
forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:10)
=================================================
Progress: 46


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list1)))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), reverse ((((reverse (any_list2) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list2)))
Inductive1 : any_list1 = (any4::any_list2)
any2 : any
any3 : any
---------------------------------------
forall (any1:any), reverse (((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::(any4::any_list2))))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list1)))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), reverse ((((reverse (any_list2) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list2)))
Inductive1 : any_list1 = (any4::any_list2)
any2 : any
any3 : any
---------------------------------------
forall (any1:any), reverse (((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::reverse ((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any2:any) (arg4:any list), reverse ((arg4 @ (any2::(Nil)))) = (any2::reverse (arg4))
Model : any2: 1, arg4: (Nil)
Model : any2: 6, arg4: (Nil)
Model : any2: 2, arg4: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000207 seconds
Result : true
New Env

;;
Lemma List
forall (any2:any) (arg4:any list), reverse ((arg4 @ (any2::(Nil)))) = (any2::reverse (arg4))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list1)))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), reverse ((((reverse (any_list2) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list2)))
Inductive1 : any_list1 = (any4::any_list2)
any2 : any
any3 : any
---------------------------------------
forall (any1:any), reverse (((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::reverse ((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 47


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list1)))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), reverse ((((reverse (any_list2) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list2)))
Inductive1 : any_list1 = (any4::any_list2)
any2 : any
any3 : any
---------------------------------------
forall (any1:any), reverse (((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::reverse ((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (any2:any) (arg4:any list), reverse ((arg4 @ (any2::(Nil)))) = (any2::reverse (arg4))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))

---------------------------------------
forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:10)
=================================================
Progress: 48


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list1)))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), reverse ((((reverse (any_list2) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list2)))
Inductive1 : any_list1 = (any4::any_list2)
any1 : any
any2 : any
any3 : any
---------------------------------------
reverse (((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::(any4::any_list2))))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list1)))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), reverse ((((reverse (any_list2) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list2)))
Inductive1 : any_list1 = (any4::any_list2)
any1 : any
any2 : any
any3 : any
---------------------------------------
reverse (((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::reverse ((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any2:any) (arg5:any list), reverse ((arg5 @ (any2::(Nil)))) = (any2::reverse (arg5))
Model : any2: 5, arg5: (Nil)
Model : any2: 6, arg5: (Nil)
Model : any2: 3, arg5: (2::(0::(Nil)))
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000487 seconds
Result : true
New Env

;;
Lemma List
forall (any2:any) (arg5:any list), reverse ((arg5 @ (any2::(Nil)))) = (any2::reverse (arg5))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list1)))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), reverse ((((reverse (any_list2) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list2)))
Inductive1 : any_list1 = (any4::any_list2)
any1 : any
any2 : any
any3 : any
---------------------------------------
reverse (((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::reverse ((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 49


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list1)))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), reverse ((((reverse (any_list2) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list2)))
Inductive1 : any_list1 = (any4::any_list2)
any1 : any
any2 : any
any3 : any
---------------------------------------
reverse (((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::reverse ((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (any2:any) (arg5:any list), reverse ((arg5 @ (any2::(Nil)))) = (any2::reverse (arg5))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))

---------------------------------------
forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:10)
=================================================
Progress: 50


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))

---------------------------------------
forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> induction any_list1(rank : 10)


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any), reverse (((Nil) @ (any1::(Nil)))) = (any1::reverse ((Nil)))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9)
=================================================
Progress: 51


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any), reverse (((Nil) @ (any1::(Nil)))) = (any1::reverse ((Nil)))

1 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), reverse (((any2::any_list2) @ (any1::(Nil)))) = (any1::reverse ((any2::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 52


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), reverse (((any2::any_list2) @ (any1::(Nil)))) = (any1::reverse ((any2::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), (reverse ((any_list2 @ (any1::(Nil)))) @ (any2::(Nil))) = (any1::(reverse (any_list2) @ (any2::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro any1(rank:9)
rewrite IH1 in goal at 0(rank:17)
=================================================
Progress: 53


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), (reverse ((any_list2 @ (any1::(Nil)))) @ (any2::(Nil))) = (any1::(reverse (any_list2) @ (any2::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any1(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
(reverse ((any_list2 @ (any1::(Nil)))) @ (any2::(Nil))) = (any1::(reverse (any_list2) @ (any2::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:9)
=================================================
Progress: 54


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
(reverse ((any_list2 @ (any1::(Nil)))) @ (any2::(Nil))) = (any1::(reverse (any_list2) @ (any2::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
((any1::reverse (any_list2)) @ (any2::(Nil))) = (any1::(reverse (any_list2) @ (any2::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7)
=================================================
Progress: 55


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
((any1::reverse (any_list2)) @ (any2::(Nil))) = (any1::(reverse (any_list2) @ (any2::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list1)))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), reverse ((((reverse (any_list2) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list2)))
Inductive1 : any_list1 = (any4::any_list2)
any3 : any
---------------------------------------
forall (any1:any) (any2:any), reverse (((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::reverse ((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 1
Tactic List : 6
intro any1(rank:7)
rewrite lemma4 in goal at 1(rank:15)
rewrite lemma4 in goal at 0(rank:23)
rewrite <- lemma4 in goal at 0(rank:15)
rewrite lemma4 in goal at 2(rank:23)
intro any2(rank:7)
=================================================
Progress: 56


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list1)))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), reverse ((((reverse (any_list2) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list2)))
Inductive1 : any_list1 = (any4::any_list2)
any3 : any
---------------------------------------
forall (any1:any) (any2:any), reverse (((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::reverse ((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any1(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list1)))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), reverse ((((reverse (any_list2) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list2)))
Inductive1 : any_list1 = (any4::any_list2)
any3 : any
any1 : any
---------------------------------------
forall (any2:any), reverse (((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::reverse ((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
intro any2(rank:7)
rewrite lemma4 in goal at 1(rank:15)
rewrite lemma4 in goal at 2(rank:23)
rewrite <- lemma4 in goal at 0(rank:15)
rewrite lemma4 in goal at 0(rank:23)
=================================================
Progress: 57


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list1)))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), reverse ((((reverse (any_list2) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list2)))
Inductive1 : any_list1 = (any4::any_list2)
any3 : any
---------------------------------------
forall (any1:any) (any2:any), reverse (((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::reverse ((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any2(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list1)))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), reverse ((((reverse (any_list2) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list2)))
Inductive1 : any_list1 = (any4::any_list2)
any3 : any
any2 : any
---------------------------------------
forall (any1:any), reverse (((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::reverse ((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite lemma4 in goal at 1(rank:15)
rewrite lemma4 in goal at 0(rank:23)
rewrite <- lemma4 in goal at 0(rank:15)
rewrite lemma4 in goal at 2(rank:23)
=================================================
Progress: 58


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list1)))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), reverse ((((reverse (any_list2) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list2)))
Inductive1 : any_list1 = (any4::any_list2)
any3 : any
any1 : any
---------------------------------------
forall (any2:any), reverse (((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::reverse ((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any2(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list1)))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), reverse ((((reverse (any_list2) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list2)))
Inductive1 : any_list1 = (any4::any_list2)
any3 : any
any1 : any
any2 : any
---------------------------------------
reverse (((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::reverse ((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite lemma4 in goal at 1(rank:15)
rewrite lemma4 in goal at 0(rank:23)
rewrite <- lemma4 in goal at 0(rank:15)
rewrite lemma4 in goal at 2(rank:23)
=================================================
Progress: 59


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))

---------------------------------------
forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> induction any_list1(rank : 10)


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any), reverse (((Nil) @ (any1::(Nil)))) = (any1::reverse ((Nil)))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9)
=================================================
Progress: 60


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any), reverse (((Nil) @ (any1::(Nil)))) = (any1::reverse ((Nil)))

1 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), reverse (((any2::any_list2) @ (any1::(Nil)))) = (any1::reverse ((any2::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 61


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), reverse (((any2::any_list2) @ (any1::(Nil)))) = (any1::reverse ((any2::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), (reverse ((any_list2 @ (any1::(Nil)))) @ (any2::(Nil))) = (any1::(reverse (any_list2) @ (any2::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro any1(rank:9)
rewrite IH1 in goal at 0(rank:17)
=================================================
Progress: 62


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), (reverse ((any_list2 @ (any1::(Nil)))) @ (any2::(Nil))) = (any1::(reverse (any_list2) @ (any2::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any1(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
(reverse ((any_list2 @ (any1::(Nil)))) @ (any2::(Nil))) = (any1::(reverse (any_list2) @ (any2::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:9)
=================================================
Progress: 63


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
(reverse ((any_list2 @ (any1::(Nil)))) @ (any2::(Nil))) = (any1::(reverse (any_list2) @ (any2::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
((any1::reverse (any_list2)) @ (any2::(Nil))) = (any1::(reverse (any_list2) @ (any2::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 64


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
((any1::reverse (any_list2)) @ (any2::(Nil))) = (any1::(reverse (any_list2) @ (any2::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
(any1::(reverse (any_list2) @ (any2::(Nil)))) = (any1::(reverse (any_list2) @ (any2::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
advanced_generalize done
=================================================
Progress: 65


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))

---------------------------------------
forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> induction any_list1(rank : 10)


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any), reverse (((Nil) @ (any1::(Nil)))) = (any1::reverse ((Nil)))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9)
=================================================
Progress: 66


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any), reverse (((Nil) @ (any1::(Nil)))) = (any1::reverse ((Nil)))

1 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), reverse (((any2::any_list2) @ (any1::(Nil)))) = (any1::reverse ((any2::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 67


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), reverse (((any2::any_list2) @ (any1::(Nil)))) = (any1::reverse ((any2::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), (reverse ((any_list2 @ (any1::(Nil)))) @ (any2::(Nil))) = (any1::(reverse (any_list2) @ (any2::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro any1(rank:9)
rewrite IH1 in goal at 0(rank:17)
=================================================
Progress: 68


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), (reverse ((any_list2 @ (any1::(Nil)))) @ (any2::(Nil))) = (any1::(reverse (any_list2) @ (any2::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any1(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
(reverse ((any_list2 @ (any1::(Nil)))) @ (any2::(Nil))) = (any1::(reverse (any_list2) @ (any2::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:9)
=================================================
Progress: 69


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
(reverse ((any_list2 @ (any1::(Nil)))) @ (any2::(Nil))) = (any1::(reverse (any_list2) @ (any2::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
((any1::reverse (any_list2)) @ (any2::(Nil))) = (any1::(reverse (any_list2) @ (any2::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 70


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
((any1::reverse (any_list2)) @ (any2::(Nil))) = (any1::(reverse (any_list2) @ (any2::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
(any1::(reverse (any_list2) @ (any2::(Nil)))) = (any1::(reverse (any_list2) @ (any2::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
advanced_generalize done
=================================================
Progress: 71


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))

---------------------------------------
forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> induction any_list1(rank : 10)


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any), reverse (((Nil) @ (any1::(Nil)))) = (any1::reverse ((Nil)))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9)
=================================================
Progress: 72


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any), reverse (((Nil) @ (any1::(Nil)))) = (any1::reverse ((Nil)))

1 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), reverse (((any2::any_list2) @ (any1::(Nil)))) = (any1::reverse ((any2::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 73


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), reverse (((any2::any_list2) @ (any1::(Nil)))) = (any1::reverse ((any2::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), (reverse ((any_list2 @ (any1::(Nil)))) @ (any2::(Nil))) = (any1::(reverse (any_list2) @ (any2::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro any1(rank:9)
rewrite IH1 in goal at 0(rank:17)
=================================================
Progress: 74


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), (reverse ((any_list2 @ (any1::(Nil)))) @ (any2::(Nil))) = (any1::(reverse (any_list2) @ (any2::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any1(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
(reverse ((any_list2 @ (any1::(Nil)))) @ (any2::(Nil))) = (any1::(reverse (any_list2) @ (any2::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:9)
=================================================
Progress: 75


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
(reverse ((any_list2 @ (any1::(Nil)))) @ (any2::(Nil))) = (any1::(reverse (any_list2) @ (any2::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
((any1::reverse (any_list2)) @ (any2::(Nil))) = (any1::(reverse (any_list2) @ (any2::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 76


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
((any1::reverse (any_list2)) @ (any2::(Nil))) = (any1::(reverse (any_list2) @ (any2::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
(any1::(reverse (any_list2) @ (any2::(Nil)))) = (any1::(reverse (any_list2) @ (any2::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
advanced_generalize done
=================================================
Progress: 77


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)

---------------------------------------
forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> induction any_list2(rank : 12)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ (Nil))) = (reverse ((Nil)) @ any_list1)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4)
=================================================
Progress: 78


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ (Nil))) = (reverse ((Nil)) @ any_list1)

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ (Nil))) = any_list1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:5)
=================================================
Progress: 79


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ (Nil))) = any_list1

1 goal(s) more...

0 conjecture(s) more...
>>> induction any_list1(rank : 5)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ (Nil))) = (Nil)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:4)
=================================================
Progress: 80


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ (Nil))) = (Nil)

2 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : reverse ((reverse (any_list3) @ (Nil))) = any_list3
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
reverse ((reverse ((any1::any_list3)) @ (Nil))) = (any1::any_list3)

1 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:4)
=================================================
Progress: 81


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : reverse ((reverse (any_list3) @ (Nil))) = any_list3
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
reverse ((reverse ((any1::any_list3)) @ (Nil))) = (any1::any_list3)

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : reverse ((reverse (any_list3) @ (Nil))) = any_list3
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
reverse (((reverse (any_list3) @ (any1::(Nil))) @ (Nil))) = (any1::any_list3)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
advanced_generalize done
Lemma : forall (any1:any) (any_list3:any list), reverse (((reverse (any_list3) @ (any1::(Nil))) @ (Nil))) = (any1::any_list3)
Model : any1: 3, any_list3: (Nil)
Model : any1: 4, any_list3: (Nil)
Model : any1: 6, any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000374 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any_list3:any list), reverse (((reverse (any_list3) @ (any1::(Nil))) @ (Nil))) = (any1::any_list3)
End of Lemma List


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : reverse ((reverse (any_list3) @ (Nil))) = any_list3
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
reverse (((reverse (any_list3) @ (any1::(Nil))) @ (Nil))) = (any1::any_list3)

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 82


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : reverse ((reverse (any_list3) @ (Nil))) = any_list3
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
reverse (((reverse (any_list3) @ (any1::(Nil))) @ (Nil))) = (any1::any_list3)

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (any1:any) (any_list3:any list), reverse (((reverse (any_list3) @ (any1::(Nil))) @ (Nil))) = (any1::any_list3)(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list), reverse (((reverse (any_list1) @ (any1::(Nil))) @ (Nil))) = (any1::any_list1)

---------------------------------------
forall (any1:any) (any_list1:any list), reverse (((reverse (any_list1) @ (any1::(Nil))) @ (Nil))) = (any1::any_list1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:6)
=================================================
Progress: 83


1st goal of : forall (any1:any) (any_list1:any list), reverse (((reverse (any_list1) @ (any1::(Nil))) @ (Nil))) = (any1::any_list1)

---------------------------------------
forall (any1:any) (any_list1:any list), reverse (((reverse (any_list1) @ (any1::(Nil))) @ (Nil))) = (any1::any_list1)

0 goal(s) more...

1 conjecture(s) more...
>>> induction any_list1(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list), reverse (((reverse (any_list1) @ (any1::(Nil))) @ (Nil))) = (any1::any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any), reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil))) = (any1::(Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5)
=================================================
Progress: 84


1st goal of : forall (any1:any) (any_list1:any list), reverse (((reverse (any_list1) @ (any1::(Nil))) @ (Nil))) = (any1::any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any), reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil))) = (any1::(Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list), reverse (((reverse (any_list1) @ (any1::(Nil))) @ (Nil))) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), reverse (((reverse ((any2::any_list2)) @ (any1::(Nil))) @ (Nil))) = (any1::(any2::any_list2))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5)
=================================================
Progress: 85


1st goal of : forall (any1:any) (any_list1:any list), reverse (((reverse (any_list1) @ (any1::(Nil))) @ (Nil))) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), reverse (((reverse ((any2::any_list2)) @ (any1::(Nil))) @ (Nil))) = (any1::(any2::any_list2))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list), reverse (((reverse (any_list1) @ (any1::(Nil))) @ (Nil))) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), reverse ((((reverse (any_list2) @ (any2::(Nil))) @ (any1::(Nil))) @ (Nil))) = (any1::(any2::any_list2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
intro any1(rank:5)
rewrite <- IH1 in goal at 0(rank:13)
=================================================
Progress: 86


1st goal of : forall (any1:any) (any_list1:any list), reverse (((reverse (any_list1) @ (any1::(Nil))) @ (Nil))) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), reverse ((((reverse (any_list2) @ (any2::(Nil))) @ (any1::(Nil))) @ (Nil))) = (any1::(any2::any_list2))

0 goal(s) more...

1 conjecture(s) more...
>>> intro any1(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list), reverse (((reverse (any_list1) @ (any1::(Nil))) @ (Nil))) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
reverse ((((reverse (any_list2) @ (any2::(Nil))) @ (any1::(Nil))) @ (Nil))) = (any1::(any2::any_list2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:5)
=================================================
Progress: 87


1st goal of : forall (any1:any) (any_list1:any list), reverse (((reverse (any_list1) @ (any1::(Nil))) @ (Nil))) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
reverse ((((reverse (any_list2) @ (any2::(Nil))) @ (any1::(Nil))) @ (Nil))) = (any1::(any2::any_list2))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list), reverse (((reverse (any_list1) @ (any1::(Nil))) @ (Nil))) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
reverse ((((reverse (any_list2) @ (any2::(Nil))) @ (any1::(Nil))) @ (Nil))) = (any1::reverse (((reverse (any_list2) @ (any2::(Nil))) @ (Nil))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (arg6:any list), reverse (((arg6 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((arg6 @ (Nil))))
Model : any1: 3, arg6: (Nil)
Model : any1: 4, arg6: (0::(Nil))
Model : any1: 2, arg6: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000402 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (arg6:any list), reverse (((arg6 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((arg6 @ (Nil))))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list), reverse (((reverse (any_list1) @ (any1::(Nil))) @ (Nil))) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
reverse ((((reverse (any_list2) @ (any2::(Nil))) @ (any1::(Nil))) @ (Nil))) = (any1::reverse (((reverse (any_list2) @ (any2::(Nil))) @ (Nil))))

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 88


1st goal of : forall (any1:any) (any_list1:any list), reverse (((reverse (any_list1) @ (any1::(Nil))) @ (Nil))) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
reverse ((((reverse (any_list2) @ (any2::(Nil))) @ (any1::(Nil))) @ (Nil))) = (any1::reverse (((reverse (any_list2) @ (any2::(Nil))) @ (Nil))))

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (any1:any) (arg6:any list), reverse (((arg6 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((arg6 @ (Nil))))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list), reverse (((any_list1 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((any_list1 @ (Nil))))

---------------------------------------
forall (any1:any) (any_list1:any list), reverse (((any_list1 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((any_list1 @ (Nil))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:8)
=================================================
Progress: 89


1st goal of : forall (any1:any) (any_list1:any list), reverse (((any_list1 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((any_list1 @ (Nil))))

---------------------------------------
forall (any1:any) (any_list1:any list), reverse (((any_list1 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((any_list1 @ (Nil))))

0 goal(s) more...

2 conjecture(s) more...
>>> induction any_list1(rank : 8)


1st goal of : forall (any1:any) (any_list1:any list), reverse (((any_list1 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((any_list1 @ (Nil))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any), reverse ((((Nil) @ (any1::(Nil))) @ (Nil))) = (any1::reverse (((Nil) @ (Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7)
=================================================
Progress: 90


1st goal of : forall (any1:any) (any_list1:any list), reverse (((any_list1 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((any_list1 @ (Nil))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any), reverse ((((Nil) @ (any1::(Nil))) @ (Nil))) = (any1::reverse (((Nil) @ (Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list), reverse (((any_list1 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((any_list1 @ (Nil))))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse (((any_list2 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((any_list2 @ (Nil))))
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), reverse ((((any2::any_list2) @ (any1::(Nil))) @ (Nil))) = (any1::reverse (((any2::any_list2) @ (Nil))))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7)
=================================================
Progress: 91


1st goal of : forall (any1:any) (any_list1:any list), reverse (((any_list1 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((any_list1 @ (Nil))))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse (((any_list2 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((any_list2 @ (Nil))))
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), reverse ((((any2::any_list2) @ (any1::(Nil))) @ (Nil))) = (any1::reverse (((any2::any_list2) @ (Nil))))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list), reverse (((any_list1 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((any_list1 @ (Nil))))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse (((any_list2 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((any_list2 @ (Nil))))
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), (reverse (((any_list2 @ (any1::(Nil))) @ (Nil))) @ (any2::(Nil))) = (any1::(reverse ((any_list2 @ (Nil))) @ (any2::(Nil))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro any1(rank:7)
rewrite IH1 in goal at 0(rank:15)
=================================================
Progress: 92


1st goal of : forall (any1:any) (any_list1:any list), reverse (((any_list1 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((any_list1 @ (Nil))))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse (((any_list2 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((any_list2 @ (Nil))))
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), (reverse (((any_list2 @ (any1::(Nil))) @ (Nil))) @ (any2::(Nil))) = (any1::(reverse ((any_list2 @ (Nil))) @ (any2::(Nil))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any1(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list), reverse (((any_list1 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((any_list1 @ (Nil))))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse (((any_list2 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((any_list2 @ (Nil))))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
(reverse (((any_list2 @ (any1::(Nil))) @ (Nil))) @ (any2::(Nil))) = (any1::(reverse ((any_list2 @ (Nil))) @ (any2::(Nil))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:7)
=================================================
Progress: 93


1st goal of : forall (any1:any) (any_list1:any list), reverse (((any_list1 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((any_list1 @ (Nil))))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse (((any_list2 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((any_list2 @ (Nil))))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
(reverse (((any_list2 @ (any1::(Nil))) @ (Nil))) @ (any2::(Nil))) = (any1::(reverse ((any_list2 @ (Nil))) @ (any2::(Nil))))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list), reverse (((any_list1 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((any_list1 @ (Nil))))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse (((any_list2 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((any_list2 @ (Nil))))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
((any1::reverse ((any_list2 @ (Nil)))) @ (any2::(Nil))) = (any1::(reverse ((any_list2 @ (Nil))) @ (any2::(Nil))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5)
=================================================
Progress: 94


1st goal of : forall (any1:any) (any_list1:any list), reverse (((any_list1 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((any_list1 @ (Nil))))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse (((any_list2 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((any_list2 @ (Nil))))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
((any1::reverse ((any_list2 @ (Nil)))) @ (any2::(Nil))) = (any1::(reverse ((any_list2 @ (Nil))) @ (any2::(Nil))))

0 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list), reverse (((reverse (any_list1) @ (any1::(Nil))) @ (Nil))) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
reverse ((((reverse (any_list2) @ (any2::(Nil))) @ (any1::(Nil))) @ (Nil))) = (any1::reverse (((reverse (any_list2) @ (any2::(Nil))) @ (Nil))))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 1
Tactic List : 4
rewrite lemma3 in goal at 1(rank:13)
rewrite lemma3 in goal at 0(rank:21)
rewrite <- lemma3 in goal at 0(rank:13)
rewrite lemma3 in goal at 2(rank:21)
=================================================
Progress: 95


1st goal of : forall (any1:any) (any_list1:any list), reverse (((reverse (any_list1) @ (any1::(Nil))) @ (Nil))) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), reverse ((((reverse (any_list2) @ (any2::(Nil))) @ (any1::(Nil))) @ (Nil))) = (any1::(any2::any_list2))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list), reverse (((reverse (any_list1) @ (any1::(Nil))) @ (Nil))) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), reverse ((((reverse (any_list2) @ (any2::(Nil))) @ (any1::(Nil))) @ (Nil))) = (any1::reverse (((reverse (any_list2) @ (any2::(Nil))) @ (Nil))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (arg7:any list), reverse (((arg7 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((arg7 @ (Nil))))
Model : any1: 0, arg7: (Nil)
Model : any1: 3, arg7: (Nil)
Model : any1: 5, arg7: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000269 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (arg7:any list), reverse (((arg7 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((arg7 @ (Nil))))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list), reverse (((reverse (any_list1) @ (any1::(Nil))) @ (Nil))) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), reverse ((((reverse (any_list2) @ (any2::(Nil))) @ (any1::(Nil))) @ (Nil))) = (any1::reverse (((reverse (any_list2) @ (any2::(Nil))) @ (Nil))))

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 96


1st goal of : forall (any1:any) (any_list1:any list), reverse (((reverse (any_list1) @ (any1::(Nil))) @ (Nil))) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), reverse ((((reverse (any_list2) @ (any2::(Nil))) @ (any1::(Nil))) @ (Nil))) = (any1::reverse (((reverse (any_list2) @ (any2::(Nil))) @ (Nil))))

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (any1:any) (arg7:any list), reverse (((arg7 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((arg7 @ (Nil))))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list), reverse (((any_list1 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((any_list1 @ (Nil))))

---------------------------------------
forall (any1:any) (any_list1:any list), reverse (((any_list1 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((any_list1 @ (Nil))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:8)
=================================================
Progress: 97


1st goal of : forall (any1:any) (any_list1:any list), reverse (((any_list1 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((any_list1 @ (Nil))))

---------------------------------------
forall (any1:any) (any_list1:any list), reverse (((any_list1 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((any_list1 @ (Nil))))

0 goal(s) more...

2 conjecture(s) more...
>>> induction any_list1(rank : 8)


1st goal of : forall (any1:any) (any_list1:any list), reverse (((any_list1 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((any_list1 @ (Nil))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any), reverse ((((Nil) @ (any1::(Nil))) @ (Nil))) = (any1::reverse (((Nil) @ (Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7)
=================================================
Progress: 98


1st goal of : forall (any1:any) (any_list1:any list), reverse (((any_list1 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((any_list1 @ (Nil))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any), reverse ((((Nil) @ (any1::(Nil))) @ (Nil))) = (any1::reverse (((Nil) @ (Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list), reverse (((any_list1 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((any_list1 @ (Nil))))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse (((any_list2 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((any_list2 @ (Nil))))
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), reverse ((((any2::any_list2) @ (any1::(Nil))) @ (Nil))) = (any1::reverse (((any2::any_list2) @ (Nil))))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7)
=================================================
Progress: 99


1st goal of : forall (any1:any) (any_list1:any list), reverse (((any_list1 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((any_list1 @ (Nil))))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse (((any_list2 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((any_list2 @ (Nil))))
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), reverse ((((any2::any_list2) @ (any1::(Nil))) @ (Nil))) = (any1::reverse (((any2::any_list2) @ (Nil))))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list), reverse (((any_list1 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((any_list1 @ (Nil))))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse (((any_list2 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((any_list2 @ (Nil))))
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), (reverse (((any_list2 @ (any1::(Nil))) @ (Nil))) @ (any2::(Nil))) = (any1::(reverse ((any_list2 @ (Nil))) @ (any2::(Nil))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro any1(rank:7)
rewrite IH1 in goal at 0(rank:15)
=================================================
Progress: 100


1st goal of : forall (any1:any) (any_list1:any list), reverse (((any_list1 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((any_list1 @ (Nil))))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse (((any_list2 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((any_list2 @ (Nil))))
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), (reverse (((any_list2 @ (any1::(Nil))) @ (Nil))) @ (any2::(Nil))) = (any1::(reverse ((any_list2 @ (Nil))) @ (any2::(Nil))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any1(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list), reverse (((any_list1 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((any_list1 @ (Nil))))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse (((any_list2 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((any_list2 @ (Nil))))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
(reverse (((any_list2 @ (any1::(Nil))) @ (Nil))) @ (any2::(Nil))) = (any1::(reverse ((any_list2 @ (Nil))) @ (any2::(Nil))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:7)
=================================================
Progress: 101


1st goal of : forall (any1:any) (any_list1:any list), reverse (((any_list1 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((any_list1 @ (Nil))))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse (((any_list2 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((any_list2 @ (Nil))))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
(reverse (((any_list2 @ (any1::(Nil))) @ (Nil))) @ (any2::(Nil))) = (any1::(reverse ((any_list2 @ (Nil))) @ (any2::(Nil))))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list), reverse (((any_list1 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((any_list1 @ (Nil))))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse (((any_list2 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((any_list2 @ (Nil))))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
((any1::reverse ((any_list2 @ (Nil)))) @ (any2::(Nil))) = (any1::(reverse ((any_list2 @ (Nil))) @ (any2::(Nil))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5)
=================================================
Progress: 102


1st goal of : forall (any1:any) (any_list1:any list), reverse (((any_list1 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((any_list1 @ (Nil))))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse (((any_list2 @ (any1::(Nil))) @ (Nil))) = (any1::reverse ((any_list2 @ (Nil))))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
((any1::reverse ((any_list2 @ (Nil)))) @ (any2::(Nil))) = (any1::(reverse ((any_list2 @ (Nil))) @ (any2::(Nil))))

0 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list), reverse (((reverse (any_list1) @ (any1::(Nil))) @ (Nil))) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), reverse ((((reverse (any_list2) @ (any2::(Nil))) @ (any1::(Nil))) @ (Nil))) = (any1::reverse (((reverse (any_list2) @ (any2::(Nil))) @ (Nil))))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 1
Tactic List : 4
rewrite lemma3 in goal at 1(rank:13)
rewrite lemma3 in goal at 0(rank:21)
rewrite <- lemma3 in goal at 0(rank:13)
rewrite lemma3 in goal at 2(rank:21)
=================================================
Progress: 103


1st goal of : forall (any1:any) (any_list1:any list), reverse (((reverse (any_list1) @ (any1::(Nil))) @ (Nil))) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
reverse ((((reverse (any_list2) @ (any2::(Nil))) @ (any1::(Nil))) @ (Nil))) = (any1::reverse (((reverse (any_list2) @ (any2::(Nil))) @ (Nil))))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 1(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list), reverse (((reverse (any_list1) @ (any1::(Nil))) @ (Nil))) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
(any1::reverse (((reverse (any_list2) @ (any2::(Nil))) @ (Nil)))) = (any1::reverse (((reverse (any_list2) @ (any2::(Nil))) @ (Nil))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:4)
=================================================
Progress: 104


1st goal of : forall (any1:any) (any_list1:any list), reverse (((reverse (any_list1) @ (any1::(Nil))) @ (Nil))) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse (((reverse (any_list2) @ (any1::(Nil))) @ (Nil))) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
(any1::reverse (((reverse (any_list2) @ (any2::(Nil))) @ (Nil)))) = (any1::reverse (((reverse (any_list2) @ (any2::(Nil))) @ (Nil))))

0 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : reverse ((reverse (any_list3) @ (Nil))) = any_list3
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
reverse (((reverse (any_list3) @ (any1::(Nil))) @ (Nil))) = (any1::any_list3)

1 goal(s) more...

0 conjecture(s) more...
Deduplication: 7
Tactic List : 5
rewrite lemma3 in goal at 0(rank:12)
rewrite <- lemma4 in goal at 0(rank:12)
rewrite <- lemma4 in goal at 1(rank:20)
rewrite <- lemma4 in goal at 2(rank:12)
rewrite lemma4 in goal at 0(rank:12)
=================================================
Progress: 105


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : reverse ((reverse (any_list3) @ (Nil))) = any_list3
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
reverse (((reverse (any_list3) @ (any1::(Nil))) @ (Nil))) = (any1::any_list3)

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 12)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : reverse ((reverse (any_list3) @ (Nil))) = any_list3
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
(any1::reverse ((reverse (any_list3) @ (Nil)))) = (any1::any_list3)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- lemma4 in goal at 2(rank:12)
rewrite <- lemma4 in goal at 0(rank:20)
=================================================
Progress: 106


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : reverse ((reverse (any_list3) @ (Nil))) = any_list3
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
reverse (((reverse (any_list3) @ (any1::(Nil))) @ (Nil))) = (any1::any_list3)

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma4 in goal at 0(rank : 12)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : reverse ((reverse (any_list3) @ (Nil))) = any_list3
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
(any1::any_list3) = (any1::any_list3)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3)
=================================================
Progress: 107


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : reverse ((reverse (any_list3) @ (Nil))) = any_list3
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
(any1::any_list3) = (any1::any_list3)

1 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 3)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ (any1::any_list3))) = (reverse ((any1::any_list3)) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 5
Tactic List : 1
simpl in goal(rank:3)
=================================================
Progress: 108


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ (any1::any_list3))) = (reverse ((any1::any_list3)) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ (any1::any_list3))) = ((reverse (any_list3) @ (any1::(Nil))) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
induction any_list1(rank:12)
rewrite <- lemma4 in goal at 0(rank:19)
rewrite <- lemma4 in goal at 1(rank:19)
rewrite <- lemma4 in goal at 2(rank:19)
rewrite <- IH1 in goal at 0(rank:19)
=================================================
Progress: 109


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ (any1::any_list3))) = ((reverse (any_list3) @ (any1::(Nil))) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> induction any_list1(rank : 12)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ (any1::any_list3))) = ((reverse (any_list3) @ (any1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4)
=================================================
Progress: 110


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ (any1::any_list3))) = ((reverse (any_list3) @ (any1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
(reverse (any_list3) @ (any1::(Nil))) = ((reverse (any_list3) @ (any1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
rewrite <- IH1 in goal at 0(rank:20)
rewrite <- IH1 in goal at 2(rank:20)
rewrite <- lemma4 in goal at 0(rank:20)
rewrite <- lemma4 in goal at 1(rank:20)
rewrite <- lemma4 in goal at 2(rank:20)
rewrite <- IH1 in goal at 1(rank:20)
=================================================
Progress: 111


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list1)))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), reverse ((((reverse (any_list2) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list2)))
Inductive1 : any_list1 = (any4::any_list2)
---------------------------------------
forall (any1:any) (any2:any) (any3:any), reverse (((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::(any4::any_list2))))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list1)))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), reverse ((((reverse (any_list2) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list2)))
Inductive1 : any_list1 = (any4::any_list2)
---------------------------------------
forall (any1:any) (any2:any) (any3:any), reverse (((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::reverse ((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any2:any) (arg8:any list), reverse ((arg8 @ (any2::(Nil)))) = (any2::reverse (arg8))
Model : any2: 1, arg8: (1::(Nil))
Model : any2: 4, arg8: (Nil)
Model : any2: 8, arg8: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000479 seconds
Result : true
New Env

;;
Lemma List
forall (any2:any) (arg8:any list), reverse ((arg8 @ (any2::(Nil)))) = (any2::reverse (arg8))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list1)))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), reverse ((((reverse (any_list2) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list2)))
Inductive1 : any_list1 = (any4::any_list2)
---------------------------------------
forall (any1:any) (any2:any) (any3:any), reverse (((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::reverse ((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 112


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list1)))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), reverse ((((reverse (any_list2) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list2)))
Inductive1 : any_list1 = (any4::any_list2)
---------------------------------------
forall (any1:any) (any2:any) (any3:any), reverse (((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::reverse ((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (any2:any) (arg8:any list), reverse ((arg8 @ (any2::(Nil)))) = (any2::reverse (arg8))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))

---------------------------------------
forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:10)
=================================================
Progress: 113


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))

---------------------------------------
forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> induction any_list1(rank : 10)


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any), reverse (((Nil) @ (any1::(Nil)))) = (any1::reverse ((Nil)))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9)
=================================================
Progress: 114


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any), reverse (((Nil) @ (any1::(Nil)))) = (any1::reverse ((Nil)))

1 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), reverse (((any2::any_list2) @ (any1::(Nil)))) = (any1::reverse ((any2::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 115


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), reverse (((any2::any_list2) @ (any1::(Nil)))) = (any1::reverse ((any2::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), (reverse ((any_list2 @ (any1::(Nil)))) @ (any2::(Nil))) = (any1::(reverse (any_list2) @ (any2::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro any1(rank:9)
rewrite IH1 in goal at 0(rank:17)
=================================================
Progress: 116


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), (reverse ((any_list2 @ (any1::(Nil)))) @ (any2::(Nil))) = (any1::(reverse (any_list2) @ (any2::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any1(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
(reverse ((any_list2 @ (any1::(Nil)))) @ (any2::(Nil))) = (any1::(reverse (any_list2) @ (any2::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:9)
=================================================
Progress: 117


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
(reverse ((any_list2 @ (any1::(Nil)))) @ (any2::(Nil))) = (any1::(reverse (any_list2) @ (any2::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
((any1::reverse (any_list2)) @ (any2::(Nil))) = (any1::(reverse (any_list2) @ (any2::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7)
=================================================
Progress: 118


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
((any1::reverse (any_list2)) @ (any2::(Nil))) = (any1::(reverse (any_list2) @ (any2::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list1)))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), reverse ((((reverse (any_list2) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list2)))
Inductive1 : any_list1 = (any4::any_list2)
---------------------------------------
forall (any1:any) (any2:any) (any3:any), reverse (((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::reverse ((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 1
Tactic List : 6
intro any1(rank:7)
rewrite lemma4 in goal at 1(rank:15)
rewrite lemma4 in goal at 0(rank:23)
rewrite <- lemma4 in goal at 0(rank:15)
rewrite lemma4 in goal at 2(rank:23)
intro any2(rank:7)
=================================================
Progress: 119


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list1)))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), reverse ((((reverse (any_list2) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list2)))
Inductive1 : any_list1 = (any4::any_list2)
---------------------------------------
forall (any1:any) (any2:any) (any3:any), reverse (((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::reverse ((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any1(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list1)))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), reverse ((((reverse (any_list2) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list2)))
Inductive1 : any_list1 = (any4::any_list2)
any1 : any
---------------------------------------
forall (any2:any) (any3:any), reverse (((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::reverse ((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
intro any2(rank:7)
rewrite lemma4 in goal at 1(rank:15)
rewrite lemma4 in goal at 2(rank:23)
rewrite <- lemma4 in goal at 0(rank:15)
rewrite lemma4 in goal at 0(rank:23)
=================================================
Progress: 120


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list1)))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), reverse ((((reverse (any_list2) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list2)))
Inductive1 : any_list1 = (any4::any_list2)
---------------------------------------
forall (any1:any) (any2:any) (any3:any), reverse (((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::reverse ((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any2(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list1)))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), reverse ((((reverse (any_list2) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list2)))
Inductive1 : any_list1 = (any4::any_list2)
any2 : any
---------------------------------------
forall (any1:any) (any3:any), reverse (((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::reverse ((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite lemma4 in goal at 1(rank:15)
rewrite lemma4 in goal at 0(rank:23)
rewrite <- lemma4 in goal at 0(rank:15)
rewrite lemma4 in goal at 2(rank:23)
=================================================
Progress: 121


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list1)))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), reverse ((((reverse (any_list2) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list2)))
Inductive1 : any_list1 = (any4::any_list2)
any1 : any
---------------------------------------
forall (any2:any) (any3:any), reverse (((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::reverse ((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any2(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list1)))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), reverse ((((reverse (any_list2) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list2)))
Inductive1 : any_list1 = (any4::any_list2)
any1 : any
any2 : any
---------------------------------------
forall (any3:any), reverse (((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::reverse ((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite lemma4 in goal at 1(rank:15)
rewrite lemma4 in goal at 0(rank:23)
rewrite <- lemma4 in goal at 0(rank:15)
rewrite lemma4 in goal at 2(rank:23)
=================================================
Progress: 122


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list1)))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), reverse ((((reverse (any_list2) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list2)))
Inductive1 : any_list1 = (any4::any_list2)
any1 : any
---------------------------------------
forall (any2:any) (any3:any), reverse (((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::(any4::any_list2))))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list1)))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), reverse ((((reverse (any_list2) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list2)))
Inductive1 : any_list1 = (any4::any_list2)
any1 : any
---------------------------------------
forall (any2:any) (any3:any), reverse (((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::reverse ((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any2:any) (arg9:any list), reverse ((arg9 @ (any2::(Nil)))) = (any2::reverse (arg9))
Model : any2: 2, arg9: (0::(0::(6::(0::(Nil)))))
Model : any2: 2, arg9: (Nil)
Model : any2: 3, arg9: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.001269 seconds
Result : true
New Env

;;
Lemma List
forall (any2:any) (arg9:any list), reverse ((arg9 @ (any2::(Nil)))) = (any2::reverse (arg9))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list1)))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), reverse ((((reverse (any_list2) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list2)))
Inductive1 : any_list1 = (any4::any_list2)
any1 : any
---------------------------------------
forall (any2:any) (any3:any), reverse (((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::reverse ((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 123


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list1)))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), reverse ((((reverse (any_list2) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list2)))
Inductive1 : any_list1 = (any4::any_list2)
any1 : any
---------------------------------------
forall (any2:any) (any3:any), reverse (((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::reverse ((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (any2:any) (arg9:any list), reverse ((arg9 @ (any2::(Nil)))) = (any2::reverse (arg9))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))

---------------------------------------
forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:10)
=================================================
Progress: 124


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))

---------------------------------------
forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> induction any_list1(rank : 10)


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any), reverse (((Nil) @ (any1::(Nil)))) = (any1::reverse ((Nil)))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9)
=================================================
Progress: 125


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any), reverse (((Nil) @ (any1::(Nil)))) = (any1::reverse ((Nil)))

1 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), reverse (((any2::any_list2) @ (any1::(Nil)))) = (any1::reverse ((any2::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 126


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), reverse (((any2::any_list2) @ (any1::(Nil)))) = (any1::reverse ((any2::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), (reverse ((any_list2 @ (any1::(Nil)))) @ (any2::(Nil))) = (any1::(reverse (any_list2) @ (any2::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro any1(rank:9)
rewrite IH1 in goal at 0(rank:17)
=================================================
Progress: 127


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), (reverse ((any_list2 @ (any1::(Nil)))) @ (any2::(Nil))) = (any1::(reverse (any_list2) @ (any2::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any1(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
(reverse ((any_list2 @ (any1::(Nil)))) @ (any2::(Nil))) = (any1::(reverse (any_list2) @ (any2::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:9)
=================================================
Progress: 128


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
(reverse ((any_list2 @ (any1::(Nil)))) @ (any2::(Nil))) = (any1::(reverse (any_list2) @ (any2::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
((any1::reverse (any_list2)) @ (any2::(Nil))) = (any1::(reverse (any_list2) @ (any2::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 129


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
((any1::reverse (any_list2)) @ (any2::(Nil))) = (any1::(reverse (any_list2) @ (any2::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
(any1::(reverse (any_list2) @ (any2::(Nil)))) = (any1::(reverse (any_list2) @ (any2::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
advanced_generalize done
=================================================
Progress: 130


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list1)))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), reverse ((((reverse (any_list2) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list2)))
Inductive1 : any_list1 = (any4::any_list2)
any2 : any
---------------------------------------
forall (any1:any) (any3:any), reverse (((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::(any4::any_list2))))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list1)))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), reverse ((((reverse (any_list2) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list2)))
Inductive1 : any_list1 = (any4::any_list2)
any2 : any
---------------------------------------
forall (any1:any) (any3:any), reverse (((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::reverse ((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any2:any) (arg10:any list), reverse ((arg10 @ (any2::(Nil)))) = (any2::reverse (arg10))
Model : any2: 6, arg10: (Nil)
Model : any2: 8, arg10: (Nil)
Model : any2: 5, arg10: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000272 seconds
Result : true
New Env

;;
Lemma List
forall (any2:any) (arg10:any list), reverse ((arg10 @ (any2::(Nil)))) = (any2::reverse (arg10))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list1)))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), reverse ((((reverse (any_list2) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list2)))
Inductive1 : any_list1 = (any4::any_list2)
any2 : any
---------------------------------------
forall (any1:any) (any3:any), reverse (((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::reverse ((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 131


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list1)))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), reverse ((((reverse (any_list2) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list2)))
Inductive1 : any_list1 = (any4::any_list2)
any2 : any
---------------------------------------
forall (any1:any) (any3:any), reverse (((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::reverse ((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (any2:any) (arg10:any list), reverse ((arg10 @ (any2::(Nil)))) = (any2::reverse (arg10))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))

---------------------------------------
forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:10)
=================================================
Progress: 132


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))

---------------------------------------
forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> induction any_list1(rank : 10)


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any), reverse (((Nil) @ (any1::(Nil)))) = (any1::reverse ((Nil)))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9)
=================================================
Progress: 133


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any), reverse (((Nil) @ (any1::(Nil)))) = (any1::reverse ((Nil)))

1 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), reverse (((any2::any_list2) @ (any1::(Nil)))) = (any1::reverse ((any2::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 134


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), reverse (((any2::any_list2) @ (any1::(Nil)))) = (any1::reverse ((any2::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), (reverse ((any_list2 @ (any1::(Nil)))) @ (any2::(Nil))) = (any1::(reverse (any_list2) @ (any2::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro any1(rank:9)
rewrite IH1 in goal at 0(rank:17)
=================================================
Progress: 135


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), (reverse ((any_list2 @ (any1::(Nil)))) @ (any2::(Nil))) = (any1::(reverse (any_list2) @ (any2::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any1(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
(reverse ((any_list2 @ (any1::(Nil)))) @ (any2::(Nil))) = (any1::(reverse (any_list2) @ (any2::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:9)
=================================================
Progress: 136


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
(reverse ((any_list2 @ (any1::(Nil)))) @ (any2::(Nil))) = (any1::(reverse (any_list2) @ (any2::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
((any1::reverse (any_list2)) @ (any2::(Nil))) = (any1::(reverse (any_list2) @ (any2::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 137


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
((any1::reverse (any_list2)) @ (any2::(Nil))) = (any1::(reverse (any_list2) @ (any2::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
(any1::(reverse (any_list2) @ (any2::(Nil)))) = (any1::(reverse (any_list2) @ (any2::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
advanced_generalize done
=================================================
Progress: 138


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list1)))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), reverse ((((reverse (any_list2) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list2)))
Inductive1 : any_list1 = (any4::any_list2)
any1 : any
any2 : any
---------------------------------------
forall (any3:any), reverse (((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::(any4::any_list2))))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list1)))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), reverse ((((reverse (any_list2) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list2)))
Inductive1 : any_list1 = (any4::any_list2)
any1 : any
any2 : any
---------------------------------------
forall (any3:any), reverse (((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::reverse ((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any2:any) (arg11:any list), reverse ((arg11 @ (any2::(Nil)))) = (any2::reverse (arg11))
Model : any2: 8, arg11: (Nil)
Model : any2: 2, arg11: (Nil)
Model : any2: 8, arg11: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000268 seconds
Result : true
New Env

;;
Lemma List
forall (any2:any) (arg11:any list), reverse ((arg11 @ (any2::(Nil)))) = (any2::reverse (arg11))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list1)))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), reverse ((((reverse (any_list2) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list2)))
Inductive1 : any_list1 = (any4::any_list2)
any1 : any
any2 : any
---------------------------------------
forall (any3:any), reverse (((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::reverse ((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 139


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list1)))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), reverse ((((reverse (any_list2) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list2)))
Inductive1 : any_list1 = (any4::any_list2)
any1 : any
any2 : any
---------------------------------------
forall (any3:any), reverse (((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::reverse ((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (any2:any) (arg11:any list), reverse ((arg11 @ (any2::(Nil)))) = (any2::reverse (arg11))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))

---------------------------------------
forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:10)
=================================================
Progress: 140


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))

---------------------------------------
forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))

0 goal(s) more...

3 conjecture(s) more...
>>> induction any_list1(rank : 10)


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any), reverse (((Nil) @ (any1::(Nil)))) = (any1::reverse ((Nil)))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9)
=================================================
Progress: 141


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any), reverse (((Nil) @ (any1::(Nil)))) = (any1::reverse ((Nil)))

1 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), reverse (((any2::any_list2) @ (any1::(Nil)))) = (any1::reverse ((any2::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 142


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), reverse (((any2::any_list2) @ (any1::(Nil)))) = (any1::reverse ((any2::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), (reverse ((any_list2 @ (any1::(Nil)))) @ (any2::(Nil))) = (any1::(reverse (any_list2) @ (any2::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro any1(rank:9)
rewrite IH1 in goal at 0(rank:17)
=================================================
Progress: 143


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), (reverse ((any_list2 @ (any1::(Nil)))) @ (any2::(Nil))) = (any1::(reverse (any_list2) @ (any2::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any1(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
(reverse ((any_list2 @ (any1::(Nil)))) @ (any2::(Nil))) = (any1::(reverse (any_list2) @ (any2::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:9)
=================================================
Progress: 144


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
(reverse ((any_list2 @ (any1::(Nil)))) @ (any2::(Nil))) = (any1::(reverse (any_list2) @ (any2::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
((any1::reverse (any_list2)) @ (any2::(Nil))) = (any1::(reverse (any_list2) @ (any2::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 145


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
((any1::reverse (any_list2)) @ (any2::(Nil))) = (any1::(reverse (any_list2) @ (any2::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list), reverse ((any_list1 @ (any1::(Nil)))) = (any1::reverse (any_list1))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), reverse ((any_list2 @ (any1::(Nil)))) = (any1::reverse (any_list2))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
(any1::(reverse (any_list2) @ (any2::(Nil)))) = (any1::(reverse (any_list2) @ (any2::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
advanced_generalize done
=================================================
Progress: 146


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list1)))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), reverse ((((reverse (any_list2) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list2)))
Inductive1 : any_list1 = (any4::any_list2)
any3 : any
---------------------------------------
forall (any1:any) (any2:any), reverse (((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::reverse ((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma4 in goal at 1(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list1)))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), reverse ((((reverse (any_list2) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list2)))
Inductive1 : any_list1 = (any4::any_list2)
any3 : any
---------------------------------------
forall (any1:any) (any2:any), (any2::reverse ((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))))) = (any2::reverse ((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6)
=================================================
Progress: 147


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list1)))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), reverse ((((reverse (any_list2) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list2)))
Inductive1 : any_list1 = (any4::any_list2)
any3 : any
---------------------------------------
forall (any1:any) (any2:any), (any2::reverse ((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))))) = (any2::reverse ((((reverse (any_list2) @ (any4::(Nil))) @ (any3::(Nil))) @ (any1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 6)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), reverse (((reverse (any_list1) @ (any1::(Nil))) @ (any2::any_list2))) = ((reverse (any_list2) @ (any2::(Nil))) @ (any1::any_list1))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), reverse (((reverse (any_list3) @ (any1::(Nil))) @ (any2::any_list2))) = ((reverse (any_list2) @ (any2::(Nil))) @ (any1::any_list3))
Inductive1 : any_list1 = (any3::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
---------------------------------------
forall (any1:any), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list3)))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 37
Tactic List : 4
intro any1(rank:6)
rewrite lemma4 in goal at 0(rank:14)
rewrite lemma5 in goal at 0(rank:14)
rewrite <- lemma5 in goal at 0(rank:14)
=================================================
Progress: 148


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), reverse (((reverse (any_list1) @ (any1::(Nil))) @ (any2::any_list2))) = ((reverse (any_list2) @ (any2::(Nil))) @ (any1::any_list1))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), reverse (((reverse (any_list3) @ (any1::(Nil))) @ (any2::any_list2))) = ((reverse (any_list2) @ (any2::(Nil))) @ (any1::any_list3))
Inductive1 : any_list1 = (any3::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
---------------------------------------
forall (any1:any), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list3)))

1 goal(s) more...

1 conjecture(s) more...
>>> intro any1(rank : 6)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), reverse (((reverse (any_list1) @ (any1::(Nil))) @ (any2::any_list2))) = ((reverse (any_list2) @ (any2::(Nil))) @ (any1::any_list1))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), reverse (((reverse (any_list3) @ (any1::(Nil))) @ (any2::any_list2))) = ((reverse (any_list2) @ (any2::(Nil))) @ (any1::any_list3))
Inductive1 : any_list1 = (any3::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
any1 : any
---------------------------------------
reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list3)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite lemma4 in goal at 0(rank:14)
rewrite lemma5 in goal at 0(rank:14)
rewrite <- lemma5 in goal at 0(rank:14)
=================================================
Progress: 149


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), reverse (((reverse (any_list1) @ (any1::(Nil))) @ (any2::any_list2))) = ((reverse (any_list2) @ (any2::(Nil))) @ (any1::any_list1))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), reverse (((reverse (any_list3) @ (any1::(Nil))) @ (any2::any_list2))) = ((reverse (any_list2) @ (any2::(Nil))) @ (any1::any_list3))
Inductive1 : any_list1 = (any3::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
---------------------------------------
forall (any1:any), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list3)))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma4 in goal at 0(rank : 14)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), reverse (((reverse (any_list1) @ (any1::(Nil))) @ (any2::any_list2))) = ((reverse (any_list2) @ (any2::(Nil))) @ (any1::any_list1))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), reverse (((reverse (any_list3) @ (any1::(Nil))) @ (any2::any_list2))) = ((reverse (any_list2) @ (any2::(Nil))) @ (any1::any_list3))
Inductive1 : any_list1 = (any3::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
---------------------------------------
forall (any1:any), (any2::reverse (((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))))) = (any2::(any1::(any3::any_list3)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite IH1 in goal at 0(rank:14)
rewrite lemma4 in goal at 0(rank:14)
rewrite <- lemma5 in goal at 0(rank:14)
=================================================
Progress: 150


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), reverse (((reverse (any_list1) @ (any1::(Nil))) @ (any2::any_list2))) = ((reverse (any_list2) @ (any2::(Nil))) @ (any1::any_list1))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), reverse (((reverse (any_list3) @ (any1::(Nil))) @ (any2::any_list2))) = ((reverse (any_list2) @ (any2::(Nil))) @ (any1::any_list3))
Inductive1 : any_list1 = (any3::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
---------------------------------------
forall (any1:any), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))) = (any2::(any1::(any3::any_list3)))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma5 in goal at 0(rank : 14)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), reverse (((reverse (any_list1) @ (any1::(Nil))) @ (any2::any_list2))) = ((reverse (any_list2) @ (any2::(Nil))) @ (any1::any_list1))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), reverse (((reverse (any_list3) @ (any1::(Nil))) @ (any2::any_list2))) = ((reverse (any_list2) @ (any2::(Nil))) @ (any1::any_list3))
Inductive1 : any_list1 = (any3::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
---------------------------------------
forall (any1:any), (any2::(any1::(any3::any_list3))) = (any2::(any1::(any3::any_list3)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5)
=================================================
Progress: 151


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), reverse (((reverse (any_list1) @ (any1::(Nil))) @ (any2::any_list2))) = ((reverse (any_list2) @ (any2::(Nil))) @ (any1::any_list1))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), reverse (((reverse (any_list3) @ (any1::(Nil))) @ (any2::any_list2))) = ((reverse (any_list2) @ (any2::(Nil))) @ (any1::any_list3))
Inductive1 : any_list1 = (any3::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
---------------------------------------
forall (any1:any), (any2::(any1::(any3::any_list3))) = (any2::(any1::(any3::any_list3)))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), reverse (((reverse (any_list1) @ (any1::(Nil))) @ (any2::any_list2))) = ((reverse (any_list2) @ (any2::(Nil))) @ (any1::any_list1))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), reverse (((reverse (any_list3) @ (any1::(Nil))) @ (any2::any_list2))) = ((reverse (any_list2) @ (any2::(Nil))) @ (any1::any_list3))
Inductive1 : any_list1 = (any3::any_list3)
any_list2 : any list
any4 : any
any_list4 : any list
IH2 : forall (any1:any) (any2:any), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::any_list4))) = ((reverse (any_list4) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive2 : any_list2 = (any4::any_list4)
---------------------------------------
forall (any1:any) (any2:any), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list4)))) = ((reverse ((any4::any_list4)) @ (any2::(Nil))) @ (any1::(any3::any_list3)))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 7
Tactic List : 1
simpl in goal(rank:5)
=================================================
Progress: 152


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), reverse (((reverse (any_list1) @ (any1::(Nil))) @ (any2::any_list2))) = ((reverse (any_list2) @ (any2::(Nil))) @ (any1::any_list1))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), reverse (((reverse (any_list3) @ (any1::(Nil))) @ (any2::any_list2))) = ((reverse (any_list2) @ (any2::(Nil))) @ (any1::any_list3))
Inductive1 : any_list1 = (any3::any_list3)
any_list2 : any list
any4 : any
any_list4 : any list
IH2 : forall (any1:any) (any2:any), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::any_list4))) = ((reverse (any_list4) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive2 : any_list2 = (any4::any_list4)
---------------------------------------
forall (any1:any) (any2:any), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list4)))) = ((reverse ((any4::any_list4)) @ (any2::(Nil))) @ (any1::(any3::any_list3)))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), reverse (((reverse (any_list1) @ (any1::(Nil))) @ (any2::any_list2))) = ((reverse (any_list2) @ (any2::(Nil))) @ (any1::any_list1))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), reverse (((reverse (any_list3) @ (any1::(Nil))) @ (any2::any_list2))) = ((reverse (any_list2) @ (any2::(Nil))) @ (any1::any_list3))
Inductive1 : any_list1 = (any3::any_list3)
any_list2 : any list
any4 : any
any_list4 : any list
IH2 : forall (any1:any) (any2:any), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::any_list4))) = ((reverse (any_list4) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive2 : any_list2 = (any4::any_list4)
---------------------------------------
forall (any1:any) (any2:any), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list4)))) = (((reverse (any_list4) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
intro any1(rank:5)
intro any2(rank:5)
=================================================
Progress: 153


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), reverse (((reverse (any_list1) @ (any1::(Nil))) @ (any2::any_list2))) = ((reverse (any_list2) @ (any2::(Nil))) @ (any1::any_list1))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), reverse (((reverse (any_list3) @ (any1::(Nil))) @ (any2::any_list2))) = ((reverse (any_list2) @ (any2::(Nil))) @ (any1::any_list3))
Inductive1 : any_list1 = (any3::any_list3)
any_list2 : any list
any4 : any
any_list4 : any list
IH2 : forall (any1:any) (any2:any), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::any_list4))) = ((reverse (any_list4) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive2 : any_list2 = (any4::any_list4)
---------------------------------------
forall (any1:any) (any2:any), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list4)))) = (((reverse (any_list4) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro any1(rank : 5)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), reverse (((reverse (any_list1) @ (any1::(Nil))) @ (any2::any_list2))) = ((reverse (any_list2) @ (any2::(Nil))) @ (any1::any_list1))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), reverse (((reverse (any_list3) @ (any1::(Nil))) @ (any2::any_list2))) = ((reverse (any_list2) @ (any2::(Nil))) @ (any1::any_list3))
Inductive1 : any_list1 = (any3::any_list3)
any_list2 : any list
any4 : any
any_list4 : any list
IH2 : forall (any1:any) (any2:any), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::any_list4))) = ((reverse (any_list4) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive2 : any_list2 = (any4::any_list4)
any1 : any
---------------------------------------
forall (any2:any), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list4)))) = (((reverse (any_list4) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro any2(rank:5)
=================================================
Progress: 154


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), reverse (((reverse (any_list1) @ (any1::(Nil))) @ (any2::any_list2))) = ((reverse (any_list2) @ (any2::(Nil))) @ (any1::any_list1))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), reverse (((reverse (any_list3) @ (any1::(Nil))) @ (any2::any_list2))) = ((reverse (any_list2) @ (any2::(Nil))) @ (any1::any_list3))
Inductive1 : any_list1 = (any3::any_list3)
any_list2 : any list
any4 : any
any_list4 : any list
IH2 : forall (any1:any) (any2:any), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::any_list4))) = ((reverse (any_list4) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive2 : any_list2 = (any4::any_list4)
---------------------------------------
forall (any1:any) (any2:any), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list4)))) = (((reverse (any_list4) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro any2(rank : 5)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), reverse (((reverse (any_list1) @ (any1::(Nil))) @ (any2::any_list2))) = ((reverse (any_list2) @ (any2::(Nil))) @ (any1::any_list1))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), reverse (((reverse (any_list3) @ (any1::(Nil))) @ (any2::any_list2))) = ((reverse (any_list2) @ (any2::(Nil))) @ (any1::any_list3))
Inductive1 : any_list1 = (any3::any_list3)
any_list2 : any list
any4 : any
any_list4 : any list
IH2 : forall (any1:any) (any2:any), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::any_list4))) = ((reverse (any_list4) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive2 : any_list2 = (any4::any_list4)
any2 : any
---------------------------------------
forall (any1:any), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list4)))) = (((reverse (any_list4) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
rewrite IH1 in goal at 0
reflexivity
rewrite lemma4 in goal at 1
reflexivity
rewrite lemma5 in goal at 0
reflexivity
simpl in goal
intro any2
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list3:any list) (any_list4:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list4)))) = (((reverse (any_list4) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Model : any1: 6, any2: 3, any3: 2, any4: 6, any_list3: (Nil), any_list4: (Nil)
Model : any1: 7, any2: 6, any3: 0, any4: 6, any_list3: (Nil), any_list4: (Nil)
Model : any1: 3, any2: 6, any3: 5, any4: 8, any_list3: (Nil), any_list4: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.003272 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list3:any list) (any_list4:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list4)))) = (((reverse (any_list4) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), reverse (((reverse (any_list1) @ (any1::(Nil))) @ (any2::any_list2))) = ((reverse (any_list2) @ (any2::(Nil))) @ (any1::any_list1))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), reverse (((reverse (any_list3) @ (any1::(Nil))) @ (any2::any_list2))) = ((reverse (any_list2) @ (any2::(Nil))) @ (any1::any_list3))
Inductive1 : any_list1 = (any3::any_list3)
any_list2 : any list
any4 : any
any_list4 : any list
IH2 : forall (any1:any) (any2:any), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::any_list4))) = ((reverse (any_list4) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive2 : any_list2 = (any4::any_list4)
any2 : any
---------------------------------------
forall (any1:any), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list4)))) = (((reverse (any_list4) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 155


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), reverse (((reverse (any_list1) @ (any1::(Nil))) @ (any2::any_list2))) = ((reverse (any_list2) @ (any2::(Nil))) @ (any1::any_list1))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), reverse (((reverse (any_list3) @ (any1::(Nil))) @ (any2::any_list2))) = ((reverse (any_list2) @ (any2::(Nil))) @ (any1::any_list3))
Inductive1 : any_list1 = (any3::any_list3)
any_list2 : any list
any4 : any
any_list4 : any list
IH2 : forall (any1:any) (any2:any), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::any_list4))) = ((reverse (any_list4) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive2 : any_list2 = (any4::any_list4)
any2 : any
---------------------------------------
forall (any1:any), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list4)))) = (((reverse (any_list4) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list3:any list) (any_list4:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list4)))) = (((reverse (any_list4) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:8)
=================================================
Progress: 156


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), reverse (((reverse (any_list1) @ (any1::(Nil))) @ (any2::any_list2))) = ((reverse (any_list2) @ (any2::(Nil))) @ (any1::any_list1))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), reverse (((reverse (any_list3) @ (any1::(Nil))) @ (any2::any_list2))) = ((reverse (any_list2) @ (any2::(Nil))) @ (any1::any_list3))
Inductive1 : any_list1 = (any3::any_list3)
any_list2 : any list
any4 : any
any_list4 : any list
IH2 : forall (any1:any) (any2:any), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::any_list4))) = ((reverse (any_list4) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive2 : any_list2 = (any4::any_list4)
any1 : any
---------------------------------------
forall (any2:any), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list4)))) = (((reverse (any_list4) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro any2(rank : 5)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), reverse (((reverse (any_list1) @ (any1::(Nil))) @ (any2::any_list2))) = ((reverse (any_list2) @ (any2::(Nil))) @ (any1::any_list1))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), reverse (((reverse (any_list3) @ (any1::(Nil))) @ (any2::any_list2))) = ((reverse (any_list2) @ (any2::(Nil))) @ (any1::any_list3))
Inductive1 : any_list1 = (any3::any_list3)
any_list2 : any list
any4 : any
any_list4 : any list
IH2 : forall (any1:any) (any2:any), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::any_list4))) = ((reverse (any_list4) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive2 : any_list2 = (any4::any_list4)
any1 : any
any2 : any
---------------------------------------
reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list4)))) = (((reverse (any_list4) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
rewrite IH1 in goal at 0
reflexivity
rewrite lemma4 in goal at 1
reflexivity
rewrite lemma5 in goal at 0
reflexivity
simpl in goal
intro any1
intro any2
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list3:any list) (any_list4:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list4)))) = (((reverse (any_list4) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Model : any1: 1, any2: 7, any3: 0, any4: 1, any_list3: (Nil), any_list4: (Nil)
Model : any1: 4, any2: 4, any3: 3, any4: 0, any_list3: (Nil), any_list4: (Nil)
Model : any1: 1, any2: 4, any3: 0, any4: 8, any_list3: (Nil), any_list4: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.002300 seconds
Result : true
=================================================
Progress: 157


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))

0 goal(s) more...

2 conjecture(s) more...
>>> induction any_list1(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse ((Nil)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8)
=================================================
Progress: 158


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse ((Nil)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), ((((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:9)
=================================================
Progress: 159


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), ((((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> induction any_list2(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), ((((reverse ((Nil)) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse ((Nil)) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8)
=================================================
Progress: 160


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), ((((reverse ((Nil)) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse ((Nil)) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), ((((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))
Inductive1 : any_list2 = (any5::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), ((((reverse ((any5::any_list3)) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse ((any5::any_list3)) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:8)
=================================================
Progress: 161


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), ((((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))
Inductive1 : any_list2 = (any5::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), ((((reverse ((any5::any_list3)) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse ((any5::any_list3)) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), ((((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))
Inductive1 : any_list2 = (any5::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
intro any1(rank:8)
intro any3(rank:8)
intro any4(rank:8)
rewrite IH1 in goal at 0(rank:24)
intro any2(rank:8)
=================================================
Progress: 162


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), ((((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))
Inductive1 : any_list2 = (any5::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any1(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), ((((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
intro any2(rank:8)
intro any3(rank:8)
intro any4(rank:8)
rewrite IH1 in goal at 0(rank:24)
=================================================
Progress: 163


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), ((((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))
Inductive1 : any_list2 = (any5::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any2(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), ((((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))
Inductive1 : any_list2 = (any5::any_list3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro any3(rank:8)
intro any4(rank:8)
rewrite IH1 in goal at 0(rank:24)
=================================================
Progress: 164


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), ((((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))
Inductive1 : any_list2 = (any5::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any3(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), ((((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))
Inductive1 : any_list2 = (any5::any_list3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro any4(rank:8)
rewrite IH1 in goal at 0(rank:24)
=================================================
Progress: 165


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), ((((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))
Inductive1 : any_list2 = (any5::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), (((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any4(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), ((((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))
Inductive1 : any_list2 = (any5::any_list3)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:8)
=================================================
Progress: 166


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), ((((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any2(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), ((((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any), (((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro any3(rank:8)
intro any4(rank:8)
rewrite IH1 in goal at 0(rank:24)
=================================================
Progress: 167


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), ((((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any3(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), ((((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any), (((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro any4(rank:8)
rewrite IH1 in goal at 0(rank:24)
=================================================
Progress: 168


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), ((((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any), (((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any4(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), ((((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any), (((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:8)
=================================================
Progress: 169


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), ((((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))
Inductive1 : any_list2 = (any5::any_list3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any3(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), ((((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))
Inductive1 : any_list2 = (any5::any_list3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any), (((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro any4(rank:8)
rewrite IH1 in goal at 0(rank:24)
=================================================
Progress: 170


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), ((((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))
Inductive1 : any_list2 = (any5::any_list3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any), (((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any4(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), ((((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))
Inductive1 : any_list2 = (any5::any_list3)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any), (((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:8)
=================================================
Progress: 171


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), ((((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))
Inductive1 : any_list2 = (any5::any_list3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any), (((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any4(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), ((((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))
Inductive1 : any_list2 = (any5::any_list3)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any), (((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:8)
=================================================
Progress: 172


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), ((((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))
Inductive1 : any_list2 = (any5::any_list3)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any), (((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), ((((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))
Inductive1 : any_list2 = (any5::any_list3)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any), ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(any1::(Nil)))) @ (any3::(Nil))) = ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any4
rewrite IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (arg12:any list) (arg13:any list), ((arg12 @ (any2::(any1::(Nil)))) @ arg13) = ((arg12 @ (any2::(Nil))) @ (any1::arg13))
Model : any1: 1, any2: 8, arg12: (5::(Nil)), arg13: (Nil)
Model : any1: 7, any2: 3, arg12: (Nil), arg13: (4::(Nil))
Model : any1: 2, any2: 3, arg12: (Nil), arg13: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000796 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (arg12:any list) (arg13:any list), ((arg12 @ (any2::(any1::(Nil)))) @ arg13) = ((arg12 @ (any2::(Nil))) @ (any1::arg13))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), ((((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))
Inductive1 : any_list2 = (any5::any_list3)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any), ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(any1::(Nil)))) @ (any3::(Nil))) = ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 173


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), ((((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))
Inductive1 : any_list2 = (any5::any_list3)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any), ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(any1::(Nil)))) @ (any3::(Nil))) = ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (arg12:any list) (arg13:any list), ((arg12 @ (any2::(any1::(Nil)))) @ arg13) = ((arg12 @ (any2::(Nil))) @ (any1::arg13))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:10)
=================================================
Progress: 174


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), ((((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any), (((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any3(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), ((((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any), (((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro any4(rank:8)
rewrite IH1 in goal at 0(rank:24)
=================================================
Progress: 175


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), ((((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any), (((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any4(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), ((((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any), (((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:8)
=================================================
Progress: 176


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), ((((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any), (((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any4(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), ((((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any), (((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:8)
=================================================
Progress: 177


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), ((((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any), (((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), ((((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any), ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(any1::(Nil)))) @ (any3::(Nil))) = ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any4
rewrite IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (arg14:any list) (arg15:any list), ((arg14 @ (any2::(any1::(Nil)))) @ arg15) = ((arg14 @ (any2::(Nil))) @ (any1::arg15))
Model : any1: 3, any2: 1, arg14: (Nil), arg15: (Nil)
Model : any1: 3, any2: 8, arg14: (3::(7::(6::(Nil)))), arg15: (Nil)
Model : any1: 0, any2: 0, arg14: (Nil), arg15: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.001335 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (arg14:any list) (arg15:any list), ((arg14 @ (any2::(any1::(Nil)))) @ arg15) = ((arg14 @ (any2::(Nil))) @ (any1::arg15))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), ((((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any), ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(any1::(Nil)))) @ (any3::(Nil))) = ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 178


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), ((((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any), ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(any1::(Nil)))) @ (any3::(Nil))) = ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (arg14:any list) (arg15:any list), ((arg14 @ (any2::(any1::(Nil)))) @ arg15) = ((arg14 @ (any2::(Nil))) @ (any1::arg15))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:10)
=================================================
Progress: 179


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), ((((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))
Inductive1 : any_list2 = (any5::any_list3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any), (((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any4(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), ((((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))
Inductive1 : any_list2 = (any5::any_list3)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any), (((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:8)
=================================================
Progress: 180


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), ((((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))
Inductive1 : any_list2 = (any5::any_list3)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any), (((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), ((((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))
Inductive1 : any_list2 = (any5::any_list3)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any), ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(any1::(Nil)))) @ (any3::(Nil))) = ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any4
rewrite IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (arg16:any list) (arg17:any list), ((arg16 @ (any2::(any1::(Nil)))) @ arg17) = ((arg16 @ (any2::(Nil))) @ (any1::arg17))
Model : any1: 7, any2: 6, arg16: (Nil), arg17: (8::(Nil))
Model : any1: 0, any2: 0, arg16: (Nil), arg17: (Nil)
Model : any1: 0, any2: 7, arg16: (4::(Nil)), arg17: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000728 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (arg16:any list) (arg17:any list), ((arg16 @ (any2::(any1::(Nil)))) @ arg17) = ((arg16 @ (any2::(Nil))) @ (any1::arg17))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), ((((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))
Inductive1 : any_list2 = (any5::any_list3)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any), ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(any1::(Nil)))) @ (any3::(Nil))) = ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 181


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), ((((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))
Inductive1 : any_list2 = (any5::any_list3)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any), ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(any1::(Nil)))) @ (any3::(Nil))) = ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (arg16:any list) (arg17:any list), ((arg16 @ (any2::(any1::(Nil)))) @ arg17) = ((arg16 @ (any2::(Nil))) @ (any1::arg17))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:10)
=================================================
Progress: 182


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), ((((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))
Inductive1 : any_list2 = (any5::any_list3)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any), (((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), ((((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))
Inductive1 : any_list2 = (any5::any_list3)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any), ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(any1::(Nil)))) @ (any3::(Nil))) = ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any4
rewrite IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (arg18:any list) (arg19:any list), ((arg18 @ (any2::(any1::(Nil)))) @ arg19) = ((arg18 @ (any2::(Nil))) @ (any1::arg19))
Model : any1: 0, any2: 0, arg18: (Nil), arg19: (Nil)
Model : any1: 3, any2: 2, arg18: (0::(Nil)), arg19: (Nil)
Model : any1: 1, any2: 2, arg18: (Nil), arg19: (6::(Nil))
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000553 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (arg18:any list) (arg19:any list), ((arg18 @ (any2::(any1::(Nil)))) @ arg19) = ((arg18 @ (any2::(Nil))) @ (any1::arg19))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), ((((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))
Inductive1 : any_list2 = (any5::any_list3)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any), ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(any1::(Nil)))) @ (any3::(Nil))) = ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 183


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), ((((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))
Inductive1 : any_list2 = (any5::any_list3)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any), ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(any1::(Nil)))) @ (any3::(Nil))) = ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (arg18:any list) (arg19:any list), ((arg18 @ (any2::(any1::(Nil)))) @ arg19) = ((arg18 @ (any2::(Nil))) @ (any1::arg19))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:10)
=================================================
Progress: 184


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), ((((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any), (((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any4(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), ((((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
(((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:8)
=================================================
Progress: 185


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), ((((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any), (((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), ((((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any), ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(any1::(Nil)))) @ (any3::(Nil))) = ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any4
rewrite IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (arg20:any list) (arg21:any list), ((arg20 @ (any2::(any1::(Nil)))) @ arg21) = ((arg20 @ (any2::(Nil))) @ (any1::arg21))
Model : any1: 0, any2: 0, arg20: (Nil), arg21: (8::(Nil))
Model : any1: 0, any2: 2, arg20: (Nil), arg21: (Nil)
Model : any1: 1, any2: 1, arg20: (Nil), arg21: (5::(1::(1::(Nil))))
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000637 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (arg20:any list) (arg21:any list), ((arg20 @ (any2::(any1::(Nil)))) @ arg21) = ((arg20 @ (any2::(Nil))) @ (any1::arg21))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), ((((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any), ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(any1::(Nil)))) @ (any3::(Nil))) = ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 186


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), ((((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any), ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(any1::(Nil)))) @ (any3::(Nil))) = ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (arg20:any list) (arg21:any list), ((arg20 @ (any2::(any1::(Nil)))) @ arg21) = ((arg20 @ (any2::(Nil))) @ (any1::arg21))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:10)
=================================================
Progress: 187


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), ((((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any), (((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), ((((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any), ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(any1::(Nil)))) @ (any3::(Nil))) = ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any4
rewrite IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (arg22:any list) (arg23:any list), ((arg22 @ (any2::(any1::(Nil)))) @ arg23) = ((arg22 @ (any2::(Nil))) @ (any1::arg23))
Model : any1: 3, any2: 1, arg22: (3::(Nil)), arg23: (Nil)
Model : any1: 4, any2: 1, arg22: (Nil), arg23: (Nil)
Model : any1: 4, any2: 7, arg22: (Nil), arg23: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000648 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (arg22:any list) (arg23:any list), ((arg22 @ (any2::(any1::(Nil)))) @ arg23) = ((arg22 @ (any2::(Nil))) @ (any1::arg23))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), ((((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any), ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(any1::(Nil)))) @ (any3::(Nil))) = ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 188


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), ((((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any), ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(any1::(Nil)))) @ (any3::(Nil))) = ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (arg22:any list) (arg23:any list), ((arg22 @ (any2::(any1::(Nil)))) @ arg23) = ((arg22 @ (any2::(Nil))) @ (any1::arg23))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:10)
=================================================
Progress: 189


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), ((((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))
Inductive1 : any_list2 = (any5::any_list3)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any), (((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), ((((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))
Inductive1 : any_list2 = (any5::any_list3)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any), ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(any1::(Nil)))) @ (any3::(Nil))) = ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any4
rewrite IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (arg24:any list) (arg25:any list), ((arg24 @ (any2::(any1::(Nil)))) @ arg25) = ((arg24 @ (any2::(Nil))) @ (any1::arg25))
Model : any1: 6, any2: 1, arg24: (Nil), arg25: (Nil)
Model : any1: 3, any2: 5, arg24: (4::(0::(Nil))), arg25: (Nil)
Model : any1: 0, any2: 2, arg24: (Nil), arg25: (3::(Nil))
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000949 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (arg24:any list) (arg25:any list), ((arg24 @ (any2::(any1::(Nil)))) @ arg25) = ((arg24 @ (any2::(Nil))) @ (any1::arg25))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), ((((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))
Inductive1 : any_list2 = (any5::any_list3)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any), ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(any1::(Nil)))) @ (any3::(Nil))) = ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 190


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), ((((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))
Inductive1 : any_list2 = (any5::any_list3)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any), ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(any1::(Nil)))) @ (any3::(Nil))) = ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (arg24:any list) (arg25:any list), ((arg24 @ (any2::(any1::(Nil)))) @ arg25) = ((arg24 @ (any2::(Nil))) @ (any1::arg25))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:10)
=================================================
Progress: 191


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), ((((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
(((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), ((((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(any1::(Nil)))) @ (any3::(Nil))) = ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any4
rewrite IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (arg26:any list) (arg27:any list), ((arg26 @ (any2::(any1::(Nil)))) @ arg27) = ((arg26 @ (any2::(Nil))) @ (any1::arg27))
Model : any1: 0, any2: 0, arg26: (Nil), arg27: (Nil)
Model : any1: 3, any2: 3, arg26: (5::(Nil)), arg27: (Nil)
Model : any1: 0, any2: 5, arg26: (Nil), arg27: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000634 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (arg26:any list) (arg27:any list), ((arg26 @ (any2::(any1::(Nil)))) @ arg27) = ((arg26 @ (any2::(Nil))) @ (any1::arg27))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), ((((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(any1::(Nil)))) @ (any3::(Nil))) = ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 192


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), ((((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(any1::(Nil)))) @ (any3::(Nil))) = ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (arg26:any list) (arg27:any list), ((arg26 @ (any2::(any1::(Nil)))) @ arg27) = ((arg26 @ (any2::(Nil))) @ (any1::arg27))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:10)
=================================================
Progress: 193


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))

0 goal(s) more...

3 conjecture(s) more...
>>> induction any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list), (((Nil) @ (any2::(any1::(Nil)))) @ any_list2) = (((Nil) @ (any2::(Nil))) @ (any1::any_list2))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9)
=================================================
Progress: 194


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list), (((Nil) @ (any2::(any1::(Nil)))) @ any_list2) = (((Nil) @ (any2::(Nil))) @ (any1::any_list2))

1 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list), (((any3::any_list3) @ (any2::(any1::(Nil)))) @ any_list2) = (((any3::any_list3) @ (any2::(Nil))) @ (any1::any_list2))

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 195


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list), (((any3::any_list3) @ (any2::(any1::(Nil)))) @ any_list2) = (((any3::any_list3) @ (any2::(Nil))) @ (any1::any_list2))

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
intro any1(rank:9)
intro any_list2(rank:9)
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
intro any2(rank:9)
=================================================
Progress: 196


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any1(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
any1 : any
---------------------------------------
forall (any2:any) (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
intro any2(rank:9)
intro any_list2(rank:9)
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 197


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any2(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
any2 : any
---------------------------------------
forall (any1:any) (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro any_list2(rank:9)
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 198


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any_list2(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
any_list2 : any list
---------------------------------------
forall (any1:any) (any2:any), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 199


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
any1 : any
---------------------------------------
forall (any2:any) (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any2(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
any1 : any
any2 : any
---------------------------------------
forall (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro any_list2(rank:9)
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 200


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
any1 : any
---------------------------------------
forall (any2:any) (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any_list2(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
any1 : any
any_list2 : any list
---------------------------------------
forall (any2:any), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 201


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
any2 : any
---------------------------------------
forall (any1:any) (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any_list2(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
any2 : any
any_list2 : any list
---------------------------------------
forall (any1:any), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 202


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
any1 : any
any2 : any
---------------------------------------
forall (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any_list2(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
any1 : any
any2 : any
any_list2 : any list
---------------------------------------
(any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 203


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))

0 goal(s) more...

3 conjecture(s) more...
>>> induction any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list), (((Nil) @ (any2::(any1::(Nil)))) @ any_list2) = (((Nil) @ (any2::(Nil))) @ (any1::any_list2))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9)
=================================================
Progress: 204


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list), (((Nil) @ (any2::(any1::(Nil)))) @ any_list2) = (((Nil) @ (any2::(Nil))) @ (any1::any_list2))

1 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list), (((any3::any_list3) @ (any2::(any1::(Nil)))) @ any_list2) = (((any3::any_list3) @ (any2::(Nil))) @ (any1::any_list2))

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 205


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list), (((any3::any_list3) @ (any2::(any1::(Nil)))) @ any_list2) = (((any3::any_list3) @ (any2::(Nil))) @ (any1::any_list2))

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
intro any1(rank:9)
intro any_list2(rank:9)
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
intro any2(rank:9)
=================================================
Progress: 206


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any1(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
any1 : any
---------------------------------------
forall (any2:any) (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
intro any2(rank:9)
intro any_list2(rank:9)
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 207


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any2(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
any2 : any
---------------------------------------
forall (any1:any) (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro any_list2(rank:9)
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 208


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any_list2(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
any_list2 : any list
---------------------------------------
forall (any1:any) (any2:any), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 209


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
any1 : any
---------------------------------------
forall (any2:any) (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any2(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
any1 : any
any2 : any
---------------------------------------
forall (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro any_list2(rank:9)
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 210


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
any1 : any
---------------------------------------
forall (any2:any) (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any_list2(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
any1 : any
any_list2 : any list
---------------------------------------
forall (any2:any), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 211


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
any2 : any
---------------------------------------
forall (any1:any) (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any_list2(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
any2 : any
any_list2 : any list
---------------------------------------
forall (any1:any), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 212


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
any1 : any
any2 : any
---------------------------------------
forall (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any_list2(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
any1 : any
any2 : any
any_list2 : any list
---------------------------------------
(any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 213


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))

0 goal(s) more...

3 conjecture(s) more...
>>> induction any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list), (((Nil) @ (any2::(any1::(Nil)))) @ any_list2) = (((Nil) @ (any2::(Nil))) @ (any1::any_list2))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9)
=================================================
Progress: 214


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list), (((Nil) @ (any2::(any1::(Nil)))) @ any_list2) = (((Nil) @ (any2::(Nil))) @ (any1::any_list2))

1 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list), (((any3::any_list3) @ (any2::(any1::(Nil)))) @ any_list2) = (((any3::any_list3) @ (any2::(Nil))) @ (any1::any_list2))

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 215


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list), (((any3::any_list3) @ (any2::(any1::(Nil)))) @ any_list2) = (((any3::any_list3) @ (any2::(Nil))) @ (any1::any_list2))

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
intro any1(rank:9)
intro any_list2(rank:9)
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
intro any2(rank:9)
=================================================
Progress: 216


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any1(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
any1 : any
---------------------------------------
forall (any2:any) (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
intro any2(rank:9)
intro any_list2(rank:9)
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 217


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any2(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
any2 : any
---------------------------------------
forall (any1:any) (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro any_list2(rank:9)
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 218


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any_list2(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
any_list2 : any list
---------------------------------------
forall (any1:any) (any2:any), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 219


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
any1 : any
---------------------------------------
forall (any2:any) (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any2(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
any1 : any
any2 : any
---------------------------------------
forall (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro any_list2(rank:9)
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 220


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
any1 : any
---------------------------------------
forall (any2:any) (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any_list2(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
any1 : any
any_list2 : any list
---------------------------------------
forall (any2:any), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 221


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
any2 : any
---------------------------------------
forall (any1:any) (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any_list2(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
any2 : any
any_list2 : any list
---------------------------------------
forall (any1:any), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 222


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
any1 : any
any2 : any
---------------------------------------
forall (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any_list2(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
any1 : any
any2 : any
any_list2 : any list
---------------------------------------
(any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 223


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))

0 goal(s) more...

3 conjecture(s) more...
>>> induction any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list), (((Nil) @ (any2::(any1::(Nil)))) @ any_list2) = (((Nil) @ (any2::(Nil))) @ (any1::any_list2))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9)
=================================================
Progress: 224


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list), (((Nil) @ (any2::(any1::(Nil)))) @ any_list2) = (((Nil) @ (any2::(Nil))) @ (any1::any_list2))

1 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list), (((any3::any_list3) @ (any2::(any1::(Nil)))) @ any_list2) = (((any3::any_list3) @ (any2::(Nil))) @ (any1::any_list2))

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 225


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list), (((any3::any_list3) @ (any2::(any1::(Nil)))) @ any_list2) = (((any3::any_list3) @ (any2::(Nil))) @ (any1::any_list2))

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
intro any1(rank:9)
intro any_list2(rank:9)
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
intro any2(rank:9)
=================================================
Progress: 226


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any1(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
any1 : any
---------------------------------------
forall (any2:any) (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
intro any2(rank:9)
intro any_list2(rank:9)
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 227


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any2(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
any2 : any
---------------------------------------
forall (any1:any) (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro any_list2(rank:9)
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 228


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any_list2(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
any_list2 : any list
---------------------------------------
forall (any1:any) (any2:any), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 229


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
any1 : any
---------------------------------------
forall (any2:any) (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any2(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
any1 : any
any2 : any
---------------------------------------
forall (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro any_list2(rank:9)
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 230


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
any1 : any
---------------------------------------
forall (any2:any) (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any_list2(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
any1 : any
any_list2 : any list
---------------------------------------
forall (any2:any), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 231


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
any2 : any
---------------------------------------
forall (any1:any) (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any_list2(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
any2 : any
any_list2 : any list
---------------------------------------
forall (any1:any), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 232


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
any1 : any
any2 : any
---------------------------------------
forall (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any_list2(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
any1 : any
any2 : any
any_list2 : any list
---------------------------------------
(any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 233


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))

0 goal(s) more...

3 conjecture(s) more...
>>> induction any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list), (((Nil) @ (any2::(any1::(Nil)))) @ any_list2) = (((Nil) @ (any2::(Nil))) @ (any1::any_list2))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9)
=================================================
Progress: 234


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list), (((Nil) @ (any2::(any1::(Nil)))) @ any_list2) = (((Nil) @ (any2::(Nil))) @ (any1::any_list2))

1 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list), (((any3::any_list3) @ (any2::(any1::(Nil)))) @ any_list2) = (((any3::any_list3) @ (any2::(Nil))) @ (any1::any_list2))

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 235


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list), (((any3::any_list3) @ (any2::(any1::(Nil)))) @ any_list2) = (((any3::any_list3) @ (any2::(Nil))) @ (any1::any_list2))

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
intro any1(rank:9)
intro any_list2(rank:9)
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
intro any2(rank:9)
=================================================
Progress: 236


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any1(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
any1 : any
---------------------------------------
forall (any2:any) (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
intro any2(rank:9)
intro any_list2(rank:9)
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 237


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any2(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
any2 : any
---------------------------------------
forall (any1:any) (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro any_list2(rank:9)
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 238


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any_list2(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
any_list2 : any list
---------------------------------------
forall (any1:any) (any2:any), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 239


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
any1 : any
---------------------------------------
forall (any2:any) (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any2(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
any1 : any
any2 : any
---------------------------------------
forall (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro any_list2(rank:9)
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 240


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
any1 : any
---------------------------------------
forall (any2:any) (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any_list2(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
any1 : any
any_list2 : any list
---------------------------------------
forall (any2:any), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 241


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
any2 : any
---------------------------------------
forall (any1:any) (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any_list2(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
any2 : any
any_list2 : any list
---------------------------------------
forall (any1:any), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 242


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
any1 : any
any2 : any
---------------------------------------
forall (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any_list2(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
any1 : any
any2 : any
any_list2 : any list
---------------------------------------
(any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 243


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))

0 goal(s) more...

3 conjecture(s) more...
>>> induction any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list), (((Nil) @ (any2::(any1::(Nil)))) @ any_list2) = (((Nil) @ (any2::(Nil))) @ (any1::any_list2))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9)
=================================================
Progress: 244


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list), (((Nil) @ (any2::(any1::(Nil)))) @ any_list2) = (((Nil) @ (any2::(Nil))) @ (any1::any_list2))

1 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list), (((any3::any_list3) @ (any2::(any1::(Nil)))) @ any_list2) = (((any3::any_list3) @ (any2::(Nil))) @ (any1::any_list2))

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 245


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list), (((any3::any_list3) @ (any2::(any1::(Nil)))) @ any_list2) = (((any3::any_list3) @ (any2::(Nil))) @ (any1::any_list2))

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
intro any1(rank:9)
intro any_list2(rank:9)
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
intro any2(rank:9)
=================================================
Progress: 246


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any1(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
any1 : any
---------------------------------------
forall (any2:any) (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
intro any2(rank:9)
intro any_list2(rank:9)
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 247


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any2(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
any2 : any
---------------------------------------
forall (any1:any) (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro any_list2(rank:9)
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 248


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any_list2(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
any_list2 : any list
---------------------------------------
forall (any1:any) (any2:any), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 249


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
any1 : any
---------------------------------------
forall (any2:any) (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any2(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
any1 : any
any2 : any
---------------------------------------
forall (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro any_list2(rank:9)
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 250


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
any1 : any
---------------------------------------
forall (any2:any) (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any_list2(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
any1 : any
any_list2 : any list
---------------------------------------
forall (any2:any), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 251


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
any2 : any
---------------------------------------
forall (any1:any) (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any_list2(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
any2 : any
any_list2 : any list
---------------------------------------
forall (any1:any), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 252


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
any1 : any
any2 : any
---------------------------------------
forall (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any_list2(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
any1 : any
any2 : any
any_list2 : any list
---------------------------------------
(any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 253


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))

0 goal(s) more...

3 conjecture(s) more...
>>> induction any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list), (((Nil) @ (any2::(any1::(Nil)))) @ any_list2) = (((Nil) @ (any2::(Nil))) @ (any1::any_list2))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9)
=================================================
Progress: 254


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list), (((Nil) @ (any2::(any1::(Nil)))) @ any_list2) = (((Nil) @ (any2::(Nil))) @ (any1::any_list2))

1 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list), (((any3::any_list3) @ (any2::(any1::(Nil)))) @ any_list2) = (((any3::any_list3) @ (any2::(Nil))) @ (any1::any_list2))

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 255


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list), (((any3::any_list3) @ (any2::(any1::(Nil)))) @ any_list2) = (((any3::any_list3) @ (any2::(Nil))) @ (any1::any_list2))

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
intro any1(rank:9)
intro any_list2(rank:9)
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
intro any2(rank:9)
=================================================
Progress: 256


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any1(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
any1 : any
---------------------------------------
forall (any2:any) (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
intro any2(rank:9)
intro any_list2(rank:9)
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 257


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any2(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
any2 : any
---------------------------------------
forall (any1:any) (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro any_list2(rank:9)
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 258


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any_list2(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
any_list2 : any list
---------------------------------------
forall (any1:any) (any2:any), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 259


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
any1 : any
---------------------------------------
forall (any2:any) (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any2(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
any1 : any
any2 : any
---------------------------------------
forall (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro any_list2(rank:9)
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 260


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
any1 : any
---------------------------------------
forall (any2:any) (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any_list2(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
any1 : any
any_list2 : any list
---------------------------------------
forall (any2:any), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 261


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
any2 : any
---------------------------------------
forall (any1:any) (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any_list2(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
any2 : any
any_list2 : any list
---------------------------------------
forall (any1:any), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 262


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
any1 : any
any2 : any
---------------------------------------
forall (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any_list2(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
any1 : any
any2 : any
any_list2 : any list
---------------------------------------
(any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 263


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))

0 goal(s) more...

3 conjecture(s) more...
>>> induction any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list), (((Nil) @ (any2::(any1::(Nil)))) @ any_list2) = (((Nil) @ (any2::(Nil))) @ (any1::any_list2))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9)
=================================================
Progress: 264


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list), (((Nil) @ (any2::(any1::(Nil)))) @ any_list2) = (((Nil) @ (any2::(Nil))) @ (any1::any_list2))

1 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list), (((any3::any_list3) @ (any2::(any1::(Nil)))) @ any_list2) = (((any3::any_list3) @ (any2::(Nil))) @ (any1::any_list2))

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 265


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list), (((any3::any_list3) @ (any2::(any1::(Nil)))) @ any_list2) = (((any3::any_list3) @ (any2::(Nil))) @ (any1::any_list2))

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
intro any1(rank:9)
intro any_list2(rank:9)
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
intro any2(rank:9)
=================================================
Progress: 266


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any1(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
any1 : any
---------------------------------------
forall (any2:any) (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
intro any2(rank:9)
intro any_list2(rank:9)
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 267


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any2(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
any2 : any
---------------------------------------
forall (any1:any) (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro any_list2(rank:9)
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 268


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any_list2(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
any_list2 : any list
---------------------------------------
forall (any1:any) (any2:any), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 269


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
any1 : any
---------------------------------------
forall (any2:any) (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any2(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
any1 : any
any2 : any
---------------------------------------
forall (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro any_list2(rank:9)
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 270


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
any1 : any
---------------------------------------
forall (any2:any) (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any_list2(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
any1 : any
any_list2 : any list
---------------------------------------
forall (any2:any), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 271


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
any2 : any
---------------------------------------
forall (any1:any) (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any_list2(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
any2 : any
any_list2 : any list
---------------------------------------
forall (any1:any), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 272


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
any1 : any
any2 : any
---------------------------------------
forall (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any_list2(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
any1 : any
any2 : any
any_list2 : any list
---------------------------------------
(any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 273


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list), (any3::((any_list3 @ (any2::(any1::(Nil)))) @ any_list2)) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list), (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2))) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8)
=================================================
Progress: 274


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), ((any_list1 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list1 @ (any2::(Nil))) @ (any1::any_list2))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), ((any_list3 @ (any2::(any1::(Nil)))) @ any_list2) = ((any_list3 @ (any2::(Nil))) @ (any1::any_list2))
Inductive1 : any_list1 = (any3::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list), (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2))) = (any3::((any_list3 @ (any2::(Nil))) @ (any1::any_list2)))

0 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), ((((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))
Inductive1 : any_list2 = (any5::any_list3)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any), ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(any1::(Nil)))) @ (any3::(Nil))) = ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 15
Tactic List : 8
intro any1(rank:8)
intro any3(rank:8)
rewrite <- lemma6 in goal at 3(rank:16)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite lemma6 in goal at 0(rank:16)
intro any2(rank:8)
=================================================
Progress: 275


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), ((((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))
Inductive1 : any_list2 = (any5::any_list3)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any), ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(any1::(Nil)))) @ (any3::(Nil))) = ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any1(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), ((((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))
Inductive1 : any_list2 = (any5::any_list3)
any4 : any
any1 : any
---------------------------------------
forall (any2:any) (any3:any), ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(any1::(Nil)))) @ (any3::(Nil))) = ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 7
intro any2(rank:8)
rewrite lemma6 in goal at 0(rank:16)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 3(rank:16)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
intro any3(rank:8)
=================================================
Progress: 276


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), ((((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))
Inductive1 : any_list2 = (any5::any_list3)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any), ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(any1::(Nil)))) @ (any3::(Nil))) = ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any2(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), ((((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))
Inductive1 : any_list2 = (any5::any_list3)
any4 : any
any2 : any
---------------------------------------
forall (any1:any) (any3:any), ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(any1::(Nil)))) @ (any3::(Nil))) = ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
intro any3(rank:8)
rewrite <- lemma6 in goal at 3(rank:16)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite lemma6 in goal at 0(rank:16)
=================================================
Progress: 277


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), ((((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))
Inductive1 : any_list2 = (any5::any_list3)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any), ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(any1::(Nil)))) @ (any3::(Nil))) = ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any3(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), ((((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))
Inductive1 : any_list2 = (any5::any_list3)
any4 : any
any3 : any
---------------------------------------
forall (any1:any) (any2:any), ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(any1::(Nil)))) @ (any3::(Nil))) = ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite lemma6 in goal at 0(rank:16)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 3(rank:16)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
=================================================
Progress: 278


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), ((((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))
Inductive1 : any_list2 = (any5::any_list3)
any4 : any
any1 : any
---------------------------------------
forall (any2:any) (any3:any), ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(any1::(Nil)))) @ (any3::(Nil))) = ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any2(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), ((((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))
Inductive1 : any_list2 = (any5::any_list3)
any4 : any
any1 : any
any2 : any
---------------------------------------
forall (any3:any), ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(any1::(Nil)))) @ (any3::(Nil))) = ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
intro any3(rank:8)
rewrite <- lemma6 in goal at 3(rank:16)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite lemma6 in goal at 0(rank:16)
=================================================
Progress: 279


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), ((((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))
Inductive1 : any_list2 = (any5::any_list3)
any4 : any
any1 : any
---------------------------------------
forall (any2:any) (any3:any), ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(any1::(Nil)))) @ (any3::(Nil))) = ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any3(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), ((((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))
Inductive1 : any_list2 = (any5::any_list3)
any4 : any
any1 : any
any3 : any
---------------------------------------
forall (any2:any), ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(any1::(Nil)))) @ (any3::(Nil))) = ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite lemma6 in goal at 0(rank:16)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 3(rank:16)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
=================================================
Progress: 280


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), ((((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))
Inductive1 : any_list2 = (any5::any_list3)
any4 : any
any2 : any
---------------------------------------
forall (any1:any) (any3:any), ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(any1::(Nil)))) @ (any3::(Nil))) = ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any3(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), ((((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))
Inductive1 : any_list2 = (any5::any_list3)
any4 : any
any2 : any
any3 : any
---------------------------------------
forall (any1:any), ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(any1::(Nil)))) @ (any3::(Nil))) = ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite lemma6 in goal at 0(rank:16)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 3(rank:16)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
=================================================
Progress: 281


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), ((((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))
Inductive1 : any_list2 = (any5::any_list3)
any4 : any
any1 : any
any2 : any
---------------------------------------
forall (any3:any), ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(any1::(Nil)))) @ (any3::(Nil))) = ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any3(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), ((((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))
Inductive1 : any_list2 = (any5::any_list3)
any4 : any
any1 : any
any2 : any
any3 : any
---------------------------------------
((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(any1::(Nil)))) @ (any3::(Nil))) = ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite lemma6 in goal at 0(rank:16)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 3(rank:16)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
=================================================
Progress: 282


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), ((((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))
Inductive1 : any_list2 = (any5::any_list3)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any), ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(any1::(Nil)))) @ (any3::(Nil))) = ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma6 in goal at 0(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), ((((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))
Inductive1 : any_list2 = (any5::any_list3)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any), ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil)))) = ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7)
=================================================
Progress: 283


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), ((((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(Nil))) @ (any3::(Nil))) = (((reverse (any_list3) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))
Inductive1 : any_list2 = (any5::any_list3)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any), ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil)))) = ((((reverse (any_list3) @ (any5::(Nil))) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(any5::any_list3))))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 159
Tactic List : 1
simpl in goal(rank:7)
=================================================
Progress: 284


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(any5::any_list3))))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(any5::any_list3))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:8)
=================================================
Progress: 285


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(any5::any_list3))))

0 goal(s) more...

2 conjecture(s) more...
>>> induction any_list2(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (((reverse ((Nil)) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(any5::any_list3))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8)
=================================================
Progress: 286


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (((reverse ((Nil)) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::(any5::any_list3))))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::(any1::(any3::(any5::any_list3)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 10
intro any1(rank:8)
intro any3(rank:8)
rewrite <- lemma5 in goal at 0(rank:16)
rewrite <- lemma5 in goal at 2(rank:16)
rewrite <- lemma5 in goal at 3(rank:16)
rewrite <- lemma6 in goal at 0(rank:24)
intro any4(rank:8)
intro any2(rank:8)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
=================================================
Progress: 287


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::(any1::(any3::(any5::any_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any1(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::(any1::(any3::(any5::any_list3)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 9
intro any2(rank:8)
intro any4(rank:8)
rewrite <- lemma5 in goal at 2(rank:16)
rewrite <- lemma5 in goal at 3(rank:16)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma5 in goal at 0(rank:16)
intro any3(rank:8)
rewrite <- lemma6 in goal at 3(rank:24)
=================================================
Progress: 288


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::(any1::(any3::(any5::any_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any2(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::(any1::(any3::(any5::any_list3)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 8
intro any3(rank:8)
rewrite <- lemma5 in goal at 0(rank:16)
rewrite <- lemma5 in goal at 3(rank:16)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma5 in goal at 2(rank:16)
intro any4(rank:8)
=================================================
Progress: 289


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::(any1::(any3::(any5::any_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any3(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::(any1::(any3::(any5::any_list3)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 7
intro any4(rank:8)
rewrite <- lemma5 in goal at 2(rank:16)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma5 in goal at 3(rank:16)
rewrite <- lemma5 in goal at 0(rank:16)
=================================================
Progress: 290


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::(any1::(any3::(any5::any_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any4(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::(any1::(any3::(any5::any_list3)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
rewrite <- lemma5 in goal at 0(rank:16)
rewrite <- lemma5 in goal at 3(rank:16)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma5 in goal at 2(rank:16)
=================================================
Progress: 291


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::(any1::(any3::(any5::any_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any2(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::(any1::(any3::(any5::any_list3)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 8
intro any3(rank:8)
rewrite <- lemma5 in goal at 0(rank:16)
rewrite <- lemma5 in goal at 3(rank:16)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma5 in goal at 2(rank:16)
intro any4(rank:8)
=================================================
Progress: 292


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::(any1::(any3::(any5::any_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any3(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::(any1::(any3::(any5::any_list3)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 7
intro any4(rank:8)
rewrite <- lemma5 in goal at 2(rank:16)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma5 in goal at 3(rank:16)
rewrite <- lemma5 in goal at 0(rank:16)
=================================================
Progress: 293


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::(any1::(any3::(any5::any_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any4(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::(any1::(any3::(any5::any_list3)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
rewrite <- lemma5 in goal at 0(rank:16)
rewrite <- lemma5 in goal at 3(rank:16)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma5 in goal at 2(rank:16)
=================================================
Progress: 294


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::(any1::(any3::(any5::any_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any3(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::(any1::(any3::(any5::any_list3)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 7
intro any4(rank:8)
rewrite <- lemma5 in goal at 2(rank:16)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma5 in goal at 3(rank:16)
rewrite <- lemma5 in goal at 0(rank:16)
=================================================
Progress: 295


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::(any1::(any3::(any5::any_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any4(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::(any1::(any3::(any5::any_list3)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
rewrite <- lemma5 in goal at 0(rank:16)
rewrite <- lemma5 in goal at 3(rank:16)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma5 in goal at 2(rank:16)
=================================================
Progress: 296


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::(any1::(any3::(any5::any_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any4(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::(any1::(any3::(any5::any_list3)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
rewrite <- lemma5 in goal at 0(rank:16)
rewrite <- lemma5 in goal at 3(rank:16)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma5 in goal at 2(rank:16)
=================================================
Progress: 297


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::(any1::(any3::(any5::any_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any3(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::(any1::(any3::(any5::any_list3)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 7
intro any4(rank:8)
rewrite <- lemma5 in goal at 2(rank:16)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma5 in goal at 3(rank:16)
rewrite <- lemma5 in goal at 0(rank:16)
=================================================
Progress: 298


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::(any1::(any3::(any5::any_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any4(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::(any1::(any3::(any5::any_list3)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
rewrite <- lemma5 in goal at 0(rank:16)
rewrite <- lemma5 in goal at 3(rank:16)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma5 in goal at 2(rank:16)
=================================================
Progress: 299


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::(any1::(any3::(any5::any_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any4(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::(any1::(any3::(any5::any_list3)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
rewrite <- lemma5 in goal at 0(rank:16)
rewrite <- lemma5 in goal at 3(rank:16)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma5 in goal at 2(rank:16)
=================================================
Progress: 300


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::(any1::(any3::(any5::any_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any4(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::(any1::(any3::(any5::any_list3)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
rewrite <- lemma5 in goal at 0(rank:16)
rewrite <- lemma5 in goal at 3(rank:16)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma5 in goal at 2(rank:16)
=================================================
Progress: 301


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::(any1::(any3::(any5::any_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any4(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::(any1::(any3::(any5::any_list3)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
rewrite <- lemma5 in goal at 0(rank:16)
rewrite <- lemma5 in goal at 3(rank:16)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma5 in goal at 2(rank:16)
=================================================
Progress: 302


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::(any1::(any3::(any5::any_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 0(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8)
=================================================
Progress: 303


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse ((((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 9
intro any1(rank:8)
intro any3(rank:8)
rewrite lemma4 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
intro any4(rank:8)
intro any2(rank:8)
rewrite <- lemma6 in goal at 3(rank:24)
=================================================
Progress: 304


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse ((((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any1(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse ((((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 8
intro any2(rank:8)
intro any4(rank:8)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite lemma4 in goal at 0(rank:24)
intro any3(rank:8)
=================================================
Progress: 305


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse ((((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any2(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse ((((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 7
intro any3(rank:8)
rewrite lemma4 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
intro any4(rank:8)
=================================================
Progress: 306


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse ((((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any3(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse ((((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
intro any4(rank:8)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite lemma4 in goal at 0(rank:24)
=================================================
Progress: 307


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse ((((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any4(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse ((((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite lemma4 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 308


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse ((((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any2(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse ((((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 7
intro any3(rank:8)
rewrite lemma4 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
intro any4(rank:8)
=================================================
Progress: 309


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse ((((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any3(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse ((((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
intro any4(rank:8)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite lemma4 in goal at 0(rank:24)
=================================================
Progress: 310


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse ((((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any4(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse ((((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite lemma4 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 311


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse ((((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any3(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse ((((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
intro any4(rank:8)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite lemma4 in goal at 0(rank:24)
=================================================
Progress: 312


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse ((((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any4(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse ((((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite lemma4 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 313


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse ((((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any4(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse ((((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite lemma4 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 314


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse ((((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any3(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse ((((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
intro any4(rank:8)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite lemma4 in goal at 0(rank:24)
=================================================
Progress: 315


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse ((((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any4(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse ((((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite lemma4 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 316


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse ((((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any4(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse ((((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite lemma4 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 317


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse ((((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any4(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse ((((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite lemma4 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 318


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse ((((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any4(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse ((((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite lemma4 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 319


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::(any1::(any3::(any5::any_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 2(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::reverse ((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
rewrite <- lemma4 in goal at 0(rank:16)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite lemma4 in goal at 0(rank:24)
=================================================
Progress: 320


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::(any1::(any3::(any5::any_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 3(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::reverse ((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite lemma4 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 321


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::(any1::(any3::(any5::any_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 0(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite <- lemma6 in goal at 1(rank:16)
rewrite lemma4 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
=================================================
Progress: 322


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::(any1::(any3::(any5::any_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 2(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::reverse ((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
rewrite <- lemma4 in goal at 0(rank:16)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite lemma4 in goal at 0(rank:24)
=================================================
Progress: 323


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::(any1::(any3::(any5::any_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 3(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::reverse ((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite lemma4 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 324


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::(any1::(any3::(any5::any_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 0(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite <- lemma6 in goal at 1(rank:16)
rewrite lemma4 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
=================================================
Progress: 325


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::(any1::(any3::(any5::any_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 2(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::reverse ((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
rewrite <- lemma4 in goal at 0(rank:16)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite lemma4 in goal at 0(rank:24)
=================================================
Progress: 326


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::(any1::(any3::(any5::any_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 3(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::reverse ((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite lemma4 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 327


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::(any1::(any3::(any5::any_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 0(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite <- lemma6 in goal at 1(rank:16)
rewrite lemma4 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
=================================================
Progress: 328


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::(any1::(any3::(any5::any_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 2(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::reverse ((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
rewrite <- lemma4 in goal at 0(rank:16)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite lemma4 in goal at 0(rank:24)
=================================================
Progress: 329


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::(any1::(any3::(any5::any_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 3(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::reverse ((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite lemma4 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 330


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::(any1::(any3::(any5::any_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 0(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite <- lemma6 in goal at 1(rank:16)
rewrite lemma4 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
=================================================
Progress: 331


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::(any1::(any3::(any5::any_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 2(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::reverse ((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
rewrite <- lemma4 in goal at 0(rank:16)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite lemma4 in goal at 0(rank:24)
=================================================
Progress: 332


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::(any1::(any3::(any5::any_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 3(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::reverse ((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite lemma4 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 333


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::(any1::(any3::(any5::any_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 0(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite <- lemma6 in goal at 1(rank:16)
rewrite lemma4 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
=================================================
Progress: 334


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::(any1::(any3::(any5::any_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 2(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::reverse ((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
rewrite <- lemma4 in goal at 0(rank:16)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite lemma4 in goal at 0(rank:24)
=================================================
Progress: 335


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::(any1::(any3::(any5::any_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 3(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::reverse ((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite lemma4 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 336


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::(any1::(any3::(any5::any_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 0(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite <- lemma6 in goal at 1(rank:16)
rewrite lemma4 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
=================================================
Progress: 337


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::(any1::(any3::(any5::any_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 2(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::reverse ((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
rewrite <- lemma4 in goal at 0(rank:16)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite lemma4 in goal at 0(rank:24)
=================================================
Progress: 338


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::(any1::(any3::(any5::any_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 3(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::reverse ((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite lemma4 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 339


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::(any1::(any3::(any5::any_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 0(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite <- lemma6 in goal at 1(rank:16)
rewrite lemma4 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
=================================================
Progress: 340


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::(any1::(any3::(any5::any_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 2(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::reverse ((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
rewrite <- lemma4 in goal at 0(rank:16)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite lemma4 in goal at 0(rank:24)
=================================================
Progress: 341


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::(any1::(any3::(any5::any_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 3(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::reverse ((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite lemma4 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 342


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::(any1::(any3::(any5::any_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 0(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite <- lemma6 in goal at 1(rank:16)
rewrite lemma4 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
=================================================
Progress: 343


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::(any1::(any3::(any5::any_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 2(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::reverse ((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
rewrite <- lemma4 in goal at 0(rank:16)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite lemma4 in goal at 0(rank:24)
=================================================
Progress: 344


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::(any1::(any3::(any5::any_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 3(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::reverse ((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite lemma4 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 345


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::(any1::(any3::(any5::any_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 0(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite <- lemma6 in goal at 1(rank:16)
rewrite lemma4 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
=================================================
Progress: 346


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::(any1::(any3::(any5::any_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 2(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::reverse ((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
rewrite <- lemma4 in goal at 0(rank:16)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite lemma4 in goal at 0(rank:24)
=================================================
Progress: 347


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::(any1::(any3::(any5::any_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 3(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::reverse ((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite lemma4 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 348


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::(any1::(any3::(any5::any_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 0(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite <- lemma6 in goal at 1(rank:16)
rewrite lemma4 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
=================================================
Progress: 349


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::(any1::(any3::(any5::any_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 2(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::reverse ((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
rewrite <- lemma4 in goal at 0(rank:16)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite lemma4 in goal at 0(rank:24)
=================================================
Progress: 350


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::(any1::(any3::(any5::any_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 3(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::reverse ((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite lemma4 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 351


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::(any1::(any3::(any5::any_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 0(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite <- lemma6 in goal at 1(rank:16)
rewrite lemma4 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
=================================================
Progress: 352


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::(any1::(any3::(any5::any_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 2(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::reverse ((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
rewrite <- lemma4 in goal at 0(rank:16)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite lemma4 in goal at 0(rank:24)
=================================================
Progress: 353


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::(any1::(any3::(any5::any_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 3(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::reverse ((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite lemma4 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 354


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::(any1::(any3::(any5::any_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 0(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite <- lemma6 in goal at 1(rank:16)
rewrite lemma4 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
=================================================
Progress: 355


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::(any1::(any3::(any5::any_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 2(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::reverse ((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
rewrite <- lemma4 in goal at 0(rank:16)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite lemma4 in goal at 0(rank:24)
=================================================
Progress: 356


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::(any1::(any3::(any5::any_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 3(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::reverse ((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite lemma4 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 357


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::(any1::(any3::(any5::any_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 0(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite <- lemma6 in goal at 1(rank:16)
rewrite lemma4 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
=================================================
Progress: 358


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::(any1::(any3::(any5::any_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 2(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::reverse ((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
rewrite <- lemma4 in goal at 0(rank:16)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite lemma4 in goal at 0(rank:24)
=================================================
Progress: 359


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::(any1::(any3::(any5::any_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 3(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::reverse ((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite lemma4 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 360


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::(any1::(any3::(any5::any_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 0(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite <- lemma6 in goal at 1(rank:16)
rewrite lemma4 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
=================================================
Progress: 361


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::(any1::(any3::(any5::any_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 2(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::reverse ((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
rewrite <- lemma4 in goal at 0(rank:16)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite lemma4 in goal at 0(rank:24)
=================================================
Progress: 362


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::(any1::(any3::(any5::any_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 3(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::reverse ((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite lemma4 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 363


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::(any1::(any3::(any5::any_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 0(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite <- lemma6 in goal at 1(rank:16)
rewrite lemma4 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
=================================================
Progress: 364


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::(any1::(any3::(any5::any_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 2(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::reverse ((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
rewrite <- lemma4 in goal at 0(rank:16)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite lemma4 in goal at 0(rank:24)
=================================================
Progress: 365


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::(any1::(any3::(any5::any_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 3(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::(any2::reverse ((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite lemma4 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 366


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::reverse ((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 0(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma6 in goal at 1(rank:16)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
=================================================
Progress: 367


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 1(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(any2::(Nil)))) @ (any4::(Nil)))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
rewrite <- lemma6 in goal at 1(rank:16)
rewrite lemma4 in goal at 0(rank:24)
rewrite lemma4 in goal at 1(rank:24)
rewrite lemma4 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
=================================================
Progress: 368


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::reverse ((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 0(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma6 in goal at 1(rank:16)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
=================================================
Progress: 369


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 1(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(any2::(Nil)))) @ (any4::(Nil)))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
rewrite <- lemma6 in goal at 1(rank:16)
rewrite lemma4 in goal at 0(rank:24)
rewrite lemma4 in goal at 1(rank:24)
rewrite lemma4 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
=================================================
Progress: 370


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::reverse ((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 0(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma6 in goal at 1(rank:16)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
=================================================
Progress: 371


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 1(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(any2::(Nil)))) @ (any4::(Nil)))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
rewrite <- lemma6 in goal at 1(rank:16)
rewrite lemma4 in goal at 0(rank:24)
rewrite lemma4 in goal at 1(rank:24)
rewrite lemma4 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
=================================================
Progress: 372


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::reverse ((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 0(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma6 in goal at 1(rank:16)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
=================================================
Progress: 373


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 1(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(any2::(Nil)))) @ (any4::(Nil)))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
rewrite <- lemma6 in goal at 1(rank:16)
rewrite lemma4 in goal at 0(rank:24)
rewrite lemma4 in goal at 1(rank:24)
rewrite lemma4 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
=================================================
Progress: 374


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::reverse ((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 0(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma6 in goal at 1(rank:16)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
=================================================
Progress: 375


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 1(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(any2::(Nil)))) @ (any4::(Nil)))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
rewrite <- lemma6 in goal at 1(rank:16)
rewrite lemma4 in goal at 0(rank:24)
rewrite lemma4 in goal at 1(rank:24)
rewrite lemma4 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
=================================================
Progress: 376


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::reverse ((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 0(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma6 in goal at 1(rank:16)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
=================================================
Progress: 377


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 1(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(any2::(Nil)))) @ (any4::(Nil)))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
rewrite <- lemma6 in goal at 1(rank:16)
rewrite lemma4 in goal at 0(rank:24)
rewrite lemma4 in goal at 1(rank:24)
rewrite lemma4 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
=================================================
Progress: 378


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::reverse ((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 0(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma6 in goal at 1(rank:16)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
=================================================
Progress: 379


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 1(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(any2::(Nil)))) @ (any4::(Nil)))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
rewrite <- lemma6 in goal at 1(rank:16)
rewrite lemma4 in goal at 0(rank:24)
rewrite lemma4 in goal at 1(rank:24)
rewrite lemma4 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
=================================================
Progress: 380


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::reverse ((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 0(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma6 in goal at 1(rank:16)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
=================================================
Progress: 381


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 1(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(any2::(Nil)))) @ (any4::(Nil)))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
rewrite <- lemma6 in goal at 1(rank:16)
rewrite lemma4 in goal at 0(rank:24)
rewrite lemma4 in goal at 1(rank:24)
rewrite lemma4 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
=================================================
Progress: 382


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::reverse ((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 0(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma6 in goal at 1(rank:16)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
=================================================
Progress: 383


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 1(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(any2::(Nil)))) @ (any4::(Nil)))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
rewrite <- lemma6 in goal at 1(rank:16)
rewrite lemma4 in goal at 0(rank:24)
rewrite lemma4 in goal at 1(rank:24)
rewrite lemma4 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
=================================================
Progress: 384


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::reverse ((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 0(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma6 in goal at 1(rank:16)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
=================================================
Progress: 385


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 1(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(any2::(Nil)))) @ (any4::(Nil)))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
rewrite <- lemma6 in goal at 1(rank:16)
rewrite lemma4 in goal at 0(rank:24)
rewrite lemma4 in goal at 1(rank:24)
rewrite lemma4 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
=================================================
Progress: 386


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::reverse ((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 0(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma6 in goal at 1(rank:16)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
=================================================
Progress: 387


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 1(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(any2::(Nil)))) @ (any4::(Nil)))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
rewrite <- lemma6 in goal at 1(rank:16)
rewrite lemma4 in goal at 0(rank:24)
rewrite lemma4 in goal at 1(rank:24)
rewrite lemma4 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
=================================================
Progress: 388


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::reverse ((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 0(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma6 in goal at 1(rank:16)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
=================================================
Progress: 389


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 1(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(any2::(Nil)))) @ (any4::(Nil)))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
rewrite <- lemma6 in goal at 1(rank:16)
rewrite lemma4 in goal at 0(rank:24)
rewrite lemma4 in goal at 1(rank:24)
rewrite lemma4 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
=================================================
Progress: 390


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::reverse ((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 0(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma6 in goal at 1(rank:16)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
=================================================
Progress: 391


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 1(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(any2::(Nil)))) @ (any4::(Nil)))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
rewrite <- lemma6 in goal at 1(rank:16)
rewrite lemma4 in goal at 0(rank:24)
rewrite lemma4 in goal at 1(rank:24)
rewrite lemma4 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
=================================================
Progress: 392


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::reverse ((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 0(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma6 in goal at 1(rank:16)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
=================================================
Progress: 393


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 1(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(any2::(Nil)))) @ (any4::(Nil)))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
rewrite <- lemma6 in goal at 1(rank:16)
rewrite lemma4 in goal at 0(rank:24)
rewrite lemma4 in goal at 1(rank:24)
rewrite lemma4 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
=================================================
Progress: 394


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::reverse ((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 0(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma6 in goal at 1(rank:16)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
=================================================
Progress: 395


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 1(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(any2::(Nil)))) @ (any4::(Nil)))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
rewrite <- lemma6 in goal at 1(rank:16)
rewrite lemma4 in goal at 0(rank:24)
rewrite lemma4 in goal at 1(rank:24)
rewrite lemma4 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
=================================================
Progress: 396


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = (any4::reverse ((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 0(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma6 in goal at 1(rank:16)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
=================================================
Progress: 397


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 1(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(any2::(Nil)))) @ (any4::(Nil)))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma6 in goal at 1(rank:16)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite lemma4 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 398


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(any2::(Nil)))) @ (any4::(Nil)))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 1(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8)
=================================================
Progress: 399


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse ((((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 10
intro any2(rank:8)
intro any4(rank:8)
rewrite lemma4 in goal at 1(rank:24)
rewrite lemma4 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite lemma4 in goal at 0(rank:24)
intro any3(rank:8)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
=================================================
Progress: 400


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse ((((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any2(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse ((((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 9
intro any3(rank:8)
rewrite lemma4 in goal at 0(rank:24)
rewrite lemma4 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite lemma4 in goal at 1(rank:24)
intro any4(rank:8)
rewrite <- lemma6 in goal at 3(rank:24)
=================================================
Progress: 401


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse ((((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any3(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse ((((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 8
intro any4(rank:8)
rewrite lemma4 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite lemma4 in goal at 2(rank:24)
rewrite lemma4 in goal at 0(rank:24)
=================================================
Progress: 402


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse ((((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any4(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse ((((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 7
rewrite lemma4 in goal at 0(rank:24)
rewrite lemma4 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite lemma4 in goal at 1(rank:24)
=================================================
Progress: 403


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse ((((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any3(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse ((((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 8
intro any4(rank:8)
rewrite lemma4 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite lemma4 in goal at 2(rank:24)
rewrite lemma4 in goal at 0(rank:24)
=================================================
Progress: 404


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse ((((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any4(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse ((((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 7
rewrite lemma4 in goal at 0(rank:24)
rewrite lemma4 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite lemma4 in goal at 1(rank:24)
=================================================
Progress: 405


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse ((((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any4(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse ((((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 7
rewrite lemma4 in goal at 0(rank:24)
rewrite lemma4 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite lemma4 in goal at 1(rank:24)
=================================================
Progress: 406


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse ((((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any4(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse ((((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 7
rewrite lemma4 in goal at 0(rank:24)
rewrite lemma4 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite lemma4 in goal at 1(rank:24)
=================================================
Progress: 407


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 1(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(any2::(Nil)))) @ (any4::(Nil)))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma6 in goal at 1(rank:16)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite lemma4 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 408


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(any2::(Nil)))) @ (any4::(Nil)))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 1(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8)
=================================================
Progress: 409


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse ((((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 9
intro any3(rank:8)
rewrite lemma4 in goal at 0(rank:24)
rewrite lemma4 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite lemma4 in goal at 1(rank:24)
intro any4(rank:8)
rewrite <- lemma6 in goal at 3(rank:24)
=================================================
Progress: 410


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse ((((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any3(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse ((((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 8
intro any4(rank:8)
rewrite lemma4 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite lemma4 in goal at 2(rank:24)
rewrite lemma4 in goal at 0(rank:24)
=================================================
Progress: 411


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse ((((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any4(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse ((((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 7
rewrite lemma4 in goal at 0(rank:24)
rewrite lemma4 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite lemma4 in goal at 1(rank:24)
=================================================
Progress: 412


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse ((((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any4(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse ((((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 7
rewrite lemma4 in goal at 0(rank:24)
rewrite lemma4 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite lemma4 in goal at 1(rank:24)
=================================================
Progress: 413


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 1(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(any2::(Nil)))) @ (any4::(Nil)))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma6 in goal at 1(rank:16)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite lemma4 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 414


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(any2::(Nil)))) @ (any4::(Nil)))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 1(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8)
=================================================
Progress: 415


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse ((((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 8
intro any4(rank:8)
rewrite lemma4 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite lemma4 in goal at 2(rank:24)
rewrite lemma4 in goal at 0(rank:24)
=================================================
Progress: 416


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse ((((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any4(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse ((((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 7
rewrite lemma4 in goal at 0(rank:24)
rewrite lemma4 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite lemma4 in goal at 1(rank:24)
=================================================
Progress: 417


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 1(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(any2::(Nil)))) @ (any4::(Nil)))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma6 in goal at 1(rank:16)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite lemma4 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 418


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(any2::(Nil)))) @ (any4::(Nil)))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 1(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8)
=================================================
Progress: 419


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse ((((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 7
rewrite lemma4 in goal at 0(rank:24)
rewrite lemma4 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite lemma4 in goal at 1(rank:24)
=================================================
Progress: 420


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 1(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(any2::(Nil)))) @ (any4::(Nil)))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma6 in goal at 1(rank:16)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite lemma4 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 421


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(any2::(Nil)))) @ (any4::(Nil)))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 1(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
rewrite <- lemma6 in goal at 2(rank:16)
rewrite lemma4 in goal at 0(rank:24)
rewrite lemma4 in goal at 1(rank:24)
rewrite lemma4 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
=================================================
Progress: 422


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 1(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(any2::(Nil)))) @ (any4::(Nil)))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma6 in goal at 1(rank:16)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite lemma4 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 423


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(any2::(Nil)))) @ (any4::(Nil)))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 1(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
rewrite <- lemma6 in goal at 2(rank:16)
rewrite lemma4 in goal at 0(rank:24)
rewrite lemma4 in goal at 1(rank:24)
rewrite lemma4 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
=================================================
Progress: 424


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 1(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(any2::(Nil)))) @ (any4::(Nil)))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma6 in goal at 1(rank:16)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite lemma4 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 425


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(any2::(Nil)))) @ (any4::(Nil)))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 1(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
rewrite <- lemma6 in goal at 2(rank:16)
rewrite lemma4 in goal at 0(rank:24)
rewrite lemma4 in goal at 1(rank:24)
rewrite lemma4 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
=================================================
Progress: 426


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 1(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(any2::(Nil)))) @ (any4::(Nil)))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma6 in goal at 1(rank:16)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite lemma4 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 427


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(any2::(Nil)))) @ (any4::(Nil)))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 1(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
rewrite <- lemma6 in goal at 2(rank:16)
rewrite lemma4 in goal at 0(rank:24)
rewrite lemma4 in goal at 1(rank:24)
rewrite lemma4 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
=================================================
Progress: 428


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 1(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(any2::(Nil)))) @ (any4::(Nil)))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma6 in goal at 1(rank:16)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite lemma4 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 429


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(any2::(Nil)))) @ (any4::(Nil)))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 1(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
rewrite <- lemma6 in goal at 2(rank:16)
rewrite lemma4 in goal at 0(rank:24)
rewrite lemma4 in goal at 1(rank:24)
rewrite lemma4 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
=================================================
Progress: 430


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 1(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(any2::(Nil)))) @ (any4::(Nil)))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma6 in goal at 1(rank:16)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite lemma4 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 431


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(any2::(Nil)))) @ (any4::(Nil)))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 1(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
rewrite <- lemma6 in goal at 2(rank:16)
rewrite lemma4 in goal at 0(rank:24)
rewrite lemma4 in goal at 1(rank:24)
rewrite lemma4 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
=================================================
Progress: 432


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 1(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(any2::(Nil)))) @ (any4::(Nil)))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma6 in goal at 1(rank:16)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite lemma4 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 433


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(any2::(Nil)))) @ (any4::(Nil)))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 1(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
rewrite <- lemma6 in goal at 2(rank:16)
rewrite lemma4 in goal at 0(rank:24)
rewrite lemma4 in goal at 1(rank:24)
rewrite lemma4 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
=================================================
Progress: 434


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 1(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(any2::(Nil)))) @ (any4::(Nil)))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma6 in goal at 1(rank:16)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite lemma4 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 435


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(any2::(Nil)))) @ (any4::(Nil)))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 1(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
rewrite <- lemma6 in goal at 2(rank:16)
rewrite lemma4 in goal at 0(rank:24)
rewrite lemma4 in goal at 1(rank:24)
rewrite lemma4 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
=================================================
Progress: 436


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 1(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(any2::(Nil)))) @ (any4::(Nil)))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma6 in goal at 1(rank:16)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite lemma4 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 437


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(any2::(Nil)))) @ (any4::(Nil)))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 1(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
rewrite <- lemma6 in goal at 2(rank:16)
rewrite lemma4 in goal at 0(rank:24)
rewrite lemma4 in goal at 1(rank:24)
rewrite lemma4 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
=================================================
Progress: 438


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 1(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(any2::(Nil)))) @ (any4::(Nil)))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma6 in goal at 1(rank:16)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite lemma4 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 439


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(any2::(Nil)))) @ (any4::(Nil)))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 1(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
rewrite <- lemma6 in goal at 2(rank:16)
rewrite lemma4 in goal at 0(rank:24)
rewrite lemma4 in goal at 1(rank:24)
rewrite lemma4 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
=================================================
Progress: 440


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 1(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(any2::(Nil)))) @ (any4::(Nil)))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma6 in goal at 1(rank:16)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite lemma4 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 441


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(any2::(Nil)))) @ (any4::(Nil)))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 1(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
rewrite <- lemma6 in goal at 2(rank:16)
rewrite lemma4 in goal at 0(rank:24)
rewrite lemma4 in goal at 1(rank:24)
rewrite lemma4 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
=================================================
Progress: 442


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::(Nil))))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 1(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(any2::(Nil)))) @ (any4::(Nil)))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma6 in goal at 1(rank:16)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite lemma4 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 443


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(any2::(Nil)))) @ (any4::(Nil)))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 1(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8)
=================================================
Progress: 444


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse ((((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 7
rewrite lemma4 in goal at 0(rank:24)
rewrite lemma4 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite lemma4 in goal at 1(rank:24)
=================================================
Progress: 445


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(any2::(Nil)))) @ (any4::(Nil)))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 1(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma6 in goal at 2(rank:16)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite lemma4 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 446


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(any2::(Nil)))) @ (any4::(Nil)))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 1(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma6 in goal at 2(rank:16)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite lemma4 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 447


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(any2::(Nil)))) @ (any4::(Nil)))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 1(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma6 in goal at 2(rank:16)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite lemma4 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 448


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(any2::(Nil)))) @ (any4::(Nil)))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 1(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma6 in goal at 2(rank:16)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite lemma4 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 449


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 2(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(any3::(Nil)))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 7
rewrite lemma4 in goal at 0(rank:24)
rewrite lemma4 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite lemma4 in goal at 1(rank:24)
=================================================
Progress: 450


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(any2::(Nil)))) @ (any4::(Nil)))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 1(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma6 in goal at 2(rank:16)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite lemma4 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 451


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 2(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(any3::(Nil)))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 7
rewrite lemma4 in goal at 0(rank:24)
rewrite lemma4 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite lemma4 in goal at 1(rank:24)
=================================================
Progress: 452


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(any2::(Nil)))) @ (any4::(Nil)))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 1(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma6 in goal at 2(rank:16)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite lemma4 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 453


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 2(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any), reverse (((((reverse (any_list3) @ (any5::(any3::(Nil)))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 7
rewrite lemma4 in goal at 0(rank:24)
rewrite lemma4 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite lemma4 in goal at 1(rank:24)
=================================================
Progress: 454


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(any2::(Nil)))) @ (any4::(Nil)))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 1(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma6 in goal at 2(rank:16)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite lemma4 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 455


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 2(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(any3::(Nil)))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 7
rewrite lemma4 in goal at 0(rank:24)
rewrite lemma4 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite lemma4 in goal at 1(rank:24)
=================================================
Progress: 456


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(any2::(Nil)))) @ (any4::(Nil)))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 1(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma6 in goal at 2(rank:16)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite lemma4 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 457


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 2(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any), reverse (((((reverse (any_list3) @ (any5::(any3::(Nil)))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 7
rewrite lemma4 in goal at 0(rank:24)
rewrite lemma4 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite lemma4 in goal at 1(rank:24)
=================================================
Progress: 458


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(any2::(Nil)))) @ (any4::(Nil)))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 1(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma6 in goal at 2(rank:16)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite lemma4 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 459


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 2(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any), reverse (((((reverse (any_list3) @ (any5::(any3::(Nil)))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 7
rewrite lemma4 in goal at 0(rank:24)
rewrite lemma4 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite lemma4 in goal at 1(rank:24)
=================================================
Progress: 460


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(any2::(Nil)))) @ (any4::(Nil)))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 1(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma6 in goal at 2(rank:16)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite lemma4 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 461


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 2(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any), reverse (((((reverse (any_list3) @ (any5::(any3::(Nil)))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 7
rewrite lemma4 in goal at 0(rank:24)
rewrite lemma4 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite lemma4 in goal at 1(rank:24)
=================================================
Progress: 462


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(any2::(Nil)))) @ (any4::(Nil)))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 1(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma6 in goal at 2(rank:16)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite lemma4 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 463


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 2(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any), reverse (((((reverse (any_list3) @ (any5::(any3::(Nil)))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 7
rewrite lemma4 in goal at 0(rank:24)
rewrite lemma4 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite lemma4 in goal at 1(rank:24)
=================================================
Progress: 464


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(any2::(Nil)))) @ (any4::(Nil)))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 1(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma6 in goal at 2(rank:16)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite lemma4 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 465


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 2(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any), reverse (((((reverse (any_list3) @ (any5::(any3::(Nil)))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 7
rewrite lemma4 in goal at 0(rank:24)
rewrite lemma4 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite lemma4 in goal at 1(rank:24)
=================================================
Progress: 466


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(any2::(Nil)))) @ (any4::(Nil)))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 1(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma6 in goal at 2(rank:16)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite lemma4 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 467


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 2(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any), reverse (((((reverse (any_list3) @ (any5::(any3::(Nil)))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 7
rewrite lemma4 in goal at 0(rank:24)
rewrite lemma4 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite lemma4 in goal at 1(rank:24)
=================================================
Progress: 468


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(any2::(Nil)))) @ (any4::(Nil)))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 1(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma6 in goal at 2(rank:16)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite lemma4 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 469


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 2(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
reverse (((((reverse (any_list3) @ (any5::(any3::(Nil)))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse ((((reverse ((any3::(any5::any_list3))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 7
rewrite lemma4 in goal at 0(rank:24)
rewrite lemma4 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite lemma4 in goal at 1(rank:24)
=================================================
Progress: 470


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(Nil))) @ (any1::(any2::(Nil)))) @ (any4::(Nil)))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 1(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma6 in goal at 2(rank:16)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite lemma4 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 471


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 2(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(any3::(Nil)))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite lemma4 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 472


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 2(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(any3::(Nil)))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite lemma4 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 473


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 2(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(any3::(Nil)))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite lemma4 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 474


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 2(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any), reverse (((((reverse (any_list3) @ (any5::(any3::(Nil)))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite lemma4 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 475


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 2(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(any3::(Nil)))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite lemma4 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 476


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 2(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(any3::(Nil)))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite lemma4 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 477


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 2(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any), reverse (((((reverse (any_list3) @ (any5::(any3::(Nil)))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite lemma4 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 478


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 2(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any), reverse (((((reverse (any_list3) @ (any5::(any3::(Nil)))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite lemma4 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 479


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 2(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any), reverse (((((reverse (any_list3) @ (any5::(any3::(Nil)))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite lemma4 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 480


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 2(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any), reverse (((((reverse (any_list3) @ (any5::(any3::(Nil)))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite lemma4 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 481


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 2(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any), reverse (((((reverse (any_list3) @ (any5::(any3::(Nil)))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite lemma4 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 482


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 2(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any), reverse (((((reverse (any_list3) @ (any5::(any3::(Nil)))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite lemma4 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 483


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 2(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any), reverse (((((reverse (any_list3) @ (any5::(any3::(Nil)))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite lemma4 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 484


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any), reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 2(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any), reverse (((((reverse (any_list3) @ (any5::(any3::(Nil)))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite lemma4 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 485


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
reverse (((((reverse (any_list3) @ (any5::(Nil))) @ (any3::(any1::(Nil)))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma6 in goal at 2(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), reverse ((((reverse (any_list1) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list1)))
any_list1 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), reverse ((((reverse (any_list3) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(any4::any_list2)))) = (((reverse (any_list2) @ (any4::(Nil))) @ (any2::(Nil))) @ (any1::(any3::any_list3)))
Inductive1 : any_list1 = (any5::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
reverse (((((reverse (any_list3) @ (any5::(any3::(Nil)))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil)))) = reverse (((((reverse ((any5::any_list3)) @ (any3::(Nil))) @ (any1::(Nil))) @ (any2::(Nil))) @ (any4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite lemma4 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
rewrite <- lemma6 in goal at 2(rank:24)
rewrite <- lemma6 in goal at 3(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 486


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ (any1::any_list3))) = ((reverse (any_list3) @ (any1::(Nil))) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 19)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ (any1::any_list3))) = (reverse ((reverse ((any1::(Nil))) @ any_list3)) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- lemma4 in goal at 0(rank:19)
rewrite <- lemma4 in goal at 1(rank:19)
rewrite <- lemma4 in goal at 2(rank:19)
=================================================
Progress: 487


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ (any1::any_list3))) = ((reverse (any_list3) @ (any1::(Nil))) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 0(rank : 19)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (((reverse (any_list3) @ (any1::(Nil))) @ (Nil))))) = ((reverse (any_list3) @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
rewrite lemma3 in goal at 0(rank:19)
rewrite lemma3 in goal at 2(rank:19)
rewrite <- IH1 in goal at 0(rank:19)
rewrite <- IH1 in goal at 1(rank:19)
rewrite lemma3 in goal at 1(rank:19)
=================================================
Progress: 488


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ (any1::any_list3))) = ((reverse (any_list3) @ (any1::(Nil))) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 1(rank : 19)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (((reverse (any_list3) @ (any1::(Nil))) @ (Nil))))) = ((reverse (any_list3) @ (any1::(Nil))) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
rewrite lemma3 in goal at 0(rank:11)
rewrite <- IH1 in goal at 0(rank:19)
rewrite <- IH1 in goal at 1(rank:19)
rewrite <- lemma4 in goal at 0(rank:19)
rewrite <- lemma4 in goal at 1(rank:19)
induction any_list1(rank:12)
=================================================
Progress: 489


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (((reverse (any_list3) @ (any1::(Nil))) @ (Nil))))) = ((reverse (any_list3) @ (any1::(Nil))) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 11)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ (any1::reverse ((reverse (any_list3) @ (Nil)))))) = ((reverse (any_list3) @ (any1::(Nil))) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
induction any_list1(rank:12)
rewrite <- IH1 in goal at 1(rank:19)
rewrite <- IH1 in goal at 2(rank:19)
rewrite <- lemma4 in goal at 0(rank:19)
rewrite <- lemma4 in goal at 1(rank:19)
rewrite <- IH1 in goal at 0(rank:19)
=================================================
Progress: 490


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (((reverse (any_list3) @ (any1::(Nil))) @ (Nil))))) = ((reverse (any_list3) @ (any1::(Nil))) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> induction any_list1(rank : 12)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ reverse (((reverse (any_list3) @ (any1::(Nil))) @ (Nil))))) = ((reverse (any_list3) @ (any1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4)
=================================================
Progress: 491


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ reverse (((reverse (any_list3) @ (any1::(Nil))) @ (Nil))))) = ((reverse (any_list3) @ (any1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
reverse (reverse (((reverse (any_list3) @ (any1::(Nil))) @ (Nil)))) = ((reverse (any_list3) @ (any1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
rewrite lemma3 in goal at 0(rank:20)
rewrite <- IH1 in goal at 0(rank:20)
rewrite <- IH1 in goal at 2(rank:20)
rewrite <- lemma4 in goal at 0(rank:20)
rewrite <- lemma4 in goal at 1(rank:20)
rewrite <- lemma4 in goal at 2(rank:20)
rewrite <- IH1 in goal at 1(rank:20)
rewrite lemma4 in goal at 0(rank:20)
=================================================
Progress: 492


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ (any1::reverse ((reverse (any_list3) @ (Nil)))))) = ((reverse (any_list3) @ (any1::(Nil))) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> induction any_list1(rank : 12)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ (any1::reverse ((reverse (any_list3) @ (Nil)))))) = ((reverse (any_list3) @ (any1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4)
=================================================
Progress: 493


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ (any1::reverse ((reverse (any_list3) @ (Nil)))))) = ((reverse (any_list3) @ (any1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (any_list3) @ (Nil)))) @ (any1::(Nil))) = ((reverse (any_list3) @ (any1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
rewrite <- IH1 in goal at 0(rank:12)
rewrite <- IH1 in goal at 2(rank:12)
rewrite <- lemma4 in goal at 0(rank:20)
rewrite <- lemma4 in goal at 1(rank:20)
rewrite <- lemma4 in goal at 2(rank:20)
rewrite <- IH1 in goal at 1(rank:20)
=================================================
Progress: 494


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (any_list3) @ (Nil)))) @ (any1::(Nil))) = ((reverse (any_list3) @ (any1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
(reverse (reverse (reverse ((reverse ((Nil)) @ any_list3)))) @ (any1::(Nil))) = (reverse ((reverse ((any1::(Nil))) @ any_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4)
=================================================
Progress: 495


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
(reverse (reverse (reverse ((reverse ((Nil)) @ any_list3)))) @ (any1::(Nil))) = (reverse ((reverse ((any1::(Nil))) @ any_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
(reverse (reverse (reverse (any_list3))) @ (any1::(Nil))) = ((reverse (any_list3) @ (any1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite <- IH1 in goal at 0(rank:12)
rewrite <- lemma4 in goal at 0(rank:20)
rewrite <- lemma4 in goal at 1(rank:20)
rewrite <- lemma4 in goal at 2(rank:20)
=================================================
Progress: 496


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (any_list3) @ (Nil)))) @ (any1::(Nil))) = ((reverse (any_list3) @ (any1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 12)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (any_list3) @ (Nil)))) @ (any1::(Nil))) = (reverse ((reverse ((any1::(Nil))) @ any_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- lemma4 in goal at 0(rank:20)
rewrite <- lemma4 in goal at 1(rank:20)
rewrite <- lemma4 in goal at 2(rank:20)
=================================================
Progress: 497


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
(reverse (reverse (reverse (any_list3))) @ (any1::(Nil))) = ((reverse (any_list3) @ (any1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
(reverse (reverse (reverse (any_list3))) @ (any1::(Nil))) = (reverse ((reverse ((any1::(Nil))) @ any_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- lemma4 in goal at 0(rank:20)
rewrite <- lemma4 in goal at 1(rank:20)
rewrite <- lemma4 in goal at 2(rank:20)
=================================================
Progress: 498


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ (any1::any_list3))) = ((reverse (any_list3) @ (any1::(Nil))) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 2(rank : 19)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ (any1::any_list3))) = ((reverse (any_list3) @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite lemma3 in goal at 0(rank:3)
=================================================
Progress: 499


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ (any1::any_list3))) = ((reverse (any_list3) @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 3)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ (any1::any_list3))) = ((reverse (any_list3) @ (any1::reverse ((reverse ((Nil)) @ (Nil))))) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- IH1 in goal at 0(rank:19)
rewrite <- lemma4 in goal at 0(rank:19)
rewrite <- lemma4 in goal at 2(rank:19)
=================================================
Progress: 500


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ (any1::any_list3))) = (reverse ((reverse ((any1::(Nil))) @ any_list3)) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 0(rank : 19)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (((reverse (any_list3) @ (any1::(Nil))) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))) @ any_list3)) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite lemma3 in goal at 0(rank:11)
rewrite lemma3 in goal at 1(rank:19)
rewrite lemma3 in goal at 2(rank:11)
=================================================
Progress: 501


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (((reverse (any_list3) @ (any1::(Nil))) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))) @ any_list3)) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 11)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ (any1::reverse ((reverse (any_list3) @ (Nil)))))) = (reverse ((reverse ((any1::reverse ((reverse ((Nil)) @ (Nil))))) @ any_list3)) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite <- IH1 in goal at 0(rank:11)
rewrite <- lemma4 in goal at 0(rank:19)
rewrite <- lemma4 in goal at 1(rank:19)
rewrite <- lemma4 in goal at 2(rank:19)
=================================================
Progress: 502


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (((reverse (any_list3) @ (any1::(Nil))) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))) @ any_list3)) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma3 in goal at 2(rank : 11)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (((reverse (any_list3) @ (any1::(Nil))) @ (Nil))))) = (reverse ((reverse ((any1::reverse ((reverse ((Nil)) @ (Nil))))) @ any_list3)) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- lemma4 in goal at 0(rank:19)
rewrite <- lemma4 in goal at 2(rank:19)
=================================================
Progress: 503


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ (any1::reverse ((reverse (any_list3) @ (Nil)))))) = (reverse ((reverse ((any1::reverse ((reverse ((Nil)) @ (Nil))))) @ any_list3)) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 11)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ (any1::reverse (reverse ((reverse ((Nil)) @ any_list3)))))) = (reverse ((reverse ((any1::reverse ((reverse ((Nil)) @ (Nil))))) @ any_list3)) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:3)
=================================================
Progress: 504


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ (any1::reverse (reverse ((reverse ((Nil)) @ any_list3)))))) = (reverse ((reverse ((any1::reverse ((reverse ((Nil)) @ (Nil))))) @ any_list3)) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ (any1::reverse (reverse (any_list3))))) = ((reverse (any_list3) @ (any1::(Nil))) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
induction any_list1(rank:12)
rewrite <- lemma4 in goal at 0(rank:19)
rewrite <- lemma4 in goal at 1(rank:19)
rewrite <- lemma4 in goal at 2(rank:19)
rewrite <- IH1 in goal at 0(rank:19)
=================================================
Progress: 505


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ (any1::reverse (reverse (any_list3))))) = ((reverse (any_list3) @ (any1::(Nil))) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> induction any_list1(rank : 12)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ (any1::reverse (reverse (any_list3))))) = ((reverse (any_list3) @ (any1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4)
=================================================
Progress: 506


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ (any1::reverse (reverse (any_list3))))) = ((reverse (any_list3) @ (any1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
(reverse (reverse (reverse (any_list3))) @ (any1::(Nil))) = ((reverse (any_list3) @ (any1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite <- IH1 in goal at 0(rank:12)
rewrite <- lemma4 in goal at 0(rank:20)
rewrite <- lemma4 in goal at 1(rank:20)
rewrite <- lemma4 in goal at 2(rank:20)
=================================================
Progress: 507


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
(reverse (reverse (reverse (any_list3))) @ (any1::(Nil))) = ((reverse (any_list3) @ (any1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
(reverse (reverse (reverse (any_list3))) @ (any1::(Nil))) = (reverse ((reverse ((any1::(Nil))) @ any_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- lemma4 in goal at 0(rank:20)
rewrite <- lemma4 in goal at 1(rank:20)
rewrite <- lemma4 in goal at 2(rank:20)
=================================================
Progress: 508


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ (any1::any_list3))) = (reverse ((reverse ((any1::(Nil))) @ any_list3)) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 1(rank : 19)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (((reverse (any_list3) @ (any1::(Nil))) @ (Nil))))) = (reverse ((reverse ((any1::(Nil))) @ any_list3)) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- lemma4 in goal at 0(rank:19)
rewrite <- lemma4 in goal at 1(rank:19)
=================================================
Progress: 509


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ (any1::any_list3))) = (reverse ((reverse ((any1::(Nil))) @ any_list3)) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 2(rank : 19)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ (any1::any_list3))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))) @ any_list3)) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite lemma4 in goal at 0
reflexivity
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- lemma4 in goal at 2
advanced_generalize done
Lemma : forall (any1:any) (any_list1:any list) (any_list3:any list), reverse ((reverse (any_list1) @ (any1::any_list3))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))) @ any_list3)) @ any_list1)
Model : any1: 6, any_list1: (5::(Nil)), any_list3: (Nil)
Model : any1: 7, any_list1: (0::(Nil)), any_list3: (Nil)
Model : any1: 5, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.001259 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any_list1:any list) (any_list3:any list), reverse ((reverse (any_list1) @ (any1::any_list3))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))) @ any_list3)) @ any_list1)
End of Lemma List


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ (any1::any_list3))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))) @ any_list3)) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 510


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ (any1::any_list3))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))) @ any_list3)) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list3:any list), reverse ((reverse (any_list1) @ (any1::any_list3))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))) @ any_list3)) @ any_list1)(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ (any1::any_list2))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))) @ any_list2)) @ any_list1)

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ (any1::any_list2))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))) @ any_list2)) @ any_list1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:5)
=================================================
Progress: 511


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ (any1::any_list2))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))) @ any_list2)) @ any_list1)

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ (any1::any_list2))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))) @ any_list2)) @ any_list1)

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ (any1::any_list2))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))) @ any_list2)) @ any_list1)

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ (any1::any_list2))) = ((reverse (any_list2) @ (any1::(Nil))) @ any_list1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:6)
=================================================
Progress: 512


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ (any1::any_list2))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))) @ any_list2)) @ any_list1)

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ (any1::any_list2))) = ((reverse (any_list2) @ (any1::(Nil))) @ any_list1)

0 goal(s) more...

1 conjecture(s) more...
>>> induction any_list1(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ (any1::any_list2))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))) @ any_list2)) @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any_list2:any list), reverse ((reverse ((Nil)) @ (any1::any_list2))) = ((reverse (any_list2) @ (any1::(Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6)
=================================================
Progress: 513


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ (any1::any_list2))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))) @ any_list2)) @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any_list2:any list), reverse ((reverse ((Nil)) @ (any1::any_list2))) = ((reverse (any_list2) @ (any1::(Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ (any1::any_list2))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))) @ any_list2)) @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any_list2:any list), (reverse (any_list2) @ (any1::(Nil))) = ((reverse (any_list2) @ (any1::(Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:7)
=================================================
Progress: 514


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ (any1::any_list2))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))) @ any_list2)) @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any_list2:any list), (reverse (any_list2) @ (any1::(Nil))) = ((reverse (any_list2) @ (any1::(Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> induction any_list2(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ (any1::any_list2))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))) @ any_list2)) @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any), (reverse ((Nil)) @ (any1::(Nil))) = ((reverse ((Nil)) @ (any1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6)
=================================================
Progress: 515


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ (any1::any_list2))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))) @ any_list2)) @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any), (reverse ((Nil)) @ (any1::(Nil))) = ((reverse ((Nil)) @ (any1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ (any1::any_list2))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))) @ any_list2)) @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any), (reverse (any_list3) @ (any1::(Nil))) = ((reverse (any_list3) @ (any1::(Nil))) @ (Nil))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any), (reverse ((any2::any_list3)) @ (any1::(Nil))) = ((reverse ((any2::any_list3)) @ (any1::(Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:6)
=================================================
Progress: 516


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ (any1::any_list2))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))) @ any_list2)) @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any), (reverse (any_list3) @ (any1::(Nil))) = ((reverse (any_list3) @ (any1::(Nil))) @ (Nil))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any), (reverse ((any2::any_list3)) @ (any1::(Nil))) = ((reverse ((any2::any_list3)) @ (any1::(Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ (any1::any_list2))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))) @ any_list2)) @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any), (reverse (any_list3) @ (any1::(Nil))) = ((reverse (any_list3) @ (any1::(Nil))) @ (Nil))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any), ((reverse (any_list3) @ (any2::(Nil))) @ (any1::(Nil))) = (((reverse (any_list3) @ (any2::(Nil))) @ (any1::(Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
intro any1(rank:6)
rewrite <- lemma4 in goal at 1(rank:22)
rewrite <- lemma4 in goal at 2(rank:22)
rewrite <- lemma4 in goal at 3(rank:22)
rewrite <- lemma4 in goal at 0(rank:22)
=================================================
Progress: 517


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ (any1::any_list2))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))) @ any_list2)) @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any), (reverse (any_list3) @ (any1::(Nil))) = ((reverse (any_list3) @ (any1::(Nil))) @ (Nil))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any), ((reverse (any_list3) @ (any2::(Nil))) @ (any1::(Nil))) = (((reverse (any_list3) @ (any2::(Nil))) @ (any1::(Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> intro any1(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ (any1::any_list2))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))) @ any_list2)) @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any), (reverse (any_list3) @ (any1::(Nil))) = ((reverse (any_list3) @ (any1::(Nil))) @ (Nil))
Inductive1 : any_list2 = (any2::any_list3)
any1 : any
---------------------------------------
((reverse (any_list3) @ (any2::(Nil))) @ (any1::(Nil))) = (((reverse (any_list3) @ (any2::(Nil))) @ (any1::(Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite <- lemma4 in goal at 0(rank:22)
rewrite <- lemma4 in goal at 1(rank:22)
rewrite <- lemma4 in goal at 2(rank:22)
rewrite <- lemma4 in goal at 3(rank:22)
=================================================
Progress: 518


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (((reverse (any_list3) @ (any1::(Nil))) @ (Nil))))) = ((reverse (any_list3) @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 19)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ (any1::reverse ((reverse (any_list3) @ (Nil)))))) = ((reverse (any_list3) @ (any1::reverse ((reverse ((Nil)) @ (Nil))))) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite <- IH1 in goal at 1(rank:11)
rewrite <- lemma4 in goal at 0(rank:19)
rewrite <- lemma4 in goal at 1(rank:19)
rewrite <- lemma4 in goal at 2(rank:19)
=================================================
Progress: 519


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ (any1::reverse ((reverse (any_list3) @ (Nil)))))) = ((reverse (any_list3) @ (any1::reverse ((reverse ((Nil)) @ (Nil))))) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 11)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ (any1::reverse (reverse ((reverse ((Nil)) @ any_list3)))))) = ((reverse (any_list3) @ (any1::reverse ((reverse ((Nil)) @ (Nil))))) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- lemma4 in goal at 0(rank:19)
rewrite <- lemma4 in goal at 1(rank:19)
rewrite <- lemma4 in goal at 2(rank:19)
=================================================
Progress: 520


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (((reverse (any_list3) @ (any1::(Nil))) @ (Nil))))) = ((reverse (any_list3) @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma3 in goal at 1(rank : 19)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ (any1::reverse ((reverse (any_list3) @ (Nil)))))) = ((reverse (any_list3) @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:19)
rewrite <- IH1 in goal at 1(rank:19)
=================================================
Progress: 521


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (((reverse (any_list3) @ (any1::(Nil))) @ (Nil))))) = ((reverse (any_list3) @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma3 in goal at 2(rank : 19)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (((reverse (any_list3) @ (any1::(Nil))) @ (Nil))))) = ((reverse (any_list3) @ (any1::reverse ((reverse ((Nil)) @ (Nil))))) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- IH1 in goal at 0(rank:11)
rewrite <- IH1 in goal at 1(rank:19)
rewrite <- lemma4 in goal at 0(rank:11)
=================================================
Progress: 522


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (((reverse (any_list3) @ (any1::(Nil))) @ (Nil))))) = ((reverse (any_list3) @ (any1::reverse ((reverse ((Nil)) @ (Nil))))) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 11)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse ((reverse ((reverse ((any1::(Nil))) @ any_list3)) @ (Nil))))) = (reverse ((reverse ((any1::reverse ((reverse ((Nil)) @ (Nil))))) @ any_list3)) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- lemma4 in goal at 0(rank:19)
rewrite <- lemma4 in goal at 2(rank:19)
=================================================
Progress: 523


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (((reverse (any_list3) @ (any1::(Nil))) @ (Nil))))) = ((reverse (any_list3) @ (any1::reverse ((reverse ((Nil)) @ (Nil))))) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 0(rank : 11)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (((reverse (any_list3) @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))) @ (Nil))))) = ((reverse (any_list3) @ reverse (((reverse (reverse ((reverse ((Nil)) @ (Nil)))) @ (any1::(Nil))) @ (Nil)))) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- IH1 in goal at 1(rank:11)
rewrite lemma3 in goal at 0(rank:19)
rewrite lemma3 in goal at 2(rank:19)
=================================================
Progress: 524


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (((reverse (any_list3) @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))) @ (Nil))))) = ((reverse (any_list3) @ reverse (((reverse (reverse ((reverse ((Nil)) @ (Nil)))) @ (any1::(Nil))) @ (Nil)))) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 11)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse ((reverse ((reverse (reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))) @ any_list3)) @ (Nil))))) = ((reverse (any_list3) @ reverse (((reverse (reverse ((reverse ((Nil)) @ (Nil)))) @ (any1::(Nil))) @ (Nil)))) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite lemma3 in goal at 0(rank:19)
rewrite lemma3 in goal at 2(rank:19)
=================================================
Progress: 525


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (((reverse (any_list3) @ (any1::(Nil))) @ (Nil))))) = ((reverse (any_list3) @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 19)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse ((reverse ((reverse ((any1::(Nil))) @ any_list3)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))) @ any_list3)) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite lemma4 in goal at 0
reflexivity
simpl in goal
rewrite <- lemma4 in goal at 0
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any_list1:any list) (any_list3:any list) (arg28:any list), reverse ((reverse (any_list1) @ reverse ((reverse ((reverse (arg28) @ any_list3)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ arg28) @ (Nil)))) @ any_list3)) @ any_list1)
Model : any_list1: (Nil), any_list3: (Nil), arg28: (Nil)
Model : any_list1: (Nil), any_list3: (Nil), arg28: (Nil)
Model : any_list1: (1::(Nil)), any_list3: (4::(Nil)), arg28: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000538 seconds
Result : true
New Env

;;
Lemma List
forall (any_list1:any list) (any_list3:any list) (arg28:any list), reverse ((reverse (any_list1) @ reverse ((reverse ((reverse (arg28) @ any_list3)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ arg28) @ (Nil)))) @ any_list3)) @ any_list1)
End of Lemma List


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse ((reverse ((reverse ((any1::(Nil))) @ any_list3)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))) @ any_list3)) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 526


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse ((reverse ((reverse ((any1::(Nil))) @ any_list3)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))) @ any_list3)) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> assert forall (any_list1:any list) (any_list3:any list) (arg28:any list), reverse ((reverse (any_list1) @ reverse ((reverse ((reverse (arg28) @ any_list3)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ arg28) @ (Nil)))) @ any_list3)) @ any_list1)(rank : 0)


1st goal of : forall (any_list1:any list) (any_list2:any list) (any_list3:any list), reverse ((reverse (any_list1) @ reverse ((reverse ((reverse (any_list3) @ any_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list3) @ (Nil)))) @ any_list2)) @ any_list1)

---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list), reverse ((reverse (any_list1) @ reverse ((reverse ((reverse (any_list3) @ any_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list3) @ (Nil)))) @ any_list2)) @ any_list1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:5)
=================================================
Progress: 527


1st goal of : forall (any_list1:any list) (any_list2:any list) (any_list3:any list), reverse ((reverse (any_list1) @ reverse ((reverse ((reverse (any_list3) @ any_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list3) @ (Nil)))) @ any_list2)) @ any_list1)

---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list), reverse ((reverse (any_list1) @ reverse ((reverse ((reverse (any_list3) @ any_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list3) @ (Nil)))) @ any_list2)) @ any_list1)

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5)


1st goal of : forall (any_list1:any list) (any_list2:any list) (any_list3:any list), reverse ((reverse (any_list1) @ reverse ((reverse ((reverse (any_list3) @ any_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list3) @ (Nil)))) @ any_list2)) @ any_list1)

---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list), reverse ((reverse (any_list1) @ reverse ((reverse ((reverse (any_list3) @ any_list2)) @ (Nil))))) = (reverse ((reverse (reverse ((any_list3 @ (Nil)))) @ any_list2)) @ any_list1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:6)
=================================================
Progress: 528


1st goal of : forall (any_list1:any list) (any_list2:any list) (any_list3:any list), reverse ((reverse (any_list1) @ reverse ((reverse ((reverse (any_list3) @ any_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list3) @ (Nil)))) @ any_list2)) @ any_list1)

---------------------------------------
forall (any_list1:any list) (any_list2:any list) (any_list3:any list), reverse ((reverse (any_list1) @ reverse ((reverse ((reverse (any_list3) @ any_list2)) @ (Nil))))) = (reverse ((reverse (reverse ((any_list3 @ (Nil)))) @ any_list2)) @ any_list1)

0 goal(s) more...

1 conjecture(s) more...
>>> induction any_list1(rank : 6)


1st goal of : forall (any_list1:any list) (any_list2:any list) (any_list3:any list), reverse ((reverse (any_list1) @ reverse ((reverse ((reverse (any_list3) @ any_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list3) @ (Nil)))) @ any_list2)) @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list) (any_list3:any list), reverse ((reverse ((Nil)) @ reverse ((reverse ((reverse (any_list3) @ any_list2)) @ (Nil))))) = (reverse ((reverse (reverse ((any_list3 @ (Nil)))) @ any_list2)) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6)
=================================================
Progress: 529


1st goal of : forall (any_list1:any list) (any_list2:any list) (any_list3:any list), reverse ((reverse (any_list1) @ reverse ((reverse ((reverse (any_list3) @ any_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list3) @ (Nil)))) @ any_list2)) @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list) (any_list3:any list), reverse ((reverse ((Nil)) @ reverse ((reverse ((reverse (any_list3) @ any_list2)) @ (Nil))))) = (reverse ((reverse (reverse ((any_list3 @ (Nil)))) @ any_list2)) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6)


1st goal of : forall (any_list1:any list) (any_list2:any list) (any_list3:any list), reverse ((reverse (any_list1) @ reverse ((reverse ((reverse (any_list3) @ any_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list3) @ (Nil)))) @ any_list2)) @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list) (any_list3:any list), reverse (reverse ((reverse ((reverse (any_list3) @ any_list2)) @ (Nil)))) = (reverse ((reverse (reverse ((any_list3 @ (Nil)))) @ any_list2)) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_list3(rank:7)
=================================================
Progress: 530


1st goal of : forall (any_list1:any list) (any_list2:any list) (any_list3:any list), reverse ((reverse (any_list1) @ reverse ((reverse ((reverse (any_list3) @ any_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list3) @ (Nil)))) @ any_list2)) @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list) (any_list3:any list), reverse (reverse ((reverse ((reverse (any_list3) @ any_list2)) @ (Nil)))) = (reverse ((reverse (reverse ((any_list3 @ (Nil)))) @ any_list2)) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> induction any_list3(rank : 7)


1st goal of : forall (any_list1:any list) (any_list2:any list) (any_list3:any list), reverse ((reverse (any_list1) @ reverse ((reverse ((reverse (any_list3) @ any_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list3) @ (Nil)))) @ any_list2)) @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list3 : any list
Base2 : any_list3 = (Nil)
---------------------------------------
forall (any_list2:any list), reverse (reverse ((reverse ((reverse ((Nil)) @ any_list2)) @ (Nil)))) = (reverse ((reverse (reverse (((Nil) @ (Nil)))) @ any_list2)) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7)
=================================================
Progress: 531


1st goal of : forall (any_list1:any list) (any_list2:any list) (any_list3:any list), reverse ((reverse (any_list1) @ reverse ((reverse ((reverse (any_list3) @ any_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list3) @ (Nil)))) @ any_list2)) @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list3 : any list
Base2 : any_list3 = (Nil)
---------------------------------------
forall (any_list2:any list), reverse (reverse ((reverse ((reverse ((Nil)) @ any_list2)) @ (Nil)))) = (reverse ((reverse (reverse (((Nil) @ (Nil)))) @ any_list2)) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7)


1st goal of : forall (any_list1:any list) (any_list2:any list) (any_list3:any list), reverse ((reverse (any_list1) @ reverse ((reverse ((reverse (any_list3) @ any_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list3) @ (Nil)))) @ any_list2)) @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list3 : any list
Base2 : any_list3 = (Nil)
---------------------------------------
forall (any_list2:any list), reverse (reverse ((reverse (any_list2) @ (Nil)))) = (reverse (any_list2) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:8)
=================================================
Progress: 532


1st goal of : forall (any_list1:any list) (any_list2:any list) (any_list3:any list), reverse ((reverse (any_list1) @ reverse ((reverse ((reverse (any_list3) @ any_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list3) @ (Nil)))) @ any_list2)) @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list3 : any list
Base2 : any_list3 = (Nil)
---------------------------------------
forall (any_list2:any list), reverse (reverse ((reverse (any_list2) @ (Nil)))) = (reverse (any_list2) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> induction any_list2(rank : 8)


1st goal of : forall (any_list1:any list) (any_list2:any list) (any_list3:any list), reverse ((reverse (any_list1) @ reverse ((reverse ((reverse (any_list3) @ any_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list3) @ (Nil)))) @ any_list2)) @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list3 : any list
Base2 : any_list3 = (Nil)
any_list2 : any list
Base3 : any_list2 = (Nil)
---------------------------------------
reverse (reverse ((reverse ((Nil)) @ (Nil)))) = (reverse ((Nil)) @ (Nil))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7)
=================================================
Progress: 533


1st goal of : forall (any_list1:any list) (any_list2:any list) (any_list3:any list), reverse ((reverse (any_list1) @ reverse ((reverse ((reverse (any_list3) @ any_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list3) @ (Nil)))) @ any_list2)) @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list3 : any list
Base2 : any_list3 = (Nil)
any_list2 : any list
Base3 : any_list2 = (Nil)
---------------------------------------
reverse (reverse ((reverse ((Nil)) @ (Nil)))) = (reverse ((Nil)) @ (Nil))

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7)


1st goal of : forall (any_list1:any list) (any_list2:any list) (any_list3:any list), reverse ((reverse (any_list1) @ reverse ((reverse ((reverse (any_list3) @ any_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list3) @ (Nil)))) @ any_list2)) @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list3 : any list
Base2 : any_list3 = (Nil)
any_list2 : any list
any1 : any
any_list4 : any list
IH1 : reverse (reverse ((reverse (any_list4) @ (Nil)))) = (reverse (any_list4) @ (Nil))
Inductive1 : any_list2 = (any1::any_list4)
---------------------------------------
reverse (reverse ((reverse ((any1::any_list4)) @ (Nil)))) = (reverse ((any1::any_list4)) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7)
=================================================
Progress: 534


1st goal of : forall (any_list1:any list) (any_list2:any list) (any_list3:any list), reverse ((reverse (any_list1) @ reverse ((reverse ((reverse (any_list3) @ any_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list3) @ (Nil)))) @ any_list2)) @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list3 : any list
Base2 : any_list3 = (Nil)
any_list2 : any list
any1 : any
any_list4 : any list
IH1 : reverse (reverse ((reverse (any_list4) @ (Nil)))) = (reverse (any_list4) @ (Nil))
Inductive1 : any_list2 = (any1::any_list4)
---------------------------------------
reverse (reverse ((reverse ((any1::any_list4)) @ (Nil)))) = (reverse ((any1::any_list4)) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7)


1st goal of : forall (any_list1:any list) (any_list2:any list) (any_list3:any list), reverse ((reverse (any_list1) @ reverse ((reverse ((reverse (any_list3) @ any_list2)) @ (Nil))))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list3) @ (Nil)))) @ any_list2)) @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list3 : any list
Base2 : any_list3 = (Nil)
any_list2 : any list
any1 : any
any_list4 : any list
IH1 : reverse (reverse ((reverse (any_list4) @ (Nil)))) = (reverse (any_list4) @ (Nil))
Inductive1 : any_list2 = (any1::any_list4)
---------------------------------------
reverse (reverse (((reverse (any_list4) @ (any1::(Nil))) @ (Nil)))) = ((reverse (any_list4) @ (any1::(Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite lemma3 in goal at 0(rank:23)
rewrite <- lemma4 in goal at 0(rank:23)
rewrite <- lemma4 in goal at 1(rank:23)
rewrite <- lemma4 in goal at 2(rank:23)
rewrite lemma4 in goal at 0(rank:23)
=================================================
Progress: 535


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (((reverse (any_list3) @ (any1::(Nil))) @ (Nil))))) = ((reverse (any_list3) @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 19)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse ((reverse ((reverse ((any1::(Nil))) @ any_list3)) @ (Nil))))) = ((reverse (any_list3) @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite lemma4 in goal at 0
reflexivity
simpl in goal
rewrite <- lemma4 in goal at 0
rewrite <- IH1 in goal at 1
advanced_generalize done
Lemma : forall (any_list1:any list) (any_list3:any list) (arg29:any list), reverse ((reverse (any_list1) @ reverse ((reverse ((reverse (arg29) @ any_list3)) @ (Nil))))) = ((reverse (any_list3) @ reverse (((reverse ((Nil)) @ arg29) @ (Nil)))) @ any_list1)
Model : any_list1: (1::(Nil)), any_list3: (Nil), arg29: (7::(7::(Nil)))
Model : any_list1: (Nil), any_list3: (4::(6::(Nil))), arg29: (0::(0::(Nil)))
Model : any_list1: (Nil), any_list3: (6::(Nil)), arg29: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.003829 seconds
Result : false
=================================================
Progress: 536


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (((reverse (any_list3) @ (any1::(Nil))) @ (Nil))))) = ((reverse (any_list3) @ (any1::(Nil))) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 19)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse ((reverse ((reverse ((any1::(Nil))) @ any_list3)) @ (Nil))))) = (reverse ((reverse ((any1::(Nil))) @ any_list3)) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- lemma4 in goal at 0(rank:19)
rewrite <- lemma4 in goal at 1(rank:19)
=================================================
Progress: 537


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (((reverse (any_list3) @ (any1::(Nil))) @ (Nil))))) = ((reverse (any_list3) @ (any1::(Nil))) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 19)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse ((reverse ((reverse ((any1::(Nil))) @ any_list3)) @ (Nil))))) = ((reverse (any_list3) @ (any1::(Nil))) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- lemma4 in goal at 0(rank:19)
rewrite <- lemma4 in goal at 1(rank:19)
=================================================
Progress: 538


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (((reverse (any_list3) @ (any1::(Nil))) @ (Nil))))) = ((reverse (any_list3) @ (any1::(Nil))) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 0(rank : 19)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (((reverse (any_list3) @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))) @ (Nil))))) = ((reverse (any_list3) @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite lemma3 in goal at 1(rank:11)
rewrite lemma3 in goal at 0(rank:19)
rewrite lemma3 in goal at 2(rank:19)
=================================================
Progress: 539


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (((reverse (any_list3) @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))) @ (Nil))))) = ((reverse (any_list3) @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma3 in goal at 1(rank : 11)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (((reverse (any_list3) @ (any1::reverse ((reverse ((Nil)) @ (Nil))))) @ (Nil))))) = ((reverse (any_list3) @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite <- IH1 in goal at 0(rank:19)
rewrite <- IH1 in goal at 1(rank:19)
rewrite <- IH1 in goal at 2(rank:19)
rewrite <- lemma4 in goal at 1(rank:19)
=================================================
Progress: 540


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (((reverse (any_list3) @ (any1::(Nil))) @ (Nil))))) = ((reverse (any_list3) @ (any1::(Nil))) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 1(rank : 19)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (((reverse (any_list3) @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))) @ (Nil))))) = ((reverse (any_list3) @ (any1::(Nil))) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite lemma3 in goal at 0(rank:3)
=================================================
Progress: 541


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (((reverse (any_list3) @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))) @ (Nil))))) = ((reverse (any_list3) @ (any1::(Nil))) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 3)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (((reverse (any_list3) @ (any1::reverse ((reverse ((Nil)) @ (Nil))))) @ (Nil))))) = ((reverse (any_list3) @ (any1::(Nil))) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite <- IH1 in goal at 0(rank:19)
rewrite <- IH1 in goal at 1(rank:19)
rewrite <- IH1 in goal at 2(rank:19)
rewrite <- lemma4 in goal at 1(rank:19)
=================================================
Progress: 542


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ (any1::reverse ((reverse (any_list3) @ (Nil)))))) = ((reverse (any_list3) @ (any1::(Nil))) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 19)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ (any1::reverse (reverse ((reverse ((Nil)) @ any_list3)))))) = (reverse ((reverse ((any1::(Nil))) @ any_list3)) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- lemma4 in goal at 0(rank:19)
rewrite <- lemma4 in goal at 1(rank:19)
=================================================
Progress: 543


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ (any1::reverse ((reverse (any_list3) @ (Nil)))))) = ((reverse (any_list3) @ (any1::(Nil))) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 19)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ (any1::reverse (reverse ((reverse ((Nil)) @ any_list3)))))) = ((reverse (any_list3) @ (any1::(Nil))) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- lemma4 in goal at 0(rank:19)
rewrite <- lemma4 in goal at 1(rank:19)
=================================================
Progress: 544


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ (any1::reverse ((reverse (any_list3) @ (Nil)))))) = ((reverse (any_list3) @ (any1::(Nil))) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 19)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ (any1::reverse ((reverse (any_list3) @ (Nil)))))) = (reverse ((reverse ((any1::(Nil))) @ any_list3)) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- lemma4 in goal at 0(rank:19)
rewrite <- lemma4 in goal at 1(rank:19)
=================================================
Progress: 545


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ (any1::reverse ((reverse (any_list3) @ (Nil)))))) = ((reverse (any_list3) @ (any1::(Nil))) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 0(rank : 19)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (((reverse (reverse ((reverse (any_list3) @ (Nil)))) @ (any1::(Nil))) @ (Nil))))) = ((reverse (any_list3) @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite lemma3 in goal at 0(rank:11)
rewrite lemma3 in goal at 1(rank:11)
=================================================
Progress: 546


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (((reverse (reverse ((reverse (any_list3) @ (Nil)))) @ (any1::(Nil))) @ (Nil))))) = ((reverse (any_list3) @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 11)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ (any1::reverse ((reverse (reverse ((reverse (any_list3) @ (Nil)))) @ (Nil)))))) = ((reverse (any_list3) @ (any1::reverse ((reverse ((Nil)) @ (Nil))))) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:3)
=================================================
Progress: 547


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ (any1::reverse ((reverse (reverse ((reverse (any_list3) @ (Nil)))) @ (Nil)))))) = ((reverse (any_list3) @ (any1::reverse ((reverse ((Nil)) @ (Nil))))) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ (any1::reverse ((reverse (reverse ((reverse (any_list3) @ (Nil)))) @ (Nil)))))) = ((reverse (any_list3) @ (any1::(Nil))) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
rewrite <- IH1 in goal at 2(rank:11)
induction any_list1(rank:12)
rewrite <- IH1 in goal at 0(rank:19)
rewrite <- lemma4 in goal at 0(rank:19)
rewrite <- lemma4 in goal at 1(rank:19)
rewrite <- IH1 in goal at 1(rank:19)
=================================================
Progress: 548


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ reverse (((reverse (reverse ((reverse (any_list3) @ (Nil)))) @ (any1::(Nil))) @ (Nil))))) = ((reverse (any_list3) @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma3 in goal at 1(rank : 11)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ (any1::reverse ((reverse (reverse ((reverse (any_list3) @ (Nil)))) @ (Nil)))))) = ((reverse (any_list3) @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- IH1 in goal at 0(rank:19)
rewrite <- IH1 in goal at 1(rank:19)
rewrite <- IH1 in goal at 2(rank:19)
=================================================
Progress: 549


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ (any1::reverse ((reverse (reverse ((reverse (any_list3) @ (Nil)))) @ (Nil)))))) = ((reverse (any_list3) @ (any1::(Nil))) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 11)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ (any1::reverse ((reverse (reverse ((reverse (any_list3) @ (Nil)))) @ (Nil)))))) = (reverse ((reverse ((any1::(Nil))) @ any_list3)) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- lemma4 in goal at 0(rank:19)
rewrite <- lemma4 in goal at 1(rank:19)
=================================================
Progress: 550


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), reverse ((reverse (any_list1) @ (any1::reverse ((reverse (reverse ((reverse (any_list3) @ (Nil)))) @ (Nil)))))) = ((reverse (any_list3) @ (any1::(Nil))) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> induction any_list1(rank : 12)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ (any1::reverse ((reverse (reverse ((reverse (any_list3) @ (Nil)))) @ (Nil)))))) = ((reverse (any_list3) @ (any1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4)
=================================================
Progress: 551


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ (any1::reverse ((reverse (reverse ((reverse (any_list3) @ (Nil)))) @ (Nil)))))) = ((reverse (any_list3) @ (any1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse ((reverse (any_list3) @ (Nil)))) @ (Nil)))) @ (any1::(Nil))) = ((reverse (any_list3) @ (any1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
rewrite <- IH1 in goal at 2(rank:12)
rewrite <- lemma4 in goal at 2(rank:12)
rewrite <- lemma4 in goal at 1(rank:20)
rewrite <- IH1 in goal at 0(rank:20)
rewrite <- IH1 in goal at 1(rank:20)
rewrite <- lemma4 in goal at 0(rank:20)
=================================================
Progress: 552


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse ((reverse (any_list3) @ (Nil)))) @ (Nil)))) @ (any1::(Nil))) = ((reverse (any_list3) @ (any1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 12)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse ((reverse (any_list3) @ (Nil)))) @ (Nil)))) @ (any1::(Nil))) = (reverse ((reverse ((any1::(Nil))) @ any_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- lemma4 in goal at 2(rank:12)
rewrite <- lemma4 in goal at 0(rank:20)
rewrite <- lemma4 in goal at 1(rank:20)
=================================================
Progress: 553


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse ((reverse (any_list3) @ (Nil)))) @ (Nil)))) @ (any1::(Nil))) = ((reverse (any_list3) @ (any1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 2(rank : 12)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse ((reverse (any_list3) @ (Nil)))) @ (Nil)))) @ (any1::(Nil))) = ((reverse (any_list3) @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- IH1 in goal at 0(rank:12)
rewrite lemma3 in goal at 0(rank:20)
rewrite <- IH1 in goal at 1(rank:20)
=================================================
Progress: 554


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse ((reverse (any_list3) @ (Nil)))) @ (Nil)))) @ (any1::(Nil))) = (reverse ((reverse ((any1::(Nil))) @ any_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 2(rank : 12)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse ((reverse (any_list3) @ (Nil)))) @ (Nil)))) @ (any1::(Nil))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))) @ any_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite lemma3 in goal at 0(rank:4)
=================================================
Progress: 555


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse ((reverse (any_list3) @ (Nil)))) @ (Nil)))) @ (any1::(Nil))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))) @ any_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse ((reverse (any_list3) @ (Nil)))) @ (Nil)))) @ (any1::(Nil))) = (reverse ((reverse ((any1::reverse ((reverse ((Nil)) @ (Nil))))) @ any_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- IH1 in goal at 0(rank:20)
rewrite <- lemma4 in goal at 0(rank:20)
rewrite <- lemma4 in goal at 2(rank:20)
=================================================
Progress: 556


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse ((reverse (any_list3) @ (Nil)))) @ (Nil)))) @ (any1::(Nil))) = ((reverse (any_list3) @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse (reverse ((reverse ((Nil)) @ any_list3)))) @ (Nil)))) @ (any1::(Nil))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))) @ any_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4)
=================================================
Progress: 557


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse (reverse ((reverse ((Nil)) @ any_list3)))) @ (Nil)))) @ (any1::(Nil))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))) @ any_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse (reverse (any_list3))) @ (Nil)))) @ (any1::(Nil))) = ((reverse (any_list3) @ (any1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite <- IH1 in goal at 0(rank:12)
rewrite <- lemma4 in goal at 0(rank:20)
rewrite <- lemma4 in goal at 2(rank:12)
rewrite <- lemma4 in goal at 1(rank:20)
=================================================
Progress: 558


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse (reverse (any_list3))) @ (Nil)))) @ (any1::(Nil))) = ((reverse (any_list3) @ (any1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse (reverse (any_list3))) @ (Nil)))) @ (any1::(Nil))) = (reverse ((reverse ((any1::(Nil))) @ any_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- lemma4 in goal at 2(rank:12)
rewrite <- lemma4 in goal at 0(rank:20)
rewrite <- lemma4 in goal at 1(rank:20)
=================================================
Progress: 559


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse (reverse (any_list3))) @ (Nil)))) @ (any1::(Nil))) = ((reverse (any_list3) @ (any1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 2(rank : 12)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse (reverse (any_list3))) @ (Nil)))) @ (any1::(Nil))) = ((reverse (any_list3) @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite lemma3 in goal at 0(rank:4)
=================================================
Progress: 560


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse (reverse (any_list3))) @ (Nil)))) @ (any1::(Nil))) = ((reverse (any_list3) @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse (reverse (any_list3))) @ (Nil)))) @ (any1::(Nil))) = ((reverse (any_list3) @ (any1::reverse ((reverse ((Nil)) @ (Nil))))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- IH1 in goal at 0(rank:12)
rewrite <- lemma4 in goal at 0(rank:20)
rewrite <- lemma4 in goal at 2(rank:20)
=================================================
Progress: 561


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse (reverse (any_list3))) @ (Nil)))) @ (any1::(Nil))) = (reverse ((reverse ((any1::(Nil))) @ any_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 2(rank : 12)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse (reverse (any_list3))) @ (Nil)))) @ (any1::(Nil))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))) @ any_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- lemma4 in goal at 2
rewrite <- IH1 in goal at 0
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- lemma4 in goal at 2
advanced_generalize done
Lemma : forall (any_list3:any list) (arg30:any list), (reverse (reverse ((reverse (reverse (reverse (any_list3))) @ (Nil)))) @ arg30) = (reverse ((reverse (reverse (((reverse ((Nil)) @ arg30) @ (Nil)))) @ any_list3)) @ (Nil))
Model : any_list3: (Nil), arg30: (Nil)
Model : any_list3: (Nil), arg30: (Nil)
Model : any_list3: (3::(6::(Nil))), arg30: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.001132 seconds
Result : true
New Env

;;
Lemma List
forall (any_list3:any list) (arg30:any list), (reverse (reverse ((reverse (reverse (reverse (any_list3))) @ (Nil)))) @ arg30) = (reverse ((reverse (reverse (((reverse ((Nil)) @ arg30) @ (Nil)))) @ any_list3)) @ (Nil))
End of Lemma List


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse (reverse (any_list3))) @ (Nil)))) @ (any1::(Nil))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))) @ any_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 562


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse (reverse (any_list3))) @ (Nil)))) @ (any1::(Nil))) = (reverse ((reverse (reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))) @ any_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (any_list3:any list) (arg30:any list), (reverse (reverse ((reverse (reverse (reverse (any_list3))) @ (Nil)))) @ arg30) = (reverse ((reverse (reverse (((reverse ((Nil)) @ arg30) @ (Nil)))) @ any_list3)) @ (Nil))(rank : 0)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse (reverse (any_list1))) @ (Nil)))) @ any_list2) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list2) @ (Nil)))) @ any_list1)) @ (Nil))

---------------------------------------
forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse (reverse (any_list1))) @ (Nil)))) @ any_list2) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list2) @ (Nil)))) @ any_list1)) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:5)
=================================================
Progress: 563


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse (reverse (any_list1))) @ (Nil)))) @ any_list2) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list2) @ (Nil)))) @ any_list1)) @ (Nil))

---------------------------------------
forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse (reverse (any_list1))) @ (Nil)))) @ any_list2) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list2) @ (Nil)))) @ any_list1)) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse (reverse (any_list1))) @ (Nil)))) @ any_list2) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list2) @ (Nil)))) @ any_list1)) @ (Nil))

---------------------------------------
forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse (reverse (any_list1))) @ (Nil)))) @ any_list2) = (reverse ((reverse (reverse ((any_list2 @ (Nil)))) @ any_list1)) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction any_list1(rank:14)
induction any_list2(rank:14)
=================================================
Progress: 564


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse (reverse (any_list3))) @ (Nil)))) @ (any1::(Nil))) = ((reverse (any_list3) @ (any1::reverse ((reverse ((Nil)) @ (Nil))))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse ((reverse (any_list1) @ any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), reverse ((reverse (any_list1) @ any_list3)) = (reverse (any_list3) @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse (reverse (any_list3))) @ (Nil)))) @ (any1::(Nil))) = (reverse ((reverse ((any1::reverse ((reverse ((Nil)) @ (Nil))))) @ any_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- lemma4 in goal at 0(rank:20)
rewrite <- lemma4 in goal at 2(rank:20)
=================================================
Progress: 565


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse (reverse (any_list1))) @ (Nil)))) @ any_list2) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list2) @ (Nil)))) @ any_list1)) @ (Nil))

---------------------------------------
forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse (reverse (any_list1))) @ (Nil)))) @ any_list2) = (reverse ((reverse (reverse ((any_list2 @ (Nil)))) @ any_list1)) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> induction any_list1(rank : 14)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse (reverse (any_list1))) @ (Nil)))) @ any_list2) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list2) @ (Nil)))) @ any_list1)) @ (Nil))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), (reverse (reverse ((reverse (reverse (reverse ((Nil)))) @ (Nil)))) @ any_list2) = (reverse ((reverse (reverse ((any_list2 @ (Nil)))) @ (Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6)
=================================================
Progress: 566


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse (reverse (any_list1))) @ (Nil)))) @ any_list2) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list2) @ (Nil)))) @ any_list1)) @ (Nil))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), (reverse (reverse ((reverse (reverse (reverse ((Nil)))) @ (Nil)))) @ any_list2) = (reverse ((reverse (reverse ((any_list2 @ (Nil)))) @ (Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse (reverse (any_list1))) @ (Nil)))) @ any_list2) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list2) @ (Nil)))) @ any_list1)) @ (Nil))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), any_list2 = (reverse ((reverse (reverse ((any_list2 @ (Nil)))) @ (Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:7)
=================================================
Progress: 567


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse (reverse (any_list1))) @ (Nil)))) @ any_list2) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list2) @ (Nil)))) @ any_list1)) @ (Nil))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), any_list2 = (reverse ((reverse (reverse ((any_list2 @ (Nil)))) @ (Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> induction any_list2(rank : 7)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse (reverse (any_list1))) @ (Nil)))) @ any_list2) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list2) @ (Nil)))) @ any_list1)) @ (Nil))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
(Nil) = (reverse ((reverse (reverse (((Nil) @ (Nil)))) @ (Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6)
=================================================
Progress: 568


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse (reverse (any_list1))) @ (Nil)))) @ any_list2) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list2) @ (Nil)))) @ any_list1)) @ (Nil))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
(Nil) = (reverse ((reverse (reverse (((Nil) @ (Nil)))) @ (Nil))) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse (reverse (any_list1))) @ (Nil)))) @ any_list2) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list2) @ (Nil)))) @ any_list1)) @ (Nil))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : any_list3 = (reverse ((reverse (reverse ((any_list3 @ (Nil)))) @ (Nil))) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
(any1::any_list3) = (reverse ((reverse (reverse (((any1::any_list3) @ (Nil)))) @ (Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:6)
=================================================
Progress: 569


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse (reverse (any_list1))) @ (Nil)))) @ any_list2) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list2) @ (Nil)))) @ any_list1)) @ (Nil))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : any_list3 = (reverse ((reverse (reverse ((any_list3 @ (Nil)))) @ (Nil))) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
(any1::any_list3) = (reverse ((reverse (reverse (((any1::any_list3) @ (Nil)))) @ (Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse (reverse (any_list1))) @ (Nil)))) @ any_list2) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list2) @ (Nil)))) @ any_list1)) @ (Nil))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : any_list3 = (reverse ((reverse (reverse ((any_list3 @ (Nil)))) @ (Nil))) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
(any1::any_list3) = (reverse ((reverse ((reverse ((any_list3 @ (Nil))) @ (any1::(Nil)))) @ (Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- lemma4 in goal at 0(rank:14)
rewrite <- lemma4 in goal at 1(rank:14)
rewrite <- lemma4 in goal at 2(rank:22)
=================================================
Progress: 570


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse (reverse (any_list1))) @ (Nil)))) @ any_list2) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list2) @ (Nil)))) @ any_list1)) @ (Nil))

---------------------------------------
forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse (reverse (any_list1))) @ (Nil)))) @ any_list2) = (reverse ((reverse (reverse ((any_list2 @ (Nil)))) @ any_list1)) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> induction any_list2(rank : 14)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse (reverse (any_list1))) @ (Nil)))) @ any_list2) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list2) @ (Nil)))) @ any_list1)) @ (Nil))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any_list1:any list), (reverse (reverse ((reverse (reverse (reverse (any_list1))) @ (Nil)))) @ (Nil)) = (reverse ((reverse (reverse (((Nil) @ (Nil)))) @ any_list1)) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6)
=================================================
Progress: 571


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse (reverse (any_list1))) @ (Nil)))) @ any_list2) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list2) @ (Nil)))) @ any_list1)) @ (Nil))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any_list1:any list), (reverse (reverse ((reverse (reverse (reverse (any_list1))) @ (Nil)))) @ (Nil)) = (reverse ((reverse (reverse (((Nil) @ (Nil)))) @ any_list1)) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse (reverse (any_list1))) @ (Nil)))) @ any_list2) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list2) @ (Nil)))) @ any_list1)) @ (Nil))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any_list1:any list), (reverse (reverse ((reverse (reverse (reverse (any_list1))) @ (Nil)))) @ (Nil)) = (reverse (any_list1) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:7)
=================================================
Progress: 572


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse (reverse (any_list1))) @ (Nil)))) @ any_list2) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list2) @ (Nil)))) @ any_list1)) @ (Nil))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any_list1:any list), (reverse (reverse ((reverse (reverse (reverse (any_list1))) @ (Nil)))) @ (Nil)) = (reverse (any_list1) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> induction any_list1(rank : 7)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse (reverse (any_list1))) @ (Nil)))) @ any_list2) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list2) @ (Nil)))) @ any_list1)) @ (Nil))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse (reverse ((Nil)))) @ (Nil)))) @ (Nil)) = (reverse ((Nil)) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6)
=================================================
Progress: 573


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse (reverse (any_list1))) @ (Nil)))) @ any_list2) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list2) @ (Nil)))) @ any_list1)) @ (Nil))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
---------------------------------------
(reverse (reverse ((reverse (reverse (reverse ((Nil)))) @ (Nil)))) @ (Nil)) = (reverse ((Nil)) @ (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse (reverse (any_list1))) @ (Nil)))) @ any_list2) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list2) @ (Nil)))) @ any_list1)) @ (Nil))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : (reverse (reverse ((reverse (reverse (reverse (any_list3))) @ (Nil)))) @ (Nil)) = (reverse (any_list3) @ (Nil))
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
(reverse (reverse ((reverse (reverse (reverse ((any1::any_list3)))) @ (Nil)))) @ (Nil)) = (reverse ((any1::any_list3)) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:6)
=================================================
Progress: 574


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse (reverse (any_list1))) @ (Nil)))) @ any_list2) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list2) @ (Nil)))) @ any_list1)) @ (Nil))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : (reverse (reverse ((reverse (reverse (reverse (any_list3))) @ (Nil)))) @ (Nil)) = (reverse (any_list3) @ (Nil))
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
(reverse (reverse ((reverse (reverse (reverse ((any1::any_list3)))) @ (Nil)))) @ (Nil)) = (reverse ((any1::any_list3)) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse (reverse (any_list1))) @ (Nil)))) @ any_list2) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list2) @ (Nil)))) @ any_list1)) @ (Nil))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : (reverse (reverse ((reverse (reverse (reverse (any_list3))) @ (Nil)))) @ (Nil)) = (reverse (any_list3) @ (Nil))
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
(reverse (reverse ((reverse (reverse ((reverse (any_list3) @ (any1::(Nil))))) @ (Nil)))) @ (Nil)) = ((reverse (any_list3) @ (any1::(Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- lemma4 in goal at 2(rank:14)
rewrite <- lemma4 in goal at 0(rank:22)
rewrite <- lemma4 in goal at 1(rank:22)
=================================================
Progress: 575


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse (reverse (any_list1))) @ (Nil)))) @ any_list2) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list2) @ (Nil)))) @ any_list1)) @ (Nil))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : any_list3 = (reverse ((reverse (reverse ((any_list3 @ (Nil)))) @ (Nil))) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
(any1::any_list3) = (reverse ((reverse ((reverse ((any_list3 @ (Nil))) @ (any1::(Nil)))) @ (Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 0(rank : 14)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse (reverse (any_list1))) @ (Nil)))) @ any_list2) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list2) @ (Nil)))) @ any_list1)) @ (Nil))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : any_list3 = (reverse ((reverse (reverse ((any_list3 @ (Nil)))) @ (Nil))) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
reverse (((reverse (any_list3) @ (any1::(Nil))) @ (Nil))) = (reverse ((reverse ((reverse ((any_list3 @ (Nil))) @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil))))) @ (Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite lemma3 in goal at 2(rank:14)
rewrite lemma3 in goal at 0(rank:22)
rewrite lemma3 in goal at 1(rank:22)
=================================================
Progress: 576


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse (reverse (any_list1))) @ (Nil)))) @ any_list2) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list2) @ (Nil)))) @ any_list1)) @ (Nil))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : any_list3 = (reverse ((reverse (reverse ((any_list3 @ (Nil)))) @ (Nil))) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
(any1::any_list3) = (reverse ((reverse ((reverse ((any_list3 @ (Nil))) @ (any1::(Nil)))) @ (Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 1(rank : 14)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse (reverse (any_list1))) @ (Nil)))) @ any_list2) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list2) @ (Nil)))) @ any_list1)) @ (Nil))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : any_list3 = (reverse ((reverse (reverse ((any_list3 @ (Nil)))) @ (Nil))) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
reverse (((reverse (any_list3) @ (any1::(Nil))) @ (Nil))) = (reverse ((reverse ((reverse ((any_list3 @ (Nil))) @ (any1::(Nil)))) @ (Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- lemma4 in goal at 1(rank:14)
rewrite lemma3 in goal at 0(rank:22)
rewrite <- lemma4 in goal at 0(rank:22)
=================================================
Progress: 577


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse (reverse (any_list1))) @ (Nil)))) @ any_list2) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list2) @ (Nil)))) @ any_list1)) @ (Nil))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : (reverse (reverse ((reverse (reverse (reverse (any_list3))) @ (Nil)))) @ (Nil)) = (reverse (any_list3) @ (Nil))
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
(reverse (reverse ((reverse (reverse ((reverse (any_list3) @ (any1::(Nil))))) @ (Nil)))) @ (Nil)) = ((reverse (any_list3) @ (any1::(Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 2(rank : 14)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse (reverse (any_list1))) @ (Nil)))) @ any_list2) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list2) @ (Nil)))) @ any_list1)) @ (Nil))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : (reverse (reverse ((reverse (reverse (reverse (any_list3))) @ (Nil)))) @ (Nil)) = (reverse (any_list3) @ (Nil))
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
(reverse (reverse ((reverse (reverse ((reverse (any_list3) @ (any1::(Nil))))) @ (Nil)))) @ (Nil)) = ((reverse (any_list3) @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite lemma3 in goal at 0(rank:6)
=================================================
Progress: 578


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse (reverse (any_list1))) @ (Nil)))) @ any_list2) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list2) @ (Nil)))) @ any_list1)) @ (Nil))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : (reverse (reverse ((reverse (reverse (reverse (any_list3))) @ (Nil)))) @ (Nil)) = (reverse (any_list3) @ (Nil))
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
(reverse (reverse ((reverse (reverse ((reverse (any_list3) @ (any1::(Nil))))) @ (Nil)))) @ (Nil)) = ((reverse (any_list3) @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 6)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse (reverse (any_list1))) @ (Nil)))) @ any_list2) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list2) @ (Nil)))) @ any_list1)) @ (Nil))
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : (reverse (reverse ((reverse (reverse (reverse (any_list3))) @ (Nil)))) @ (Nil)) = (reverse (any_list3) @ (Nil))
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
(reverse (reverse ((reverse (reverse ((reverse (any_list3) @ (any1::(Nil))))) @ (Nil)))) @ (Nil)) = ((reverse (any_list3) @ (any1::reverse ((reverse ((Nil)) @ (Nil))))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- lemma4 in goal at 2(rank:14)
rewrite <- lemma4 in goal at 0(rank:22)
=================================================
Progress: 579


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse (reverse (any_list1))) @ (Nil)))) @ any_list2) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list2) @ (Nil)))) @ any_list1)) @ (Nil))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : any_list3 = (reverse ((reverse (reverse ((any_list3 @ (Nil)))) @ (Nil))) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
reverse (((reverse (any_list3) @ (any1::(Nil))) @ (Nil))) = (reverse ((reverse ((reverse ((any_list3 @ (Nil))) @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil))))) @ (Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 2(rank : 14)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse (reverse (any_list1))) @ (Nil)))) @ any_list2) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list2) @ (Nil)))) @ any_list1)) @ (Nil))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : any_list3 = (reverse ((reverse (reverse ((any_list3 @ (Nil)))) @ (Nil))) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
reverse (((reverse (any_list3) @ (any1::(Nil))) @ (Nil))) = (reverse ((reverse ((reverse ((any_list3 @ (Nil))) @ (any1::reverse ((reverse ((Nil)) @ (Nil)))))) @ (Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite lemma4 in goal at 0(rank:22)
rewrite <- lemma4 in goal at 0(rank:22)
rewrite <- lemma4 in goal at 2(rank:22)
=================================================
Progress: 580


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse (reverse (any_list1))) @ (Nil)))) @ any_list2) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list2) @ (Nil)))) @ any_list1)) @ (Nil))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : any_list3 = (reverse ((reverse (reverse ((any_list3 @ (Nil)))) @ (Nil))) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
reverse (((reverse (any_list3) @ (any1::(Nil))) @ (Nil))) = (reverse ((reverse ((reverse ((any_list3 @ (Nil))) @ (any1::(Nil)))) @ (Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 1(rank : 14)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse (reverse (any_list1))) @ (Nil)))) @ any_list2) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list2) @ (Nil)))) @ any_list1)) @ (Nil))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : any_list3 = (reverse ((reverse (reverse ((any_list3 @ (Nil)))) @ (Nil))) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
reverse (((reverse (any_list3) @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))) @ (Nil))) = (reverse ((reverse ((reverse ((any_list3 @ (Nil))) @ (any1::(Nil)))) @ (Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite lemma3 in goal at 0(rank:6)
=================================================
Progress: 581


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse (reverse (any_list1))) @ (Nil)))) @ any_list2) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list2) @ (Nil)))) @ any_list1)) @ (Nil))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : any_list3 = (reverse ((reverse (reverse ((any_list3 @ (Nil)))) @ (Nil))) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
reverse (((reverse (any_list3) @ reverse (((reverse ((Nil)) @ (any1::(Nil))) @ (Nil)))) @ (Nil))) = (reverse ((reverse ((reverse ((any_list3 @ (Nil))) @ (any1::(Nil)))) @ (Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 6)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse (reverse (any_list1))) @ (Nil)))) @ any_list2) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list2) @ (Nil)))) @ any_list1)) @ (Nil))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : any_list3 = (reverse ((reverse (reverse ((any_list3 @ (Nil)))) @ (Nil))) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
reverse (((reverse (any_list3) @ (any1::reverse ((reverse ((Nil)) @ (Nil))))) @ (Nil))) = (reverse ((reverse ((reverse ((any_list3 @ (Nil))) @ (any1::(Nil)))) @ (Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- lemma4 in goal at 1(rank:6)
=================================================
Progress: 582


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse (reverse (any_list1))) @ (Nil)))) @ any_list2) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list2) @ (Nil)))) @ any_list1)) @ (Nil))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : any_list3 = (reverse ((reverse (reverse ((any_list3 @ (Nil)))) @ (Nil))) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
reverse (((reverse (any_list3) @ (any1::reverse ((reverse ((Nil)) @ (Nil))))) @ (Nil))) = (reverse ((reverse ((reverse ((any_list3 @ (Nil))) @ (any1::(Nil)))) @ (Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 1(rank : 6)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse (reverse (any_list1))) @ (Nil)))) @ any_list2) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list2) @ (Nil)))) @ any_list1)) @ (Nil))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : any_list3 = (reverse ((reverse (reverse ((any_list3 @ (Nil)))) @ (Nil))) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
reverse (((reverse (any_list3) @ reverse (((reverse (reverse ((reverse ((Nil)) @ (Nil)))) @ (any1::(Nil))) @ (Nil)))) @ (Nil))) = (reverse ((reverse ((reverse ((any_list3 @ (Nil))) @ (any1::(Nil)))) @ (Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite lemma3 in goal at 0(rank:6)
=================================================
Progress: 583


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse (reverse (any_list1))) @ (Nil)))) @ any_list2) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list2) @ (Nil)))) @ any_list1)) @ (Nil))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : any_list3 = (reverse ((reverse (reverse ((any_list3 @ (Nil)))) @ (Nil))) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
reverse (((reverse (any_list3) @ reverse (((reverse (reverse ((reverse ((Nil)) @ (Nil)))) @ (any1::(Nil))) @ (Nil)))) @ (Nil))) = (reverse ((reverse ((reverse ((any_list3 @ (Nil))) @ (any1::(Nil)))) @ (Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 6)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse (reverse (any_list1))) @ (Nil)))) @ any_list2) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list2) @ (Nil)))) @ any_list1)) @ (Nil))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : any_list3 = (reverse ((reverse (reverse ((any_list3 @ (Nil)))) @ (Nil))) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
reverse (((reverse (any_list3) @ (any1::reverse ((reverse (reverse ((reverse ((Nil)) @ (Nil)))) @ (Nil))))) @ (Nil))) = (reverse ((reverse ((reverse ((any_list3 @ (Nil))) @ (any1::(Nil)))) @ (Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- lemma4 in goal at 1(rank:6)
=================================================
Progress: 584


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse (reverse (any_list1))) @ (Nil)))) @ any_list2) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list2) @ (Nil)))) @ any_list1)) @ (Nil))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : any_list3 = (reverse ((reverse (reverse ((any_list3 @ (Nil)))) @ (Nil))) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
reverse (((reverse (any_list3) @ (any1::reverse ((reverse (reverse ((reverse ((Nil)) @ (Nil)))) @ (Nil))))) @ (Nil))) = (reverse ((reverse ((reverse ((any_list3 @ (Nil))) @ (any1::(Nil)))) @ (Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 1(rank : 6)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse (reverse (any_list1))) @ (Nil)))) @ any_list2) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list2) @ (Nil)))) @ any_list1)) @ (Nil))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : any_list3 = (reverse ((reverse (reverse ((any_list3 @ (Nil)))) @ (Nil))) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
reverse (((reverse (any_list3) @ reverse (((reverse (reverse ((reverse (reverse ((reverse ((Nil)) @ (Nil)))) @ (Nil)))) @ (any1::(Nil))) @ (Nil)))) @ (Nil))) = (reverse ((reverse ((reverse ((any_list3 @ (Nil))) @ (any1::(Nil)))) @ (Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite lemma3 in goal at 0(rank:6)
=================================================
Progress: 585


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse (reverse (any_list1))) @ (Nil)))) @ any_list2) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list2) @ (Nil)))) @ any_list1)) @ (Nil))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : any_list3 = (reverse ((reverse (reverse ((any_list3 @ (Nil)))) @ (Nil))) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
reverse (((reverse (any_list3) @ reverse (((reverse (reverse ((reverse (reverse ((reverse ((Nil)) @ (Nil)))) @ (Nil)))) @ (any1::(Nil))) @ (Nil)))) @ (Nil))) = (reverse ((reverse ((reverse ((any_list3 @ (Nil))) @ (any1::(Nil)))) @ (Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 6)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse (reverse (any_list1))) @ (Nil)))) @ any_list2) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list2) @ (Nil)))) @ any_list1)) @ (Nil))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : any_list3 = (reverse ((reverse (reverse ((any_list3 @ (Nil)))) @ (Nil))) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
reverse (((reverse (any_list3) @ (any1::reverse ((reverse (reverse ((reverse (reverse ((reverse ((Nil)) @ (Nil)))) @ (Nil)))) @ (Nil))))) @ (Nil))) = (reverse ((reverse ((reverse ((any_list3 @ (Nil))) @ (any1::(Nil)))) @ (Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- lemma4 in goal at 1(rank:6)
=================================================
Progress: 586


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse (reverse (any_list1))) @ (Nil)))) @ any_list2) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list2) @ (Nil)))) @ any_list1)) @ (Nil))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : any_list3 = (reverse ((reverse (reverse ((any_list3 @ (Nil)))) @ (Nil))) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
reverse (((reverse (any_list3) @ (any1::reverse ((reverse (reverse ((reverse (reverse ((reverse ((Nil)) @ (Nil)))) @ (Nil)))) @ (Nil))))) @ (Nil))) = (reverse ((reverse ((reverse ((any_list3 @ (Nil))) @ (any1::(Nil)))) @ (Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 1(rank : 6)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse (reverse (any_list1))) @ (Nil)))) @ any_list2) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list2) @ (Nil)))) @ any_list1)) @ (Nil))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : any_list3 = (reverse ((reverse (reverse ((any_list3 @ (Nil)))) @ (Nil))) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
reverse (((reverse (any_list3) @ reverse (((reverse (reverse ((reverse (reverse ((reverse (reverse ((reverse ((Nil)) @ (Nil)))) @ (Nil)))) @ (Nil)))) @ (any1::(Nil))) @ (Nil)))) @ (Nil))) = (reverse ((reverse ((reverse ((any_list3 @ (Nil))) @ (any1::(Nil)))) @ (Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite lemma3 in goal at 0(rank:6)
=================================================
Progress: 587


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse (reverse (any_list1))) @ (Nil)))) @ any_list2) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list2) @ (Nil)))) @ any_list1)) @ (Nil))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : any_list3 = (reverse ((reverse (reverse ((any_list3 @ (Nil)))) @ (Nil))) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
reverse (((reverse (any_list3) @ reverse (((reverse (reverse ((reverse (reverse ((reverse (reverse ((reverse ((Nil)) @ (Nil)))) @ (Nil)))) @ (Nil)))) @ (any1::(Nil))) @ (Nil)))) @ (Nil))) = (reverse ((reverse ((reverse ((any_list3 @ (Nil))) @ (any1::(Nil)))) @ (Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 6)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse (reverse (any_list1))) @ (Nil)))) @ any_list2) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list2) @ (Nil)))) @ any_list1)) @ (Nil))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : any_list3 = (reverse ((reverse (reverse ((any_list3 @ (Nil)))) @ (Nil))) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
reverse (((reverse (any_list3) @ (any1::reverse ((reverse (reverse ((reverse (reverse ((reverse (reverse ((reverse ((Nil)) @ (Nil)))) @ (Nil)))) @ (Nil)))) @ (Nil))))) @ (Nil))) = (reverse ((reverse ((reverse ((any_list3 @ (Nil))) @ (any1::(Nil)))) @ (Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- lemma4 in goal at 1(rank:6)
=================================================
Progress: 588


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse (reverse (any_list1))) @ (Nil)))) @ any_list2) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list2) @ (Nil)))) @ any_list1)) @ (Nil))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : any_list3 = (reverse ((reverse (reverse ((any_list3 @ (Nil)))) @ (Nil))) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
reverse (((reverse (any_list3) @ (any1::reverse ((reverse (reverse ((reverse (reverse ((reverse (reverse ((reverse ((Nil)) @ (Nil)))) @ (Nil)))) @ (Nil)))) @ (Nil))))) @ (Nil))) = (reverse ((reverse ((reverse ((any_list3 @ (Nil))) @ (any1::(Nil)))) @ (Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 1(rank : 6)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse (reverse (any_list1))) @ (Nil)))) @ any_list2) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list2) @ (Nil)))) @ any_list1)) @ (Nil))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : any_list3 = (reverse ((reverse (reverse ((any_list3 @ (Nil)))) @ (Nil))) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
reverse (((reverse (any_list3) @ reverse (((reverse (reverse ((reverse (reverse ((reverse (reverse ((reverse (reverse ((reverse ((Nil)) @ (Nil)))) @ (Nil)))) @ (Nil)))) @ (Nil)))) @ (any1::(Nil))) @ (Nil)))) @ (Nil))) = (reverse ((reverse ((reverse ((any_list3 @ (Nil))) @ (any1::(Nil)))) @ (Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite lemma3 in goal at 0(rank:6)
=================================================
Progress: 589


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse (reverse (any_list1))) @ (Nil)))) @ any_list2) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list2) @ (Nil)))) @ any_list1)) @ (Nil))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : any_list3 = (reverse ((reverse (reverse ((any_list3 @ (Nil)))) @ (Nil))) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
reverse (((reverse (any_list3) @ reverse (((reverse (reverse ((reverse (reverse ((reverse (reverse ((reverse (reverse ((reverse ((Nil)) @ (Nil)))) @ (Nil)))) @ (Nil)))) @ (Nil)))) @ (any1::(Nil))) @ (Nil)))) @ (Nil))) = (reverse ((reverse ((reverse ((any_list3 @ (Nil))) @ (any1::(Nil)))) @ (Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 6)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse (reverse (any_list1))) @ (Nil)))) @ any_list2) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list2) @ (Nil)))) @ any_list1)) @ (Nil))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : any_list3 = (reverse ((reverse (reverse ((any_list3 @ (Nil)))) @ (Nil))) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
reverse (((reverse (any_list3) @ (any1::reverse ((reverse (reverse ((reverse (reverse ((reverse (reverse ((reverse (reverse ((reverse ((Nil)) @ (Nil)))) @ (Nil)))) @ (Nil)))) @ (Nil)))) @ (Nil))))) @ (Nil))) = (reverse ((reverse ((reverse ((any_list3 @ (Nil))) @ (any1::(Nil)))) @ (Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- lemma4 in goal at 1(rank:6)
=================================================
Progress: 590


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse (reverse (any_list1))) @ (Nil)))) @ any_list2) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list2) @ (Nil)))) @ any_list1)) @ (Nil))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : any_list3 = (reverse ((reverse (reverse ((any_list3 @ (Nil)))) @ (Nil))) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
reverse (((reverse (any_list3) @ (any1::reverse ((reverse (reverse ((reverse (reverse ((reverse (reverse ((reverse (reverse ((reverse ((Nil)) @ (Nil)))) @ (Nil)))) @ (Nil)))) @ (Nil)))) @ (Nil))))) @ (Nil))) = (reverse ((reverse ((reverse ((any_list3 @ (Nil))) @ (any1::(Nil)))) @ (Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma4 in goal at 1(rank : 6)


1st goal of : forall (any_list1:any list) (any_list2:any list), (reverse (reverse ((reverse (reverse (reverse (any_list1))) @ (Nil)))) @ any_list2) = (reverse ((reverse (reverse (((reverse ((Nil)) @ any_list2) @ (Nil)))) @ any_list1)) @ (Nil))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : any_list3 = (reverse ((reverse (reverse ((any_list3 @ (Nil)))) @ (Nil))) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
reverse (((reverse (any_list3) @ reverse (((reverse (reverse ((reverse (reverse ((reverse (reverse ((reverse (reverse ((reverse (reverse ((reverse ((Nil)) @ (Nil)))) @ (Nil)))) @ (Nil)))) @ (Nil)))) @ (Nil)))) @ (any1::(Nil))) @ (Nil)))) @ (Nil))) = (reverse ((reverse ((reverse ((any_list3 @ (Nil))) @ (any1::(Nil)))) @ (Nil))) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Dilemma timed out for benchmark clam with problem 43.File "_none_", lines 88-90, characters 2-22:
Warning 8 [partial-match]: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
[]

File "_none_", lines 88-90, characters 2-22:
Warning 8 [partial-match]: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
[]
