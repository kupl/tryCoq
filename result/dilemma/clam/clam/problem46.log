Enter the definition file path (1/2) : 
> Enter the definition file path (2/2) : 
> Choose the proof type :
1) Interactive Mode 	 2) Auto Mode
Enter the goal : =================================================
Progress: 1


No conjecture
>>> assert forall (x:any list) (y:any list), qreva (qreva (x) (reverse (y))) ((Nil)) = (y @ x)(rank : 0)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)

---------------------------------------
forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
induction any_list1(rank:12)
induction any_list2(rank:12)
=================================================
Progress: 2


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)

---------------------------------------
forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> induction any_list1(rank : 12)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), qreva (qreva ((Nil)) (reverse (any_list2))) ((Nil)) = (any_list2 @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4)
=================================================
Progress: 3


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), qreva (qreva ((Nil)) (reverse (any_list2))) ((Nil)) = (any_list2 @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), qreva (reverse (any_list2)) ((Nil)) = (any_list2 @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:5)
=================================================
Progress: 4


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), qreva (reverse (any_list2)) ((Nil)) = (any_list2 @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> induction any_list2(rank : 5)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
qreva (reverse ((Nil))) ((Nil)) = ((Nil) @ (Nil))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:4)
=================================================
Progress: 5


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
qreva (reverse ((Nil))) ((Nil)) = ((Nil) @ (Nil))

2 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : qreva (reverse (any_list3)) ((Nil)) = (any_list3 @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
qreva (reverse ((any1::any_list3))) ((Nil)) = ((any1::any_list3) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:4)
=================================================
Progress: 6


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : qreva (reverse (any_list3)) ((Nil)) = (any_list3 @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
qreva (reverse ((any1::any_list3))) ((Nil)) = ((any1::any_list3) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : qreva (reverse (any_list3)) ((Nil)) = (any_list3 @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
qreva ((reverse (any_list3) @ (any1::(Nil)))) ((Nil)) = (any1::(any_list3 @ (Nil)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:4)
=================================================
Progress: 7


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : qreva (reverse (any_list3)) ((Nil)) = (any_list3 @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
qreva ((reverse (any_list3) @ (any1::(Nil)))) ((Nil)) = (any1::(any_list3 @ (Nil)))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : qreva (reverse (any_list3)) ((Nil)) = (any_list3 @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
qreva ((reverse (any_list3) @ (any1::(Nil)))) ((Nil)) = (any1::qreva (reverse (any_list3)) ((Nil)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
Lemma : forall (any1:any) (arg1:any list), qreva ((arg1 @ (any1::(Nil)))) ((Nil)) = (any1::qreva (arg1) ((Nil)))
Model : any1: 1, arg1: (Nil)
Model : any1: 8, arg1: (0::(7::(Nil)))
Model : any1: 8, arg1: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
qreva (((Nil) @ (1::(Nil)))) ((Nil)) = (1::qreva ((Nil)) ((Nil)))
qreva (((0::(7::(Nil))) @ (8::(Nil)))) ((Nil)) = (8::qreva ((0::(7::(Nil)))) ((Nil)))
qreva (((Nil) @ (8::(Nil)))) ((Nil)) = (8::qreva ((Nil)) ((Nil)))
Simplifying took 0.000639 seconds
Result : true
advanced_generalize done


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : qreva (reverse (any_list3)) ((Nil)) = (any_list3 @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
qreva ((reverse (any_list3) @ (any1::(Nil)))) ((Nil)) = (any1::qreva (reverse (any_list3)) ((Nil)))

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 8


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : qreva (reverse (any_list3)) ((Nil)) = (any_list3 @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
qreva ((reverse (any_list3) @ (any1::(Nil)))) ((Nil)) = (any1::qreva (reverse (any_list3)) ((Nil)))

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (any1:any) (arg1:any list), qreva ((arg1 @ (any1::(Nil)))) ((Nil)) = (any1::qreva (arg1) ((Nil)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list), qreva ((any_list1 @ (any1::(Nil)))) ((Nil)) = (any1::qreva (any_list1) ((Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list), qreva ((any_list1 @ (any1::(Nil)))) ((Nil)) = (any1::qreva (any_list1) ((Nil)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:6)
=================================================
Progress: 9


1st goal of : forall (any1:any) (any_list1:any list), qreva ((any_list1 @ (any1::(Nil)))) ((Nil)) = (any1::qreva (any_list1) ((Nil)))

---------------------------------------
forall (any1:any) (any_list1:any list), qreva ((any_list1 @ (any1::(Nil)))) ((Nil)) = (any1::qreva (any_list1) ((Nil)))

0 goal(s) more...

1 conjecture(s) more...
>>> induction any_list1(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list), qreva ((any_list1 @ (any1::(Nil)))) ((Nil)) = (any1::qreva (any_list1) ((Nil)))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any), qreva (((Nil) @ (any1::(Nil)))) ((Nil)) = (any1::qreva ((Nil)) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5)
=================================================
Progress: 10


1st goal of : forall (any1:any) (any_list1:any list), qreva ((any_list1 @ (any1::(Nil)))) ((Nil)) = (any1::qreva (any_list1) ((Nil)))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any), qreva (((Nil) @ (any1::(Nil)))) ((Nil)) = (any1::qreva ((Nil)) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list), qreva ((any_list1 @ (any1::(Nil)))) ((Nil)) = (any1::qreva (any_list1) ((Nil)))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), qreva ((any_list2 @ (any1::(Nil)))) ((Nil)) = (any1::qreva (any_list2) ((Nil)))
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), qreva (((any2::any_list2) @ (any1::(Nil)))) ((Nil)) = (any1::qreva ((any2::any_list2)) ((Nil)))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5)
=================================================
Progress: 11


1st goal of : forall (any1:any) (any_list1:any list), qreva ((any_list1 @ (any1::(Nil)))) ((Nil)) = (any1::qreva (any_list1) ((Nil)))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), qreva ((any_list2 @ (any1::(Nil)))) ((Nil)) = (any1::qreva (any_list2) ((Nil)))
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), qreva (((any2::any_list2) @ (any1::(Nil)))) ((Nil)) = (any1::qreva ((any2::any_list2)) ((Nil)))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list), qreva ((any_list1 @ (any1::(Nil)))) ((Nil)) = (any1::qreva (any_list1) ((Nil)))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), qreva ((any_list2 @ (any1::(Nil)))) ((Nil)) = (any1::qreva (any_list2) ((Nil)))
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), qreva ((any_list2 @ (any1::(Nil)))) ((any2::(Nil))) = (any1::qreva (any_list2) ((any2::(Nil))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro any1(rank:5)
=================================================
Progress: 12


1st goal of : forall (any1:any) (any_list1:any list), qreva ((any_list1 @ (any1::(Nil)))) ((Nil)) = (any1::qreva (any_list1) ((Nil)))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), qreva ((any_list2 @ (any1::(Nil)))) ((Nil)) = (any1::qreva (any_list2) ((Nil)))
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), qreva ((any_list2 @ (any1::(Nil)))) ((any2::(Nil))) = (any1::qreva (any_list2) ((any2::(Nil))))

0 goal(s) more...

1 conjecture(s) more...
>>> intro any1(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list), qreva ((any_list1 @ (any1::(Nil)))) ((Nil)) = (any1::qreva (any_list1) ((Nil)))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), qreva ((any_list2 @ (any1::(Nil)))) ((Nil)) = (any1::qreva (any_list2) ((Nil)))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
qreva ((any_list2 @ (any1::(Nil)))) ((any2::(Nil))) = (any1::qreva (any_list2) ((any2::(Nil))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
Lemma : forall (any1:any) (any_list2:any list) (arg2:any list), qreva ((any_list2 @ (any1::(Nil)))) (arg2) = (any1::qreva (any_list2) (arg2))
Model : any1: 3, any_list2: (3::(Nil)), arg2: (Nil)
Model : any1: 7, any_list2: (Nil), arg2: (Nil)
Model : any1: 7, any_list2: (Nil), arg2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
qreva (((3::(Nil)) @ (3::(Nil)))) ((Nil)) = (3::qreva ((3::(Nil))) ((Nil)))
qreva (((Nil) @ (7::(Nil)))) ((Nil)) = (7::qreva ((Nil)) ((Nil)))
qreva (((Nil) @ (7::(Nil)))) ((Nil)) = (7::qreva ((Nil)) ((Nil)))
Simplifying took 0.000345 seconds
Result : true
advanced_generalize done


1st goal of : forall (any1:any) (any_list1:any list), qreva ((any_list1 @ (any1::(Nil)))) ((Nil)) = (any1::qreva (any_list1) ((Nil)))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), qreva ((any_list2 @ (any1::(Nil)))) ((Nil)) = (any1::qreva (any_list2) ((Nil)))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
qreva ((any_list2 @ (any1::(Nil)))) ((any2::(Nil))) = (any1::qreva (any_list2) ((any2::(Nil))))

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 13


1st goal of : forall (any1:any) (any_list1:any list), qreva ((any_list1 @ (any1::(Nil)))) ((Nil)) = (any1::qreva (any_list1) ((Nil)))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), qreva ((any_list2 @ (any1::(Nil)))) ((Nil)) = (any1::qreva (any_list2) ((Nil)))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
qreva ((any_list2 @ (any1::(Nil)))) ((any2::(Nil))) = (any1::qreva (any_list2) ((any2::(Nil))))

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (any1:any) (any_list2:any list) (arg2:any list), qreva ((any_list2 @ (any1::(Nil)))) (arg2) = (any1::qreva (any_list2) (arg2))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva ((any_list1 @ (any1::(Nil)))) (any_list2) = (any1::qreva (any_list1) (any_list2))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), qreva ((any_list1 @ (any1::(Nil)))) (any_list2) = (any1::qreva (any_list1) (any_list2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:8)
=================================================
Progress: 14


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva ((any_list1 @ (any1::(Nil)))) (any_list2) = (any1::qreva (any_list1) (any_list2))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), qreva ((any_list1 @ (any1::(Nil)))) (any_list2) = (any1::qreva (any_list1) (any_list2))

0 goal(s) more...

2 conjecture(s) more...
>>> induction any_list1(rank : 8)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva ((any_list1 @ (any1::(Nil)))) (any_list2) = (any1::qreva (any_list1) (any_list2))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any_list2:any list), qreva (((Nil) @ (any1::(Nil)))) (any_list2) = (any1::qreva ((Nil)) (any_list2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7)
=================================================
Progress: 15


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva ((any_list1 @ (any1::(Nil)))) (any_list2) = (any1::qreva (any_list1) (any_list2))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any_list2:any list), qreva (((Nil) @ (any1::(Nil)))) (any_list2) = (any1::qreva ((Nil)) (any_list2))

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva ((any_list1 @ (any1::(Nil)))) (any_list2) = (any1::qreva (any_list1) (any_list2))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), qreva ((any_list3 @ (any1::(Nil)))) (any_list2) = (any1::qreva (any_list3) (any_list2))
Inductive1 : any_list1 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list2:any list), qreva (((any2::any_list3) @ (any1::(Nil)))) (any_list2) = (any1::qreva ((any2::any_list3)) (any_list2))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7)
=================================================
Progress: 16


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva ((any_list1 @ (any1::(Nil)))) (any_list2) = (any1::qreva (any_list1) (any_list2))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), qreva ((any_list3 @ (any1::(Nil)))) (any_list2) = (any1::qreva (any_list3) (any_list2))
Inductive1 : any_list1 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list2:any list), qreva (((any2::any_list3) @ (any1::(Nil)))) (any_list2) = (any1::qreva ((any2::any_list3)) (any_list2))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva ((any_list1 @ (any1::(Nil)))) (any_list2) = (any1::qreva (any_list1) (any_list2))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), qreva ((any_list3 @ (any1::(Nil)))) (any_list2) = (any1::qreva (any_list3) (any_list2))
Inductive1 : any_list1 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list2:any list), qreva ((any_list3 @ (any1::(Nil)))) ((any2::any_list2)) = (any1::qreva (any_list3) ((any2::any_list2)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
intro any1(rank:7)
intro any_list2(rank:7)
rewrite IH1 in goal at 0(rank:15)
rewrite <- IH1 in goal at 0(rank:15)
=================================================
Progress: 17


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva ((any_list1 @ (any1::(Nil)))) (any_list2) = (any1::qreva (any_list1) (any_list2))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), qreva ((any_list3 @ (any1::(Nil)))) (any_list2) = (any1::qreva (any_list3) (any_list2))
Inductive1 : any_list1 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list2:any list), qreva ((any_list3 @ (any1::(Nil)))) ((any2::any_list2)) = (any1::qreva (any_list3) ((any2::any_list2)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any1(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva ((any_list1 @ (any1::(Nil)))) (any_list2) = (any1::qreva (any_list1) (any_list2))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), qreva ((any_list3 @ (any1::(Nil)))) (any_list2) = (any1::qreva (any_list3) (any_list2))
Inductive1 : any_list1 = (any2::any_list3)
any1 : any
---------------------------------------
forall (any_list2:any list), qreva ((any_list3 @ (any1::(Nil)))) ((any2::any_list2)) = (any1::qreva (any_list3) ((any2::any_list2)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro any_list2(rank:7)
rewrite IH1 in goal at 0(rank:15)
rewrite <- IH1 in goal at 0(rank:15)
=================================================
Progress: 18


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva ((any_list1 @ (any1::(Nil)))) (any_list2) = (any1::qreva (any_list1) (any_list2))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), qreva ((any_list3 @ (any1::(Nil)))) (any_list2) = (any1::qreva (any_list3) (any_list2))
Inductive1 : any_list1 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list2:any list), qreva ((any_list3 @ (any1::(Nil)))) ((any2::any_list2)) = (any1::qreva (any_list3) ((any2::any_list2)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any_list2(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva ((any_list1 @ (any1::(Nil)))) (any_list2) = (any1::qreva (any_list1) (any_list2))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), qreva ((any_list3 @ (any1::(Nil)))) (any_list2) = (any1::qreva (any_list3) (any_list2))
Inductive1 : any_list1 = (any2::any_list3)
any_list2 : any list
---------------------------------------
forall (any1:any), qreva ((any_list3 @ (any1::(Nil)))) ((any2::any_list2)) = (any1::qreva (any_list3) ((any2::any_list2)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:15)
rewrite <- IH1 in goal at 0(rank:15)
=================================================
Progress: 19


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva ((any_list1 @ (any1::(Nil)))) (any_list2) = (any1::qreva (any_list1) (any_list2))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), qreva ((any_list3 @ (any1::(Nil)))) (any_list2) = (any1::qreva (any_list3) (any_list2))
Inductive1 : any_list1 = (any2::any_list3)
any1 : any
---------------------------------------
forall (any_list2:any list), qreva ((any_list3 @ (any1::(Nil)))) ((any2::any_list2)) = (any1::qreva (any_list3) ((any2::any_list2)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any_list2(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva ((any_list1 @ (any1::(Nil)))) (any_list2) = (any1::qreva (any_list1) (any_list2))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), qreva ((any_list3 @ (any1::(Nil)))) (any_list2) = (any1::qreva (any_list3) (any_list2))
Inductive1 : any_list1 = (any2::any_list3)
any1 : any
any_list2 : any list
---------------------------------------
qreva ((any_list3 @ (any1::(Nil)))) ((any2::any_list2)) = (any1::qreva (any_list3) ((any2::any_list2)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:15)
rewrite <- IH1 in goal at 0(rank:15)
=================================================
Progress: 20


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)

---------------------------------------
forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> induction any_list2(rank : 12)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any_list1:any list), qreva (qreva (any_list1) (reverse ((Nil)))) ((Nil)) = ((Nil) @ any_list1)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4)
=================================================
Progress: 21


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any_list1:any list), qreva (qreva (any_list1) (reverse ((Nil)))) ((Nil)) = ((Nil) @ any_list1)

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any_list1:any list), qreva (qreva (any_list1) ((Nil))) ((Nil)) = any_list1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:5)
=================================================
Progress: 22


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any_list1:any list), qreva (qreva (any_list1) ((Nil))) ((Nil)) = any_list1

1 goal(s) more...

0 conjecture(s) more...
>>> induction any_list1(rank : 5)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
---------------------------------------
qreva (qreva ((Nil)) ((Nil))) ((Nil)) = (Nil)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:4)
=================================================
Progress: 23


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
---------------------------------------
qreva (qreva ((Nil)) ((Nil))) ((Nil)) = (Nil)

2 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : qreva (qreva (any_list3) ((Nil))) ((Nil)) = any_list3
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
qreva (qreva ((any1::any_list3)) ((Nil))) ((Nil)) = (any1::any_list3)

1 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:4)
=================================================
Progress: 24


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : qreva (qreva (any_list3) ((Nil))) ((Nil)) = any_list3
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
qreva (qreva ((any1::any_list3)) ((Nil))) ((Nil)) = (any1::any_list3)

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : qreva (qreva (any_list3) ((Nil))) ((Nil)) = any_list3
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
qreva (qreva (any_list3) ((any1::(Nil)))) ((Nil)) = (any1::any_list3)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
advanced_generalize done
New Env
let rec mk_rhs1 arg_3 arg_4 =
match (arg_3) with
| Nil  -> arg_4
| Cons hd tl -> mk_rhs1 (tl) ((hd::arg_4))
;;
Lemma List
forall (any_list3:any list), mk_rhs1 ((Nil)) (any_list3) = any_list3
forall (tl:any list) (hd:any) (any_list3:any list), mk_rhs1 ((hd::tl)) (any_list3) = mk_rhs1 (tl) ((hd::any_list3))
forall (any_list3:any list) (lst:any list), qreva (qreva (any_list3) (lst)) ((Nil)) = mk_rhs1 (lst) (any_list3)
End of Lemma List


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : qreva (qreva (any_list3) ((Nil))) ((Nil)) = any_list3
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
qreva (qreva (any_list3) ((any1::(Nil)))) ((Nil)) = (any1::any_list3)

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 25


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : qreva (qreva (any_list3) ((Nil))) ((Nil)) = any_list3
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
qreva (qreva (any_list3) ((any1::(Nil)))) ((Nil)) = (any1::any_list3)

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (any_list3:any list) (lst:any list), qreva (qreva (any_list3) (lst)) ((Nil)) = mk_rhs1 (lst) (any_list3)(rank : 0)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = mk_rhs1 (any_list2) (any_list1)

---------------------------------------
forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = mk_rhs1 (any_list2) (any_list1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:6)
=================================================
Progress: 26


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = mk_rhs1 (any_list2) (any_list1)

---------------------------------------
forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = mk_rhs1 (any_list2) (any_list1)

0 goal(s) more...

1 conjecture(s) more...
>>> induction any_list1(rank : 6)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), qreva (qreva ((Nil)) (any_list2)) ((Nil)) = mk_rhs1 (any_list2) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6)
=================================================
Progress: 27


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), qreva (qreva ((Nil)) (any_list2)) ((Nil)) = mk_rhs1 (any_list2) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), qreva (any_list2) ((Nil)) = mk_rhs1 (any_list2) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction any_list2(rank:15)
intro any_list2(rank:22)
=================================================
Progress: 28


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva ((any_list1 @ (any1::(Nil)))) (any_list2) = (any1::qreva (any_list1) (any_list2))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), qreva ((any_list3 @ (any1::(Nil)))) (any_list2) = (any1::qreva (any_list3) (any_list2))
Inductive1 : any_list1 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list2:any list), qreva ((any_list3 @ (any1::(Nil)))) ((any2::any_list2)) = (any1::qreva (any_list3) ((any2::any_list2)))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 15)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva ((any_list1 @ (any1::(Nil)))) (any_list2) = (any1::qreva (any_list1) (any_list2))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), qreva ((any_list3 @ (any1::(Nil)))) (any_list2) = (any1::qreva (any_list3) (any_list2))
Inductive1 : any_list1 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list2:any list), (any1::qreva (any_list3) ((any2::any_list2))) = (any1::qreva (any_list3) ((any2::any_list2)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5)
=================================================
Progress: 29


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva ((any_list1 @ (any1::(Nil)))) (any_list2) = (any1::qreva (any_list1) (any_list2))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), qreva ((any_list3 @ (any1::(Nil)))) (any_list2) = (any1::qreva (any_list3) (any_list2))
Inductive1 : any_list1 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list2:any list), (any1::qreva (any_list3) ((any2::any_list2))) = (any1::qreva (any_list3) ((any2::any_list2)))

0 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list), qreva ((any_list1 @ (any1::(Nil)))) ((Nil)) = (any1::qreva (any_list1) ((Nil)))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), qreva ((any_list2 @ (any1::(Nil)))) ((Nil)) = (any1::qreva (any_list2) ((Nil)))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
qreva ((any_list2 @ (any1::(Nil)))) ((any2::(Nil))) = (any1::qreva (any_list2) ((any2::(Nil))))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 7
Tactic List : 2
rewrite lemma3 in goal at 0(rank:13)
rewrite <- lemma3 in goal at 0(rank:13)
=================================================
Progress: 30


1st goal of : forall (any1:any) (any_list1:any list), qreva ((any_list1 @ (any1::(Nil)))) ((Nil)) = (any1::qreva (any_list1) ((Nil)))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), qreva ((any_list2 @ (any1::(Nil)))) ((Nil)) = (any1::qreva (any_list2) ((Nil)))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
qreva ((any_list2 @ (any1::(Nil)))) ((any2::(Nil))) = (any1::qreva (any_list2) ((any2::(Nil))))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list), qreva ((any_list1 @ (any1::(Nil)))) ((Nil)) = (any1::qreva (any_list1) ((Nil)))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), qreva ((any_list2 @ (any1::(Nil)))) ((Nil)) = (any1::qreva (any_list2) ((Nil)))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
(any1::qreva (any_list2) ((any2::(Nil)))) = (any1::qreva (any_list2) ((any2::(Nil))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:4)
=================================================
Progress: 31


1st goal of : forall (any1:any) (any_list1:any list), qreva ((any_list1 @ (any1::(Nil)))) ((Nil)) = (any1::qreva (any_list1) ((Nil)))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), qreva ((any_list2 @ (any1::(Nil)))) ((Nil)) = (any1::qreva (any_list2) ((Nil)))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
(any1::qreva (any_list2) ((any2::(Nil)))) = (any1::qreva (any_list2) ((any2::(Nil))))

0 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : qreva (reverse (any_list3)) ((Nil)) = (any_list3 @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
qreva ((reverse (any_list3) @ (any1::(Nil)))) ((Nil)) = (any1::qreva (reverse (any_list3)) ((Nil)))

1 goal(s) more...

0 conjecture(s) more...
Deduplication: 1
Tactic List : 2
rewrite lemma3 in goal at 0(rank:12)
rewrite <- lemma3 in goal at 0(rank:12)
=================================================
Progress: 32


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : qreva (reverse (any_list3)) ((Nil)) = (any_list3 @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
qreva ((reverse (any_list3) @ (any1::(Nil)))) ((Nil)) = (any1::qreva (reverse (any_list3)) ((Nil)))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 12)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : qreva (reverse (any_list3)) ((Nil)) = (any_list3 @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
(any1::qreva (reverse (any_list3)) ((Nil))) = (any1::qreva (reverse (any_list3)) ((Nil)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3)
=================================================
Progress: 33


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : qreva (reverse (any_list3)) ((Nil)) = (any_list3 @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
(any1::qreva (reverse (any_list3)) ((Nil))) = (any1::qreva (reverse (any_list3)) ((Nil)))

1 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 3)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), qreva (qreva (any_list3) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), qreva (qreva ((any1::any_list3)) (reverse (any_list2))) ((Nil)) = (any_list2 @ (any1::any_list3))

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 1
Tactic List : 1
simpl in goal(rank:3)
=================================================
Progress: 34


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), qreva (qreva (any_list3) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), qreva (qreva ((any1::any_list3)) (reverse (any_list2))) ((Nil)) = (any_list2 @ (any1::any_list3))

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), qreva (qreva (any_list3) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), qreva (qreva (any_list3) ((any1::reverse (any_list2)))) ((Nil)) = (any_list2 @ (any1::any_list3))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:4)
=================================================
Progress: 35


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), qreva (qreva (any_list3) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), qreva (qreva (any_list3) ((any1::reverse (any_list2)))) ((Nil)) = (any_list2 @ (any1::any_list3))

0 goal(s) more...

0 conjecture(s) more...
>>> induction any_list2(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), qreva (qreva (any_list3) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
qreva (qreva (any_list3) ((any1::reverse ((Nil))))) ((Nil)) = ((Nil) @ (any1::any_list3))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4)
=================================================
Progress: 36


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), qreva (qreva (any_list3) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
qreva (qreva (any_list3) ((any1::reverse ((Nil))))) ((Nil)) = ((Nil) @ (any1::any_list3))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), qreva (qreva (any_list3) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
qreva (qreva (any_list3) ((any1::(Nil)))) ((Nil)) = (any1::any_list3)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
Lemma : forall (any1:any) (any_list3:any list), qreva (qreva (any_list3) ((any1::(Nil)))) ((Nil)) = (any1::any_list3)
Model : any1: 0, any_list3: (Nil)
Model : any1: 8, any_list3: (6::(4::(Nil)))
Model : any1: 6, any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
qreva (qreva ((Nil)) ((0::(Nil)))) ((Nil)) = (0::(Nil))
qreva (qreva ((6::(4::(Nil)))) ((8::(Nil)))) ((Nil)) = (8::(6::(4::(Nil))))
qreva (qreva ((Nil)) ((6::(Nil)))) ((Nil)) = (6::(Nil))
Simplifying took 0.000507 seconds
Result : true
advanced_generalize done


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), qreva (qreva (any_list3) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
qreva (qreva (any_list3) ((any1::(Nil)))) ((Nil)) = (any1::any_list3)

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 37


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), qreva (qreva (any_list3) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
qreva (qreva (any_list3) ((any1::(Nil)))) ((Nil)) = (any1::any_list3)

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (any1:any) (any_list3:any list), qreva (qreva (any_list3) ((any1::(Nil)))) ((Nil)) = (any1::any_list3)(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list), qreva (qreva (any_list1) ((any1::(Nil)))) ((Nil)) = (any1::any_list1)

---------------------------------------
forall (any1:any) (any_list1:any list), qreva (qreva (any_list1) ((any1::(Nil)))) ((Nil)) = (any1::any_list1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:6)
=================================================
Progress: 38


1st goal of : forall (any1:any) (any_list1:any list), qreva (qreva (any_list1) ((any1::(Nil)))) ((Nil)) = (any1::any_list1)

---------------------------------------
forall (any1:any) (any_list1:any list), qreva (qreva (any_list1) ((any1::(Nil)))) ((Nil)) = (any1::any_list1)

0 goal(s) more...

1 conjecture(s) more...
>>> induction any_list1(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list), qreva (qreva (any_list1) ((any1::(Nil)))) ((Nil)) = (any1::any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any), qreva (qreva ((Nil)) ((any1::(Nil)))) ((Nil)) = (any1::(Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5)
=================================================
Progress: 39


1st goal of : forall (any1:any) (any_list1:any list), qreva (qreva (any_list1) ((any1::(Nil)))) ((Nil)) = (any1::any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any), qreva (qreva ((Nil)) ((any1::(Nil)))) ((Nil)) = (any1::(Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list), qreva (qreva (any_list1) ((any1::(Nil)))) ((Nil)) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), qreva (qreva (any_list2) ((any1::(Nil)))) ((Nil)) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), qreva (qreva ((any2::any_list2)) ((any1::(Nil)))) ((Nil)) = (any1::(any2::any_list2))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5)
=================================================
Progress: 40


1st goal of : forall (any1:any) (any_list1:any list), qreva (qreva (any_list1) ((any1::(Nil)))) ((Nil)) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), qreva (qreva (any_list2) ((any1::(Nil)))) ((Nil)) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), qreva (qreva ((any2::any_list2)) ((any1::(Nil)))) ((Nil)) = (any1::(any2::any_list2))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list), qreva (qreva (any_list1) ((any1::(Nil)))) ((Nil)) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), qreva (qreva (any_list2) ((any1::(Nil)))) ((Nil)) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), qreva (qreva (any_list2) ((any2::(any1::(Nil))))) ((Nil)) = (any1::(any2::any_list2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
intro any1(rank:5)
rewrite <- IH1 in goal at 0(rank:13)
=================================================
Progress: 41


1st goal of : forall (any1:any) (any_list1:any list), qreva (qreva (any_list1) ((any1::(Nil)))) ((Nil)) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), qreva (qreva (any_list2) ((any1::(Nil)))) ((Nil)) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), qreva (qreva (any_list2) ((any2::(any1::(Nil))))) ((Nil)) = (any1::(any2::any_list2))

0 goal(s) more...

1 conjecture(s) more...
>>> intro any1(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list), qreva (qreva (any_list1) ((any1::(Nil)))) ((Nil)) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), qreva (qreva (any_list2) ((any1::(Nil)))) ((Nil)) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
qreva (qreva (any_list2) ((any2::(any1::(Nil))))) ((Nil)) = (any1::(any2::any_list2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:5)
=================================================
Progress: 42


1st goal of : forall (any1:any) (any_list1:any list), qreva (qreva (any_list1) ((any1::(Nil)))) ((Nil)) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), qreva (qreva (any_list2) ((any1::(Nil)))) ((Nil)) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
qreva (qreva (any_list2) ((any2::(any1::(Nil))))) ((Nil)) = (any1::(any2::any_list2))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list), qreva (qreva (any_list1) ((any1::(Nil)))) ((Nil)) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), qreva (qreva (any_list2) ((any1::(Nil)))) ((Nil)) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
qreva (qreva (any_list2) ((any2::(any1::(Nil))))) ((Nil)) = (any1::qreva (qreva (any_list2) ((any2::(Nil)))) ((Nil)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- lemma3 in goal at 0(rank:5)
=================================================
Progress: 43


1st goal of : forall (any1:any) (any_list1:any list), qreva (qreva (any_list1) ((any1::(Nil)))) ((Nil)) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), qreva (qreva (any_list2) ((any1::(Nil)))) ((Nil)) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
qreva (qreva (any_list2) ((any2::(any1::(Nil))))) ((Nil)) = (any1::qreva (qreva (any_list2) ((any2::(Nil)))) ((Nil)))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list), qreva (qreva (any_list1) ((any1::(Nil)))) ((Nil)) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), qreva (qreva (any_list2) ((any1::(Nil)))) ((Nil)) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
qreva (qreva (any_list2) ((any2::(any1::(Nil))))) ((Nil)) = qreva ((qreva (any_list2) ((any2::(Nil))) @ (any1::(Nil)))) ((Nil))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
rewrite <- IH1 in goal at 0
rewrite <- lemma3 in goal at 0
Lemma : forall (any2:any) (any_list2:any list) (arg5:any list), qreva (qreva (any_list2) ((any2::arg5))) ((Nil)) = qreva ((qreva (any_list2) ((any2::(Nil))) @ arg5)) ((Nil))
Model : any2: 3, any_list2: (Nil), arg5: (Nil)
Model : any2: 3, any_list2: (Nil), arg5: (Nil)
Model : any2: 3, any_list2: (Nil), arg5: (0::(7::(Nil)))
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
qreva (qreva ((Nil)) ((3::(Nil)))) ((Nil)) = qreva ((qreva ((Nil)) ((3::(Nil))) @ (Nil))) ((Nil))
qreva (qreva ((Nil)) ((3::(Nil)))) ((Nil)) = qreva ((qreva ((Nil)) ((3::(Nil))) @ (Nil))) ((Nil))
qreva (qreva ((Nil)) ((3::(0::(7::(Nil)))))) ((Nil)) = qreva ((qreva ((Nil)) ((3::(Nil))) @ (0::(7::(Nil))))) ((Nil))
Simplifying took 0.000710 seconds
Result : true
advanced_generalize done


1st goal of : forall (any1:any) (any_list1:any list), qreva (qreva (any_list1) ((any1::(Nil)))) ((Nil)) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), qreva (qreva (any_list2) ((any1::(Nil)))) ((Nil)) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
qreva (qreva (any_list2) ((any2::(any1::(Nil))))) ((Nil)) = qreva ((qreva (any_list2) ((any2::(Nil))) @ (any1::(Nil)))) ((Nil))

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 44


1st goal of : forall (any1:any) (any_list1:any list), qreva (qreva (any_list1) ((any1::(Nil)))) ((Nil)) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), qreva (qreva (any_list2) ((any1::(Nil)))) ((Nil)) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
qreva (qreva (any_list2) ((any2::(any1::(Nil))))) ((Nil)) = qreva ((qreva (any_list2) ((any2::(Nil))) @ (any1::(Nil)))) ((Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (any2:any) (any_list2:any list) (arg5:any list), qreva (qreva (any_list2) ((any2::arg5))) ((Nil)) = qreva ((qreva (any_list2) ((any2::(Nil))) @ arg5)) ((Nil))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) ((any1::any_list2))) ((Nil)) = qreva ((qreva (any_list1) ((any1::(Nil))) @ any_list2)) ((Nil))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) ((any1::any_list2))) ((Nil)) = qreva ((qreva (any_list1) ((any1::(Nil))) @ any_list2)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:8)
=================================================
Progress: 45


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) ((any1::any_list2))) ((Nil)) = qreva ((qreva (any_list1) ((any1::(Nil))) @ any_list2)) ((Nil))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) ((any1::any_list2))) ((Nil)) = qreva ((qreva (any_list1) ((any1::(Nil))) @ any_list2)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> induction any_list1(rank : 8)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) ((any1::any_list2))) ((Nil)) = qreva ((qreva (any_list1) ((any1::(Nil))) @ any_list2)) ((Nil))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any_list2:any list), qreva (qreva ((Nil)) ((any1::any_list2))) ((Nil)) = qreva ((qreva ((Nil)) ((any1::(Nil))) @ any_list2)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7)
=================================================
Progress: 46


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) ((any1::any_list2))) ((Nil)) = qreva ((qreva (any_list1) ((any1::(Nil))) @ any_list2)) ((Nil))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any_list2:any list), qreva (qreva ((Nil)) ((any1::any_list2))) ((Nil)) = qreva ((qreva ((Nil)) ((any1::(Nil))) @ any_list2)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) ((any1::any_list2))) ((Nil)) = qreva ((qreva (any_list1) ((any1::(Nil))) @ any_list2)) ((Nil))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), qreva (qreva (any_list3) ((any1::any_list2))) ((Nil)) = qreva ((qreva (any_list3) ((any1::(Nil))) @ any_list2)) ((Nil))
Inductive1 : any_list1 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list2:any list), qreva (qreva ((any2::any_list3)) ((any1::any_list2))) ((Nil)) = qreva ((qreva ((any2::any_list3)) ((any1::(Nil))) @ any_list2)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7)
=================================================
Progress: 47


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) ((any1::any_list2))) ((Nil)) = qreva ((qreva (any_list1) ((any1::(Nil))) @ any_list2)) ((Nil))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), qreva (qreva (any_list3) ((any1::any_list2))) ((Nil)) = qreva ((qreva (any_list3) ((any1::(Nil))) @ any_list2)) ((Nil))
Inductive1 : any_list1 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list2:any list), qreva (qreva ((any2::any_list3)) ((any1::any_list2))) ((Nil)) = qreva ((qreva ((any2::any_list3)) ((any1::(Nil))) @ any_list2)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) ((any1::any_list2))) ((Nil)) = qreva ((qreva (any_list1) ((any1::(Nil))) @ any_list2)) ((Nil))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), qreva (qreva (any_list3) ((any1::any_list2))) ((Nil)) = qreva ((qreva (any_list3) ((any1::(Nil))) @ any_list2)) ((Nil))
Inductive1 : any_list1 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list2:any list), qreva (qreva (any_list3) ((any2::(any1::any_list2)))) ((Nil)) = qreva ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list2)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro any1(rank:7)
intro any_list2(rank:7)
rewrite IH1 in goal at 0(rank:23)
=================================================
Progress: 48


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) ((any1::any_list2))) ((Nil)) = qreva ((qreva (any_list1) ((any1::(Nil))) @ any_list2)) ((Nil))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), qreva (qreva (any_list3) ((any1::any_list2))) ((Nil)) = qreva ((qreva (any_list3) ((any1::(Nil))) @ any_list2)) ((Nil))
Inductive1 : any_list1 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list2:any list), qreva (qreva (any_list3) ((any2::(any1::any_list2)))) ((Nil)) = qreva ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list2)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any1(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) ((any1::any_list2))) ((Nil)) = qreva ((qreva (any_list1) ((any1::(Nil))) @ any_list2)) ((Nil))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), qreva (qreva (any_list3) ((any1::any_list2))) ((Nil)) = qreva ((qreva (any_list3) ((any1::(Nil))) @ any_list2)) ((Nil))
Inductive1 : any_list1 = (any2::any_list3)
any1 : any
---------------------------------------
forall (any_list2:any list), qreva (qreva (any_list3) ((any2::(any1::any_list2)))) ((Nil)) = qreva ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list2)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro any_list2(rank:7)
rewrite IH1 in goal at 0(rank:23)
=================================================
Progress: 49


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) ((any1::any_list2))) ((Nil)) = qreva ((qreva (any_list1) ((any1::(Nil))) @ any_list2)) ((Nil))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), qreva (qreva (any_list3) ((any1::any_list2))) ((Nil)) = qreva ((qreva (any_list3) ((any1::(Nil))) @ any_list2)) ((Nil))
Inductive1 : any_list1 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list2:any list), qreva (qreva (any_list3) ((any2::(any1::any_list2)))) ((Nil)) = qreva ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list2)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any_list2(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) ((any1::any_list2))) ((Nil)) = qreva ((qreva (any_list1) ((any1::(Nil))) @ any_list2)) ((Nil))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), qreva (qreva (any_list3) ((any1::any_list2))) ((Nil)) = qreva ((qreva (any_list3) ((any1::(Nil))) @ any_list2)) ((Nil))
Inductive1 : any_list1 = (any2::any_list3)
any_list2 : any list
---------------------------------------
forall (any1:any), qreva (qreva (any_list3) ((any2::(any1::any_list2)))) ((Nil)) = qreva ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list2)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:7)
=================================================
Progress: 50


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) ((any1::any_list2))) ((Nil)) = qreva ((qreva (any_list1) ((any1::(Nil))) @ any_list2)) ((Nil))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), qreva (qreva (any_list3) ((any1::any_list2))) ((Nil)) = qreva ((qreva (any_list3) ((any1::(Nil))) @ any_list2)) ((Nil))
Inductive1 : any_list1 = (any2::any_list3)
any1 : any
---------------------------------------
forall (any_list2:any list), qreva (qreva (any_list3) ((any2::(any1::any_list2)))) ((Nil)) = qreva ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list2)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any_list2(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) ((any1::any_list2))) ((Nil)) = qreva ((qreva (any_list1) ((any1::(Nil))) @ any_list2)) ((Nil))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), qreva (qreva (any_list3) ((any1::any_list2))) ((Nil)) = qreva ((qreva (any_list3) ((any1::(Nil))) @ any_list2)) ((Nil))
Inductive1 : any_list1 = (any2::any_list3)
any1 : any
any_list2 : any list
---------------------------------------
qreva (qreva (any_list3) ((any2::(any1::any_list2)))) ((Nil)) = qreva ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list2)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:7)
=================================================
Progress: 51


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) ((any1::any_list2))) ((Nil)) = qreva ((qreva (any_list1) ((any1::(Nil))) @ any_list2)) ((Nil))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), qreva (qreva (any_list3) ((any1::any_list2))) ((Nil)) = qreva ((qreva (any_list3) ((any1::(Nil))) @ any_list2)) ((Nil))
Inductive1 : any_list1 = (any2::any_list3)
any_list2 : any list
---------------------------------------
forall (any1:any), qreva (qreva (any_list3) ((any2::(any1::any_list2)))) ((Nil)) = qreva ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list2)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) ((any1::any_list2))) ((Nil)) = qreva ((qreva (any_list1) ((any1::(Nil))) @ any_list2)) ((Nil))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), qreva (qreva (any_list3) ((any1::any_list2))) ((Nil)) = qreva ((qreva (any_list3) ((any1::(Nil))) @ any_list2)) ((Nil))
Inductive1 : any_list1 = (any2::any_list3)
any_list2 : any list
---------------------------------------
forall (any1:any), qreva ((qreva (any_list3) ((any2::(Nil))) @ (any1::any_list2))) ((Nil)) = qreva ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list2)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list2
rewrite IH1 in goal at 0
Lemma : forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list), qreva ((qreva (any_list3) ((any2::(Nil))) @ (any1::any_list2))) ((Nil)) = qreva ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list2)) ((Nil))
Model : any1: 6, any2: 7, any_list2: (Nil), any_list3: (Nil)
Model : any1: 8, any2: 3, any_list2: (Nil), any_list3: (7::(Nil))
Model : any1: 7, any2: 4, any_list2: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
qreva ((qreva ((Nil)) ((7::(Nil))) @ (6::(Nil)))) ((Nil)) = qreva ((qreva ((Nil)) ((7::(6::(Nil)))) @ (Nil))) ((Nil))
qreva ((qreva ((7::(Nil))) ((3::(Nil))) @ (8::(Nil)))) ((Nil)) = qreva ((qreva ((7::(Nil))) ((3::(8::(Nil)))) @ (Nil))) ((Nil))
qreva ((qreva ((Nil)) ((4::(Nil))) @ (7::(Nil)))) ((Nil)) = qreva ((qreva ((Nil)) ((4::(7::(Nil)))) @ (Nil))) ((Nil))
Simplifying took 0.001654 seconds
Result : true
advanced_generalize done


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) ((any1::any_list2))) ((Nil)) = qreva ((qreva (any_list1) ((any1::(Nil))) @ any_list2)) ((Nil))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), qreva (qreva (any_list3) ((any1::any_list2))) ((Nil)) = qreva ((qreva (any_list3) ((any1::(Nil))) @ any_list2)) ((Nil))
Inductive1 : any_list1 = (any2::any_list3)
any_list2 : any list
---------------------------------------
forall (any1:any), qreva ((qreva (any_list3) ((any2::(Nil))) @ (any1::any_list2))) ((Nil)) = qreva ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list2)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 52


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) ((any1::any_list2))) ((Nil)) = qreva ((qreva (any_list1) ((any1::(Nil))) @ any_list2)) ((Nil))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), qreva (qreva (any_list3) ((any1::any_list2))) ((Nil)) = qreva ((qreva (any_list3) ((any1::(Nil))) @ any_list2)) ((Nil))
Inductive1 : any_list1 = (any2::any_list3)
any_list2 : any list
---------------------------------------
forall (any1:any), qreva ((qreva (any_list3) ((any2::(Nil))) @ (any1::any_list2))) ((Nil)) = qreva ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list2)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list), qreva ((qreva (any_list3) ((any2::(Nil))) @ (any1::any_list2))) ((Nil)) = qreva ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list2)) ((Nil))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any2::(Nil))) @ (any1::any_list1))) ((Nil)) = qreva ((qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1)) ((Nil))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any2::(Nil))) @ (any1::any_list1))) ((Nil)) = qreva ((qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:10)
=================================================
Progress: 53


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) ((any1::any_list2))) ((Nil)) = qreva ((qreva (any_list1) ((any1::(Nil))) @ any_list2)) ((Nil))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), qreva (qreva (any_list3) ((any1::any_list2))) ((Nil)) = qreva ((qreva (any_list3) ((any1::(Nil))) @ any_list2)) ((Nil))
Inductive1 : any_list1 = (any2::any_list3)
any1 : any
any_list2 : any list
---------------------------------------
qreva (qreva (any_list3) ((any2::(any1::any_list2)))) ((Nil)) = qreva ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list2)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) ((any1::any_list2))) ((Nil)) = qreva ((qreva (any_list1) ((any1::(Nil))) @ any_list2)) ((Nil))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), qreva (qreva (any_list3) ((any1::any_list2))) ((Nil)) = qreva ((qreva (any_list3) ((any1::(Nil))) @ any_list2)) ((Nil))
Inductive1 : any_list1 = (any2::any_list3)
any1 : any
any_list2 : any list
---------------------------------------
qreva ((qreva (any_list3) ((any2::(Nil))) @ (any1::any_list2))) ((Nil)) = qreva ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list2)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list2
rewrite IH1 in goal at 0
Lemma : forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list), qreva ((qreva (any_list3) ((any2::(Nil))) @ (any1::any_list2))) ((Nil)) = qreva ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list2)) ((Nil))
Model : any1: 5, any2: 6, any_list2: (Nil), any_list3: (Nil)
Model : any1: 3, any2: 5, any_list2: (8::(Nil)), any_list3: (Nil)
Model : any1: 1, any2: 6, any_list2: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
qreva ((qreva ((Nil)) ((6::(Nil))) @ (5::(Nil)))) ((Nil)) = qreva ((qreva ((Nil)) ((6::(5::(Nil)))) @ (Nil))) ((Nil))
qreva ((qreva ((Nil)) ((5::(Nil))) @ (3::(8::(Nil))))) ((Nil)) = qreva ((qreva ((Nil)) ((5::(3::(Nil)))) @ (8::(Nil)))) ((Nil))
qreva ((qreva ((Nil)) ((6::(Nil))) @ (1::(Nil)))) ((Nil)) = qreva ((qreva ((Nil)) ((6::(1::(Nil)))) @ (Nil))) ((Nil))
Simplifying took 0.001336 seconds
Result : true
advanced_generalize done
=================================================
Progress: 54


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any2::(Nil))) @ (any1::any_list1))) ((Nil)) = qreva ((qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1)) ((Nil))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any2::(Nil))) @ (any1::any_list1))) ((Nil)) = qreva ((qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> induction any_list2(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any2::(Nil))) @ (any1::any_list1))) ((Nil)) = qreva ((qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1)) ((Nil))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), qreva ((qreva ((Nil)) ((any2::(Nil))) @ (any1::any_list1))) ((Nil)) = qreva ((qreva ((Nil)) ((any2::(any1::(Nil)))) @ any_list1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9)
=================================================
Progress: 55


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any2::(Nil))) @ (any1::any_list1))) ((Nil)) = qreva ((qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1)) ((Nil))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), qreva ((qreva ((Nil)) ((any2::(Nil))) @ (any1::any_list1))) ((Nil)) = qreva ((qreva ((Nil)) ((any2::(any1::(Nil)))) @ any_list1)) ((Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any2::(Nil))) @ (any1::any_list1))) ((Nil)) = qreva ((qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1)) ((Nil))
any_list2 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list), qreva ((qreva (any_list3) ((any2::(Nil))) @ (any1::any_list1))) ((Nil)) = qreva ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any3::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), qreva ((qreva ((any3::any_list3)) ((any2::(Nil))) @ (any1::any_list1))) ((Nil)) = qreva ((qreva ((any3::any_list3)) ((any2::(any1::(Nil)))) @ any_list1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 56


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any2::(Nil))) @ (any1::any_list1))) ((Nil)) = qreva ((qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1)) ((Nil))
any_list2 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list), qreva ((qreva (any_list3) ((any2::(Nil))) @ (any1::any_list1))) ((Nil)) = qreva ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any3::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), qreva ((qreva ((any3::any_list3)) ((any2::(Nil))) @ (any1::any_list1))) ((Nil)) = qreva ((qreva ((any3::any_list3)) ((any2::(any1::(Nil)))) @ any_list1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any2::(Nil))) @ (any1::any_list1))) ((Nil)) = qreva ((qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1)) ((Nil))
any_list2 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list), qreva ((qreva (any_list3) ((any2::(Nil))) @ (any1::any_list1))) ((Nil)) = qreva ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any3::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), qreva ((qreva (any_list3) ((any3::(any2::(Nil)))) @ (any1::any_list1))) ((Nil)) = qreva ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
intro any1(rank:9)
intro any2(rank:9)
intro any_list1(rank:9)
rewrite <- IH1 in goal at 0(rank:25)
=================================================
Progress: 57


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any2::(Nil))) @ (any1::any_list1))) ((Nil)) = qreva ((qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1)) ((Nil))
any_list2 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list), qreva ((qreva (any_list3) ((any2::(Nil))) @ (any1::any_list1))) ((Nil)) = qreva ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any3::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), qreva ((qreva (any_list3) ((any3::(any2::(Nil)))) @ (any1::any_list1))) ((Nil)) = qreva ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any1(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any2::(Nil))) @ (any1::any_list1))) ((Nil)) = qreva ((qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1)) ((Nil))
any_list2 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list), qreva ((qreva (any_list3) ((any2::(Nil))) @ (any1::any_list1))) ((Nil)) = qreva ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any3::any_list3)
any1 : any
---------------------------------------
forall (any2:any) (any_list1:any list), qreva ((qreva (any_list3) ((any3::(any2::(Nil)))) @ (any1::any_list1))) ((Nil)) = qreva ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro any2(rank:9)
intro any_list1(rank:9)
rewrite <- IH1 in goal at 0(rank:25)
=================================================
Progress: 58


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any2::(Nil))) @ (any1::any_list1))) ((Nil)) = qreva ((qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1)) ((Nil))
any_list2 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list), qreva ((qreva (any_list3) ((any2::(Nil))) @ (any1::any_list1))) ((Nil)) = qreva ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any3::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), qreva ((qreva (any_list3) ((any3::(any2::(Nil)))) @ (any1::any_list1))) ((Nil)) = qreva ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any2(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any2::(Nil))) @ (any1::any_list1))) ((Nil)) = qreva ((qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1)) ((Nil))
any_list2 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list), qreva ((qreva (any_list3) ((any2::(Nil))) @ (any1::any_list1))) ((Nil)) = qreva ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any3::any_list3)
any2 : any
---------------------------------------
forall (any1:any) (any_list1:any list), qreva ((qreva (any_list3) ((any3::(any2::(Nil)))) @ (any1::any_list1))) ((Nil)) = qreva ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:9)
rewrite <- IH1 in goal at 0(rank:25)
=================================================
Progress: 59


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any2::(Nil))) @ (any1::any_list1))) ((Nil)) = qreva ((qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1)) ((Nil))
any_list2 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list), qreva ((qreva (any_list3) ((any2::(Nil))) @ (any1::any_list1))) ((Nil)) = qreva ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any3::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), qreva ((qreva (any_list3) ((any3::(any2::(Nil)))) @ (any1::any_list1))) ((Nil)) = qreva ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any2::(Nil))) @ (any1::any_list1))) ((Nil)) = qreva ((qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1)) ((Nil))
any_list2 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list), qreva ((qreva (any_list3) ((any2::(Nil))) @ (any1::any_list1))) ((Nil)) = qreva ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any3::any_list3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), qreva ((qreva (any_list3) ((any3::(any2::(Nil)))) @ (any1::any_list1))) ((Nil)) = qreva ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:9)
=================================================
Progress: 60


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any2::(Nil))) @ (any1::any_list1))) ((Nil)) = qreva ((qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1)) ((Nil))
any_list2 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list), qreva ((qreva (any_list3) ((any2::(Nil))) @ (any1::any_list1))) ((Nil)) = qreva ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any3::any_list3)
any1 : any
---------------------------------------
forall (any2:any) (any_list1:any list), qreva ((qreva (any_list3) ((any3::(any2::(Nil)))) @ (any1::any_list1))) ((Nil)) = qreva ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any2(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any2::(Nil))) @ (any1::any_list1))) ((Nil)) = qreva ((qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1)) ((Nil))
any_list2 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list), qreva ((qreva (any_list3) ((any2::(Nil))) @ (any1::any_list1))) ((Nil)) = qreva ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any3::any_list3)
any1 : any
any2 : any
---------------------------------------
forall (any_list1:any list), qreva ((qreva (any_list3) ((any3::(any2::(Nil)))) @ (any1::any_list1))) ((Nil)) = qreva ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:9)
rewrite <- IH1 in goal at 0(rank:25)
=================================================
Progress: 61


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any2::(Nil))) @ (any1::any_list1))) ((Nil)) = qreva ((qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1)) ((Nil))
any_list2 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list), qreva ((qreva (any_list3) ((any2::(Nil))) @ (any1::any_list1))) ((Nil)) = qreva ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any3::any_list3)
any1 : any
---------------------------------------
forall (any2:any) (any_list1:any list), qreva ((qreva (any_list3) ((any3::(any2::(Nil)))) @ (any1::any_list1))) ((Nil)) = qreva ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any2::(Nil))) @ (any1::any_list1))) ((Nil)) = qreva ((qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1)) ((Nil))
any_list2 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list), qreva ((qreva (any_list3) ((any2::(Nil))) @ (any1::any_list1))) ((Nil)) = qreva ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any3::any_list3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any), qreva ((qreva (any_list3) ((any3::(any2::(Nil)))) @ (any1::any_list1))) ((Nil)) = qreva ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:9)
=================================================
Progress: 62


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any2::(Nil))) @ (any1::any_list1))) ((Nil)) = qreva ((qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1)) ((Nil))
any_list2 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list), qreva ((qreva (any_list3) ((any2::(Nil))) @ (any1::any_list1))) ((Nil)) = qreva ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any3::any_list3)
any2 : any
---------------------------------------
forall (any1:any) (any_list1:any list), qreva ((qreva (any_list3) ((any3::(any2::(Nil)))) @ (any1::any_list1))) ((Nil)) = qreva ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any2::(Nil))) @ (any1::any_list1))) ((Nil)) = qreva ((qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1)) ((Nil))
any_list2 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list), qreva ((qreva (any_list3) ((any2::(Nil))) @ (any1::any_list1))) ((Nil)) = qreva ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any3::any_list3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any), qreva ((qreva (any_list3) ((any3::(any2::(Nil)))) @ (any1::any_list1))) ((Nil)) = qreva ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:9)
=================================================
Progress: 63


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any2::(Nil))) @ (any1::any_list1))) ((Nil)) = qreva ((qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1)) ((Nil))
any_list2 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list), qreva ((qreva (any_list3) ((any2::(Nil))) @ (any1::any_list1))) ((Nil)) = qreva ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any3::any_list3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), qreva ((qreva (any_list3) ((any3::(any2::(Nil)))) @ (any1::any_list1))) ((Nil)) = qreva ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any2::(Nil))) @ (any1::any_list1))) ((Nil)) = qreva ((qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1)) ((Nil))
any_list2 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list), qreva ((qreva (any_list3) ((any2::(Nil))) @ (any1::any_list1))) ((Nil)) = qreva ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any3::any_list3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), qreva ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
rewrite <- IH1 in goal at 0
Lemma : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list), qreva ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))
Model : any1: 1, any2: 4, any3: 4, any_list1: (Nil), any_list3: (Nil)
Model : any1: 1, any2: 3, any3: 7, any_list1: (Nil), any_list3: (Nil)
Model : any1: 4, any2: 5, any3: 1, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
qreva ((qreva ((Nil)) ((4::(Nil))) @ (4::(1::(Nil))))) ((Nil)) = qreva ((qreva ((Nil)) ((4::(4::(1::(Nil))))) @ (Nil))) ((Nil))
qreva ((qreva ((Nil)) ((7::(Nil))) @ (3::(1::(Nil))))) ((Nil)) = qreva ((qreva ((Nil)) ((7::(3::(1::(Nil))))) @ (Nil))) ((Nil))
qreva ((qreva ((Nil)) ((1::(Nil))) @ (5::(4::(Nil))))) ((Nil)) = qreva ((qreva ((Nil)) ((1::(5::(4::(Nil))))) @ (Nil))) ((Nil))
Simplifying took 0.001725 seconds
Result : true
advanced_generalize done


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any2::(Nil))) @ (any1::any_list1))) ((Nil)) = qreva ((qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1)) ((Nil))
any_list2 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list), qreva ((qreva (any_list3) ((any2::(Nil))) @ (any1::any_list1))) ((Nil)) = qreva ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any3::any_list3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), qreva ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 64


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any2::(Nil))) @ (any1::any_list1))) ((Nil)) = qreva ((qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1)) ((Nil))
any_list2 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list), qreva ((qreva (any_list3) ((any2::(Nil))) @ (any1::any_list1))) ((Nil)) = qreva ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any3::any_list3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), qreva ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list), qreva ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:12)
=================================================
Progress: 65


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any2::(Nil))) @ (any1::any_list1))) ((Nil)) = qreva ((qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1)) ((Nil))
any_list2 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list), qreva ((qreva (any_list3) ((any2::(Nil))) @ (any1::any_list1))) ((Nil)) = qreva ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any3::any_list3)
any1 : any
any2 : any
---------------------------------------
forall (any_list1:any list), qreva ((qreva (any_list3) ((any3::(any2::(Nil)))) @ (any1::any_list1))) ((Nil)) = qreva ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any_list1(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any2::(Nil))) @ (any1::any_list1))) ((Nil)) = qreva ((qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1)) ((Nil))
any_list2 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list), qreva ((qreva (any_list3) ((any2::(Nil))) @ (any1::any_list1))) ((Nil)) = qreva ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any3::any_list3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
qreva ((qreva (any_list3) ((any3::(any2::(Nil)))) @ (any1::any_list1))) ((Nil)) = qreva ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:9)
=================================================
Progress: 66


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any2::(Nil))) @ (any1::any_list1))) ((Nil)) = qreva ((qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1)) ((Nil))
any_list2 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list), qreva ((qreva (any_list3) ((any2::(Nil))) @ (any1::any_list1))) ((Nil)) = qreva ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any3::any_list3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any), qreva ((qreva (any_list3) ((any3::(any2::(Nil)))) @ (any1::any_list1))) ((Nil)) = qreva ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any2::(Nil))) @ (any1::any_list1))) ((Nil)) = qreva ((qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1)) ((Nil))
any_list2 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list), qreva ((qreva (any_list3) ((any2::(Nil))) @ (any1::any_list1))) ((Nil)) = qreva ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any3::any_list3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any), qreva ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
rewrite <- IH1 in goal at 0
Lemma : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list), qreva ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))
Model : any1: 1, any2: 2, any3: 6, any_list1: (Nil), any_list3: (4::(Nil))
Model : any1: 3, any2: 8, any3: 0, any_list1: (Nil), any_list3: (0::(Nil))
Model : any1: 3, any2: 1, any3: 5, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
qreva ((qreva ((4::(Nil))) ((6::(Nil))) @ (2::(1::(Nil))))) ((Nil)) = qreva ((qreva ((4::(Nil))) ((6::(2::(1::(Nil))))) @ (Nil))) ((Nil))
qreva ((qreva ((0::(Nil))) ((0::(Nil))) @ (8::(3::(Nil))))) ((Nil)) = qreva ((qreva ((0::(Nil))) ((0::(8::(3::(Nil))))) @ (Nil))) ((Nil))
qreva ((qreva ((Nil)) ((5::(Nil))) @ (1::(3::(Nil))))) ((Nil)) = qreva ((qreva ((Nil)) ((5::(1::(3::(Nil))))) @ (Nil))) ((Nil))
Simplifying took 0.002325 seconds
Result : true
advanced_generalize done
=================================================
Progress: 67


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any2::(Nil))) @ (any1::any_list1))) ((Nil)) = qreva ((qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1)) ((Nil))
any_list2 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list), qreva ((qreva (any_list3) ((any2::(Nil))) @ (any1::any_list1))) ((Nil)) = qreva ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any3::any_list3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any), qreva ((qreva (any_list3) ((any3::(any2::(Nil)))) @ (any1::any_list1))) ((Nil)) = qreva ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any2::(Nil))) @ (any1::any_list1))) ((Nil)) = qreva ((qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1)) ((Nil))
any_list2 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list), qreva ((qreva (any_list3) ((any2::(Nil))) @ (any1::any_list1))) ((Nil)) = qreva ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any3::any_list3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any), qreva ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any_list1
rewrite <- IH1 in goal at 0
Lemma : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list), qreva ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))
Model : any1: 0, any2: 8, any3: 7, any_list1: (Nil), any_list3: (Nil)
Model : any1: 5, any2: 0, any3: 0, any_list1: (Nil), any_list3: (Nil)
Model : any1: 5, any2: 1, any3: 7, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
qreva ((qreva ((Nil)) ((7::(Nil))) @ (8::(0::(Nil))))) ((Nil)) = qreva ((qreva ((Nil)) ((7::(8::(0::(Nil))))) @ (Nil))) ((Nil))
qreva ((qreva ((Nil)) ((0::(Nil))) @ (0::(5::(Nil))))) ((Nil)) = qreva ((qreva ((Nil)) ((0::(0::(5::(Nil))))) @ (Nil))) ((Nil))
qreva ((qreva ((Nil)) ((7::(Nil))) @ (1::(5::(Nil))))) ((Nil)) = qreva ((qreva ((Nil)) ((7::(1::(5::(Nil))))) @ (Nil))) ((Nil))
Simplifying took 0.001701 seconds
Result : true
advanced_generalize done
=================================================
Progress: 68


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any2::(Nil))) @ (any1::any_list1))) ((Nil)) = qreva ((qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1)) ((Nil))
any_list2 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list), qreva ((qreva (any_list3) ((any2::(Nil))) @ (any1::any_list1))) ((Nil)) = qreva ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any3::any_list3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
qreva ((qreva (any_list3) ((any3::(any2::(Nil)))) @ (any1::any_list1))) ((Nil)) = qreva ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any2::(Nil))) @ (any1::any_list1))) ((Nil)) = qreva ((qreva (any_list2) ((any2::(any1::(Nil)))) @ any_list1)) ((Nil))
any_list2 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list1:any list), qreva ((qreva (any_list3) ((any2::(Nil))) @ (any1::any_list1))) ((Nil)) = qreva ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any3::any_list3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
qreva ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any_list1
rewrite <- IH1 in goal at 0
Lemma : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list3:any list), qreva ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))
Model : any1: 8, any2: 5, any3: 6, any_list1: (Nil), any_list3: (Nil)
Model : any1: 5, any2: 5, any3: 4, any_list1: (Nil), any_list3: (Nil)
Model : any1: 5, any2: 2, any3: 6, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
qreva ((qreva ((Nil)) ((6::(Nil))) @ (5::(8::(Nil))))) ((Nil)) = qreva ((qreva ((Nil)) ((6::(5::(8::(Nil))))) @ (Nil))) ((Nil))
qreva ((qreva ((Nil)) ((4::(Nil))) @ (5::(5::(Nil))))) ((Nil)) = qreva ((qreva ((Nil)) ((4::(5::(5::(Nil))))) @ (Nil))) ((Nil))
qreva ((qreva ((Nil)) ((6::(Nil))) @ (2::(5::(Nil))))) ((Nil)) = qreva ((qreva ((Nil)) ((6::(2::(5::(Nil))))) @ (Nil))) ((Nil))
Simplifying took 0.001939 seconds
Result : true
advanced_generalize done
=================================================
Progress: 69


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> induction any_list2(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), qreva ((qreva ((Nil)) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva ((Nil)) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11)
=================================================
Progress: 70


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), qreva ((qreva ((Nil)) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva ((Nil)) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))

1 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), qreva ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any4::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), qreva ((qreva ((any4::any_list3)) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva ((any4::any_list3)) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:11)
=================================================
Progress: 71


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), qreva ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any4::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), qreva ((qreva ((any4::any_list3)) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva ((any4::any_list3)) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), qreva ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any4::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
intro any1(rank:11)
intro any2(rank:11)
intro any3(rank:11)
intro any_list1(rank:11)
=================================================
Progress: 72


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), qreva ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any4::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any1(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), qreva ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any4::any_list3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any2(rank:11)
intro any3(rank:11)
intro any_list1(rank:11)
=================================================
Progress: 73


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), qreva ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any4::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any2(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), qreva ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any4::any_list3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any3(rank:11)
intro any_list1(rank:11)
=================================================
Progress: 74


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), qreva ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any4::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), qreva ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any4::any_list3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:11)
=================================================
Progress: 75


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), qreva ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any4::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), qreva ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any4::any_list3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list3:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
Model : any1: 2, any2: 5, any3: 5, any4: 6, any_list1: (Nil), any_list3: (Nil)
Model : any1: 5, any2: 8, any3: 7, any4: 7, any_list1: (5::(Nil)), any_list3: (Nil)
Model : any1: 1, any2: 5, any3: 2, any4: 3, any_list1: (Nil), any_list3: (2::(Nil))
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
qreva ((qreva ((Nil)) ((6::(5::(Nil)))) @ (5::(2::(Nil))))) ((Nil)) = qreva ((qreva ((Nil)) ((6::(5::(5::(2::(Nil)))))) @ (Nil))) ((Nil))
qreva ((qreva ((Nil)) ((7::(7::(Nil)))) @ (8::(5::(5::(Nil)))))) ((Nil)) = qreva ((qreva ((Nil)) ((7::(7::(8::(5::(Nil)))))) @ (5::(Nil)))) ((Nil))
qreva ((qreva ((2::(Nil))) ((3::(2::(Nil)))) @ (5::(1::(Nil))))) ((Nil)) = qreva ((qreva ((2::(Nil))) ((3::(2::(5::(1::(Nil)))))) @ (Nil))) ((Nil))
Simplifying took 0.004158 seconds
Result : true
advanced_generalize done


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), qreva ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any4::any_list3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 76


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), qreva ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any4::any_list3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list3:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:14)
=================================================
Progress: 77


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), qreva ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any4::any_list3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any2(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), qreva ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any4::any_list3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any3(rank:11)
intro any_list1(rank:11)
=================================================
Progress: 78


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), qreva ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any4::any_list3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), qreva ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any4::any_list3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:11)
=================================================
Progress: 79


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), qreva ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any4::any_list3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), qreva ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any4::any_list3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list3:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
Model : any1: 0, any2: 0, any3: 6, any4: 2, any_list1: (Nil), any_list3: (Nil)
Model : any1: 7, any2: 8, any3: 8, any4: 8, any_list1: (Nil), any_list3: (Nil)
Model : any1: 0, any2: 7, any3: 6, any4: 6, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
qreva ((qreva ((Nil)) ((2::(6::(Nil)))) @ (0::(0::(Nil))))) ((Nil)) = qreva ((qreva ((Nil)) ((2::(6::(0::(0::(Nil)))))) @ (Nil))) ((Nil))
qreva ((qreva ((Nil)) ((8::(8::(Nil)))) @ (8::(7::(Nil))))) ((Nil)) = qreva ((qreva ((Nil)) ((8::(8::(8::(7::(Nil)))))) @ (Nil))) ((Nil))
qreva ((qreva ((Nil)) ((6::(6::(Nil)))) @ (7::(0::(Nil))))) ((Nil)) = qreva ((qreva ((Nil)) ((6::(6::(7::(0::(Nil)))))) @ (Nil))) ((Nil))
Simplifying took 0.003155 seconds
Result : true
advanced_generalize done
=================================================
Progress: 80


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), qreva ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any4::any_list3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), qreva ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any4::any_list3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:11)
=================================================
Progress: 81


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), qreva ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any4::any_list3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), qreva ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any4::any_list3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any_list1
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list3:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
Model : any1: 7, any2: 2, any3: 0, any4: 0, any_list1: (Nil), any_list3: (Nil)
Model : any1: 1, any2: 1, any3: 4, any4: 2, any_list1: (Nil), any_list3: (Nil)
Model : any1: 0, any2: 8, any3: 7, any4: 8, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
qreva ((qreva ((Nil)) ((0::(0::(Nil)))) @ (2::(7::(Nil))))) ((Nil)) = qreva ((qreva ((Nil)) ((0::(0::(2::(7::(Nil)))))) @ (Nil))) ((Nil))
qreva ((qreva ((Nil)) ((2::(4::(Nil)))) @ (1::(1::(Nil))))) ((Nil)) = qreva ((qreva ((Nil)) ((2::(4::(1::(1::(Nil)))))) @ (Nil))) ((Nil))
qreva ((qreva ((Nil)) ((8::(7::(Nil)))) @ (8::(0::(Nil))))) ((Nil)) = qreva ((qreva ((Nil)) ((8::(7::(8::(0::(Nil)))))) @ (Nil))) ((Nil))
Simplifying took 0.002791 seconds
Result : true
advanced_generalize done
=================================================
Progress: 82


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), qreva ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any4::any_list3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), qreva ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any4::any_list3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any_list1
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list3:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
Model : any1: 4, any2: 7, any3: 6, any4: 3, any_list1: (Nil), any_list3: (6::(Nil))
Model : any1: 1, any2: 1, any3: 7, any4: 4, any_list1: (Nil), any_list3: (7::(7::(Nil)))
Model : any1: 5, any2: 8, any3: 4, any4: 6, any_list1: (Nil), any_list3: (4::(Nil))
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
qreva ((qreva ((6::(Nil))) ((3::(6::(Nil)))) @ (7::(4::(Nil))))) ((Nil)) = qreva ((qreva ((6::(Nil))) ((3::(6::(7::(4::(Nil)))))) @ (Nil))) ((Nil))
qreva ((qreva ((7::(7::(Nil)))) ((4::(7::(Nil)))) @ (1::(1::(Nil))))) ((Nil)) = qreva ((qreva ((7::(7::(Nil)))) ((4::(7::(1::(1::(Nil)))))) @ (Nil))) ((Nil))
qreva ((qreva ((4::(Nil))) ((6::(4::(Nil)))) @ (8::(5::(Nil))))) ((Nil)) = qreva ((qreva ((4::(Nil))) ((6::(4::(8::(5::(Nil)))))) @ (Nil))) ((Nil))
Simplifying took 0.005847 seconds
Result : true
advanced_generalize done
=================================================
Progress: 83


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), qreva ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any4::any_list3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), qreva ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any4::any_list3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:11)
=================================================
Progress: 84


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), qreva ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any4::any_list3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), qreva ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any4::any_list3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any_list1
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list3:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
Model : any1: 4, any2: 1, any3: 3, any4: 2, any_list1: (Nil), any_list3: (8::(Nil))
Model : any1: 3, any2: 3, any3: 2, any4: 0, any_list1: (Nil), any_list3: (Nil)
Model : any1: 4, any2: 1, any3: 4, any4: 0, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
qreva ((qreva ((8::(Nil))) ((2::(3::(Nil)))) @ (1::(4::(Nil))))) ((Nil)) = qreva ((qreva ((8::(Nil))) ((2::(3::(1::(4::(Nil)))))) @ (Nil))) ((Nil))
qreva ((qreva ((Nil)) ((0::(2::(Nil)))) @ (3::(3::(Nil))))) ((Nil)) = qreva ((qreva ((Nil)) ((0::(2::(3::(3::(Nil)))))) @ (Nil))) ((Nil))
qreva ((qreva ((Nil)) ((0::(4::(Nil)))) @ (1::(4::(Nil))))) ((Nil)) = qreva ((qreva ((Nil)) ((0::(4::(1::(4::(Nil)))))) @ (Nil))) ((Nil))
Simplifying took 0.003103 seconds
Result : true
advanced_generalize done
=================================================
Progress: 85


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), qreva ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any4::any_list3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), qreva ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any4::any_list3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any_list1
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list3:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
Model : any1: 2, any2: 4, any3: 3, any4: 1, any_list1: (Nil), any_list3: (Nil)
Model : any1: 8, any2: 1, any3: 5, any4: 5, any_list1: (0::(Nil)), any_list3: (Nil)
Model : any1: 3, any2: 8, any3: 1, any4: 5, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
qreva ((qreva ((Nil)) ((1::(3::(Nil)))) @ (4::(2::(Nil))))) ((Nil)) = qreva ((qreva ((Nil)) ((1::(3::(4::(2::(Nil)))))) @ (Nil))) ((Nil))
qreva ((qreva ((Nil)) ((5::(5::(Nil)))) @ (1::(8::(0::(Nil)))))) ((Nil)) = qreva ((qreva ((Nil)) ((5::(5::(1::(8::(Nil)))))) @ (0::(Nil)))) ((Nil))
qreva ((qreva ((Nil)) ((5::(1::(Nil)))) @ (8::(3::(Nil))))) ((Nil)) = qreva ((qreva ((Nil)) ((5::(1::(8::(3::(Nil)))))) @ (Nil))) ((Nil))
Simplifying took 0.003220 seconds
Result : true
advanced_generalize done
=================================================
Progress: 86


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), qreva ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any4::any_list3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), qreva ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any4::any_list3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any_list1
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list3:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
Model : any1: 3, any2: 2, any3: 3, any4: 0, any_list1: (Nil), any_list3: (Nil)
Model : any1: 3, any2: 8, any3: 7, any4: 5, any_list1: (Nil), any_list3: (Nil)
Model : any1: 2, any2: 5, any3: 5, any4: 8, any_list1: (Nil), any_list3: (3::(Nil))
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
qreva ((qreva ((Nil)) ((0::(3::(Nil)))) @ (2::(3::(Nil))))) ((Nil)) = qreva ((qreva ((Nil)) ((0::(3::(2::(3::(Nil)))))) @ (Nil))) ((Nil))
qreva ((qreva ((Nil)) ((5::(7::(Nil)))) @ (8::(3::(Nil))))) ((Nil)) = qreva ((qreva ((Nil)) ((5::(7::(8::(3::(Nil)))))) @ (Nil))) ((Nil))
qreva ((qreva ((3::(Nil))) ((8::(5::(Nil)))) @ (5::(2::(Nil))))) ((Nil)) = qreva ((qreva ((3::(Nil))) ((8::(5::(5::(2::(Nil)))))) @ (Nil))) ((Nil))
Simplifying took 0.003816 seconds
Result : true
advanced_generalize done
=================================================
Progress: 87


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), qreva ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any4::any_list3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any_list1(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))
any_list2 : any list
any4 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), qreva ((qreva (any_list3) ((any3::(Nil))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any3::(any2::(any1::(Nil))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any4::any_list3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any_list1
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list3:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
Model : any1: 8, any2: 8, any3: 5, any4: 7, any_list1: (Nil), any_list3: (Nil)
Model : any1: 2, any2: 5, any3: 6, any4: 1, any_list1: (Nil), any_list3: (Nil)
Model : any1: 6, any2: 7, any3: 6, any4: 6, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
qreva ((qreva ((Nil)) ((7::(5::(Nil)))) @ (8::(8::(Nil))))) ((Nil)) = qreva ((qreva ((Nil)) ((7::(5::(8::(8::(Nil)))))) @ (Nil))) ((Nil))
qreva ((qreva ((Nil)) ((1::(6::(Nil)))) @ (5::(2::(Nil))))) ((Nil)) = qreva ((qreva ((Nil)) ((1::(6::(5::(2::(Nil)))))) @ (Nil))) ((Nil))
qreva ((qreva ((Nil)) ((6::(6::(Nil)))) @ (7::(6::(Nil))))) ((Nil)) = qreva ((qreva ((Nil)) ((6::(6::(7::(6::(Nil)))))) @ (Nil))) ((Nil))
Simplifying took 0.003394 seconds
Result : true
advanced_generalize done
=================================================
Progress: 88


1st goal of : forall (any1:any) (any_list1:any list), qreva (qreva (any_list1) ((any1::(Nil)))) ((Nil)) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), qreva (qreva (any_list2) ((any1::(Nil)))) ((Nil)) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), qreva (qreva (any_list2) ((any2::(any1::(Nil))))) ((Nil)) = (any1::(any2::any_list2))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list), qreva (qreva (any_list1) ((any1::(Nil)))) ((Nil)) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), qreva (qreva (any_list2) ((any1::(Nil)))) ((Nil)) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), qreva (qreva (any_list2) ((any2::(any1::(Nil))))) ((Nil)) = (any1::qreva (qreva (any_list2) ((any2::(Nil)))) ((Nil)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- lemma3 in goal at 0(rank:5)
=================================================
Progress: 89


1st goal of : forall (any1:any) (any_list1:any list), qreva (qreva (any_list1) ((any1::(Nil)))) ((Nil)) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), qreva (qreva (any_list2) ((any1::(Nil)))) ((Nil)) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), qreva (qreva (any_list2) ((any2::(any1::(Nil))))) ((Nil)) = (any1::qreva (qreva (any_list2) ((any2::(Nil)))) ((Nil)))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list), qreva (qreva (any_list1) ((any1::(Nil)))) ((Nil)) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), qreva (qreva (any_list2) ((any1::(Nil)))) ((Nil)) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), qreva (qreva (any_list2) ((any2::(any1::(Nil))))) ((Nil)) = qreva ((qreva (any_list2) ((any2::(Nil))) @ (any1::(Nil)))) ((Nil))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- lemma3 in goal at 0
Lemma : forall (any2:any) (any_list2:any list) (arg6:any list), qreva (qreva (any_list2) ((any2::arg6))) ((Nil)) = qreva ((qreva (any_list2) ((any2::(Nil))) @ arg6)) ((Nil))
Model : any2: 1, any_list2: (Nil), arg6: (Nil)
Model : any2: 7, any_list2: (6::(Nil)), arg6: (Nil)
Model : any2: 8, any_list2: (Nil), arg6: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
qreva (qreva ((Nil)) ((1::(Nil)))) ((Nil)) = qreva ((qreva ((Nil)) ((1::(Nil))) @ (Nil))) ((Nil))
qreva (qreva ((6::(Nil))) ((7::(Nil)))) ((Nil)) = qreva ((qreva ((6::(Nil))) ((7::(Nil))) @ (Nil))) ((Nil))
qreva (qreva ((Nil)) ((8::(Nil)))) ((Nil)) = qreva ((qreva ((Nil)) ((8::(Nil))) @ (Nil))) ((Nil))
Simplifying took 0.000782 seconds
Result : true
advanced_generalize done


1st goal of : forall (any1:any) (any_list1:any list), qreva (qreva (any_list1) ((any1::(Nil)))) ((Nil)) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), qreva (qreva (any_list2) ((any1::(Nil)))) ((Nil)) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), qreva (qreva (any_list2) ((any2::(any1::(Nil))))) ((Nil)) = qreva ((qreva (any_list2) ((any2::(Nil))) @ (any1::(Nil)))) ((Nil))

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 90


1st goal of : forall (any1:any) (any_list1:any list), qreva (qreva (any_list1) ((any1::(Nil)))) ((Nil)) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), qreva (qreva (any_list2) ((any1::(Nil)))) ((Nil)) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), qreva (qreva (any_list2) ((any2::(any1::(Nil))))) ((Nil)) = qreva ((qreva (any_list2) ((any2::(Nil))) @ (any1::(Nil)))) ((Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (any2:any) (any_list2:any list) (arg6:any list), qreva (qreva (any_list2) ((any2::arg6))) ((Nil)) = qreva ((qreva (any_list2) ((any2::(Nil))) @ arg6)) ((Nil))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) ((any1::any_list2))) ((Nil)) = qreva ((qreva (any_list1) ((any1::(Nil))) @ any_list2)) ((Nil))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) ((any1::any_list2))) ((Nil)) = qreva ((qreva (any_list1) ((any1::(Nil))) @ any_list2)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:8)
=================================================
Progress: 91


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) ((any1::any_list2))) ((Nil)) = qreva ((qreva (any_list1) ((any1::(Nil))) @ any_list2)) ((Nil))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) ((any1::any_list2))) ((Nil)) = qreva ((qreva (any_list1) ((any1::(Nil))) @ any_list2)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> induction any_list1(rank : 8)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) ((any1::any_list2))) ((Nil)) = qreva ((qreva (any_list1) ((any1::(Nil))) @ any_list2)) ((Nil))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any_list2:any list), qreva (qreva ((Nil)) ((any1::any_list2))) ((Nil)) = qreva ((qreva ((Nil)) ((any1::(Nil))) @ any_list2)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7)
=================================================
Progress: 92


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) ((any1::any_list2))) ((Nil)) = qreva ((qreva (any_list1) ((any1::(Nil))) @ any_list2)) ((Nil))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any_list2:any list), qreva (qreva ((Nil)) ((any1::any_list2))) ((Nil)) = qreva ((qreva ((Nil)) ((any1::(Nil))) @ any_list2)) ((Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) ((any1::any_list2))) ((Nil)) = qreva ((qreva (any_list1) ((any1::(Nil))) @ any_list2)) ((Nil))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), qreva (qreva (any_list3) ((any1::any_list2))) ((Nil)) = qreva ((qreva (any_list3) ((any1::(Nil))) @ any_list2)) ((Nil))
Inductive1 : any_list1 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list2:any list), qreva (qreva ((any2::any_list3)) ((any1::any_list2))) ((Nil)) = qreva ((qreva ((any2::any_list3)) ((any1::(Nil))) @ any_list2)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7)
=================================================
Progress: 93


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) ((any1::any_list2))) ((Nil)) = qreva ((qreva (any_list1) ((any1::(Nil))) @ any_list2)) ((Nil))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), qreva (qreva (any_list3) ((any1::any_list2))) ((Nil)) = qreva ((qreva (any_list3) ((any1::(Nil))) @ any_list2)) ((Nil))
Inductive1 : any_list1 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list2:any list), qreva (qreva ((any2::any_list3)) ((any1::any_list2))) ((Nil)) = qreva ((qreva ((any2::any_list3)) ((any1::(Nil))) @ any_list2)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) ((any1::any_list2))) ((Nil)) = qreva ((qreva (any_list1) ((any1::(Nil))) @ any_list2)) ((Nil))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), qreva (qreva (any_list3) ((any1::any_list2))) ((Nil)) = qreva ((qreva (any_list3) ((any1::(Nil))) @ any_list2)) ((Nil))
Inductive1 : any_list1 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list2:any list), qreva (qreva (any_list3) ((any2::(any1::any_list2)))) ((Nil)) = qreva ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list2)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro any1(rank:7)
intro any_list2(rank:7)
rewrite IH1 in goal at 0(rank:23)
=================================================
Progress: 94


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) ((any1::any_list2))) ((Nil)) = qreva ((qreva (any_list1) ((any1::(Nil))) @ any_list2)) ((Nil))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), qreva (qreva (any_list3) ((any1::any_list2))) ((Nil)) = qreva ((qreva (any_list3) ((any1::(Nil))) @ any_list2)) ((Nil))
Inductive1 : any_list1 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list2:any list), qreva (qreva (any_list3) ((any2::(any1::any_list2)))) ((Nil)) = qreva ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list2)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any1(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) ((any1::any_list2))) ((Nil)) = qreva ((qreva (any_list1) ((any1::(Nil))) @ any_list2)) ((Nil))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), qreva (qreva (any_list3) ((any1::any_list2))) ((Nil)) = qreva ((qreva (any_list3) ((any1::(Nil))) @ any_list2)) ((Nil))
Inductive1 : any_list1 = (any2::any_list3)
any1 : any
---------------------------------------
forall (any_list2:any list), qreva (qreva (any_list3) ((any2::(any1::any_list2)))) ((Nil)) = qreva ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list2)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro any_list2(rank:7)
rewrite IH1 in goal at 0(rank:23)
=================================================
Progress: 95


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) ((any1::any_list2))) ((Nil)) = qreva ((qreva (any_list1) ((any1::(Nil))) @ any_list2)) ((Nil))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), qreva (qreva (any_list3) ((any1::any_list2))) ((Nil)) = qreva ((qreva (any_list3) ((any1::(Nil))) @ any_list2)) ((Nil))
Inductive1 : any_list1 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list2:any list), qreva (qreva (any_list3) ((any2::(any1::any_list2)))) ((Nil)) = qreva ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list2)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any_list2(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) ((any1::any_list2))) ((Nil)) = qreva ((qreva (any_list1) ((any1::(Nil))) @ any_list2)) ((Nil))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), qreva (qreva (any_list3) ((any1::any_list2))) ((Nil)) = qreva ((qreva (any_list3) ((any1::(Nil))) @ any_list2)) ((Nil))
Inductive1 : any_list1 = (any2::any_list3)
any_list2 : any list
---------------------------------------
forall (any1:any), qreva (qreva (any_list3) ((any2::(any1::any_list2)))) ((Nil)) = qreva ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list2)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:7)
=================================================
Progress: 96


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) ((any1::any_list2))) ((Nil)) = qreva ((qreva (any_list1) ((any1::(Nil))) @ any_list2)) ((Nil))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), qreva (qreva (any_list3) ((any1::any_list2))) ((Nil)) = qreva ((qreva (any_list3) ((any1::(Nil))) @ any_list2)) ((Nil))
Inductive1 : any_list1 = (any2::any_list3)
any1 : any
---------------------------------------
forall (any_list2:any list), qreva (qreva (any_list3) ((any2::(any1::any_list2)))) ((Nil)) = qreva ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list2)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any_list2(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) ((any1::any_list2))) ((Nil)) = qreva ((qreva (any_list1) ((any1::(Nil))) @ any_list2)) ((Nil))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), qreva (qreva (any_list3) ((any1::any_list2))) ((Nil)) = qreva ((qreva (any_list3) ((any1::(Nil))) @ any_list2)) ((Nil))
Inductive1 : any_list1 = (any2::any_list3)
any1 : any
any_list2 : any list
---------------------------------------
qreva (qreva (any_list3) ((any2::(any1::any_list2)))) ((Nil)) = qreva ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list2)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:7)
=================================================
Progress: 97


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) ((any1::any_list2))) ((Nil)) = qreva ((qreva (any_list1) ((any1::(Nil))) @ any_list2)) ((Nil))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), qreva (qreva (any_list3) ((any1::any_list2))) ((Nil)) = qreva ((qreva (any_list3) ((any1::(Nil))) @ any_list2)) ((Nil))
Inductive1 : any_list1 = (any2::any_list3)
any_list2 : any list
---------------------------------------
forall (any1:any), qreva (qreva (any_list3) ((any2::(any1::any_list2)))) ((Nil)) = qreva ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list2)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) ((any1::any_list2))) ((Nil)) = qreva ((qreva (any_list1) ((any1::(Nil))) @ any_list2)) ((Nil))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), qreva (qreva (any_list3) ((any1::any_list2))) ((Nil)) = qreva ((qreva (any_list3) ((any1::(Nil))) @ any_list2)) ((Nil))
Inductive1 : any_list1 = (any2::any_list3)
any_list2 : any list
---------------------------------------
forall (any1:any), qreva ((qreva (any_list3) ((any2::(Nil))) @ (any1::any_list2))) ((Nil)) = qreva ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list2)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list2
rewrite IH1 in goal at 0
Lemma : forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list), qreva ((qreva (any_list3) ((any2::(Nil))) @ (any1::any_list2))) ((Nil)) = qreva ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list2)) ((Nil))
Model : any1: 2, any2: 4, any_list2: (6::(3::(Nil))), any_list3: (Nil)
Model : any1: 8, any2: 0, any_list2: (Nil), any_list3: (Nil)
Model : any1: 7, any2: 0, any_list2: (Nil), any_list3: (2::(Nil))
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
qreva ((qreva ((Nil)) ((4::(Nil))) @ (2::(6::(3::(Nil)))))) ((Nil)) = qreva ((qreva ((Nil)) ((4::(2::(Nil)))) @ (6::(3::(Nil))))) ((Nil))
qreva ((qreva ((Nil)) ((0::(Nil))) @ (8::(Nil)))) ((Nil)) = qreva ((qreva ((Nil)) ((0::(8::(Nil)))) @ (Nil))) ((Nil))
qreva ((qreva ((2::(Nil))) ((0::(Nil))) @ (7::(Nil)))) ((Nil)) = qreva ((qreva ((2::(Nil))) ((0::(7::(Nil)))) @ (Nil))) ((Nil))
Simplifying took 0.001874 seconds
Result : true
advanced_generalize done
=================================================
Progress: 98


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) ((any1::any_list2))) ((Nil)) = qreva ((qreva (any_list1) ((any1::(Nil))) @ any_list2)) ((Nil))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), qreva (qreva (any_list3) ((any1::any_list2))) ((Nil)) = qreva ((qreva (any_list3) ((any1::(Nil))) @ any_list2)) ((Nil))
Inductive1 : any_list1 = (any2::any_list3)
any1 : any
any_list2 : any list
---------------------------------------
qreva (qreva (any_list3) ((any2::(any1::any_list2)))) ((Nil)) = qreva ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list2)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 7)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) ((any1::any_list2))) ((Nil)) = qreva ((qreva (any_list1) ((any1::(Nil))) @ any_list2)) ((Nil))
any_list1 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list2:any list), qreva (qreva (any_list3) ((any1::any_list2))) ((Nil)) = qreva ((qreva (any_list3) ((any1::(Nil))) @ any_list2)) ((Nil))
Inductive1 : any_list1 = (any2::any_list3)
any1 : any
any_list2 : any list
---------------------------------------
qreva ((qreva (any_list3) ((any2::(Nil))) @ (any1::any_list2))) ((Nil)) = qreva ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list2)) ((Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list2
rewrite IH1 in goal at 0
Lemma : forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list), qreva ((qreva (any_list3) ((any2::(Nil))) @ (any1::any_list2))) ((Nil)) = qreva ((qreva (any_list3) ((any2::(any1::(Nil)))) @ any_list2)) ((Nil))
Model : any1: 4, any2: 0, any_list2: (Nil), any_list3: (Nil)
Model : any1: 3, any2: 4, any_list2: (Nil), any_list3: (0::(Nil))
Model : any1: 8, any2: 6, any_list2: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
qreva ((qreva ((Nil)) ((0::(Nil))) @ (4::(Nil)))) ((Nil)) = qreva ((qreva ((Nil)) ((0::(4::(Nil)))) @ (Nil))) ((Nil))
qreva ((qreva ((0::(Nil))) ((4::(Nil))) @ (3::(Nil)))) ((Nil)) = qreva ((qreva ((0::(Nil))) ((4::(3::(Nil)))) @ (Nil))) ((Nil))
qreva ((qreva ((Nil)) ((6::(Nil))) @ (8::(Nil)))) ((Nil)) = qreva ((qreva ((Nil)) ((6::(8::(Nil)))) @ (Nil))) ((Nil))
Simplifying took 0.001312 seconds
Result : true
advanced_generalize done
=================================================
Progress: 99


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> induction any_list2(rank : 14)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), qreva ((qreva ((Nil)) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva ((Nil)) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))

1 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13)
=================================================
Progress: 100


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), qreva ((qreva ((Nil)) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva ((Nil)) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))

1 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any5::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), qreva ((qreva ((any5::any_list3)) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva ((any5::any_list3)) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:13)
=================================================
Progress: 101


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any5::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), qreva ((qreva ((any5::any_list3)) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva ((any5::any_list3)) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> simpl in goal(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any5::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 5
intro any1(rank:13)
intro any3(rank:13)
intro any4(rank:13)
intro any_list1(rank:13)
intro any2(rank:13)
=================================================
Progress: 102


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any5::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any1(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 4
intro any2(rank:13)
intro any3(rank:13)
intro any4(rank:13)
intro any_list1(rank:13)
=================================================
Progress: 103


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any5::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any2(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any5::any_list3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 3
intro any3(rank:13)
intro any4(rank:13)
intro any_list1(rank:13)
=================================================
Progress: 104


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any5::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any3(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any5::any_list3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro any4(rank:13)
intro any_list1(rank:13)
=================================================
Progress: 105


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any5::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any4(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any5::any_list3)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), qreva ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:13)
=================================================
Progress: 106


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any5::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list1(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any5::any_list3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), qreva ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any_list1
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list3:any list), qreva ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1)) ((Nil))
Model : any1: 4, any2: 7, any3: 0, any4: 0, any5: 2, any_list1: (0::(Nil)), any_list3: (Nil)
Model : any1: 0, any2: 8, any3: 5, any4: 2, any5: 5, any_list1: (Nil), any_list3: (Nil)
Model : any1: 0, any2: 5, any3: 3, any4: 8, any5: 3, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
qreva ((qreva ((Nil)) ((2::(0::(0::(Nil))))) @ (7::(4::(0::(Nil)))))) ((Nil)) = qreva ((qreva ((Nil)) ((2::(0::(0::(7::(4::(Nil))))))) @ (0::(Nil)))) ((Nil))
qreva ((qreva ((Nil)) ((5::(2::(5::(Nil))))) @ (8::(0::(Nil))))) ((Nil)) = qreva ((qreva ((Nil)) ((5::(2::(5::(8::(0::(Nil))))))) @ (Nil))) ((Nil))
qreva ((qreva ((Nil)) ((3::(8::(3::(Nil))))) @ (5::(0::(Nil))))) ((Nil)) = qreva ((qreva ((Nil)) ((3::(8::(3::(5::(0::(Nil))))))) @ (Nil))) ((Nil))
Simplifying took 0.004100 seconds
Result : true
advanced_generalize done


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any5::any_list3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), qreva ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 107


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any5::any_list3)
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), qreva ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list3:any list), qreva ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1)) ((Nil))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1)) ((Nil))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1)) ((Nil))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:16)
=================================================
Progress: 108


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any2(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 3
intro any3(rank:13)
intro any4(rank:13)
intro any_list1(rank:13)
=================================================
Progress: 109


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any3(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro any4(rank:13)
intro any_list1(rank:13)
=================================================
Progress: 110


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any4(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), qreva ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:13)
=================================================
Progress: 111


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list1(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any) (any4:any), qreva ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any_list1
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list3:any list), qreva ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1)) ((Nil))
Model : any1: 3, any2: 5, any3: 8, any4: 8, any5: 1, any_list1: (4::(Nil)), any_list3: (Nil)
Model : any1: 8, any2: 8, any3: 2, any4: 4, any5: 7, any_list1: (Nil), any_list3: (Nil)
Model : any1: 0, any2: 3, any3: 6, any4: 6, any5: 0, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
qreva ((qreva ((Nil)) ((1::(8::(8::(Nil))))) @ (5::(3::(4::(Nil)))))) ((Nil)) = qreva ((qreva ((Nil)) ((1::(8::(8::(5::(3::(Nil))))))) @ (4::(Nil)))) ((Nil))
qreva ((qreva ((Nil)) ((7::(4::(2::(Nil))))) @ (8::(8::(Nil))))) ((Nil)) = qreva ((qreva ((Nil)) ((7::(4::(2::(8::(8::(Nil))))))) @ (Nil))) ((Nil))
qreva ((qreva ((Nil)) ((0::(6::(6::(Nil))))) @ (3::(0::(Nil))))) ((Nil)) = qreva ((qreva ((Nil)) ((0::(6::(6::(3::(0::(Nil))))))) @ (Nil))) ((Nil))
Simplifying took 0.004931 seconds
Result : true
advanced_generalize done
=================================================
Progress: 112


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any5::any_list3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any3(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any5::any_list3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro any4(rank:13)
intro any_list1(rank:13)
=================================================
Progress: 113


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any5::any_list3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any4(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any5::any_list3)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), qreva ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:13)
=================================================
Progress: 114


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any5::any_list3)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list1(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any5::any_list3)
any2 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any) (any4:any), qreva ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any_list1
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list3:any list), qreva ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1)) ((Nil))
Model : any1: 0, any2: 0, any3: 3, any4: 0, any5: 4, any_list1: (Nil), any_list3: (Nil)
Model : any1: 0, any2: 8, any3: 8, any4: 1, any5: 0, any_list1: (Nil), any_list3: (Nil)
Model : any1: 5, any2: 5, any3: 0, any4: 3, any5: 3, any_list1: (5::(Nil)), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
qreva ((qreva ((Nil)) ((4::(0::(3::(Nil))))) @ (0::(0::(Nil))))) ((Nil)) = qreva ((qreva ((Nil)) ((4::(0::(3::(0::(0::(Nil))))))) @ (Nil))) ((Nil))
qreva ((qreva ((Nil)) ((0::(1::(8::(Nil))))) @ (8::(0::(Nil))))) ((Nil)) = qreva ((qreva ((Nil)) ((0::(1::(8::(8::(0::(Nil))))))) @ (Nil))) ((Nil))
qreva ((qreva ((Nil)) ((3::(3::(0::(Nil))))) @ (5::(5::(5::(Nil)))))) ((Nil)) = qreva ((qreva ((Nil)) ((3::(3::(0::(5::(5::(Nil))))))) @ (5::(Nil)))) ((Nil))
Simplifying took 0.004134 seconds
Result : true
advanced_generalize done
=================================================
Progress: 115


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any5::any_list3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any4(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any5::any_list3)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), qreva ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:13)
=================================================
Progress: 116


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any5::any_list3)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list1(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any5::any_list3)
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any4:any), qreva ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any_list1
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list3:any list), qreva ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1)) ((Nil))
Model : any1: 4, any2: 2, any3: 0, any4: 0, any5: 8, any_list1: (Nil), any_list3: (Nil)
Model : any1: 3, any2: 3, any3: 0, any4: 3, any5: 5, any_list1: (Nil), any_list3: (Nil)
Model : any1: 0, any2: 8, any3: 0, any4: 4, any5: 6, any_list1: (Nil), any_list3: (3::(Nil))
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
qreva ((qreva ((Nil)) ((8::(0::(0::(Nil))))) @ (2::(4::(Nil))))) ((Nil)) = qreva ((qreva ((Nil)) ((8::(0::(0::(2::(4::(Nil))))))) @ (Nil))) ((Nil))
qreva ((qreva ((Nil)) ((5::(3::(0::(Nil))))) @ (3::(3::(Nil))))) ((Nil)) = qreva ((qreva ((Nil)) ((5::(3::(0::(3::(3::(Nil))))))) @ (Nil))) ((Nil))
qreva ((qreva ((3::(Nil))) ((6::(4::(0::(Nil))))) @ (8::(0::(Nil))))) ((Nil)) = qreva ((qreva ((3::(Nil))) ((6::(4::(0::(8::(0::(Nil))))))) @ (Nil))) ((Nil))
Simplifying took 0.004408 seconds
Result : true
advanced_generalize done
=================================================
Progress: 117


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any5::any_list3)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), qreva ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list1(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any5::any_list3)
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any) (any3:any), qreva ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any4
intro any_list1
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list3:any list), qreva ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1)) ((Nil))
Model : any1: 0, any2: 6, any3: 4, any4: 1, any5: 0, any_list1: (Nil), any_list3: (Nil)
Model : any1: 0, any2: 2, any3: 0, any4: 7, any5: 0, any_list1: (Nil), any_list3: (3::(Nil))
Model : any1: 8, any2: 0, any3: 6, any4: 0, any5: 7, any_list1: (4::(Nil)), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
qreva ((qreva ((Nil)) ((0::(1::(4::(Nil))))) @ (6::(0::(Nil))))) ((Nil)) = qreva ((qreva ((Nil)) ((0::(1::(4::(6::(0::(Nil))))))) @ (Nil))) ((Nil))
qreva ((qreva ((3::(Nil))) ((0::(7::(0::(Nil))))) @ (2::(0::(Nil))))) ((Nil)) = qreva ((qreva ((3::(Nil))) ((0::(7::(0::(2::(0::(Nil))))))) @ (Nil))) ((Nil))
qreva ((qreva ((Nil)) ((7::(0::(6::(Nil))))) @ (0::(8::(4::(Nil)))))) ((Nil)) = qreva ((qreva ((Nil)) ((7::(0::(6::(0::(8::(Nil))))))) @ (4::(Nil)))) ((Nil))
Simplifying took 0.004320 seconds
Result : true
advanced_generalize done
=================================================
Progress: 118


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any3(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro any4(rank:13)
intro any_list1(rank:13)
=================================================
Progress: 119


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any4(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any) (any_list1:any list), qreva ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:13)
=================================================
Progress: 120


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list1(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any2 : any
any_list1 : any list
---------------------------------------
forall (any3:any) (any4:any), qreva ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any_list1
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list3:any list), qreva ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1)) ((Nil))
Model : any1: 0, any2: 2, any3: 1, any4: 2, any5: 2, any_list1: (Nil), any_list3: (Nil)
Model : any1: 0, any2: 7, any3: 7, any4: 2, any5: 8, any_list1: (Nil), any_list3: (Nil)
Model : any1: 3, any2: 8, any3: 5, any4: 5, any5: 1, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
qreva ((qreva ((Nil)) ((2::(2::(1::(Nil))))) @ (2::(0::(Nil))))) ((Nil)) = qreva ((qreva ((Nil)) ((2::(2::(1::(2::(0::(Nil))))))) @ (Nil))) ((Nil))
qreva ((qreva ((Nil)) ((8::(2::(7::(Nil))))) @ (7::(0::(Nil))))) ((Nil)) = qreva ((qreva ((Nil)) ((8::(2::(7::(7::(0::(Nil))))))) @ (Nil))) ((Nil))
qreva ((qreva ((Nil)) ((1::(5::(5::(Nil))))) @ (8::(3::(Nil))))) ((Nil)) = qreva ((qreva ((Nil)) ((1::(5::(5::(8::(3::(Nil))))))) @ (Nil))) ((Nil))
Simplifying took 0.004007 seconds
Result : true
advanced_generalize done
=================================================
Progress: 121


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any4(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any) (any_list1:any list), qreva ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:13)
=================================================
Progress: 122


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list1(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any4:any), qreva ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any_list1
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list3:any list), qreva ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1)) ((Nil))
Model : any1: 6, any2: 0, any3: 6, any4: 3, any5: 1, any_list1: (Nil), any_list3: (Nil)
Model : any1: 4, any2: 3, any3: 6, any4: 3, any5: 0, any_list1: (6::(Nil)), any_list3: (5::(Nil))
Model : any1: 4, any2: 8, any3: 2, any4: 5, any5: 0, any_list1: (Nil), any_list3: (6::(Nil))
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
qreva ((qreva ((Nil)) ((1::(3::(6::(Nil))))) @ (0::(6::(Nil))))) ((Nil)) = qreva ((qreva ((Nil)) ((1::(3::(6::(0::(6::(Nil))))))) @ (Nil))) ((Nil))
qreva ((qreva ((5::(Nil))) ((0::(3::(6::(Nil))))) @ (3::(4::(6::(Nil)))))) ((Nil)) = qreva ((qreva ((5::(Nil))) ((0::(3::(6::(3::(4::(Nil))))))) @ (6::(Nil)))) ((Nil))
qreva ((qreva ((6::(Nil))) ((0::(5::(2::(Nil))))) @ (8::(4::(Nil))))) ((Nil)) = qreva ((qreva ((6::(Nil))) ((0::(5::(2::(8::(4::(Nil))))))) @ (Nil))) ((Nil))
Simplifying took 0.005822 seconds
Result : true
advanced_generalize done
=================================================
Progress: 123


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any) (any_list1:any list), qreva ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list1(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any) (any3:any), qreva ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any4
intro any_list1
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list3:any list), qreva ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1)) ((Nil))
Model : any1: 0, any2: 6, any3: 0, any4: 5, any5: 5, any_list1: (Nil), any_list3: (Nil)
Model : any1: 7, any2: 4, any3: 0, any4: 0, any5: 1, any_list1: (Nil), any_list3: (Nil)
Model : any1: 2, any2: 4, any3: 0, any4: 0, any5: 3, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
qreva ((qreva ((Nil)) ((5::(5::(0::(Nil))))) @ (6::(0::(Nil))))) ((Nil)) = qreva ((qreva ((Nil)) ((5::(5::(0::(6::(0::(Nil))))))) @ (Nil))) ((Nil))
qreva ((qreva ((Nil)) ((1::(0::(0::(Nil))))) @ (4::(7::(Nil))))) ((Nil)) = qreva ((qreva ((Nil)) ((1::(0::(0::(4::(7::(Nil))))))) @ (Nil))) ((Nil))
qreva ((qreva ((Nil)) ((3::(0::(0::(Nil))))) @ (4::(2::(Nil))))) ((Nil)) = qreva ((qreva ((Nil)) ((3::(0::(0::(4::(2::(Nil))))))) @ (Nil))) ((Nil))
Simplifying took 0.003392 seconds
Result : true
advanced_generalize done
=================================================
Progress: 124


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any5::any_list3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any4(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any5::any_list3)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any_list1:any list), qreva ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:13)
=================================================
Progress: 125


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any5::any_list3)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list1(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any5::any_list3)
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any4:any), qreva ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any_list1
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list3:any list), qreva ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1)) ((Nil))
Model : any1: 2, any2: 7, any3: 5, any4: 4, any5: 4, any_list1: (Nil), any_list3: (6::(Nil))
Model : any1: 4, any2: 0, any3: 7, any4: 5, any5: 8, any_list1: (Nil), any_list3: (Nil)
Model : any1: 8, any2: 2, any3: 7, any4: 6, any5: 1, any_list1: (Nil), any_list3: (4::(0::(Nil)))
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
qreva ((qreva ((6::(Nil))) ((4::(4::(5::(Nil))))) @ (7::(2::(Nil))))) ((Nil)) = qreva ((qreva ((6::(Nil))) ((4::(4::(5::(7::(2::(Nil))))))) @ (Nil))) ((Nil))
qreva ((qreva ((Nil)) ((8::(5::(7::(Nil))))) @ (0::(4::(Nil))))) ((Nil)) = qreva ((qreva ((Nil)) ((8::(5::(7::(0::(4::(Nil))))))) @ (Nil))) ((Nil))
qreva ((qreva ((4::(0::(Nil)))) ((1::(6::(7::(Nil))))) @ (2::(8::(Nil))))) ((Nil)) = qreva ((qreva ((4::(0::(Nil)))) ((1::(6::(7::(2::(8::(Nil))))))) @ (Nil))) ((Nil))
Simplifying took 0.006648 seconds
Result : true
advanced_generalize done
=================================================
Progress: 126


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any5::any_list3)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any) (any_list1:any list), qreva ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list1(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any5::any_list3)
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any3:any), qreva ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any4
intro any_list1
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list3:any list), qreva ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1)) ((Nil))
Model : any1: 1, any2: 4, any3: 7, any4: 7, any5: 0, any_list1: (Nil), any_list3: (Nil)
Model : any1: 1, any2: 0, any3: 5, any4: 5, any5: 4, any_list1: (Nil), any_list3: (Nil)
Model : any1: 2, any2: 6, any3: 5, any4: 0, any5: 8, any_list1: (Nil), any_list3: (1::(Nil))
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
qreva ((qreva ((Nil)) ((0::(7::(7::(Nil))))) @ (4::(1::(Nil))))) ((Nil)) = qreva ((qreva ((Nil)) ((0::(7::(7::(4::(1::(Nil))))))) @ (Nil))) ((Nil))
qreva ((qreva ((Nil)) ((4::(5::(5::(Nil))))) @ (0::(1::(Nil))))) ((Nil)) = qreva ((qreva ((Nil)) ((4::(5::(5::(0::(1::(Nil))))))) @ (Nil))) ((Nil))
qreva ((qreva ((1::(Nil))) ((8::(0::(5::(Nil))))) @ (6::(2::(Nil))))) ((Nil)) = qreva ((qreva ((1::(Nil))) ((8::(0::(5::(6::(2::(Nil))))))) @ (Nil))) ((Nil))
Simplifying took 0.005019 seconds
Result : true
advanced_generalize done
=================================================
Progress: 127


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any5::any_list3)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), qreva ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list1(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any5::any_list3)
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any) (any2:any), qreva ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any4
intro any_list1
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list3:any list), qreva ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1)) ((Nil))
Model : any1: 0, any2: 4, any3: 4, any4: 8, any5: 2, any_list1: (Nil), any_list3: (Nil)
Model : any1: 5, any2: 3, any3: 0, any4: 1, any5: 1, any_list1: (5::(Nil)), any_list3: (Nil)
Model : any1: 0, any2: 1, any3: 7, any4: 7, any5: 4, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
qreva ((qreva ((Nil)) ((2::(8::(4::(Nil))))) @ (4::(0::(Nil))))) ((Nil)) = qreva ((qreva ((Nil)) ((2::(8::(4::(4::(0::(Nil))))))) @ (Nil))) ((Nil))
qreva ((qreva ((Nil)) ((1::(1::(0::(Nil))))) @ (3::(5::(5::(Nil)))))) ((Nil)) = qreva ((qreva ((Nil)) ((1::(1::(0::(3::(5::(Nil))))))) @ (5::(Nil)))) ((Nil))
qreva ((qreva ((Nil)) ((4::(7::(7::(Nil))))) @ (1::(0::(Nil))))) ((Nil)) = qreva ((qreva ((Nil)) ((4::(7::(7::(1::(0::(Nil))))))) @ (Nil))) ((Nil))
Simplifying took 0.004067 seconds
Result : true
advanced_generalize done
=================================================
Progress: 128


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any4(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any_list1:any list), qreva ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any_list1(rank:13)
=================================================
Progress: 129


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list1(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any2 : any
any3 : any
any_list1 : any list
---------------------------------------
forall (any4:any), qreva ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any_list1
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list3:any list), qreva ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1)) ((Nil))
Model : any1: 6, any2: 6, any3: 5, any4: 2, any5: 7, any_list1: (Nil), any_list3: (Nil)
Model : any1: 8, any2: 0, any3: 4, any4: 0, any5: 0, any_list1: (6::(5::(Nil))), any_list3: (Nil)
Model : any1: 3, any2: 8, any3: 8, any4: 0, any5: 0, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
qreva ((qreva ((Nil)) ((7::(2::(5::(Nil))))) @ (6::(6::(Nil))))) ((Nil)) = qreva ((qreva ((Nil)) ((7::(2::(5::(6::(6::(Nil))))))) @ (Nil))) ((Nil))
qreva ((qreva ((Nil)) ((0::(0::(4::(Nil))))) @ (0::(8::(6::(5::(Nil))))))) ((Nil)) = qreva ((qreva ((Nil)) ((0::(0::(4::(0::(8::(Nil))))))) @ (6::(5::(Nil))))) ((Nil))
qreva ((qreva ((Nil)) ((0::(0::(8::(Nil))))) @ (8::(3::(Nil))))) ((Nil)) = qreva ((qreva ((Nil)) ((0::(0::(8::(8::(3::(Nil))))))) @ (Nil))) ((Nil))
Simplifying took 0.004911 seconds
Result : true
advanced_generalize done
=================================================
Progress: 130


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any) (any_list1:any list), qreva ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list1(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any2 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any3:any), qreva ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any4
intro any_list1
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list3:any list), qreva ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1)) ((Nil))
Model : any1: 8, any2: 4, any3: 7, any4: 0, any5: 2, any_list1: (Nil), any_list3: (4::(8::(Nil)))
Model : any1: 7, any2: 4, any3: 4, any4: 3, any5: 2, any_list1: (Nil), any_list3: (Nil)
Model : any1: 2, any2: 6, any3: 3, any4: 6, any5: 0, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
qreva ((qreva ((4::(8::(Nil)))) ((2::(0::(7::(Nil))))) @ (4::(8::(Nil))))) ((Nil)) = qreva ((qreva ((4::(8::(Nil)))) ((2::(0::(7::(4::(8::(Nil))))))) @ (Nil))) ((Nil))
qreva ((qreva ((Nil)) ((2::(3::(4::(Nil))))) @ (4::(7::(Nil))))) ((Nil)) = qreva ((qreva ((Nil)) ((2::(3::(4::(4::(7::(Nil))))))) @ (Nil))) ((Nil))
qreva ((qreva ((Nil)) ((0::(6::(3::(Nil))))) @ (6::(2::(Nil))))) ((Nil)) = qreva ((qreva ((Nil)) ((0::(6::(3::(6::(2::(Nil))))))) @ (Nil))) ((Nil))
Simplifying took 0.005635 seconds
Result : true
advanced_generalize done
=================================================
Progress: 131


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any) (any_list1:any list), qreva ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list1(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any2:any), qreva ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any4
intro any_list1
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list3:any list), qreva ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1)) ((Nil))
Model : any1: 5, any2: 1, any3: 1, any4: 1, any5: 6, any_list1: (Nil), any_list3: (Nil)
Model : any1: 0, any2: 0, any3: 0, any4: 7, any5: 3, any_list1: (Nil), any_list3: (Nil)
Model : any1: 0, any2: 3, any3: 8, any4: 2, any5: 8, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
qreva ((qreva ((Nil)) ((6::(1::(1::(Nil))))) @ (1::(5::(Nil))))) ((Nil)) = qreva ((qreva ((Nil)) ((6::(1::(1::(1::(5::(Nil))))))) @ (Nil))) ((Nil))
qreva ((qreva ((Nil)) ((3::(7::(0::(Nil))))) @ (0::(0::(Nil))))) ((Nil)) = qreva ((qreva ((Nil)) ((3::(7::(0::(0::(0::(Nil))))))) @ (Nil))) ((Nil))
qreva ((qreva ((Nil)) ((8::(2::(8::(Nil))))) @ (3::(0::(Nil))))) ((Nil)) = qreva ((qreva ((Nil)) ((8::(2::(8::(3::(0::(Nil))))))) @ (Nil))) ((Nil))
Simplifying took 0.003441 seconds
Result : true
advanced_generalize done
=================================================
Progress: 132


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any5::any_list3)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any_list1:any list), qreva ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list1(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any5::any_list3)
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
forall (any1:any), qreva ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any4
intro any_list1
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list3:any list), qreva ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1)) ((Nil))
Model : any1: 0, any2: 5, any3: 6, any4: 4, any5: 5, any_list1: (Nil), any_list3: (2::(Nil))
Model : any1: 0, any2: 6, any3: 7, any4: 5, any5: 6, any_list1: (Nil), any_list3: (0::(Nil))
Model : any1: 7, any2: 2, any3: 0, any4: 3, any5: 1, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
qreva ((qreva ((2::(Nil))) ((5::(4::(6::(Nil))))) @ (5::(0::(Nil))))) ((Nil)) = qreva ((qreva ((2::(Nil))) ((5::(4::(6::(5::(0::(Nil))))))) @ (Nil))) ((Nil))
qreva ((qreva ((0::(Nil))) ((6::(5::(7::(Nil))))) @ (6::(0::(Nil))))) ((Nil)) = qreva ((qreva ((0::(Nil))) ((6::(5::(7::(6::(0::(Nil))))))) @ (Nil))) ((Nil))
qreva ((qreva ((Nil)) ((1::(3::(0::(Nil))))) @ (2::(7::(Nil))))) ((Nil)) = qreva ((qreva ((Nil)) ((1::(3::(0::(2::(7::(Nil))))))) @ (Nil))) ((Nil))
Simplifying took 0.005422 seconds
Result : true
advanced_generalize done
=================================================
Progress: 133


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any_list1:any list), qreva ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any_list1(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list) (any_list2:any list), qreva ((qreva (any_list2) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list2) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
any_list2 : any list
any5 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), qreva ((qreva (any_list3) ((any4::(any3::(Nil)))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any4::(any3::(any2::(any1::(Nil)))))) @ any_list1)) ((Nil))
Inductive1 : any_list2 = (any5::any_list3)
any1 : any
any2 : any
any3 : any
any4 : any
any_list1 : any list
---------------------------------------
qreva ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1)) ((Nil))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any4
intro any_list1
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list) (any_list3:any list), qreva ((qreva (any_list3) ((any5::(any4::(any3::(Nil))))) @ (any2::(any1::any_list1)))) ((Nil)) = qreva ((qreva (any_list3) ((any5::(any4::(any3::(any2::(any1::(Nil))))))) @ any_list1)) ((Nil))
Model : any1: 6, any2: 7, any3: 4, any4: 0, any5: 3, any_list1: (Nil), any_list3: (Nil)
Model : any1: 1, any2: 5, any3: 1, any4: 0, any5: 0, any_list1: (7::(Nil)), any_list3: (Nil)
Model : any1: 3, any2: 8, any3: 0, any4: 0, any5: 5, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
qreva ((qreva ((Nil)) ((3::(0::(4::(Nil))))) @ (7::(6::(Nil))))) ((Nil)) = qreva ((qreva ((Nil)) ((3::(0::(4::(7::(6::(Nil))))))) @ (Nil))) ((Nil))
qreva ((qreva ((Nil)) ((0::(0::(1::(Nil))))) @ (5::(1::(7::(Nil)))))) ((Nil)) = qreva ((qreva ((Nil)) ((0::(0::(1::(5::(1::(Nil))))))) @ (7::(Nil)))) ((Nil))
qreva ((qreva ((Nil)) ((5::(0::(0::(Nil))))) @ (8::(3::(Nil))))) ((Nil)) = qreva ((qreva ((Nil)) ((5::(0::(0::(8::(3::(Nil))))))) @ (Nil))) ((Nil))
Simplifying took 0.004206 seconds
Result : true
advanced_generalize done
=================================================
Progress: 134


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), qreva (any_list2) ((Nil)) = mk_rhs1 (any_list2) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> induction any_list2(rank : 15)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
qreva ((Nil)) ((Nil)) = mk_rhs1 ((Nil)) ((Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6)
=================================================
Progress: 135


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
qreva ((Nil)) ((Nil)) = mk_rhs1 ((Nil)) ((Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : qreva (any_list3) ((Nil)) = mk_rhs1 (any_list3) ((Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
qreva ((any1::any_list3)) ((Nil)) = mk_rhs1 ((any1::any_list3)) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:6)
=================================================
Progress: 136


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : qreva (any_list3) ((Nil)) = mk_rhs1 (any_list3) ((Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
qreva ((any1::any_list3)) ((Nil)) = mk_rhs1 ((any1::any_list3)) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : qreva (any_list3) ((Nil)) = mk_rhs1 (any_list3) ((Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
qreva (any_list3) ((any1::(Nil))) = mk_rhs1 (any_list3) ((any1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
advanced_generalize done


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : qreva (any_list3) ((Nil)) = mk_rhs1 (any_list3) ((Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
qreva (any_list3) ((any1::(Nil))) = mk_rhs1 (any_list3) ((any1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 137


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : qreva (any_list3) ((Nil)) = mk_rhs1 (any_list3) ((Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
qreva (any_list3) ((any1::(Nil))) = mk_rhs1 (any_list3) ((any1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (any_list3:any list) (lst:any list), qreva (any_list3) (lst) = mk_rhs1 (any_list3) (lst)(rank : 0)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (any_list1) (any_list2) = mk_rhs1 (any_list1) (any_list2)

---------------------------------------
forall (any_list1:any list) (any_list2:any list), qreva (any_list1) (any_list2) = mk_rhs1 (any_list1) (any_list2)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:8)
=================================================
Progress: 138


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (any_list1) (any_list2) = mk_rhs1 (any_list1) (any_list2)

---------------------------------------
forall (any_list1:any list) (any_list2:any list), qreva (any_list1) (any_list2) = mk_rhs1 (any_list1) (any_list2)

0 goal(s) more...

2 conjecture(s) more...
>>> induction any_list1(rank : 8)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (any_list1) (any_list2) = mk_rhs1 (any_list1) (any_list2)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), qreva ((Nil)) (any_list2) = mk_rhs1 ((Nil)) (any_list2)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7)
=================================================
Progress: 139


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (any_list1) (any_list2) = mk_rhs1 (any_list1) (any_list2)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), qreva ((Nil)) (any_list2) = mk_rhs1 ((Nil)) (any_list2)

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (any_list1) (any_list2) = mk_rhs1 (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), qreva (any_list3) (any_list2) = mk_rhs1 (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), qreva ((any1::any_list3)) (any_list2) = mk_rhs1 ((any1::any_list3)) (any_list2)

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7)
=================================================
Progress: 140


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (any_list1) (any_list2) = mk_rhs1 (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), qreva (any_list3) (any_list2) = mk_rhs1 (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), qreva ((any1::any_list3)) (any_list2) = mk_rhs1 ((any1::any_list3)) (any_list2)

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (any_list1) (any_list2) = mk_rhs1 (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), qreva (any_list3) (any_list2) = mk_rhs1 (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), qreva (any_list3) ((any1::any_list2)) = mk_rhs1 (any_list3) ((any1::any_list2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro any_list2(rank:7)
rewrite IH1 in goal at 0(rank:15)
rewrite <- IH1 in goal at 0(rank:15)
=================================================
Progress: 141


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (any_list1) (any_list2) = mk_rhs1 (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), qreva (any_list3) (any_list2) = mk_rhs1 (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), qreva (any_list3) ((any1::any_list2)) = mk_rhs1 (any_list3) ((any1::any_list2))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any_list2(rank : 7)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (any_list1) (any_list2) = mk_rhs1 (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), qreva (any_list3) (any_list2) = mk_rhs1 (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
---------------------------------------
qreva (any_list3) ((any1::any_list2)) = mk_rhs1 (any_list3) ((any1::any_list2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:15)
rewrite <- IH1 in goal at 0(rank:15)
=================================================
Progress: 142


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (any_list1) (any_list2) = mk_rhs1 (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), qreva (any_list3) (any_list2) = mk_rhs1 (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), qreva (any_list3) ((any1::any_list2)) = mk_rhs1 (any_list3) ((any1::any_list2))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 15)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (any_list1) (any_list2) = mk_rhs1 (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), qreva (any_list3) (any_list2) = mk_rhs1 (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), mk_rhs1 (any_list3) ((any1::any_list2)) = mk_rhs1 (any_list3) ((any1::any_list2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6)
=================================================
Progress: 143


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (any_list1) (any_list2) = mk_rhs1 (any_list1) (any_list2)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), qreva (any_list3) (any_list2) = mk_rhs1 (any_list3) (any_list2)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), mk_rhs1 (any_list3) ((any1::any_list2)) = mk_rhs1 (any_list3) ((any1::any_list2))

0 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 6)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : qreva (any_list3) ((Nil)) = mk_rhs1 (any_list3) ((Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
qreva (any_list3) ((any1::(Nil))) = mk_rhs1 (any_list3) ((any1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 3
Tactic List : 2
rewrite lemma5 in goal at 0(rank:14)
rewrite <- lemma5 in goal at 0(rank:14)
=================================================
Progress: 144


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : qreva (any_list3) ((Nil)) = mk_rhs1 (any_list3) ((Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
qreva (any_list3) ((any1::(Nil))) = mk_rhs1 (any_list3) ((any1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma5 in goal at 0(rank : 14)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : qreva (any_list3) ((Nil)) = mk_rhs1 (any_list3) ((Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
mk_rhs1 (any_list3) ((any1::(Nil))) = mk_rhs1 (any_list3) ((any1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5)
=================================================
Progress: 145


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : qreva (any_list3) ((Nil)) = mk_rhs1 (any_list3) ((Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
mk_rhs1 (any_list3) ((any1::(Nil))) = mk_rhs1 (any_list3) ((any1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), qreva (qreva (any_list3) (any_list2)) ((Nil)) = mk_rhs1 (any_list2) (any_list3)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), qreva (qreva ((any1::any_list3)) (any_list2)) ((Nil)) = mk_rhs1 (any_list2) ((any1::any_list3))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 2
Tactic List : 1
rewrite <- rhs_lemma4 in goal at 0(rank:5)
=================================================
Progress: 146


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), qreva (qreva (any_list3) (any_list2)) ((Nil)) = mk_rhs1 (any_list2) (any_list3)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), qreva (qreva ((any1::any_list3)) (any_list2)) ((Nil)) = mk_rhs1 (any_list2) ((any1::any_list3))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- rhs_lemma4 in goal at 0(rank : 5)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), qreva (qreva (any_list3) (any_list2)) ((Nil)) = mk_rhs1 (any_list2) (any_list3)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), qreva (qreva ((any1::any_list3)) (any_list2)) ((Nil)) = mk_rhs1 ((any1::any_list2)) (any_list3)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite lemma5 in goal at 0(rank:13)
rewrite lemma5 in goal at 2(rank:13)
rewrite <- IH1 in goal at 0(rank:13)
rewrite <- lemma5 in goal at 0(rank:13)
=================================================
Progress: 147


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), qreva (qreva (any_list3) (any_list2)) ((Nil)) = mk_rhs1 (any_list2) (any_list3)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), qreva (qreva ((any1::any_list3)) (any_list2)) ((Nil)) = mk_rhs1 ((any1::any_list2)) (any_list3)

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma5 in goal at 0(rank : 13)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), qreva (qreva (any_list3) (any_list2)) ((Nil)) = mk_rhs1 (any_list2) (any_list3)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), mk_rhs1 (qreva ((any1::any_list3)) (any_list2)) ((Nil)) = mk_rhs1 ((any1::any_list2)) (any_list3)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:5)
=================================================
Progress: 148


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), qreva (qreva (any_list3) (any_list2)) ((Nil)) = mk_rhs1 (any_list2) (any_list3)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), mk_rhs1 (qreva ((any1::any_list3)) (any_list2)) ((Nil)) = mk_rhs1 ((any1::any_list2)) (any_list3)

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), qreva (qreva (any_list3) (any_list2)) ((Nil)) = mk_rhs1 (any_list2) (any_list3)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), mk_rhs1 (qreva (any_list3) ((any1::any_list2))) ((Nil)) = mk_rhs1 (any_list2) ((any1::any_list3))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
intro any_list2(rank:21)
rewrite lemma5 in goal at 0(rank:21)
rewrite <- lemma5 in goal at 0(rank:21)
rewrite <- lemma5 in goal at 2(rank:21)
induction any_list2(rank:22)
=================================================
Progress: 149


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), qreva (qreva (any_list3) (any_list2)) ((Nil)) = mk_rhs1 (any_list2) (any_list3)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), qreva (qreva ((any1::any_list3)) (any_list2)) ((Nil)) = mk_rhs1 ((any1::any_list2)) (any_list3)

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma5 in goal at 2(rank : 13)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), qreva (qreva (any_list3) (any_list2)) ((Nil)) = mk_rhs1 (any_list2) (any_list3)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), qreva (mk_rhs1 ((any1::any_list3)) (any_list2)) ((Nil)) = mk_rhs1 ((any1::any_list2)) (any_list3)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:5)
=================================================
Progress: 150


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), qreva (qreva (any_list3) (any_list2)) ((Nil)) = mk_rhs1 (any_list2) (any_list3)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), qreva (mk_rhs1 ((any1::any_list3)) (any_list2)) ((Nil)) = mk_rhs1 ((any1::any_list2)) (any_list3)

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), qreva (qreva (any_list3) (any_list2)) ((Nil)) = mk_rhs1 (any_list2) (any_list3)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), qreva (mk_rhs1 (any_list3) ((any1::any_list2))) ((Nil)) = mk_rhs1 (any_list2) ((any1::any_list3))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
intro any_list2(rank:21)
induction any_list2(rank:22)
rewrite <- lemma5 in goal at 2(rank:21)
=================================================
Progress: 151


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), qreva (qreva (any_list3) (any_list2)) ((Nil)) = mk_rhs1 (any_list2) (any_list3)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), qreva (qreva ((any1::any_list3)) (any_list2)) ((Nil)) = mk_rhs1 ((any1::any_list2)) (any_list3)

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), qreva (qreva (any_list3) (any_list2)) ((Nil)) = mk_rhs1 (any_list2) (any_list3)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), qreva (qreva ((any1::any_list3)) (any_list2)) ((Nil)) = qreva (qreva (any_list3) ((any1::any_list2))) ((Nil))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:4)
=================================================
Progress: 152


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), qreva (qreva (any_list3) (any_list2)) ((Nil)) = mk_rhs1 (any_list2) (any_list3)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), qreva (qreva ((any1::any_list3)) (any_list2)) ((Nil)) = qreva (qreva (any_list3) ((any1::any_list2))) ((Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : qreva (qreva (any_list3) ((Nil))) ((Nil)) = any_list3
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
qreva (qreva (any_list3) ((any1::(Nil)))) ((Nil)) = (any1::any_list3)

1 goal(s) more...

0 conjecture(s) more...
Deduplication: 9
Tactic List : 3
rewrite lemma6 in goal at 0(rank:12)
rewrite lemma5 in goal at 0(rank:20)
rewrite lemma5 in goal at 2(rank:20)
=================================================
Progress: 153


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : qreva (qreva (any_list3) ((Nil))) ((Nil)) = any_list3
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
qreva (qreva (any_list3) ((any1::(Nil)))) ((Nil)) = (any1::any_list3)

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma6 in goal at 0(rank : 12)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : qreva (qreva (any_list3) ((Nil))) ((Nil)) = any_list3
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
mk_rhs1 ((any1::(Nil))) (any_list3) = (any1::any_list3)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3)
=================================================
Progress: 154


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : qreva (qreva (any_list3) ((Nil))) ((Nil)) = any_list3
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
mk_rhs1 ((any1::(Nil))) (any_list3) = (any1::any_list3)

1 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 3)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), qreva (qreva (any_list1) (reverse (any_list3))) ((Nil)) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), qreva (qreva (any_list1) (reverse ((any1::any_list3)))) ((Nil)) = ((any1::any_list3) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 2
Tactic List : 1
simpl in goal(rank:3)
=================================================
Progress: 155


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), qreva (qreva (any_list1) (reverse (any_list3))) ((Nil)) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), qreva (qreva (any_list1) (reverse ((any1::any_list3)))) ((Nil)) = ((any1::any_list3) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), qreva (qreva (any_list1) (reverse (any_list3))) ((Nil)) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), qreva (qreva (any_list1) ((reverse (any_list3) @ (any1::(Nil))))) ((Nil)) = (any1::(any_list3 @ any_list1))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
rewrite lemma6 in goal at 0(rank:11)
rewrite lemma5 in goal at 2(rank:19)
rewrite <- IH1 in goal at 0(rank:11)
induction any_list1(rank:12)
rewrite lemma5 in goal at 0(rank:19)
=================================================
Progress: 156


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), qreva (qreva (any_list1) (reverse (any_list3))) ((Nil)) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), qreva (qreva (any_list1) ((reverse (any_list3) @ (any1::(Nil))))) ((Nil)) = (any1::(any_list3 @ any_list1))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma6 in goal at 0(rank : 11)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), qreva (qreva (any_list1) (reverse (any_list3))) ((Nil)) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), mk_rhs1 ((reverse (any_list3) @ (any1::(Nil)))) (any_list1) = (any1::(any_list3 @ any_list1))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
intro any_list1(rank:3)
rewrite <- IH1 in goal at 0(rank:19)
rewrite <- lemma5 in goal at 0(rank:11)
=================================================
Progress: 157


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), qreva (qreva (any_list1) (reverse (any_list3))) ((Nil)) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), mk_rhs1 ((reverse (any_list3) @ (any1::(Nil)))) (any_list1) = (any1::(any_list3 @ any_list1))

0 goal(s) more...

0 conjecture(s) more...
>>> intro any_list1(rank : 3)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), qreva (qreva (any_list1) (reverse (any_list3))) ((Nil)) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
---------------------------------------
mk_rhs1 ((reverse (any_list3) @ (any1::(Nil)))) (any_list1) = (any1::(any_list3 @ any_list1))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- lemma5 in goal at 0(rank:11)
rewrite <- IH1 in goal at 0(rank:19)
=================================================
Progress: 158


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), qreva (qreva (any_list1) (reverse (any_list3))) ((Nil)) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), qreva (qreva (any_list1) ((reverse (any_list3) @ (any1::(Nil))))) ((Nil)) = (any1::(any_list3 @ any_list1))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 11)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), qreva (qreva (any_list1) (reverse (any_list3))) ((Nil)) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), qreva (qreva (any_list1) ((reverse (any_list3) @ (any1::(Nil))))) ((Nil)) = (any1::qreva (qreva (any_list1) (reverse (any_list3))) ((Nil)))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
induction any_list1(rank:12)
rewrite lemma5 in goal at 1(rank:19)
rewrite lemma5 in goal at 3(rank:19)
rewrite lemma6 in goal at 0(rank:19)
rewrite lemma6 in goal at 2(rank:19)
rewrite lemma5 in goal at 2(rank:19)
rewrite lemma5 in goal at 0(rank:19)
=================================================
Progress: 159


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), qreva (qreva (any_list1) (reverse (any_list3))) ((Nil)) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), mk_rhs1 ((reverse (any_list3) @ (any1::(Nil)))) (any_list1) = (any1::(any_list3 @ any_list1))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 0(rank : 11)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), qreva (qreva (any_list1) (reverse (any_list3))) ((Nil)) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), qreva ((reverse (any_list3) @ (any1::(Nil)))) (any_list1) = (any1::(any_list3 @ any_list1))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:3)
=================================================
Progress: 160


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), qreva (qreva (any_list1) (reverse (any_list3))) ((Nil)) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), qreva ((reverse (any_list3) @ (any1::(Nil)))) (any_list1) = (any1::(any_list3 @ any_list1))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 3)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), qreva (qreva (any_list1) (reverse (any_list3))) ((Nil)) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), qreva ((reverse (any_list3) @ (any1::(Nil)))) (any_list1) = (any1::qreva (qreva (any_list1) (reverse (any_list3))) ((Nil)))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
rewrite lemma6 in goal at 0(rank:11)
induction any_list1(rank:12)
rewrite lemma5 in goal at 0(rank:19)
rewrite lemma5 in goal at 2(rank:19)
rewrite lemma5 in goal at 3(rank:19)
=================================================
Progress: 161


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), qreva (qreva (any_list1) (reverse (any_list3))) ((Nil)) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
---------------------------------------
mk_rhs1 ((reverse (any_list3) @ (any1::(Nil)))) (any_list1) = (any1::(any_list3 @ any_list1))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 0(rank : 11)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), qreva (qreva (any_list1) (reverse (any_list3))) ((Nil)) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
---------------------------------------
qreva ((reverse (any_list3) @ (any1::(Nil)))) (any_list1) = (any1::(any_list3 @ any_list1))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma5 in goal at 0
reflexivity
rewrite <- rhs_lemma4 in goal at 0
rewrite <- IH1 in goal at 0
reflexivity
rewrite lemma6 in goal at 0
reflexivity
simpl in goal
rewrite lemma6 in goal at 0
intro any_list1
rewrite <- lemma5 in goal at 0
Lemma : forall (any1:any) (any_list1:any list) (any_list3:any list), qreva ((reverse (any_list3) @ (any1::(Nil)))) (any_list1) = (any1::(any_list3 @ any_list1))
Model : any1: 6, any_list1: (Nil), any_list3: (Nil)
Model : any1: 1, any_list1: (Nil), any_list3: (Nil)
Model : any1: 4, any_list1: (Nil), any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
let rec mk_rhs1 arg_3 arg_4 =
match (arg_3) with
| Nil  -> arg_4
| Cons hd tl -> mk_rhs1 (tl) ((hd::arg_4))
prop list:
qreva ((reverse ((Nil)) @ (6::(Nil)))) ((Nil)) = (6::((Nil) @ (Nil)))
qreva ((reverse ((Nil)) @ (1::(Nil)))) ((Nil)) = (1::((Nil) @ (Nil)))
qreva ((reverse ((Nil)) @ (4::(Nil)))) ((Nil)) = (4::((Nil) @ (Nil)))
Simplifying took 0.000211 seconds
Result : true
advanced_generalize done


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), qreva (qreva (any_list1) (reverse (any_list3))) ((Nil)) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
---------------------------------------
qreva ((reverse (any_list3) @ (any1::(Nil)))) (any_list1) = (any1::(any_list3 @ any_list1))

0 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 162


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), qreva (qreva (any_list1) (reverse (any_list3))) ((Nil)) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
---------------------------------------
qreva ((reverse (any_list3) @ (any1::(Nil)))) (any_list1) = (any1::(any_list3 @ any_list1))

0 goal(s) more...

0 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (any_list3:any list), qreva ((reverse (any_list3) @ (any1::(Nil)))) (any_list1) = (any1::(any_list3 @ any_list1))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva ((reverse (any_list2) @ (any1::(Nil)))) (any_list1) = (any1::(any_list2 @ any_list1))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), qreva ((reverse (any_list2) @ (any1::(Nil)))) (any_list1) = (any1::(any_list2 @ any_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:6)
=================================================
Progress: 163


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva ((reverse (any_list2) @ (any1::(Nil)))) (any_list1) = (any1::(any_list2 @ any_list1))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), qreva ((reverse (any_list2) @ (any1::(Nil)))) (any_list1) = (any1::(any_list2 @ any_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction any_list2(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva ((reverse (any_list2) @ (any1::(Nil)))) (any_list1) = (any1::(any_list2 @ any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list), qreva ((reverse ((Nil)) @ (any1::(Nil)))) (any_list1) = (any1::((Nil) @ any_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5)
=================================================
Progress: 164


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva ((reverse (any_list2) @ (any1::(Nil)))) (any_list1) = (any1::(any_list2 @ any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list), qreva ((reverse ((Nil)) @ (any1::(Nil)))) (any_list1) = (any1::((Nil) @ any_list1))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva ((reverse (any_list2) @ (any1::(Nil)))) (any_list1) = (any1::(any_list2 @ any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), qreva ((reverse (any_list3) @ (any1::(Nil)))) (any_list1) = (any1::(any_list3 @ any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), qreva ((reverse ((any2::any_list3)) @ (any1::(Nil)))) (any_list1) = (any1::((any2::any_list3) @ any_list1))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5)
=================================================
Progress: 165


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva ((reverse (any_list2) @ (any1::(Nil)))) (any_list1) = (any1::(any_list2 @ any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), qreva ((reverse (any_list3) @ (any1::(Nil)))) (any_list1) = (any1::(any_list3 @ any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), qreva ((reverse ((any2::any_list3)) @ (any1::(Nil)))) (any_list1) = (any1::((any2::any_list3) @ any_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva ((reverse (any_list2) @ (any1::(Nil)))) (any_list1) = (any1::(any_list2 @ any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), qreva ((reverse (any_list3) @ (any1::(Nil)))) (any_list1) = (any1::(any_list3 @ any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), qreva (((reverse (any_list3) @ (any2::(Nil))) @ (any1::(Nil)))) (any_list1) = (any1::(any2::(any_list3 @ any_list1)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
intro any1(rank:5)
intro any_list1(rank:5)
rewrite <- IH1 in goal at 0(rank:13)
rewrite lemma5 in goal at 0(rank:21)
=================================================
Progress: 166


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva ((reverse (any_list2) @ (any1::(Nil)))) (any_list1) = (any1::(any_list2 @ any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), qreva ((reverse (any_list3) @ (any1::(Nil)))) (any_list1) = (any1::(any_list3 @ any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), qreva (((reverse (any_list3) @ (any2::(Nil))) @ (any1::(Nil)))) (any_list1) = (any1::(any2::(any_list3 @ any_list1)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro any1(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva ((reverse (any_list2) @ (any1::(Nil)))) (any_list1) = (any1::(any_list2 @ any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), qreva ((reverse (any_list3) @ (any1::(Nil)))) (any_list1) = (any1::(any_list3 @ any_list1))
Inductive1 : any_list2 = (any2::any_list3)
any1 : any
---------------------------------------
forall (any_list1:any list), qreva (((reverse (any_list3) @ (any2::(Nil))) @ (any1::(Nil)))) (any_list1) = (any1::(any2::(any_list3 @ any_list1)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
intro any_list1(rank:5)
rewrite lemma5 in goal at 0(rank:21)
rewrite <- IH1 in goal at 0(rank:13)
=================================================
Progress: 167


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva ((reverse (any_list2) @ (any1::(Nil)))) (any_list1) = (any1::(any_list2 @ any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), qreva ((reverse (any_list3) @ (any1::(Nil)))) (any_list1) = (any1::(any_list3 @ any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), qreva (((reverse (any_list3) @ (any2::(Nil))) @ (any1::(Nil)))) (any_list1) = (any1::(any2::(any_list3 @ any_list1)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro any_list1(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva ((reverse (any_list2) @ (any1::(Nil)))) (any_list1) = (any1::(any_list2 @ any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), qreva ((reverse (any_list3) @ (any1::(Nil)))) (any_list1) = (any1::(any_list3 @ any_list1))
Inductive1 : any_list2 = (any2::any_list3)
any_list1 : any list
---------------------------------------
forall (any1:any), qreva (((reverse (any_list3) @ (any2::(Nil))) @ (any1::(Nil)))) (any_list1) = (any1::(any2::(any_list3 @ any_list1)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:13)
rewrite lemma5 in goal at 0(rank:21)
=================================================
Progress: 168


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva ((reverse (any_list2) @ (any1::(Nil)))) (any_list1) = (any1::(any_list2 @ any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), qreva ((reverse (any_list3) @ (any1::(Nil)))) (any_list1) = (any1::(any_list3 @ any_list1))
Inductive1 : any_list2 = (any2::any_list3)
any1 : any
---------------------------------------
forall (any_list1:any list), qreva (((reverse (any_list3) @ (any2::(Nil))) @ (any1::(Nil)))) (any_list1) = (any1::(any2::(any_list3 @ any_list1)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro any_list1(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva ((reverse (any_list2) @ (any1::(Nil)))) (any_list1) = (any1::(any_list2 @ any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), qreva ((reverse (any_list3) @ (any1::(Nil)))) (any_list1) = (any1::(any_list3 @ any_list1))
Inductive1 : any_list2 = (any2::any_list3)
any1 : any
any_list1 : any list
---------------------------------------
qreva (((reverse (any_list3) @ (any2::(Nil))) @ (any1::(Nil)))) (any_list1) = (any1::(any2::(any_list3 @ any_list1)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:13)
rewrite lemma5 in goal at 0(rank:21)
=================================================
Progress: 169


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), qreva (qreva (any_list1) (reverse (any_list3))) ((Nil)) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), qreva ((reverse (any_list3) @ (any1::(Nil)))) (any_list1) = (any1::qreva (qreva (any_list1) (reverse (any_list3))) ((Nil)))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma6 in goal at 0(rank : 11)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), qreva (qreva (any_list1) (reverse (any_list3))) ((Nil)) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), qreva ((reverse (any_list3) @ (any1::(Nil)))) (any_list1) = (any1::mk_rhs1 (reverse (any_list3)) (any_list1))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
intro any_list1(rank:3)
rewrite <- lemma5 in goal at 0(rank:11)
=================================================
Progress: 170


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), qreva (qreva (any_list1) (reverse (any_list3))) ((Nil)) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), qreva ((reverse (any_list3) @ (any1::(Nil)))) (any_list1) = (any1::mk_rhs1 (reverse (any_list3)) (any_list1))

0 goal(s) more...

0 conjecture(s) more...
>>> intro any_list1(rank : 3)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), qreva (qreva (any_list1) (reverse (any_list3))) ((Nil)) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
---------------------------------------
qreva ((reverse (any_list3) @ (any1::(Nil)))) (any_list1) = (any1::mk_rhs1 (reverse (any_list3)) (any_list1))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- lemma5 in goal at 0(rank:3)
=================================================
Progress: 171


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), qreva (qreva (any_list1) (reverse (any_list3))) ((Nil)) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
---------------------------------------
qreva ((reverse (any_list3) @ (any1::(Nil)))) (any_list1) = (any1::mk_rhs1 (reverse (any_list3)) (any_list1))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 0(rank : 3)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), qreva (qreva (any_list1) (reverse (any_list3))) ((Nil)) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
---------------------------------------
qreva ((reverse (any_list3) @ (any1::(Nil)))) (any_list1) = (any1::qreva (reverse (any_list3)) (any_list1))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma5 in goal at 0
reflexivity
rewrite <- rhs_lemma4 in goal at 0
rewrite <- IH1 in goal at 0
reflexivity
rewrite lemma6 in goal at 0
reflexivity
simpl in goal
rewrite lemma6 in goal at 0
rewrite <- lemma5 in goal at 0
rewrite <- IH1 in goal at 0
rewrite lemma6 in goal at 0
intro any_list1
rewrite <- lemma5 in goal at 0
Lemma : forall (any1:any) (any_list1:any list) (arg7:any list), qreva ((arg7 @ (any1::(Nil)))) (any_list1) = (any1::qreva (arg7) (any_list1))
Model : any1: 0, any_list1: (Nil), arg7: (Nil)
Model : any1: 4, any_list1: (Nil), arg7: (0::(Nil))
Model : any1: 7, any_list1: (Nil), arg7: (Nil)
Substituting variables...
Simplifying conditions and property...
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
let rec mk_rhs1 arg_3 arg_4 =
match (arg_3) with
| Nil  -> arg_4
| Cons hd tl -> mk_rhs1 (tl) ((hd::arg_4))
prop list:
qreva (((Nil) @ (0::(Nil)))) ((Nil)) = (0::qreva ((Nil)) ((Nil)))
qreva (((0::(Nil)) @ (4::(Nil)))) ((Nil)) = (4::qreva ((0::(Nil))) ((Nil)))
qreva (((Nil) @ (7::(Nil)))) ((Nil)) = (7::qreva ((Nil)) ((Nil)))
Simplifying took 0.000290 seconds
Result : true
advanced_generalize done


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), qreva (qreva (any_list1) (reverse (any_list3))) ((Nil)) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
---------------------------------------
qreva ((reverse (any_list3) @ (any1::(Nil)))) (any_list1) = (any1::qreva (reverse (any_list3)) (any_list1))

0 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 172


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), qreva (qreva (any_list1) (reverse (any_list3))) ((Nil)) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
---------------------------------------
qreva ((reverse (any_list3) @ (any1::(Nil)))) (any_list1) = (any1::qreva (reverse (any_list3)) (any_list1))

0 goal(s) more...

0 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (arg7:any list), qreva ((arg7 @ (any1::(Nil)))) (any_list1) = (any1::qreva (arg7) (any_list1))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva ((any_list2 @ (any1::(Nil)))) (any_list1) = (any1::qreva (any_list2) (any_list1))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), qreva ((any_list2 @ (any1::(Nil)))) (any_list1) = (any1::qreva (any_list2) (any_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:6)
=================================================
Progress: 173


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva ((any_list2 @ (any1::(Nil)))) (any_list1) = (any1::qreva (any_list2) (any_list1))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), qreva ((any_list2 @ (any1::(Nil)))) (any_list1) = (any1::qreva (any_list2) (any_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction any_list2(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva ((any_list2 @ (any1::(Nil)))) (any_list1) = (any1::qreva (any_list2) (any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list), qreva (((Nil) @ (any1::(Nil)))) (any_list1) = (any1::qreva ((Nil)) (any_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5)
=================================================
Progress: 174


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva ((any_list2 @ (any1::(Nil)))) (any_list1) = (any1::qreva (any_list2) (any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list), qreva (((Nil) @ (any1::(Nil)))) (any_list1) = (any1::qreva ((Nil)) (any_list1))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva ((any_list2 @ (any1::(Nil)))) (any_list1) = (any1::qreva (any_list2) (any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), qreva ((any_list3 @ (any1::(Nil)))) (any_list1) = (any1::qreva (any_list3) (any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), qreva (((any2::any_list3) @ (any1::(Nil)))) (any_list1) = (any1::qreva ((any2::any_list3)) (any_list1))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5)
=================================================
Progress: 175


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva ((any_list2 @ (any1::(Nil)))) (any_list1) = (any1::qreva (any_list2) (any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), qreva ((any_list3 @ (any1::(Nil)))) (any_list1) = (any1::qreva (any_list3) (any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), qreva (((any2::any_list3) @ (any1::(Nil)))) (any_list1) = (any1::qreva ((any2::any_list3)) (any_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva ((any_list2 @ (any1::(Nil)))) (any_list1) = (any1::qreva (any_list2) (any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), qreva ((any_list3 @ (any1::(Nil)))) (any_list1) = (any1::qreva (any_list3) (any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), qreva ((any_list3 @ (any1::(Nil)))) ((any2::any_list1)) = (any1::qreva (any_list3) ((any2::any_list1)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 7
intro any1(rank:5)
rewrite IH1 in goal at 0(rank:13)
rewrite lemma5 in goal at 0(rank:21)
rewrite <- IH1 in goal at 0(rank:13)
rewrite lemma5 in goal at 1(rank:21)
rewrite lemma5 in goal at 2(rank:21)
intro any_list1(rank:5)
=================================================
Progress: 176


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva ((any_list2 @ (any1::(Nil)))) (any_list1) = (any1::qreva (any_list2) (any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), qreva ((any_list3 @ (any1::(Nil)))) (any_list1) = (any1::qreva (any_list3) (any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), qreva ((any_list3 @ (any1::(Nil)))) ((any2::any_list1)) = (any1::qreva (any_list3) ((any2::any_list1)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro any1(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva ((any_list2 @ (any1::(Nil)))) (any_list1) = (any1::qreva (any_list2) (any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), qreva ((any_list3 @ (any1::(Nil)))) (any_list1) = (any1::qreva (any_list3) (any_list1))
Inductive1 : any_list2 = (any2::any_list3)
any1 : any
---------------------------------------
forall (any_list1:any list), qreva ((any_list3 @ (any1::(Nil)))) ((any2::any_list1)) = (any1::qreva (any_list3) ((any2::any_list1)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
intro any_list1(rank:5)
rewrite <- IH1 in goal at 0(rank:13)
rewrite lemma5 in goal at 2(rank:21)
rewrite lemma5 in goal at 0(rank:21)
rewrite lemma5 in goal at 1(rank:21)
rewrite IH1 in goal at 0(rank:13)
=================================================
Progress: 177


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva ((any_list2 @ (any1::(Nil)))) (any_list1) = (any1::qreva (any_list2) (any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), qreva ((any_list3 @ (any1::(Nil)))) (any_list1) = (any1::qreva (any_list3) (any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), qreva ((any_list3 @ (any1::(Nil)))) ((any2::any_list1)) = (any1::qreva (any_list3) ((any2::any_list1)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro any_list1(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva ((any_list2 @ (any1::(Nil)))) (any_list1) = (any1::qreva (any_list2) (any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), qreva ((any_list3 @ (any1::(Nil)))) (any_list1) = (any1::qreva (any_list3) (any_list1))
Inductive1 : any_list2 = (any2::any_list3)
any_list1 : any list
---------------------------------------
forall (any1:any), qreva ((any_list3 @ (any1::(Nil)))) ((any2::any_list1)) = (any1::qreva (any_list3) ((any2::any_list1)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite IH1 in goal at 0(rank:13)
rewrite lemma5 in goal at 0(rank:21)
rewrite <- IH1 in goal at 0(rank:13)
rewrite lemma5 in goal at 1(rank:21)
rewrite lemma5 in goal at 2(rank:21)
=================================================
Progress: 178


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva ((any_list2 @ (any1::(Nil)))) (any_list1) = (any1::qreva (any_list2) (any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), qreva ((any_list3 @ (any1::(Nil)))) (any_list1) = (any1::qreva (any_list3) (any_list1))
Inductive1 : any_list2 = (any2::any_list3)
any1 : any
---------------------------------------
forall (any_list1:any list), qreva ((any_list3 @ (any1::(Nil)))) ((any2::any_list1)) = (any1::qreva (any_list3) ((any2::any_list1)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro any_list1(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva ((any_list2 @ (any1::(Nil)))) (any_list1) = (any1::qreva (any_list2) (any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), qreva ((any_list3 @ (any1::(Nil)))) (any_list1) = (any1::qreva (any_list3) (any_list1))
Inductive1 : any_list2 = (any2::any_list3)
any1 : any
any_list1 : any list
---------------------------------------
qreva ((any_list3 @ (any1::(Nil)))) ((any2::any_list1)) = (any1::qreva (any_list3) ((any2::any_list1)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite IH1 in goal at 0(rank:13)
rewrite lemma5 in goal at 0(rank:21)
rewrite <- IH1 in goal at 0(rank:13)
rewrite lemma5 in goal at 1(rank:21)
rewrite lemma5 in goal at 2(rank:21)
=================================================
Progress: 179


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), qreva (qreva (any_list1) (reverse (any_list3))) ((Nil)) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), qreva ((reverse (any_list3) @ (any1::(Nil)))) (any_list1) = (any1::mk_rhs1 (reverse (any_list3)) (any_list1))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 0(rank : 11)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), qreva (qreva (any_list1) (reverse (any_list3))) ((Nil)) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), qreva ((reverse (any_list3) @ (any1::(Nil)))) (any_list1) = (any1::qreva (reverse (any_list3)) (any_list1))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma5 in goal at 0
reflexivity
rewrite <- rhs_lemma4 in goal at 0
rewrite <- IH1 in goal at 0
reflexivity
rewrite lemma6 in goal at 0
reflexivity
simpl in goal
rewrite lemma6 in goal at 0
rewrite <- lemma5 in goal at 0
rewrite <- IH1 in goal at 0
rewrite lemma6 in goal at 0
rewrite <- lemma5 in goal at 0
Lemma : forall (any1:any) (any_list1:any list) (arg8:any list), qreva ((arg8 @ (any1::(Nil)))) (any_list1) = (any1::qreva (arg8) (any_list1))
Model : any1: 0, any_list1: (Nil), arg8: (Nil)
Model : any1: 3, any_list1: (Nil), arg8: (Nil)
Model : any1: 0, any_list1: (Nil), arg8: (Nil)
Substituting variables...
Simplifying conditions and property...
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
let rec mk_rhs1 arg_3 arg_4 =
match (arg_3) with
| Nil  -> arg_4
| Cons hd tl -> mk_rhs1 (tl) ((hd::arg_4))
prop list:
qreva (((Nil) @ (0::(Nil)))) ((Nil)) = (0::qreva ((Nil)) ((Nil)))
qreva (((Nil) @ (3::(Nil)))) ((Nil)) = (3::qreva ((Nil)) ((Nil)))
qreva (((Nil) @ (0::(Nil)))) ((Nil)) = (0::qreva ((Nil)) ((Nil)))
Simplifying took 0.000168 seconds
Result : true
advanced_generalize done


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), qreva (qreva (any_list1) (reverse (any_list3))) ((Nil)) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), qreva ((reverse (any_list3) @ (any1::(Nil)))) (any_list1) = (any1::qreva (reverse (any_list3)) (any_list1))

0 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 180


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), qreva (qreva (any_list1) (reverse (any_list3))) ((Nil)) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), qreva ((reverse (any_list3) @ (any1::(Nil)))) (any_list1) = (any1::qreva (reverse (any_list3)) (any_list1))

0 goal(s) more...

0 conjecture(s) more...
>>> assert forall (any1:any) (any_list1:any list) (arg8:any list), qreva ((arg8 @ (any1::(Nil)))) (any_list1) = (any1::qreva (arg8) (any_list1))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva ((any_list2 @ (any1::(Nil)))) (any_list1) = (any1::qreva (any_list2) (any_list1))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), qreva ((any_list2 @ (any1::(Nil)))) (any_list1) = (any1::qreva (any_list2) (any_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:6)
=================================================
Progress: 181


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva ((any_list2 @ (any1::(Nil)))) (any_list1) = (any1::qreva (any_list2) (any_list1))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), qreva ((any_list2 @ (any1::(Nil)))) (any_list1) = (any1::qreva (any_list2) (any_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction any_list2(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva ((any_list2 @ (any1::(Nil)))) (any_list1) = (any1::qreva (any_list2) (any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list), qreva (((Nil) @ (any1::(Nil)))) (any_list1) = (any1::qreva ((Nil)) (any_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5)
=================================================
Progress: 182


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva ((any_list2 @ (any1::(Nil)))) (any_list1) = (any1::qreva (any_list2) (any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list), qreva (((Nil) @ (any1::(Nil)))) (any_list1) = (any1::qreva ((Nil)) (any_list1))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva ((any_list2 @ (any1::(Nil)))) (any_list1) = (any1::qreva (any_list2) (any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), qreva ((any_list3 @ (any1::(Nil)))) (any_list1) = (any1::qreva (any_list3) (any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), qreva (((any2::any_list3) @ (any1::(Nil)))) (any_list1) = (any1::qreva ((any2::any_list3)) (any_list1))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5)
=================================================
Progress: 183


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva ((any_list2 @ (any1::(Nil)))) (any_list1) = (any1::qreva (any_list2) (any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), qreva ((any_list3 @ (any1::(Nil)))) (any_list1) = (any1::qreva (any_list3) (any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), qreva (((any2::any_list3) @ (any1::(Nil)))) (any_list1) = (any1::qreva ((any2::any_list3)) (any_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva ((any_list2 @ (any1::(Nil)))) (any_list1) = (any1::qreva (any_list2) (any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), qreva ((any_list3 @ (any1::(Nil)))) (any_list1) = (any1::qreva (any_list3) (any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), qreva ((any_list3 @ (any1::(Nil)))) ((any2::any_list1)) = (any1::qreva (any_list3) ((any2::any_list1)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 7
intro any1(rank:5)
rewrite IH1 in goal at 0(rank:13)
rewrite lemma5 in goal at 0(rank:21)
rewrite <- IH1 in goal at 0(rank:13)
rewrite lemma5 in goal at 1(rank:21)
rewrite lemma5 in goal at 2(rank:21)
intro any_list1(rank:5)
=================================================
Progress: 184


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva ((any_list2 @ (any1::(Nil)))) (any_list1) = (any1::qreva (any_list2) (any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), qreva ((any_list3 @ (any1::(Nil)))) (any_list1) = (any1::qreva (any_list3) (any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), qreva ((any_list3 @ (any1::(Nil)))) ((any2::any_list1)) = (any1::qreva (any_list3) ((any2::any_list1)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro any1(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva ((any_list2 @ (any1::(Nil)))) (any_list1) = (any1::qreva (any_list2) (any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), qreva ((any_list3 @ (any1::(Nil)))) (any_list1) = (any1::qreva (any_list3) (any_list1))
Inductive1 : any_list2 = (any2::any_list3)
any1 : any
---------------------------------------
forall (any_list1:any list), qreva ((any_list3 @ (any1::(Nil)))) ((any2::any_list1)) = (any1::qreva (any_list3) ((any2::any_list1)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
intro any_list1(rank:5)
rewrite <- IH1 in goal at 0(rank:13)
rewrite lemma5 in goal at 2(rank:21)
rewrite lemma5 in goal at 0(rank:21)
rewrite lemma5 in goal at 1(rank:21)
rewrite IH1 in goal at 0(rank:13)
=================================================
Progress: 185


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva ((any_list2 @ (any1::(Nil)))) (any_list1) = (any1::qreva (any_list2) (any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), qreva ((any_list3 @ (any1::(Nil)))) (any_list1) = (any1::qreva (any_list3) (any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), qreva ((any_list3 @ (any1::(Nil)))) ((any2::any_list1)) = (any1::qreva (any_list3) ((any2::any_list1)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro any_list1(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva ((any_list2 @ (any1::(Nil)))) (any_list1) = (any1::qreva (any_list2) (any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), qreva ((any_list3 @ (any1::(Nil)))) (any_list1) = (any1::qreva (any_list3) (any_list1))
Inductive1 : any_list2 = (any2::any_list3)
any_list1 : any list
---------------------------------------
forall (any1:any), qreva ((any_list3 @ (any1::(Nil)))) ((any2::any_list1)) = (any1::qreva (any_list3) ((any2::any_list1)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite IH1 in goal at 0(rank:13)
rewrite lemma5 in goal at 0(rank:21)
rewrite <- IH1 in goal at 0(rank:13)
rewrite lemma5 in goal at 1(rank:21)
rewrite lemma5 in goal at 2(rank:21)
=================================================
Progress: 186


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva ((any_list2 @ (any1::(Nil)))) (any_list1) = (any1::qreva (any_list2) (any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), qreva ((any_list3 @ (any1::(Nil)))) (any_list1) = (any1::qreva (any_list3) (any_list1))
Inductive1 : any_list2 = (any2::any_list3)
any1 : any
---------------------------------------
forall (any_list1:any list), qreva ((any_list3 @ (any1::(Nil)))) ((any2::any_list1)) = (any1::qreva (any_list3) ((any2::any_list1)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro any_list1(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva ((any_list2 @ (any1::(Nil)))) (any_list1) = (any1::qreva (any_list2) (any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), qreva ((any_list3 @ (any1::(Nil)))) (any_list1) = (any1::qreva (any_list3) (any_list1))
Inductive1 : any_list2 = (any2::any_list3)
any1 : any
any_list1 : any list
---------------------------------------
qreva ((any_list3 @ (any1::(Nil)))) ((any2::any_list1)) = (any1::qreva (any_list3) ((any2::any_list1)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite IH1 in goal at 0(rank:13)
rewrite lemma5 in goal at 0(rank:21)
rewrite <- IH1 in goal at 0(rank:13)
rewrite lemma5 in goal at 1(rank:21)
rewrite lemma5 in goal at 2(rank:21)
=================================================
Progress: 187


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), qreva (qreva (any_list1) (reverse (any_list3))) ((Nil)) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), qreva (qreva (any_list1) ((reverse (any_list3) @ (any1::(Nil))))) ((Nil)) = (any1::(any_list3 @ any_list1))

0 goal(s) more...

0 conjecture(s) more...
>>> induction any_list1(rank : 12)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), qreva (qreva (any_list1) (reverse (any_list3))) ((Nil)) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
qreva (qreva ((Nil)) ((reverse (any_list3) @ (any1::(Nil))))) ((Nil)) = (any1::(any_list3 @ (Nil)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4)
=================================================
Progress: 188


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), qreva (qreva (any_list1) (reverse (any_list3))) ((Nil)) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
qreva (qreva ((Nil)) ((reverse (any_list3) @ (any1::(Nil))))) ((Nil)) = (any1::(any_list3 @ (Nil)))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), qreva (qreva (any_list1) (reverse (any_list3))) ((Nil)) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
qreva ((reverse (any_list3) @ (any1::(Nil)))) ((Nil)) = (any1::(any_list3 @ (Nil)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:4)
=================================================
Progress: 189


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), qreva (qreva (any_list1) (reverse (any_list3))) ((Nil)) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
qreva ((reverse (any_list3) @ (any1::(Nil)))) ((Nil)) = (any1::(any_list3 @ (Nil)))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), qreva (qreva (any_list1) (reverse (any_list3))) ((Nil)) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
qreva ((reverse (any_list3) @ (any1::(Nil)))) ((Nil)) = (any1::qreva (qreva ((Nil)) (reverse (any_list3))) ((Nil)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4)
=================================================
Progress: 190


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), qreva (qreva (any_list1) (reverse (any_list3))) ((Nil)) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
qreva ((reverse (any_list3) @ (any1::(Nil)))) ((Nil)) = (any1::qreva (qreva ((Nil)) (reverse (any_list3))) ((Nil)))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), qreva (qreva (any_list1) (reverse (any_list3))) ((Nil)) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
qreva ((reverse (any_list3) @ (any1::(Nil)))) ((Nil)) = (any1::qreva (reverse (any_list3)) ((Nil)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite lemma5 in goal at 0(rank:20)
rewrite lemma5 in goal at 1(rank:20)
=================================================
Progress: 191


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), qreva (qreva (any_list1) (reverse (any_list3))) ((Nil)) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), qreva (qreva (any_list1) ((reverse (any_list3) @ (any1::(Nil))))) ((Nil)) = (any1::qreva (qreva (any_list1) (reverse (any_list3))) ((Nil)))

0 goal(s) more...

0 conjecture(s) more...
>>> induction any_list1(rank : 12)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), qreva (qreva (any_list1) (reverse (any_list3))) ((Nil)) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
qreva (qreva ((Nil)) ((reverse (any_list3) @ (any1::(Nil))))) ((Nil)) = (any1::qreva (qreva ((Nil)) (reverse (any_list3))) ((Nil)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4)
=================================================
Progress: 192


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), qreva (qreva (any_list1) (reverse (any_list3))) ((Nil)) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
qreva (qreva ((Nil)) ((reverse (any_list3) @ (any1::(Nil))))) ((Nil)) = (any1::qreva (qreva ((Nil)) (reverse (any_list3))) ((Nil)))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), qreva (qreva (any_list1) (reverse (any_list3))) ((Nil)) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
qreva ((reverse (any_list3) @ (any1::(Nil)))) ((Nil)) = (any1::qreva (reverse (any_list3)) ((Nil)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite lemma5 in goal at 1(rank:20)
rewrite lemma5 in goal at 2(rank:20)
=================================================
Progress: 193


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), qreva (qreva (any_list1) (reverse (any_list3))) ((Nil)) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
forall (any_list1:any list), qreva ((reverse (any_list3) @ (any1::(Nil)))) (any_list1) = (any1::qreva (qreva (any_list1) (reverse (any_list3))) ((Nil)))

0 goal(s) more...

0 conjecture(s) more...
>>> induction any_list1(rank : 12)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), qreva (qreva (any_list1) (reverse (any_list3))) ((Nil)) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
qreva ((reverse (any_list3) @ (any1::(Nil)))) ((Nil)) = (any1::qreva (qreva ((Nil)) (reverse (any_list3))) ((Nil)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4)
=================================================
Progress: 194


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), qreva (qreva (any_list1) (reverse (any_list3))) ((Nil)) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
qreva ((reverse (any_list3) @ (any1::(Nil)))) ((Nil)) = (any1::qreva (qreva ((Nil)) (reverse (any_list3))) ((Nil)))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), qreva (qreva (any_list1) (reverse (any_list3))) ((Nil)) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
qreva ((reverse (any_list3) @ (any1::(Nil)))) ((Nil)) = (any1::qreva (reverse (any_list3)) ((Nil)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite lemma5 in goal at 0(rank:20)
rewrite lemma5 in goal at 1(rank:20)
=================================================
Progress: 195


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva ((reverse (any_list2) @ (any1::(Nil)))) (any_list1) = (any1::(any_list2 @ any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), qreva ((reverse (any_list3) @ (any1::(Nil)))) (any_list1) = (any1::(any_list3 @ any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), qreva (((reverse (any_list3) @ (any2::(Nil))) @ (any1::(Nil)))) (any_list1) = (any1::(any2::(any_list3 @ any_list1)))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva ((reverse (any_list2) @ (any1::(Nil)))) (any_list1) = (any1::(any_list2 @ any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), qreva ((reverse (any_list3) @ (any1::(Nil)))) (any_list1) = (any1::(any_list3 @ any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), qreva (((reverse (any_list3) @ (any2::(Nil))) @ (any1::(Nil)))) (any_list1) = (any1::qreva ((reverse (any_list3) @ (any2::(Nil)))) (any_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite lemma5 in goal at 0(rank:21)
rewrite lemma5 in goal at 1(rank:21)
rewrite lemma5 in goal at 2(rank:21)
=================================================
Progress: 196


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva ((reverse (any_list2) @ (any1::(Nil)))) (any_list1) = (any1::(any_list2 @ any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), qreva ((reverse (any_list3) @ (any1::(Nil)))) (any_list1) = (any1::(any_list3 @ any_list1))
Inductive1 : any_list2 = (any2::any_list3)
any1 : any
---------------------------------------
forall (any_list1:any list), qreva (((reverse (any_list3) @ (any2::(Nil))) @ (any1::(Nil)))) (any_list1) = (any1::(any2::(any_list3 @ any_list1)))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva ((reverse (any_list2) @ (any1::(Nil)))) (any_list1) = (any1::(any_list2 @ any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), qreva ((reverse (any_list3) @ (any1::(Nil)))) (any_list1) = (any1::(any_list3 @ any_list1))
Inductive1 : any_list2 = (any2::any_list3)
any1 : any
---------------------------------------
forall (any_list1:any list), qreva (((reverse (any_list3) @ (any2::(Nil))) @ (any1::(Nil)))) (any_list1) = (any1::qreva ((reverse (any_list3) @ (any2::(Nil)))) (any_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite lemma5 in goal at 0(rank:21)
rewrite lemma5 in goal at 1(rank:21)
rewrite lemma5 in goal at 2(rank:21)
=================================================
Progress: 197


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva ((reverse (any_list2) @ (any1::(Nil)))) (any_list1) = (any1::(any_list2 @ any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), qreva ((reverse (any_list3) @ (any1::(Nil)))) (any_list1) = (any1::(any_list3 @ any_list1))
Inductive1 : any_list2 = (any2::any_list3)
any_list1 : any list
---------------------------------------
forall (any1:any), qreva (((reverse (any_list3) @ (any2::(Nil))) @ (any1::(Nil)))) (any_list1) = (any1::(any2::(any_list3 @ any_list1)))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva ((reverse (any_list2) @ (any1::(Nil)))) (any_list1) = (any1::(any_list2 @ any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), qreva ((reverse (any_list3) @ (any1::(Nil)))) (any_list1) = (any1::(any_list3 @ any_list1))
Inductive1 : any_list2 = (any2::any_list3)
any_list1 : any list
---------------------------------------
forall (any1:any), qreva (((reverse (any_list3) @ (any2::(Nil))) @ (any1::(Nil)))) (any_list1) = (any1::qreva ((reverse (any_list3) @ (any2::(Nil)))) (any_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite lemma5 in goal at 0(rank:21)
rewrite lemma5 in goal at 1(rank:21)
rewrite lemma5 in goal at 2(rank:21)
=================================================
Progress: 198


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva ((reverse (any_list2) @ (any1::(Nil)))) (any_list1) = (any1::(any_list2 @ any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), qreva ((reverse (any_list3) @ (any1::(Nil)))) (any_list1) = (any1::(any_list3 @ any_list1))
Inductive1 : any_list2 = (any2::any_list3)
any1 : any
any_list1 : any list
---------------------------------------
qreva (((reverse (any_list3) @ (any2::(Nil))) @ (any1::(Nil)))) (any_list1) = (any1::(any2::(any_list3 @ any_list1)))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva ((reverse (any_list2) @ (any1::(Nil)))) (any_list1) = (any1::(any_list2 @ any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), qreva ((reverse (any_list3) @ (any1::(Nil)))) (any_list1) = (any1::(any_list3 @ any_list1))
Inductive1 : any_list2 = (any2::any_list3)
any1 : any
any_list1 : any list
---------------------------------------
qreva (((reverse (any_list3) @ (any2::(Nil))) @ (any1::(Nil)))) (any_list1) = (any1::qreva ((reverse (any_list3) @ (any2::(Nil)))) (any_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite lemma5 in goal at 0(rank:21)
rewrite lemma5 in goal at 1(rank:21)
rewrite lemma5 in goal at 2(rank:21)
=================================================
Progress: 199


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva ((any_list2 @ (any1::(Nil)))) (any_list1) = (any1::qreva (any_list2) (any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), qreva ((any_list3 @ (any1::(Nil)))) (any_list1) = (any1::qreva (any_list3) (any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), qreva ((any_list3 @ (any1::(Nil)))) ((any2::any_list1)) = (any1::qreva (any_list3) ((any2::any_list1)))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva ((any_list2 @ (any1::(Nil)))) (any_list1) = (any1::qreva (any_list2) (any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), qreva ((any_list3 @ (any1::(Nil)))) (any_list1) = (any1::qreva (any_list3) (any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::qreva (any_list3) ((any2::any_list1))) = (any1::qreva (any_list3) ((any2::any_list1)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3)
=================================================
Progress: 200


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), qreva ((any_list2 @ (any1::(Nil)))) (any_list1) = (any1::qreva (any_list2) (any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), qreva ((any_list3 @ (any1::(Nil)))) (any_list1) = (any1::qreva (any_list3) (any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), (any1::qreva (any_list3) ((any2::any_list1))) = (any1::qreva (any_list3) ((any2::any_list1)))

0 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 3)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), qreva (qreva (any_list1) (reverse (any_list3))) ((Nil)) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
---------------------------------------
qreva ((reverse (any_list3) @ (any1::(Nil)))) (any_list1) = (any1::qreva (reverse (any_list3)) (any_list1))

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 19
Tactic List : 2
rewrite lemma7 in goal at 0(rank:11)
rewrite <- lemma7 in goal at 0(rank:11)
=================================================
Progress: 201


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), qreva (qreva (any_list1) (reverse (any_list3))) ((Nil)) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
---------------------------------------
qreva ((reverse (any_list3) @ (any1::(Nil)))) (any_list1) = (any1::qreva (reverse (any_list3)) (any_list1))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma7 in goal at 0(rank : 11)


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), qreva (qreva (any_list1) (reverse (any_list3))) ((Nil)) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
---------------------------------------
(any1::qreva (reverse (any_list3)) (any_list1)) = (any1::qreva (reverse (any_list3)) (any_list1))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:0)
=================================================
Progress: 202


1st goal of : forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list1:any list), qreva (qreva (any_list1) (reverse (any_list3))) ((Nil)) = (any_list3 @ any_list1)
Inductive1 : any_list2 = (any1::any_list3)
any_list1 : any list
---------------------------------------
(any1::qreva (reverse (any_list3)) (any_list1)) = (any1::qreva (reverse (any_list3)) (any_list1))

0 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 0)


No conjecture
Proof Success
Proof
assert forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (reverse (any_list2))) ((Nil)) = (any_list2 @ any_list1)
induction any_list2
simpl in goal
induction any_list1
reflexivity
simpl in goal
define mk_rhs1 arg_3 arg_4 =
match (arg_3) with
| Nil  -> arg_4
| Cons hd tl -> mk_rhs1 (tl) ((hd::arg_4))
assert forall (any_list1:any list), mk_rhs1 ((Nil)) (any_list1) = any_list1
reflexivity
assert forall (any_list1:any list) (any1:any) (any_list2:any list), mk_rhs1 ((any1::any_list1)) (any_list2) = mk_rhs1 (any_list1) ((any1::any_list2))
reflexivity
assert forall (any_list1:any list) (any_list2:any list), qreva (qreva (any_list1) (any_list2)) ((Nil)) = mk_rhs1 (any_list2) (any_list1)
induction any_list1
simpl in goal
induction any_list2
reflexivity
simpl in goal
assert forall (any_list1:any list) (any_list2:any list), qreva (any_list1) (any_list2) = mk_rhs1 (any_list1) (any_list2)
induction any_list1
reflexivity
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma5 in goal at 0
reflexivity
rewrite <- rhs_lemma4 in goal at 0
rewrite <- IH1 in goal at 0
reflexivity
rewrite lemma6 in goal at 0
reflexivity
simpl in goal
rewrite lemma6 in goal at 0
rewrite <- lemma5 in goal at 0
rewrite <- IH1 in goal at 0
rewrite lemma6 in goal at 0
intro any_list1
rewrite <- lemma5 in goal at 0
assert forall (any1:any) (any_list1:any list) (any_list2:any list), qreva ((any_list2 @ (any1::(Nil)))) (any_list1) = (any1::qreva (any_list2) (any_list1))
induction any_list2
reflexivity
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma7 in goal at 0
reflexivity
Qed
File "_none_", lines 88-90, characters 2-22:
Warning 8 [partial-match]: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
[]

File "_none_", lines 88-90, characters 2-22:
Warning 8 [partial-match]: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
[]
