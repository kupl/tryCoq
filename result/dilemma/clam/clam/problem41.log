Enter the definition file path (1/2) : 
> Enter the definition file path (2/2) : 
> Choose the proof type :
1) Interactive Mode 	 2) Auto Mode
Enter the goal : =================================================
Progress: 1


No conjecture
>>> assert forall (x:any list) (y:any list), reverse (qreva (x) (y)) = (reverse (y) @ x)(rank : 0)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = (reverse (any_list2) @ any_list1)

---------------------------------------
forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = (reverse (any_list2) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
induction any_list1(rank:12)
induction any_list2(rank:12)
=================================================
Progress: 2


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = (reverse (any_list2) @ any_list1)

---------------------------------------
forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = (reverse (any_list2) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> induction any_list1(rank : 12)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), reverse (qreva ((Nil)) (any_list2)) = (reverse (any_list2) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4)
=================================================
Progress: 3


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), reverse (qreva ((Nil)) (any_list2)) = (reverse (any_list2) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), reverse (any_list2) = (reverse (any_list2) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:5)
=================================================
Progress: 4


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), reverse (any_list2) = (reverse (any_list2) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> induction any_list2(rank : 5)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
reverse ((Nil)) = (reverse ((Nil)) @ (Nil))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:4)
=================================================
Progress: 5


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
reverse ((Nil)) = (reverse ((Nil)) @ (Nil))

2 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (any_list3) = (reverse (any_list3) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
reverse ((any1::any_list3)) = (reverse ((any1::any_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:4)
=================================================
Progress: 6


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (any_list3) = (reverse (any_list3) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
reverse ((any1::any_list3)) = (reverse ((any1::any_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (any_list3) = (reverse (any_list3) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
(reverse (any_list3) @ (any1::(Nil))) = ((reverse (any_list3) @ (any1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
advanced_generalize done
Lemma : forall (arg1:any list), arg1 = (arg1 @ (Nil))
Model : arg1: (Nil)
Model : arg1: (Nil)
Model : arg1: (0::(Nil))
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
(Nil) = ((Nil) @ (Nil))
(Nil) = ((Nil) @ (Nil))
(0::(Nil)) = ((0::(Nil)) @ (Nil))
Simplifying took 0.000049 seconds
Result : true
New Env

;;
Lemma List
forall (arg1:any list), arg1 = (arg1 @ (Nil))
End of Lemma List


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (any_list3) = (reverse (any_list3) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
(reverse (any_list3) @ (any1::(Nil))) = ((reverse (any_list3) @ (any1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 7


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (any_list3) = (reverse (any_list3) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
(reverse (any_list3) @ (any1::(Nil))) = ((reverse (any_list3) @ (any1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (arg1:any list), arg1 = (arg1 @ (Nil))(rank : 0)


1st goal of : forall (any_list1:any list), any_list1 = (any_list1 @ (Nil))

---------------------------------------
forall (any_list1:any list), any_list1 = (any_list1 @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:6)
=================================================
Progress: 8


1st goal of : forall (any_list1:any list), any_list1 = (any_list1 @ (Nil))

---------------------------------------
forall (any_list1:any list), any_list1 = (any_list1 @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> induction any_list1(rank : 6)


1st goal of : forall (any_list1:any list), any_list1 = (any_list1 @ (Nil))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
(Nil) = ((Nil) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5)
=================================================
Progress: 9


1st goal of : forall (any_list1:any list), any_list1 = (any_list1 @ (Nil))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
(Nil) = ((Nil) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5)


1st goal of : forall (any_list1:any list), any_list1 = (any_list1 @ (Nil))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : any_list2 = (any_list2 @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
(any1::any_list2) = ((any1::any_list2) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5)
=================================================
Progress: 10


1st goal of : forall (any_list1:any list), any_list1 = (any_list1 @ (Nil))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : any_list2 = (any_list2 @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
(any1::any_list2) = ((any1::any_list2) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5)


1st goal of : forall (any_list1:any list), any_list1 = (any_list1 @ (Nil))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : any_list2 = (any_list2 @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
(any1::any_list2) = (any1::(any_list2 @ (Nil)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:5)
=================================================
Progress: 11


1st goal of : forall (any_list1:any list), any_list1 = (any_list1 @ (Nil))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : any_list2 = (any_list2 @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
(any1::any_list2) = (any1::(any_list2 @ (Nil)))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 5)


1st goal of : forall (any_list1:any list), any_list1 = (any_list1 @ (Nil))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : any_list2 = (any_list2 @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
(any1::any_list2) = (any1::any_list2)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:4)
=================================================
Progress: 12


1st goal of : forall (any_list1:any list), any_list1 = (any_list1 @ (Nil))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : any_list2 = (any_list2 @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
(any1::any_list2) = (any1::any_list2)

0 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (any_list3) = (reverse (any_list3) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
(reverse (any_list3) @ (any1::(Nil))) = ((reverse (any_list3) @ (any1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
rewrite <- lemma3 in goal at 0(rank:4)
=================================================
Progress: 13


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (any_list3) = (reverse (any_list3) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
(reverse (any_list3) @ (any1::(Nil))) = ((reverse (any_list3) @ (any1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (any_list3) = (reverse (any_list3) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
(reverse (any_list3) @ (any1::(Nil))) = (reverse (any_list3) @ (any1::(Nil)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3)
=================================================
Progress: 14


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : reverse (any_list3) = (reverse (any_list3) @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
(reverse (any_list3) @ (any1::(Nil))) = (reverse (any_list3) @ (any1::(Nil)))

1 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 3)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (any_list2)) = (reverse (any_list2) @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), reverse (qreva ((any1::any_list3)) (any_list2)) = (reverse (any_list2) @ (any1::any_list3))

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:3)
=================================================
Progress: 15


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (any_list2)) = (reverse (any_list2) @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), reverse (qreva ((any1::any_list3)) (any_list2)) = (reverse (any_list2) @ (any1::any_list3))

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (any_list2)) = (reverse (any_list2) @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), reverse (qreva (any_list3) ((any1::any_list2))) = (reverse (any_list2) @ (any1::any_list3))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
induction any_list2(rank:12)
rewrite IH1 in goal at 0(rank:19)
=================================================
Progress: 16


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = (reverse (any_list2) @ any_list1)

---------------------------------------
forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = (reverse (any_list2) @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> induction any_list2(rank : 12)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any_list1:any list), reverse (qreva (any_list1) ((Nil))) = (reverse ((Nil)) @ any_list1)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4)
=================================================
Progress: 17


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any_list1:any list), reverse (qreva (any_list1) ((Nil))) = (reverse ((Nil)) @ any_list1)

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any_list1:any list), reverse (qreva (any_list1) ((Nil))) = any_list1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:5)
=================================================
Progress: 18


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any_list1:any list), reverse (qreva (any_list1) ((Nil))) = any_list1

1 goal(s) more...

0 conjecture(s) more...
>>> induction any_list1(rank : 5)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
---------------------------------------
reverse (qreva ((Nil)) ((Nil))) = (Nil)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:4)
=================================================
Progress: 19


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
---------------------------------------
reverse (qreva ((Nil)) ((Nil))) = (Nil)

2 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : reverse (qreva (any_list3) ((Nil))) = any_list3
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
reverse (qreva ((any1::any_list3)) ((Nil))) = (any1::any_list3)

1 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:4)
=================================================
Progress: 20


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : reverse (qreva (any_list3) ((Nil))) = any_list3
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
reverse (qreva ((any1::any_list3)) ((Nil))) = (any1::any_list3)

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : reverse (qreva (any_list3) ((Nil))) = any_list3
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
reverse (qreva (any_list3) ((any1::(Nil)))) = (any1::any_list3)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
advanced_generalize done
Lemma : forall (any_list3:any list), mk_rhs1 ((Nil)) (any_list3) = any_list3
Model : any_list3: (Nil)
Model : any_list3: (Nil)
Model : any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
let rec mk_rhs1 arg_2 arg_3 =
match (arg_2) with
| Nil  -> arg_3
| Cons hd tl -> mk_rhs1 (tl) ((hd::arg_3))
prop list:
mk_rhs1 ((Nil)) ((Nil)) = (Nil)
mk_rhs1 ((Nil)) ((Nil)) = (Nil)
mk_rhs1 ((Nil)) ((Nil)) = (Nil)
Simplifying took 0.000038 seconds
Result : true
Lemma : forall (tl:any list) (hd:any) (any_list3:any list), mk_rhs1 ((hd::tl)) (any_list3) = mk_rhs1 (tl) ((hd::any_list3))
Model : tl: (Nil), hd: 3, any_list3: (Nil)
Model : tl: (Nil), hd: 7, any_list3: (1::(Nil))
Model : tl: (Nil), hd: 7, any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
let rec mk_rhs1 arg_2 arg_3 =
match (arg_2) with
| Nil  -> arg_3
| Cons hd tl -> mk_rhs1 (tl) ((hd::arg_3))
prop list:
mk_rhs1 ((3::(Nil))) ((Nil)) = mk_rhs1 ((Nil)) ((3::(Nil)))
mk_rhs1 ((7::(Nil))) ((1::(Nil))) = mk_rhs1 ((Nil)) ((7::(1::(Nil))))
mk_rhs1 ((7::(Nil))) ((Nil)) = mk_rhs1 ((Nil)) ((7::(Nil)))
Simplifying took 0.000326 seconds
Result : true
Lemma : forall (any_list3:any list) (lst:any list), reverse (qreva (any_list3) (lst)) = mk_rhs1 (lst) (any_list3)
Model : any_list3: (Nil), lst: (Nil)
Model : any_list3: (Nil), lst: (Nil)
Model : any_list3: (Nil), lst: (Nil)
Substituting variables...
Simplifying conditions and property...
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
let rec mk_rhs1 arg_2 arg_3 =
match (arg_2) with
| Nil  -> arg_3
| Cons hd tl -> mk_rhs1 (tl) ((hd::arg_3))
prop list:
reverse (qreva ((Nil)) ((Nil))) = mk_rhs1 ((Nil)) ((Nil))
reverse (qreva ((Nil)) ((Nil))) = mk_rhs1 ((Nil)) ((Nil))
reverse (qreva ((Nil)) ((Nil))) = mk_rhs1 ((Nil)) ((Nil))
Simplifying took 0.000055 seconds
Result : true
New Env
let rec mk_rhs1 arg_2 arg_3 =
match (arg_2) with
| Nil  -> arg_3
| Cons hd tl -> mk_rhs1 (tl) ((hd::arg_3))
;;
Lemma List
forall (any_list3:any list), mk_rhs1 ((Nil)) (any_list3) = any_list3
forall (tl:any list) (hd:any) (any_list3:any list), mk_rhs1 ((hd::tl)) (any_list3) = mk_rhs1 (tl) ((hd::any_list3))
forall (any_list3:any list) (lst:any list), reverse (qreva (any_list3) (lst)) = mk_rhs1 (lst) (any_list3)
End of Lemma List


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : reverse (qreva (any_list3) ((Nil))) = any_list3
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
reverse (qreva (any_list3) ((any1::(Nil)))) = (any1::any_list3)

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 21


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = (reverse (any_list2) @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : reverse (qreva (any_list3) ((Nil))) = any_list3
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
reverse (qreva (any_list3) ((any1::(Nil)))) = (any1::any_list3)

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (any_list3:any list) (lst:any list), reverse (qreva (any_list3) (lst)) = mk_rhs1 (lst) (any_list3)(rank : 0)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)

---------------------------------------
forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:6)
=================================================
Progress: 22


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)

---------------------------------------
forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)

0 goal(s) more...

1 conjecture(s) more...
>>> induction any_list1(rank : 6)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), reverse (qreva ((Nil)) (any_list2)) = mk_rhs1 (any_list2) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6)
=================================================
Progress: 23


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), reverse (qreva ((Nil)) (any_list2)) = mk_rhs1 (any_list2) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = mk_rhs1 (any_list2) (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), reverse (any_list2) = mk_rhs1 (any_list2) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction any_list2(rank:15)
intro any_list2(rank:22)
=================================================
Progress: 24


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (any_list2)) = (reverse (any_list2) @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), reverse (qreva (any_list3) ((any1::any_list2))) = (reverse (any_list2) @ (any1::any_list3))

0 goal(s) more...

0 conjecture(s) more...
>>> induction any_list2(rank : 12)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (any_list2)) = (reverse (any_list2) @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
reverse (qreva (any_list3) ((any1::(Nil)))) = (reverse ((Nil)) @ (any1::any_list3))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4)
=================================================
Progress: 25


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (any_list2)) = (reverse (any_list2) @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
reverse (qreva (any_list3) ((any1::(Nil)))) = (reverse ((Nil)) @ (any1::any_list3))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (any_list2)) = (reverse (any_list2) @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
reverse (qreva (any_list3) ((any1::(Nil)))) = (any1::any_list3)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:4)
=================================================
Progress: 26


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (any_list2)) = (reverse (any_list2) @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
reverse (qreva (any_list3) ((any1::(Nil)))) = (any1::any_list3)

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (any_list2)) = (reverse (any_list2) @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
(reverse ((any1::(Nil))) @ any_list3) = (any1::any_list3)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3)
=================================================
Progress: 27


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (any_list2)) = (reverse (any_list2) @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
(reverse ((any1::(Nil))) @ any_list3) = (any1::any_list3)

1 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 3)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (any_list2)) = (reverse (any_list2) @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : reverse (qreva (any_list3) ((any1::any_list4))) = (reverse (any_list4) @ (any1::any_list3))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
reverse (qreva (any_list3) ((any1::(any2::any_list4)))) = (reverse ((any2::any_list4)) @ (any1::any_list3))

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:3)
=================================================
Progress: 28


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (any_list2)) = (reverse (any_list2) @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : reverse (qreva (any_list3) ((any1::any_list4))) = (reverse (any_list4) @ (any1::any_list3))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
reverse (qreva (any_list3) ((any1::(any2::any_list4)))) = (reverse ((any2::any_list4)) @ (any1::any_list3))

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (any_list2)) = (reverse (any_list2) @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : reverse (qreva (any_list3) ((any1::any_list4))) = (reverse (any_list4) @ (any1::any_list3))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
reverse (qreva (any_list3) ((any1::(any2::any_list4)))) = ((reverse (any_list4) @ (any2::(Nil))) @ (any1::any_list3))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:3)
=================================================
Progress: 29


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (any_list2)) = (reverse (any_list2) @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : reverse (qreva (any_list3) ((any1::any_list4))) = (reverse (any_list4) @ (any1::any_list3))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
reverse (qreva (any_list3) ((any1::(any2::any_list4)))) = ((reverse (any_list4) @ (any2::(Nil))) @ (any1::any_list3))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 3)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (any_list2)) = (reverse (any_list2) @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : reverse (qreva (any_list3) ((any1::any_list4))) = (reverse (any_list4) @ (any1::any_list3))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
(reverse ((any1::(any2::any_list4))) @ any_list3) = ((reverse (any_list4) @ (any2::(Nil))) @ (any1::any_list3))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:3)
=================================================
Progress: 30


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (any_list2)) = (reverse (any_list2) @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : reverse (qreva (any_list3) ((any1::any_list4))) = (reverse (any_list4) @ (any1::any_list3))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
(reverse ((any1::(any2::any_list4))) @ any_list3) = ((reverse (any_list4) @ (any2::(Nil))) @ (any1::any_list3))

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (any_list2)) = (reverse (any_list2) @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : reverse (qreva (any_list3) ((any1::any_list4))) = (reverse (any_list4) @ (any1::any_list3))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
(((reverse (any_list4) @ (any2::(Nil))) @ (any1::(Nil))) @ any_list3) = ((reverse (any_list4) @ (any2::(Nil))) @ (any1::any_list3))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
simpl in goal
advanced_generalize done
Lemma : forall (any1:any) (any_list3:any list) (arg4:any list), ((arg4 @ (any1::(Nil))) @ any_list3) = (arg4 @ (any1::any_list3))
Model : any1: 0, any_list3: (Nil), arg4: (Nil)
Model : any1: 5, any_list3: (Nil), arg4: (Nil)
Model : any1: 8, any_list3: (Nil), arg4: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil  -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
(((Nil) @ (0::(Nil))) @ (Nil)) = ((Nil) @ (0::(Nil)))
(((Nil) @ (5::(Nil))) @ (Nil)) = ((Nil) @ (5::(Nil)))
(((Nil) @ (8::(Nil))) @ (Nil)) = ((Nil) @ (8::(Nil)))
Simplifying took 0.000347 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any_list3:any list) (arg4:any list), ((arg4 @ (any1::(Nil))) @ any_list3) = (arg4 @ (any1::any_list3))
End of Lemma List


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (any_list2)) = (reverse (any_list2) @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : reverse (qreva (any_list3) ((any1::any_list4))) = (reverse (any_list4) @ (any1::any_list3))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
(((reverse (any_list4) @ (any2::(Nil))) @ (any1::(Nil))) @ any_list3) = ((reverse (any_list4) @ (any2::(Nil))) @ (any1::any_list3))

0 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 31


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (any_list2)) = (reverse (any_list2) @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : reverse (qreva (any_list3) ((any1::any_list4))) = (reverse (any_list4) @ (any1::any_list3))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
(((reverse (any_list4) @ (any2::(Nil))) @ (any1::(Nil))) @ any_list3) = ((reverse (any_list4) @ (any2::(Nil))) @ (any1::any_list3))

0 goal(s) more...

0 conjecture(s) more...
>>> assert forall (any1:any) (any_list3:any list) (arg4:any list), ((arg4 @ (any1::(Nil))) @ any_list3) = (arg4 @ (any1::any_list3))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:6)
=================================================
Progress: 32


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction any_list2(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list), (((Nil) @ (any1::(Nil))) @ any_list1) = ((Nil) @ (any1::any_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5)
=================================================
Progress: 33


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any_list1:any list), (((Nil) @ (any1::(Nil))) @ any_list1) = ((Nil) @ (any1::any_list1))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), ((any_list3 @ (any1::(Nil))) @ any_list1) = (any_list3 @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), (((any2::any_list3) @ (any1::(Nil))) @ any_list1) = ((any2::any_list3) @ (any1::any_list1))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5)
=================================================
Progress: 34


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), ((any_list3 @ (any1::(Nil))) @ any_list1) = (any_list3 @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), (((any2::any_list3) @ (any1::(Nil))) @ any_list1) = ((any2::any_list3) @ (any1::any_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), ((any_list3 @ (any1::(Nil))) @ any_list1) = (any_list3 @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::((any_list3 @ (any1::(Nil))) @ any_list1)) = (any2::(any_list3 @ (any1::any_list1)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
intro any1(rank:5)
rewrite IH1 in goal at 0(rank:13)
rewrite <- IH1 in goal at 0(rank:13)
rewrite <- IH1 in goal at 2(rank:13)
rewrite <- IH1 in goal at 1(rank:21)
intro any_list1(rank:5)
=================================================
Progress: 35


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), ((any_list3 @ (any1::(Nil))) @ any_list1) = (any_list3 @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::((any_list3 @ (any1::(Nil))) @ any_list1)) = (any2::(any_list3 @ (any1::any_list1)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro any1(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), ((any_list3 @ (any1::(Nil))) @ any_list1) = (any_list3 @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
any1 : any
---------------------------------------
forall (any_list1:any list), (any2::((any_list3 @ (any1::(Nil))) @ any_list1)) = (any2::(any_list3 @ (any1::any_list1)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
intro any_list1(rank:5)
rewrite <- IH1 in goal at 0(rank:13)
rewrite <- IH1 in goal at 1(rank:21)
rewrite <- IH1 in goal at 2(rank:13)
rewrite IH1 in goal at 0(rank:13)
=================================================
Progress: 36


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), ((any_list3 @ (any1::(Nil))) @ any_list1) = (any_list3 @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::((any_list3 @ (any1::(Nil))) @ any_list1)) = (any2::(any_list3 @ (any1::any_list1)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro any_list1(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), ((any_list3 @ (any1::(Nil))) @ any_list1) = (any_list3 @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
any_list1 : any list
---------------------------------------
forall (any1:any), (any2::((any_list3 @ (any1::(Nil))) @ any_list1)) = (any2::(any_list3 @ (any1::any_list1)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:13)
rewrite <- IH1 in goal at 0(rank:13)
rewrite <- IH1 in goal at 2(rank:13)
rewrite <- IH1 in goal at 1(rank:21)
=================================================
Progress: 37


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), ((any_list3 @ (any1::(Nil))) @ any_list1) = (any_list3 @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
any1 : any
---------------------------------------
forall (any_list1:any list), (any2::((any_list3 @ (any1::(Nil))) @ any_list1)) = (any2::(any_list3 @ (any1::any_list1)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro any_list1(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), ((any_list3 @ (any1::(Nil))) @ any_list1) = (any_list3 @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
any1 : any
any_list1 : any list
---------------------------------------
(any2::((any_list3 @ (any1::(Nil))) @ any_list1)) = (any2::(any_list3 @ (any1::any_list1)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:13)
rewrite <- IH1 in goal at 0(rank:13)
rewrite <- IH1 in goal at 2(rank:13)
rewrite <- IH1 in goal at 1(rank:21)
=================================================
Progress: 38


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), ((any_list3 @ (any1::(Nil))) @ any_list1) = (any_list3 @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::((any_list3 @ (any1::(Nil))) @ any_list1)) = (any2::(any_list3 @ (any1::any_list1)))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), ((any_list3 @ (any1::(Nil))) @ any_list1) = (any_list3 @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::(any_list3 @ (any1::any_list1))) = (any2::(any_list3 @ (any1::any_list1)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3)
=================================================
Progress: 39


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (any_list1:any list), ((any_list3 @ (any1::(Nil))) @ any_list1) = (any_list3 @ (any1::any_list1))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (any_list1:any list), (any2::(any_list3 @ (any1::any_list1))) = (any2::(any_list3 @ (any1::any_list1)))

0 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 3)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (any_list2)) = (reverse (any_list2) @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : reverse (qreva (any_list3) ((any1::any_list4))) = (reverse (any_list4) @ (any1::any_list3))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
(((reverse (any_list4) @ (any2::(Nil))) @ (any1::(Nil))) @ any_list3) = ((reverse (any_list4) @ (any2::(Nil))) @ (any1::any_list3))

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 15
Tactic List : 6
rewrite lemma4 in goal at 1(rank:11)
rewrite <- lemma4 in goal at 0(rank:11)
rewrite <- lemma4 in goal at 3(rank:11)
rewrite lemma4 in goal at 2(rank:19)
rewrite lemma4 in goal at 3(rank:19)
rewrite lemma4 in goal at 0(rank:19)
=================================================
Progress: 40


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (any_list2)) = (reverse (any_list2) @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : reverse (qreva (any_list3) ((any1::any_list4))) = (reverse (any_list4) @ (any1::any_list3))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
(((reverse (any_list4) @ (any2::(Nil))) @ (any1::(Nil))) @ any_list3) = ((reverse (any_list4) @ (any2::(Nil))) @ (any1::any_list3))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma4 in goal at 1(rank : 11)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (any_list2)) = (reverse (any_list2) @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : reverse (qreva (any_list3) ((any1::any_list4))) = (reverse (any_list4) @ (any1::any_list3))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
((reverse (any_list4) @ (any2::(Nil))) @ (any1::any_list3)) = ((reverse (any_list4) @ (any2::(Nil))) @ (any1::any_list3))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:0)
=================================================
Progress: 41


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = (reverse (any_list2) @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), reverse (qreva (any_list3) (any_list2)) = (reverse (any_list2) @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
any2 : any
any_list4 : any list
IH2 : reverse (qreva (any_list3) ((any1::any_list4))) = (reverse (any_list4) @ (any1::any_list3))
Inductive2 : any_list2 = (any2::any_list4)
---------------------------------------
((reverse (any_list4) @ (any2::(Nil))) @ (any1::any_list3)) = ((reverse (any_list4) @ (any2::(Nil))) @ (any1::any_list3))

0 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 0)


No conjecture
Proof Success
Proof
assert forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = (reverse (any_list2) @ any_list1)
induction any_list1
simpl in goal
induction any_list2
reflexivity
simpl in goal
assert forall (any_list1:any list), any_list1 = (any_list1 @ (Nil))
induction any_list1
reflexivity
simpl in goal
rewrite <- IH1 in goal at 0
reflexivity
rewrite <- lemma3 in goal at 0
reflexivity
simpl in goal
induction any_list2
simpl in goal
rewrite IH1 in goal at 0
reflexivity
simpl in goal
rewrite IH1 in goal at 0
simpl in goal
assert forall (any1:any) (any_list1:any list) (any_list2:any list), ((any_list2 @ (any1::(Nil))) @ any_list1) = (any_list2 @ (any1::any_list1))
induction any_list2
reflexivity
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma4 in goal at 1
reflexivity
Qed
File "_none_", lines 88-90, characters 2-22:
Warning 8 [partial-match]: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
[]

File "_none_", lines 88-90, characters 2-22:
Warning 8 [partial-match]: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
[]
