Enter the definition file path (1/2) : 
> Enter the definition file path (2/2) : 
> Choose the proof type :
1) Interactive Mode 	 2) Auto Mode
Enter the goal : =================================================
Progress: 1


No conjecture
>>> assert forall (x:any list) (y:any list), rotate (len (x)) ((x @ y)) = (y @ x)(rank : 0)


1st goal of : forall (any_list1:any list) (any_list2:any list), rotate (len (any_list1)) ((any_list1 @ any_list2)) = (any_list2 @ any_list1)

---------------------------------------
forall (any_list1:any list) (any_list2:any list), rotate (len (any_list1)) ((any_list1 @ any_list2)) = (any_list2 @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
induction any_list1(rank:12)
induction any_list2(rank:12)
=================================================
Progress: 2


1st goal of : forall (any_list1:any list) (any_list2:any list), rotate (len (any_list1)) ((any_list1 @ any_list2)) = (any_list2 @ any_list1)

---------------------------------------
forall (any_list1:any list) (any_list2:any list), rotate (len (any_list1)) ((any_list1 @ any_list2)) = (any_list2 @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> induction any_list1(rank : 12)


1st goal of : forall (any_list1:any list) (any_list2:any list), rotate (len (any_list1)) ((any_list1 @ any_list2)) = (any_list2 @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), rotate (len ((Nil))) (((Nil) @ any_list2)) = (any_list2 @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4)
=================================================
Progress: 3


1st goal of : forall (any_list1:any list) (any_list2:any list), rotate (len (any_list1)) ((any_list1 @ any_list2)) = (any_list2 @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), rotate (len ((Nil))) (((Nil) @ any_list2)) = (any_list2 @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), rotate (len (any_list1)) ((any_list1 @ any_list2)) = (any_list2 @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), any_list2 = (any_list2 @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:5)
=================================================
Progress: 4


1st goal of : forall (any_list1:any list) (any_list2:any list), rotate (len (any_list1)) ((any_list1 @ any_list2)) = (any_list2 @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), any_list2 = (any_list2 @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> induction any_list2(rank : 5)


1st goal of : forall (any_list1:any list) (any_list2:any list), rotate (len (any_list1)) ((any_list1 @ any_list2)) = (any_list2 @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
(Nil) = ((Nil) @ (Nil))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:4)
=================================================
Progress: 5


1st goal of : forall (any_list1:any list) (any_list2:any list), rotate (len (any_list1)) ((any_list1 @ any_list2)) = (any_list2 @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
(Nil) = ((Nil) @ (Nil))

2 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), rotate (len (any_list1)) ((any_list1 @ any_list2)) = (any_list2 @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : any_list3 = (any_list3 @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
(any1::any_list3) = ((any1::any_list3) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:4)
=================================================
Progress: 6


1st goal of : forall (any_list1:any list) (any_list2:any list), rotate (len (any_list1)) ((any_list1 @ any_list2)) = (any_list2 @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : any_list3 = (any_list3 @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
(any1::any_list3) = ((any1::any_list3) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), rotate (len (any_list1)) ((any_list1 @ any_list2)) = (any_list2 @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : any_list3 = (any_list3 @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
(any1::any_list3) = (any1::(any_list3 @ (Nil)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:4)
=================================================
Progress: 7


1st goal of : forall (any_list1:any list) (any_list2:any list), rotate (len (any_list1)) ((any_list1 @ any_list2)) = (any_list2 @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : any_list3 = (any_list3 @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
(any1::any_list3) = (any1::(any_list3 @ (Nil)))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), rotate (len (any_list1)) ((any_list1 @ any_list2)) = (any_list2 @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : any_list3 = (any_list3 @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
(any1::any_list3) = (any1::any_list3)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3)
=================================================
Progress: 8


1st goal of : forall (any_list1:any list) (any_list2:any list), rotate (len (any_list1)) ((any_list1 @ any_list2)) = (any_list2 @ any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any1 : any
any_list3 : any list
IH1 : any_list3 = (any_list3 @ (Nil))
Inductive1 : any_list2 = (any1::any_list3)
---------------------------------------
(any1::any_list3) = (any1::any_list3)

1 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 3)


1st goal of : forall (any_list1:any list) (any_list2:any list), rotate (len (any_list1)) ((any_list1 @ any_list2)) = (any_list2 @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), rotate (len (any_list3)) ((any_list3 @ any_list2)) = (any_list2 @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), rotate (len ((any1::any_list3))) (((any1::any_list3) @ any_list2)) = (any_list2 @ (any1::any_list3))

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:3)
=================================================
Progress: 9


1st goal of : forall (any_list1:any list) (any_list2:any list), rotate (len (any_list1)) ((any_list1 @ any_list2)) = (any_list2 @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), rotate (len (any_list3)) ((any_list3 @ any_list2)) = (any_list2 @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), rotate (len ((any1::any_list3))) (((any1::any_list3) @ any_list2)) = (any_list2 @ (any1::any_list3))

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3)


1st goal of : forall (any_list1:any list) (any_list2:any list), rotate (len (any_list1)) ((any_list1 @ any_list2)) = (any_list2 @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), rotate (len (any_list3)) ((any_list3 @ any_list2)) = (any_list2 @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), rotate (len (any_list3)) (((any_list3 @ any_list2) @ (any1::(Nil)))) = (any_list2 @ (any1::any_list3))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:4)
=================================================
Progress: 10


1st goal of : forall (any_list1:any list) (any_list2:any list), rotate (len (any_list1)) ((any_list1 @ any_list2)) = (any_list2 @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), rotate (len (any_list3)) ((any_list3 @ any_list2)) = (any_list2 @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
forall (any_list2:any list), rotate (len (any_list3)) (((any_list3 @ any_list2) @ (any1::(Nil)))) = (any_list2 @ (any1::any_list3))

0 goal(s) more...

0 conjecture(s) more...
>>> induction any_list2(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), rotate (len (any_list1)) ((any_list1 @ any_list2)) = (any_list2 @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), rotate (len (any_list3)) ((any_list3 @ any_list2)) = (any_list2 @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
rotate (len (any_list3)) (((any_list3 @ (Nil)) @ (any1::(Nil)))) = ((Nil) @ (any1::any_list3))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4)
=================================================
Progress: 11


1st goal of : forall (any_list1:any list) (any_list2:any list), rotate (len (any_list1)) ((any_list1 @ any_list2)) = (any_list2 @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), rotate (len (any_list3)) ((any_list3 @ any_list2)) = (any_list2 @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
rotate (len (any_list3)) (((any_list3 @ (Nil)) @ (any1::(Nil)))) = ((Nil) @ (any1::any_list3))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), rotate (len (any_list1)) ((any_list1 @ any_list2)) = (any_list2 @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), rotate (len (any_list3)) ((any_list3 @ any_list2)) = (any_list2 @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
rotate (len (any_list3)) (((any_list3 @ (Nil)) @ (any1::(Nil)))) = (any1::any_list3)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any_list3:any list), rotate (len (any_list3)) (((any_list3 @ (Nil)) @ (any1::(Nil)))) = (any1::any_list3)
Model : any1: 0, any_list3: (4::(8::(3::(Nil))))
Model : any1: 1, any_list3: (Nil)
Model : any1: 4, any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((4::(8::(3::(Nil)))))) ((((4::(8::(3::(Nil)))) @ (Nil)) @ (0::(Nil)))) = (0::(4::(8::(3::(Nil)))))
rotate (len ((Nil))) ((((Nil) @ (Nil)) @ (1::(Nil)))) = (1::(Nil))
rotate (len ((Nil))) ((((Nil) @ (Nil)) @ (4::(Nil)))) = (4::(Nil))
Simplifying took 0.001361 seconds
Result : true
advanced_generalize done


1st goal of : forall (any_list1:any list) (any_list2:any list), rotate (len (any_list1)) ((any_list1 @ any_list2)) = (any_list2 @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), rotate (len (any_list3)) ((any_list3 @ any_list2)) = (any_list2 @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
rotate (len (any_list3)) (((any_list3 @ (Nil)) @ (any1::(Nil)))) = (any1::any_list3)

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 12


1st goal of : forall (any_list1:any list) (any_list2:any list), rotate (len (any_list1)) ((any_list1 @ any_list2)) = (any_list2 @ any_list1)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : forall (any_list2:any list), rotate (len (any_list3)) ((any_list3 @ any_list2)) = (any_list2 @ any_list3)
Inductive1 : any_list1 = (any1::any_list3)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
rotate (len (any_list3)) (((any_list3 @ (Nil)) @ (any1::(Nil)))) = (any1::any_list3)

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (any1:any) (any_list3:any list), rotate (len (any_list3)) (((any_list3 @ (Nil)) @ (any1::(Nil)))) = (any1::any_list3)(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list), rotate (len (any_list1)) (((any_list1 @ (Nil)) @ (any1::(Nil)))) = (any1::any_list1)

---------------------------------------
forall (any1:any) (any_list1:any list), rotate (len (any_list1)) (((any_list1 @ (Nil)) @ (any1::(Nil)))) = (any1::any_list1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:6)
=================================================
Progress: 13


1st goal of : forall (any1:any) (any_list1:any list), rotate (len (any_list1)) (((any_list1 @ (Nil)) @ (any1::(Nil)))) = (any1::any_list1)

---------------------------------------
forall (any1:any) (any_list1:any list), rotate (len (any_list1)) (((any_list1 @ (Nil)) @ (any1::(Nil)))) = (any1::any_list1)

0 goal(s) more...

1 conjecture(s) more...
>>> induction any_list1(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list), rotate (len (any_list1)) (((any_list1 @ (Nil)) @ (any1::(Nil)))) = (any1::any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any), rotate (len ((Nil))) ((((Nil) @ (Nil)) @ (any1::(Nil)))) = (any1::(Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5)
=================================================
Progress: 14


1st goal of : forall (any1:any) (any_list1:any list), rotate (len (any_list1)) (((any_list1 @ (Nil)) @ (any1::(Nil)))) = (any1::any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any), rotate (len ((Nil))) ((((Nil) @ (Nil)) @ (any1::(Nil)))) = (any1::(Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list), rotate (len (any_list1)) (((any_list1 @ (Nil)) @ (any1::(Nil)))) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), rotate (len (any_list2)) (((any_list2 @ (Nil)) @ (any1::(Nil)))) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), rotate (len ((any2::any_list2))) ((((any2::any_list2) @ (Nil)) @ (any1::(Nil)))) = (any1::(any2::any_list2))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5)
=================================================
Progress: 15


1st goal of : forall (any1:any) (any_list1:any list), rotate (len (any_list1)) (((any_list1 @ (Nil)) @ (any1::(Nil)))) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), rotate (len (any_list2)) (((any_list2 @ (Nil)) @ (any1::(Nil)))) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), rotate (len ((any2::any_list2))) ((((any2::any_list2) @ (Nil)) @ (any1::(Nil)))) = (any1::(any2::any_list2))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list), rotate (len (any_list1)) (((any_list1 @ (Nil)) @ (any1::(Nil)))) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), rotate (len (any_list2)) (((any_list2 @ (Nil)) @ (any1::(Nil)))) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil)))) = (any1::(any2::any_list2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
intro any1(rank:5)
rewrite <- IH1 in goal at 0(rank:13)
=================================================
Progress: 16


1st goal of : forall (any1:any) (any_list1:any list), rotate (len (any_list1)) (((any_list1 @ (Nil)) @ (any1::(Nil)))) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), rotate (len (any_list2)) (((any_list2 @ (Nil)) @ (any1::(Nil)))) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil)))) = (any1::(any2::any_list2))

0 goal(s) more...

1 conjecture(s) more...
>>> intro any1(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list), rotate (len (any_list1)) (((any_list1 @ (Nil)) @ (any1::(Nil)))) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), rotate (len (any_list2)) (((any_list2 @ (Nil)) @ (any1::(Nil)))) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil)))) = (any1::(any2::any_list2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:5)
=================================================
Progress: 17


1st goal of : forall (any1:any) (any_list1:any list), rotate (len (any_list1)) (((any_list1 @ (Nil)) @ (any1::(Nil)))) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), rotate (len (any_list2)) (((any_list2 @ (Nil)) @ (any1::(Nil)))) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil)))) = (any1::(any2::any_list2))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list), rotate (len (any_list1)) (((any_list1 @ (Nil)) @ (any1::(Nil)))) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), rotate (len (any_list2)) (((any_list2 @ (Nil)) @ (any1::(Nil)))) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil)))) = (any1::rotate (len (any_list2)) (((any_list2 @ (Nil)) @ (any2::(Nil)))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (arg1:any list) (arg2:any list) (arg3:nat), rotate (arg3) (((arg1 @ (any1::(Nil))) @ arg2)) = (any1::rotate (arg3) ((arg1 @ arg2)))
Model : any1: 7, arg1: (0::(Nil)), arg2: (Nil), arg3: ZERO
Model : any1: 4, arg1: (Nil), arg2: (Nil), arg3: SUCC (ZERO)
Model : any1: 6, arg1: (Nil), arg2: (Nil), arg3: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) ((((0::(Nil)) @ (7::(Nil))) @ (Nil))) = (7::rotate (ZERO) (((0::(Nil)) @ (Nil))))
rotate (SUCC (ZERO)) ((((Nil) @ (4::(Nil))) @ (Nil))) = (4::rotate (SUCC (ZERO)) (((Nil) @ (Nil))))
rotate (ZERO) ((((Nil) @ (6::(Nil))) @ (Nil))) = (6::rotate (ZERO) (((Nil) @ (Nil))))
Simplifying took 0.000484 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any_list2:any list), rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil)))) = (any1::rotate (len (any_list2)) (((any_list2 @ (Nil)) @ (any2::(Nil)))))
Model : any1: 7, any2: 2, any_list2: (4::(Nil))
Model : any1: 5, any2: 3, any_list2: (Nil)
Model : any1: 6, any2: 0, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((4::(Nil)))) (((((4::(Nil)) @ (Nil)) @ (7::(Nil))) @ (2::(Nil)))) = (7::rotate (len ((4::(Nil)))) ((((4::(Nil)) @ (Nil)) @ (2::(Nil)))))
rotate (len ((Nil))) (((((Nil) @ (Nil)) @ (5::(Nil))) @ (3::(Nil)))) = (5::rotate (len ((Nil))) ((((Nil) @ (Nil)) @ (3::(Nil)))))
rotate (len ((Nil))) (((((Nil) @ (Nil)) @ (6::(Nil))) @ (0::(Nil)))) = (6::rotate (len ((Nil))) ((((Nil) @ (Nil)) @ (0::(Nil)))))
Simplifying took 0.001032 seconds
Result : true
advanced_generalize done


1st goal of : forall (any1:any) (any_list1:any list), rotate (len (any_list1)) (((any_list1 @ (Nil)) @ (any1::(Nil)))) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), rotate (len (any_list2)) (((any_list2 @ (Nil)) @ (any1::(Nil)))) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil)))) = (any1::rotate (len (any_list2)) (((any_list2 @ (Nil)) @ (any2::(Nil)))))

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 18


1st goal of : forall (any1:any) (any_list1:any list), rotate (len (any_list1)) (((any_list1 @ (Nil)) @ (any1::(Nil)))) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), rotate (len (any_list2)) (((any_list2 @ (Nil)) @ (any1::(Nil)))) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil)))) = (any1::rotate (len (any_list2)) (((any_list2 @ (Nil)) @ (any2::(Nil)))))

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any_list2:any list), rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil)))) = (any1::rotate (len (any_list2)) (((any_list2 @ (Nil)) @ (any2::(Nil)))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list), rotate (len (any_list1)) ((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil)))) = (any1::rotate (len (any_list1)) (((any_list1 @ (Nil)) @ (any2::(Nil)))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), rotate (len (any_list1)) ((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil)))) = (any1::rotate (len (any_list1)) (((any_list1 @ (Nil)) @ (any2::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:8)
=================================================
Progress: 19


1st goal of : forall (any1:any) (any2:any) (any_list1:any list), rotate (len (any_list1)) ((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil)))) = (any1::rotate (len (any_list1)) (((any_list1 @ (Nil)) @ (any2::(Nil)))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), rotate (len (any_list1)) ((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil)))) = (any1::rotate (len (any_list1)) (((any_list1 @ (Nil)) @ (any2::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
>>> induction any_list1(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list), rotate (len (any_list1)) ((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil)))) = (any1::rotate (len (any_list1)) (((any_list1 @ (Nil)) @ (any2::(Nil)))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any), rotate (len ((Nil))) (((((Nil) @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil)))) = (any1::rotate (len ((Nil))) ((((Nil) @ (Nil)) @ (any2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7)
=================================================
Progress: 20


1st goal of : forall (any1:any) (any2:any) (any_list1:any list), rotate (len (any_list1)) ((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil)))) = (any1::rotate (len (any_list1)) (((any_list1 @ (Nil)) @ (any2::(Nil)))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any), rotate (len ((Nil))) (((((Nil) @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil)))) = (any1::rotate (len ((Nil))) ((((Nil) @ (Nil)) @ (any2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list), rotate (len (any_list1)) ((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil)))) = (any1::rotate (len (any_list1)) (((any_list1 @ (Nil)) @ (any2::(Nil)))))
any_list1 : any list
any3 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any), rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil)))) = (any1::rotate (len (any_list2)) (((any_list2 @ (Nil)) @ (any2::(Nil)))))
Inductive1 : any_list1 = (any3::any_list2)
---------------------------------------
forall (any1:any) (any2:any), rotate (len ((any3::any_list2))) (((((any3::any_list2) @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil)))) = (any1::rotate (len ((any3::any_list2))) ((((any3::any_list2) @ (Nil)) @ (any2::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7)
=================================================
Progress: 21


1st goal of : forall (any1:any) (any2:any) (any_list1:any list), rotate (len (any_list1)) ((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil)))) = (any1::rotate (len (any_list1)) (((any_list1 @ (Nil)) @ (any2::(Nil)))))
any_list1 : any list
any3 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any), rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil)))) = (any1::rotate (len (any_list2)) (((any_list2 @ (Nil)) @ (any2::(Nil)))))
Inductive1 : any_list1 = (any3::any_list2)
---------------------------------------
forall (any1:any) (any2:any), rotate (len ((any3::any_list2))) (((((any3::any_list2) @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil)))) = (any1::rotate (len ((any3::any_list2))) ((((any3::any_list2) @ (Nil)) @ (any2::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list), rotate (len (any_list1)) ((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil)))) = (any1::rotate (len (any_list1)) (((any_list1 @ (Nil)) @ (any2::(Nil)))))
any_list1 : any list
any3 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any), rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil)))) = (any1::rotate (len (any_list2)) (((any_list2 @ (Nil)) @ (any2::(Nil)))))
Inductive1 : any_list1 = (any3::any_list2)
---------------------------------------
forall (any1:any) (any2:any), rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil)))) = (any1::rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any2::(Nil))) @ (any3::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro any1(rank:7)
intro any2(rank:7)
rewrite IH1 in goal at 0(rank:23)
=================================================
Progress: 22


1st goal of : forall (any1:any) (any2:any) (any_list1:any list), rotate (len (any_list1)) ((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil)))) = (any1::rotate (len (any_list1)) (((any_list1 @ (Nil)) @ (any2::(Nil)))))
any_list1 : any list
any3 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any), rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil)))) = (any1::rotate (len (any_list2)) (((any_list2 @ (Nil)) @ (any2::(Nil)))))
Inductive1 : any_list1 = (any3::any_list2)
---------------------------------------
forall (any1:any) (any2:any), rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil)))) = (any1::rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any2::(Nil))) @ (any3::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any1(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list), rotate (len (any_list1)) ((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil)))) = (any1::rotate (len (any_list1)) (((any_list1 @ (Nil)) @ (any2::(Nil)))))
any_list1 : any list
any3 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any), rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil)))) = (any1::rotate (len (any_list2)) (((any_list2 @ (Nil)) @ (any2::(Nil)))))
Inductive1 : any_list1 = (any3::any_list2)
any1 : any
---------------------------------------
forall (any2:any), rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil)))) = (any1::rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any2::(Nil))) @ (any3::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro any2(rank:7)
rewrite IH1 in goal at 0(rank:23)
=================================================
Progress: 23


1st goal of : forall (any1:any) (any2:any) (any_list1:any list), rotate (len (any_list1)) ((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil)))) = (any1::rotate (len (any_list1)) (((any_list1 @ (Nil)) @ (any2::(Nil)))))
any_list1 : any list
any3 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any), rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil)))) = (any1::rotate (len (any_list2)) (((any_list2 @ (Nil)) @ (any2::(Nil)))))
Inductive1 : any_list1 = (any3::any_list2)
---------------------------------------
forall (any1:any) (any2:any), rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil)))) = (any1::rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any2::(Nil))) @ (any3::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any2(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list), rotate (len (any_list1)) ((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil)))) = (any1::rotate (len (any_list1)) (((any_list1 @ (Nil)) @ (any2::(Nil)))))
any_list1 : any list
any3 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any), rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil)))) = (any1::rotate (len (any_list2)) (((any_list2 @ (Nil)) @ (any2::(Nil)))))
Inductive1 : any_list1 = (any3::any_list2)
any2 : any
---------------------------------------
forall (any1:any), rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil)))) = (any1::rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any2::(Nil))) @ (any3::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:7)
=================================================
Progress: 24


1st goal of : forall (any1:any) (any2:any) (any_list1:any list), rotate (len (any_list1)) ((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil)))) = (any1::rotate (len (any_list1)) (((any_list1 @ (Nil)) @ (any2::(Nil)))))
any_list1 : any list
any3 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any), rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil)))) = (any1::rotate (len (any_list2)) (((any_list2 @ (Nil)) @ (any2::(Nil)))))
Inductive1 : any_list1 = (any3::any_list2)
any1 : any
---------------------------------------
forall (any2:any), rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil)))) = (any1::rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any2::(Nil))) @ (any3::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any2(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list), rotate (len (any_list1)) ((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil)))) = (any1::rotate (len (any_list1)) (((any_list1 @ (Nil)) @ (any2::(Nil)))))
any_list1 : any list
any3 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any), rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil)))) = (any1::rotate (len (any_list2)) (((any_list2 @ (Nil)) @ (any2::(Nil)))))
Inductive1 : any_list1 = (any3::any_list2)
any1 : any
any2 : any
---------------------------------------
rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil)))) = (any1::rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any2::(Nil))) @ (any3::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:7)
=================================================
Progress: 25


1st goal of : forall (any1:any) (any2:any) (any_list1:any list), rotate (len (any_list1)) ((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil)))) = (any1::rotate (len (any_list1)) (((any_list1 @ (Nil)) @ (any2::(Nil)))))
any_list1 : any list
any3 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any), rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil)))) = (any1::rotate (len (any_list2)) (((any_list2 @ (Nil)) @ (any2::(Nil)))))
Inductive1 : any_list1 = (any3::any_list2)
any2 : any
---------------------------------------
forall (any1:any), rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil)))) = (any1::rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any2::(Nil))) @ (any3::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list), rotate (len (any_list1)) ((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil)))) = (any1::rotate (len (any_list1)) (((any_list1 @ (Nil)) @ (any2::(Nil)))))
any_list1 : any list
any3 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any), rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil)))) = (any1::rotate (len (any_list2)) (((any_list2 @ (Nil)) @ (any2::(Nil)))))
Inductive1 : any_list1 = (any3::any_list2)
any2 : any
---------------------------------------
forall (any1:any), rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((any_list2 @ (Nil)) @ (any3::(Nil))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg4:any list) (arg5:any list) (arg6:nat), rotate (arg6) ((((arg4 @ (any1::(Nil))) @ (any2::(Nil))) @ arg5)) = (any1::(any2::rotate (arg6) ((arg4 @ arg5))))
Model : any1: 0, any2: 5, arg4: (Nil), arg5: (3::(Nil)), arg6: SUCC (ZERO)
Model : any1: 0, any2: 0, arg4: (Nil), arg5: (Nil), arg6: SUCC (SUCC (ZERO))
Model : any1: 3, any2: 8, arg4: (6::(Nil)), arg5: (Nil), arg6: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (SUCC (ZERO)) (((((Nil) @ (0::(Nil))) @ (5::(Nil))) @ (3::(Nil)))) = (0::(5::rotate (SUCC (ZERO)) (((Nil) @ (3::(Nil))))))
rotate (SUCC (SUCC (ZERO))) (((((Nil) @ (0::(Nil))) @ (0::(Nil))) @ (Nil))) = (0::(0::rotate (SUCC (SUCC (ZERO))) (((Nil) @ (Nil)))))
rotate (ZERO) (((((6::(Nil)) @ (3::(Nil))) @ (8::(Nil))) @ (Nil))) = (3::(8::rotate (ZERO) (((6::(Nil)) @ (Nil)))))
Simplifying took 0.001179 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any_list2:any list), rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((any_list2 @ (Nil)) @ (any3::(Nil))))))
Model : any1: 0, any2: 0, any3: 3, any_list2: (Nil)
Model : any1: 7, any2: 5, any3: 2, any_list2: (Nil)
Model : any1: 6, any2: 1, any3: 7, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) ((((((Nil) @ (Nil)) @ (0::(Nil))) @ (0::(Nil))) @ (3::(Nil)))) = (0::(0::rotate (len ((Nil))) ((((Nil) @ (Nil)) @ (3::(Nil))))))
rotate (len ((Nil))) ((((((Nil) @ (Nil)) @ (7::(Nil))) @ (5::(Nil))) @ (2::(Nil)))) = (7::(5::rotate (len ((Nil))) ((((Nil) @ (Nil)) @ (2::(Nil))))))
rotate (len ((Nil))) ((((((Nil) @ (Nil)) @ (6::(Nil))) @ (1::(Nil))) @ (7::(Nil)))) = (6::(1::rotate (len ((Nil))) ((((Nil) @ (Nil)) @ (7::(Nil))))))
Simplifying took 0.000876 seconds
Result : true
advanced_generalize done


1st goal of : forall (any1:any) (any2:any) (any_list1:any list), rotate (len (any_list1)) ((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil)))) = (any1::rotate (len (any_list1)) (((any_list1 @ (Nil)) @ (any2::(Nil)))))
any_list1 : any list
any3 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any), rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil)))) = (any1::rotate (len (any_list2)) (((any_list2 @ (Nil)) @ (any2::(Nil)))))
Inductive1 : any_list1 = (any3::any_list2)
any2 : any
---------------------------------------
forall (any1:any), rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((any_list2 @ (Nil)) @ (any3::(Nil))))))

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 26


1st goal of : forall (any1:any) (any2:any) (any_list1:any list), rotate (len (any_list1)) ((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil)))) = (any1::rotate (len (any_list1)) (((any_list1 @ (Nil)) @ (any2::(Nil)))))
any_list1 : any list
any3 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any), rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil)))) = (any1::rotate (len (any_list2)) (((any_list2 @ (Nil)) @ (any2::(Nil)))))
Inductive1 : any_list1 = (any3::any_list2)
any2 : any
---------------------------------------
forall (any1:any), rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((any_list2 @ (Nil)) @ (any3::(Nil))))))

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any_list2:any list), rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((any_list2 @ (Nil)) @ (any3::(Nil))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((any_list1 @ (Nil)) @ (any3::(Nil))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((any_list1 @ (Nil)) @ (any3::(Nil))))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:10)
=================================================
Progress: 27


1st goal of : forall (any1:any) (any2:any) (any_list1:any list), rotate (len (any_list1)) ((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil)))) = (any1::rotate (len (any_list1)) (((any_list1 @ (Nil)) @ (any2::(Nil)))))
any_list1 : any list
any3 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any), rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil)))) = (any1::rotate (len (any_list2)) (((any_list2 @ (Nil)) @ (any2::(Nil)))))
Inductive1 : any_list1 = (any3::any_list2)
any1 : any
any2 : any
---------------------------------------
rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil)))) = (any1::rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any2::(Nil))) @ (any3::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list), rotate (len (any_list1)) ((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil)))) = (any1::rotate (len (any_list1)) (((any_list1 @ (Nil)) @ (any2::(Nil)))))
any_list1 : any list
any3 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any), rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil)))) = (any1::rotate (len (any_list2)) (((any_list2 @ (Nil)) @ (any2::(Nil)))))
Inductive1 : any_list1 = (any3::any_list2)
any1 : any
any2 : any
---------------------------------------
rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((any_list2 @ (Nil)) @ (any3::(Nil))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg7:any list) (arg8:any list) (arg9:nat), rotate (arg9) ((((arg7 @ (any1::(Nil))) @ (any2::(Nil))) @ arg8)) = (any1::(any2::rotate (arg9) ((arg7 @ arg8))))
Model : any1: 6, any2: 3, arg7: (Nil), arg8: (Nil), arg9: ZERO
Model : any1: 6, any2: 7, arg7: (Nil), arg8: (Nil), arg9: ZERO
Model : any1: 8, any2: 4, arg7: (3::(Nil)), arg8: (Nil), arg9: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) (((((Nil) @ (6::(Nil))) @ (3::(Nil))) @ (Nil))) = (6::(3::rotate (ZERO) (((Nil) @ (Nil)))))
rotate (ZERO) (((((Nil) @ (6::(Nil))) @ (7::(Nil))) @ (Nil))) = (6::(7::rotate (ZERO) (((Nil) @ (Nil)))))
rotate (ZERO) (((((3::(Nil)) @ (8::(Nil))) @ (4::(Nil))) @ (Nil))) = (8::(4::rotate (ZERO) (((3::(Nil)) @ (Nil)))))
Simplifying took 0.000935 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any_list2:any list), rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((any_list2 @ (Nil)) @ (any3::(Nil))))))
Model : any1: 3, any2: 0, any3: 4, any_list2: (Nil)
Model : any1: 6, any2: 4, any3: 7, any_list2: (Nil)
Model : any1: 8, any2: 1, any3: 5, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) ((((((Nil) @ (Nil)) @ (3::(Nil))) @ (0::(Nil))) @ (4::(Nil)))) = (3::(0::rotate (len ((Nil))) ((((Nil) @ (Nil)) @ (4::(Nil))))))
rotate (len ((Nil))) ((((((Nil) @ (Nil)) @ (6::(Nil))) @ (4::(Nil))) @ (7::(Nil)))) = (6::(4::rotate (len ((Nil))) ((((Nil) @ (Nil)) @ (7::(Nil))))))
rotate (len ((Nil))) ((((((Nil) @ (Nil)) @ (8::(Nil))) @ (1::(Nil))) @ (5::(Nil)))) = (8::(1::rotate (len ((Nil))) ((((Nil) @ (Nil)) @ (5::(Nil))))))
Simplifying took 0.000944 seconds
Result : true
advanced_generalize done
=================================================
Progress: 28


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((any_list1 @ (Nil)) @ (any3::(Nil))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any_list1:any list), rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((any_list1 @ (Nil)) @ (any3::(Nil))))))

0 goal(s) more...

3 conjecture(s) more...
>>> induction any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((any_list1 @ (Nil)) @ (any3::(Nil))))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any), rotate (len ((Nil))) ((((((Nil) @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil)))) = (any1::(any2::rotate (len ((Nil))) ((((Nil) @ (Nil)) @ (any3::(Nil))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9)
=================================================
Progress: 29


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((any_list1 @ (Nil)) @ (any3::(Nil))))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any), rotate (len ((Nil))) ((((((Nil) @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil)))) = (any1::(any2::rotate (len ((Nil))) ((((Nil) @ (Nil)) @ (any3::(Nil))))))

1 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((any_list1 @ (Nil)) @ (any3::(Nil))))))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((any_list2 @ (Nil)) @ (any3::(Nil))))))
Inductive1 : any_list1 = (any4::any_list2)
---------------------------------------
forall (any1:any) (any2:any) (any3:any), rotate (len ((any4::any_list2))) ((((((any4::any_list2) @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil)))) = (any1::(any2::rotate (len ((any4::any_list2))) ((((any4::any_list2) @ (Nil)) @ (any3::(Nil))))))

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 30


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((any_list1 @ (Nil)) @ (any3::(Nil))))))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((any_list2 @ (Nil)) @ (any3::(Nil))))))
Inductive1 : any_list1 = (any4::any_list2)
---------------------------------------
forall (any1:any) (any2:any) (any3:any), rotate (len ((any4::any_list2))) ((((((any4::any_list2) @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil)))) = (any1::(any2::rotate (len ((any4::any_list2))) ((((any4::any_list2) @ (Nil)) @ (any3::(Nil))))))

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((any_list1 @ (Nil)) @ (any3::(Nil))))))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((any_list2 @ (Nil)) @ (any3::(Nil))))))
Inductive1 : any_list1 = (any4::any_list2)
---------------------------------------
forall (any1:any) (any2:any) (any3:any), rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro any1(rank:9)
intro any2(rank:9)
intro any3(rank:9)
=================================================
Progress: 31


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((any_list1 @ (Nil)) @ (any3::(Nil))))))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((any_list2 @ (Nil)) @ (any3::(Nil))))))
Inductive1 : any_list1 = (any4::any_list2)
---------------------------------------
forall (any1:any) (any2:any) (any3:any), rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any1(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((any_list1 @ (Nil)) @ (any3::(Nil))))))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((any_list2 @ (Nil)) @ (any3::(Nil))))))
Inductive1 : any_list1 = (any4::any_list2)
any1 : any
---------------------------------------
forall (any2:any) (any3:any), rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro any2(rank:9)
intro any3(rank:9)
=================================================
Progress: 32


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((any_list1 @ (Nil)) @ (any3::(Nil))))))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((any_list2 @ (Nil)) @ (any3::(Nil))))))
Inductive1 : any_list1 = (any4::any_list2)
---------------------------------------
forall (any1:any) (any2:any) (any3:any), rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any2(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((any_list1 @ (Nil)) @ (any3::(Nil))))))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((any_list2 @ (Nil)) @ (any3::(Nil))))))
Inductive1 : any_list1 = (any4::any_list2)
any2 : any
---------------------------------------
forall (any1:any) (any3:any), rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro any3(rank:9)
=================================================
Progress: 33


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((any_list1 @ (Nil)) @ (any3::(Nil))))))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((any_list2 @ (Nil)) @ (any3::(Nil))))))
Inductive1 : any_list1 = (any4::any_list2)
---------------------------------------
forall (any1:any) (any2:any) (any3:any), rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any3(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((any_list1 @ (Nil)) @ (any3::(Nil))))))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((any_list2 @ (Nil)) @ (any3::(Nil))))))
Inductive1 : any_list1 = (any4::any_list2)
any3 : any
---------------------------------------
forall (any1:any) (any2:any), rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg10:any list) (arg11:any list) (arg12:any list) (arg13:nat), rotate (arg13) (((((arg10 @ (any1::(Nil))) @ (any2::(Nil))) @ arg11) @ arg12)) = (any1::(any2::rotate (arg13) (((arg10 @ arg11) @ arg12))))
Model : any1: 7, any2: 3, arg10: (Nil), arg11: (Nil), arg12: (Nil), arg13: ZERO
Model : any1: 5, any2: 6, arg10: (1::(Nil)), arg11: (Nil), arg12: (0::(Nil)), arg13: ZERO
Model : any1: 2, any2: 0, arg10: (Nil), arg11: (0::(Nil)), arg12: (Nil), arg13: SUCC (ZERO)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) ((((((Nil) @ (7::(Nil))) @ (3::(Nil))) @ (Nil)) @ (Nil))) = (7::(3::rotate (ZERO) ((((Nil) @ (Nil)) @ (Nil)))))
rotate (ZERO) ((((((1::(Nil)) @ (5::(Nil))) @ (6::(Nil))) @ (Nil)) @ (0::(Nil)))) = (5::(6::rotate (ZERO) ((((1::(Nil)) @ (Nil)) @ (0::(Nil))))))
rotate (SUCC (ZERO)) ((((((Nil) @ (2::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (Nil))) = (2::(0::rotate (SUCC (ZERO)) ((((Nil) @ (0::(Nil))) @ (Nil)))))
Simplifying took 0.001320 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))
Model : any1: 3, any2: 4, any3: 7, any4: 0, any_list2: (Nil)
Model : any1: 6, any2: 1, any3: 6, any4: 2, any_list2: (3::(Nil))
Model : any1: 1, any2: 1, any3: 2, any4: 3, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) (((((((Nil) @ (Nil)) @ (3::(Nil))) @ (4::(Nil))) @ (7::(Nil))) @ (0::(Nil)))) = (3::(4::rotate (len ((Nil))) (((((Nil) @ (Nil)) @ (7::(Nil))) @ (0::(Nil))))))
rotate (len ((3::(Nil)))) (((((((3::(Nil)) @ (Nil)) @ (6::(Nil))) @ (1::(Nil))) @ (6::(Nil))) @ (2::(Nil)))) = (6::(1::rotate (len ((3::(Nil)))) (((((3::(Nil)) @ (Nil)) @ (6::(Nil))) @ (2::(Nil))))))
rotate (len ((Nil))) (((((((Nil) @ (Nil)) @ (1::(Nil))) @ (1::(Nil))) @ (2::(Nil))) @ (3::(Nil)))) = (1::(1::rotate (len ((Nil))) (((((Nil) @ (Nil)) @ (2::(Nil))) @ (3::(Nil))))))
Simplifying took 0.002442 seconds
Result : true
advanced_generalize done


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((any_list1 @ (Nil)) @ (any3::(Nil))))))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((any_list2 @ (Nil)) @ (any3::(Nil))))))
Inductive1 : any_list1 = (any4::any_list2)
any3 : any
---------------------------------------
forall (any1:any) (any2:any), rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))

0 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 34


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((any_list1 @ (Nil)) @ (any3::(Nil))))))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((any_list2 @ (Nil)) @ (any3::(Nil))))))
Inductive1 : any_list1 = (any4::any_list2)
any3 : any
---------------------------------------
forall (any1:any) (any2:any), rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))

0 goal(s) more...

3 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:12)
=================================================
Progress: 35


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((any_list1 @ (Nil)) @ (any3::(Nil))))))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((any_list2 @ (Nil)) @ (any3::(Nil))))))
Inductive1 : any_list1 = (any4::any_list2)
any1 : any
---------------------------------------
forall (any2:any) (any3:any), rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any2(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((any_list1 @ (Nil)) @ (any3::(Nil))))))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((any_list2 @ (Nil)) @ (any3::(Nil))))))
Inductive1 : any_list1 = (any4::any_list2)
any1 : any
any2 : any
---------------------------------------
forall (any3:any), rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro any3(rank:9)
=================================================
Progress: 36


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((any_list1 @ (Nil)) @ (any3::(Nil))))))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((any_list2 @ (Nil)) @ (any3::(Nil))))))
Inductive1 : any_list1 = (any4::any_list2)
any1 : any
---------------------------------------
forall (any2:any) (any3:any), rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any3(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((any_list1 @ (Nil)) @ (any3::(Nil))))))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((any_list2 @ (Nil)) @ (any3::(Nil))))))
Inductive1 : any_list1 = (any4::any_list2)
any1 : any
any3 : any
---------------------------------------
forall (any2:any), rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg14:any list) (arg15:any list) (arg16:any list) (arg17:nat), rotate (arg17) (((((arg14 @ (any1::(Nil))) @ (any2::(Nil))) @ arg15) @ arg16)) = (any1::(any2::rotate (arg17) (((arg14 @ arg15) @ arg16))))
Model : any1: 5, any2: 6, arg14: (Nil), arg15: (Nil), arg16: (Nil), arg17: ZERO
Model : any1: 6, any2: 0, arg14: (Nil), arg15: (Nil), arg16: (Nil), arg17: ZERO
Model : any1: 6, any2: 6, arg14: (Nil), arg15: (Nil), arg16: (Nil), arg17: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) ((((((Nil) @ (5::(Nil))) @ (6::(Nil))) @ (Nil)) @ (Nil))) = (5::(6::rotate (ZERO) ((((Nil) @ (Nil)) @ (Nil)))))
rotate (ZERO) ((((((Nil) @ (6::(Nil))) @ (0::(Nil))) @ (Nil)) @ (Nil))) = (6::(0::rotate (ZERO) ((((Nil) @ (Nil)) @ (Nil)))))
rotate (ZERO) ((((((Nil) @ (6::(Nil))) @ (6::(Nil))) @ (Nil)) @ (Nil))) = (6::(6::rotate (ZERO) ((((Nil) @ (Nil)) @ (Nil)))))
Simplifying took 0.001040 seconds
Result : true
advanced_generalize done


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((any_list1 @ (Nil)) @ (any3::(Nil))))))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((any_list2 @ (Nil)) @ (any3::(Nil))))))
Inductive1 : any_list1 = (any4::any_list2)
any1 : any
any3 : any
---------------------------------------
forall (any2:any), rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))

0 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 37


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((any_list1 @ (Nil)) @ (any3::(Nil))))))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((any_list2 @ (Nil)) @ (any3::(Nil))))))
Inductive1 : any_list1 = (any4::any_list2)
any1 : any
any3 : any
---------------------------------------
forall (any2:any), rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))

0 goal(s) more...

3 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (arg14:any list) (arg15:any list) (arg16:any list) (arg17:nat), rotate (arg17) (((((arg14 @ (any1::(Nil))) @ (any2::(Nil))) @ arg15) @ arg16)) = (any1::(any2::rotate (arg17) (((arg14 @ arg15) @ arg16))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (nat1:nat), rotate (nat1) (((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3)) = (any1::(any2::rotate (nat1) (((any_list1 @ any_list2) @ any_list3))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (nat1:nat), rotate (nat1) (((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3)) = (any1::(any2::rotate (nat1) (((any_list1 @ any_list2) @ any_list3))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:12)
=================================================
Progress: 38


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((any_list1 @ (Nil)) @ (any3::(Nil))))))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((any_list2 @ (Nil)) @ (any3::(Nil))))))
Inductive1 : any_list1 = (any4::any_list2)
any2 : any
---------------------------------------
forall (any1:any) (any3:any), rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any3(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((any_list1 @ (Nil)) @ (any3::(Nil))))))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((any_list2 @ (Nil)) @ (any3::(Nil))))))
Inductive1 : any_list1 = (any4::any_list2)
any2 : any
any3 : any
---------------------------------------
forall (any1:any), rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg18:any list) (arg19:any list) (arg20:any list) (arg21:nat), rotate (arg21) (((((arg18 @ (any1::(Nil))) @ (any2::(Nil))) @ arg19) @ arg20)) = (any1::(any2::rotate (arg21) (((arg18 @ arg19) @ arg20))))
Model : any1: 4, any2: 6, arg18: (8::(Nil)), arg19: (Nil), arg20: (Nil), arg21: ZERO
Model : any1: 2, any2: 0, arg18: (Nil), arg19: (Nil), arg20: (Nil), arg21: ZERO
Model : any1: 0, any2: 7, arg18: (Nil), arg19: (Nil), arg20: (4::(Nil)), arg21: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) ((((((8::(Nil)) @ (4::(Nil))) @ (6::(Nil))) @ (Nil)) @ (Nil))) = (4::(6::rotate (ZERO) ((((8::(Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) ((((((Nil) @ (2::(Nil))) @ (0::(Nil))) @ (Nil)) @ (Nil))) = (2::(0::rotate (ZERO) ((((Nil) @ (Nil)) @ (Nil)))))
rotate (ZERO) ((((((Nil) @ (0::(Nil))) @ (7::(Nil))) @ (Nil)) @ (4::(Nil)))) = (0::(7::rotate (ZERO) ((((Nil) @ (Nil)) @ (4::(Nil))))))
Simplifying took 0.001298 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))
Model : any1: 3, any2: 5, any3: 2, any4: 5, any_list2: (5::(6::(Nil)))
Model : any1: 0, any2: 2, any3: 2, any4: 5, any_list2: (Nil)
Model : any1: 0, any2: 4, any3: 4, any4: 8, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((5::(6::(Nil))))) (((((((5::(6::(Nil))) @ (Nil)) @ (3::(Nil))) @ (5::(Nil))) @ (2::(Nil))) @ (5::(Nil)))) = (3::(5::rotate (len ((5::(6::(Nil))))) (((((5::(6::(Nil))) @ (Nil)) @ (2::(Nil))) @ (5::(Nil))))))
rotate (len ((Nil))) (((((((Nil) @ (Nil)) @ (0::(Nil))) @ (2::(Nil))) @ (2::(Nil))) @ (5::(Nil)))) = (0::(2::rotate (len ((Nil))) (((((Nil) @ (Nil)) @ (2::(Nil))) @ (5::(Nil))))))
rotate (len ((Nil))) (((((((Nil) @ (Nil)) @ (0::(Nil))) @ (4::(Nil))) @ (4::(Nil))) @ (8::(Nil)))) = (0::(4::rotate (len ((Nil))) (((((Nil) @ (Nil)) @ (4::(Nil))) @ (8::(Nil))))))
Simplifying took 0.004124 seconds
Result : true
advanced_generalize done
=================================================
Progress: 39


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((any_list1 @ (Nil)) @ (any3::(Nil))))))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((any_list2 @ (Nil)) @ (any3::(Nil))))))
Inductive1 : any_list1 = (any4::any_list2)
any1 : any
any2 : any
---------------------------------------
forall (any3:any), rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any3(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any_list1:any list), rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((any_list1 @ (Nil)) @ (any3::(Nil))))))
any_list1 : any list
any4 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any), rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((any_list2 @ (Nil)) @ (any3::(Nil))))))
Inductive1 : any_list1 = (any4::any_list2)
any1 : any
any2 : any
any3 : any
---------------------------------------
rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg22:any list) (arg23:any list) (arg24:any list) (arg25:nat), rotate (arg25) (((((arg22 @ (any1::(Nil))) @ (any2::(Nil))) @ arg23) @ arg24)) = (any1::(any2::rotate (arg25) (((arg22 @ arg23) @ arg24))))
Model : any1: 2, any2: 5, arg22: (Nil), arg23: (Nil), arg24: (1::(Nil)), arg25: SUCC (ZERO)
Model : any1: 2, any2: 1, arg22: (Nil), arg23: (Nil), arg24: (Nil), arg25: SUCC (ZERO)
Model : any1: 4, any2: 2, arg22: (Nil), arg23: (Nil), arg24: (Nil), arg25: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (SUCC (ZERO)) ((((((Nil) @ (2::(Nil))) @ (5::(Nil))) @ (Nil)) @ (1::(Nil)))) = (2::(5::rotate (SUCC (ZERO)) ((((Nil) @ (Nil)) @ (1::(Nil))))))
rotate (SUCC (ZERO)) ((((((Nil) @ (2::(Nil))) @ (1::(Nil))) @ (Nil)) @ (Nil))) = (2::(1::rotate (SUCC (ZERO)) ((((Nil) @ (Nil)) @ (Nil)))))
rotate (ZERO) ((((((Nil) @ (4::(Nil))) @ (2::(Nil))) @ (Nil)) @ (Nil))) = (4::(2::rotate (ZERO) ((((Nil) @ (Nil)) @ (Nil)))))
Simplifying took 0.001004 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list2:any list), rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))
Model : any1: 5, any2: 1, any3: 0, any4: 0, any_list2: (Nil)
Model : any1: 1, any2: 2, any3: 7, any4: 0, any_list2: (Nil)
Model : any1: 4, any2: 6, any3: 1, any4: 8, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) (((((((Nil) @ (Nil)) @ (5::(Nil))) @ (1::(Nil))) @ (0::(Nil))) @ (0::(Nil)))) = (5::(1::rotate (len ((Nil))) (((((Nil) @ (Nil)) @ (0::(Nil))) @ (0::(Nil))))))
rotate (len ((Nil))) (((((((Nil) @ (Nil)) @ (1::(Nil))) @ (2::(Nil))) @ (7::(Nil))) @ (0::(Nil)))) = (1::(2::rotate (len ((Nil))) (((((Nil) @ (Nil)) @ (7::(Nil))) @ (0::(Nil))))))
rotate (len ((Nil))) (((((((Nil) @ (Nil)) @ (4::(Nil))) @ (6::(Nil))) @ (1::(Nil))) @ (8::(Nil)))) = (4::(6::rotate (len ((Nil))) (((((Nil) @ (Nil)) @ (1::(Nil))) @ (8::(Nil))))))
Simplifying took 0.001454 seconds
Result : true
advanced_generalize done
=================================================
Progress: 40


1st goal of : forall (any_list1:any list) (any_list2:any list), rotate (len (any_list1)) ((any_list1 @ any_list2)) = (any_list2 @ any_list1)

---------------------------------------
forall (any_list1:any list) (any_list2:any list), rotate (len (any_list1)) ((any_list1 @ any_list2)) = (any_list2 @ any_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> induction any_list2(rank : 12)


1st goal of : forall (any_list1:any list) (any_list2:any list), rotate (len (any_list1)) ((any_list1 @ any_list2)) = (any_list2 @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any_list1:any list), rotate (len (any_list1)) ((any_list1 @ (Nil))) = ((Nil) @ any_list1)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4)
=================================================
Progress: 41


1st goal of : forall (any_list1:any list) (any_list2:any list), rotate (len (any_list1)) ((any_list1 @ any_list2)) = (any_list2 @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any_list1:any list), rotate (len (any_list1)) ((any_list1 @ (Nil))) = ((Nil) @ any_list1)

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), rotate (len (any_list1)) ((any_list1 @ any_list2)) = (any_list2 @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any_list1:any list), rotate (len (any_list1)) ((any_list1 @ (Nil))) = any_list1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:5)
=================================================
Progress: 42


1st goal of : forall (any_list1:any list) (any_list2:any list), rotate (len (any_list1)) ((any_list1 @ any_list2)) = (any_list2 @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
---------------------------------------
forall (any_list1:any list), rotate (len (any_list1)) ((any_list1 @ (Nil))) = any_list1

1 goal(s) more...

0 conjecture(s) more...
>>> induction any_list1(rank : 5)


1st goal of : forall (any_list1:any list) (any_list2:any list), rotate (len (any_list1)) ((any_list1 @ any_list2)) = (any_list2 @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
---------------------------------------
rotate (len ((Nil))) (((Nil) @ (Nil))) = (Nil)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:4)
=================================================
Progress: 43


1st goal of : forall (any_list1:any list) (any_list2:any list), rotate (len (any_list1)) ((any_list1 @ any_list2)) = (any_list2 @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
Base2 : any_list1 = (Nil)
---------------------------------------
rotate (len ((Nil))) (((Nil) @ (Nil))) = (Nil)

2 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), rotate (len (any_list1)) ((any_list1 @ any_list2)) = (any_list2 @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : rotate (len (any_list3)) ((any_list3 @ (Nil))) = any_list3
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
rotate (len ((any1::any_list3))) (((any1::any_list3) @ (Nil))) = (any1::any_list3)

1 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:4)
=================================================
Progress: 44


1st goal of : forall (any_list1:any list) (any_list2:any list), rotate (len (any_list1)) ((any_list1 @ any_list2)) = (any_list2 @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : rotate (len (any_list3)) ((any_list3 @ (Nil))) = any_list3
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
rotate (len ((any1::any_list3))) (((any1::any_list3) @ (Nil))) = (any1::any_list3)

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4)


1st goal of : forall (any_list1:any list) (any_list2:any list), rotate (len (any_list1)) ((any_list1 @ any_list2)) = (any_list2 @ any_list1)
any_list2 : any list
Base1 : any_list2 = (Nil)
any_list1 : any list
any1 : any
any_list3 : any list
IH1 : rotate (len (any_list3)) ((any_list3 @ (Nil))) = any_list3
Inductive1 : any_list1 = (any1::any_list3)
---------------------------------------
rotate (len (any_list3)) (((any_list3 @ (Nil)) @ (any1::(Nil)))) = (any1::any_list3)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any_list3:any list), rotate (len (any_list3)) (((any_list3 @ (Nil)) @ (any1::(Nil)))) = (any1::any_list3)
Model : any1: 8, any_list3: (Nil)
Model : any1: 7, any_list3: (Nil)
Model : any1: 1, any_list3: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) ((((Nil) @ (Nil)) @ (8::(Nil)))) = (8::(Nil))
rotate (len ((Nil))) ((((Nil) @ (Nil)) @ (7::(Nil)))) = (7::(Nil))
rotate (len ((Nil))) ((((Nil) @ (Nil)) @ (1::(Nil)))) = (1::(Nil))
Simplifying took 0.000217 seconds
Result : true
advanced_generalize done
=================================================
Progress: 45


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))

0 goal(s) more...

4 conjecture(s) more...
>>> induction any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), rotate (len ((Nil))) (((((((Nil) @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len ((Nil))) (((((Nil) @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11)
=================================================
Progress: 46


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), rotate (len ((Nil))) (((((((Nil) @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len ((Nil))) (((((Nil) @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))

1 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))
any_list1 : any list
any5 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))
Inductive1 : any_list1 = (any5::any_list2)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), rotate (len ((any5::any_list2))) (((((((any5::any_list2) @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len ((any5::any_list2))) (((((any5::any_list2) @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))

0 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:11)
=================================================
Progress: 47


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))
any_list1 : any list
any5 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))
Inductive1 : any_list1 = (any5::any_list2)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), rotate (len ((any5::any_list2))) (((((((any5::any_list2) @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len ((any5::any_list2))) (((((any5::any_list2) @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))

0 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))
any_list1 : any list
any5 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))
Inductive1 : any_list1 = (any5::any_list2)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 4
intro any1(rank:11)
intro any2(rank:11)
intro any3(rank:11)
intro any4(rank:11)
=================================================
Progress: 48


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))
any_list1 : any list
any5 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))
Inductive1 : any_list1 = (any5::any_list2)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any1(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))
any_list1 : any list
any5 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))
Inductive1 : any_list1 = (any5::any_list2)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any2(rank:11)
intro any3(rank:11)
intro any4(rank:11)
=================================================
Progress: 49


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))
any_list1 : any list
any5 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))
Inductive1 : any_list1 = (any5::any_list2)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any2(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))
any_list1 : any list
any5 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))
Inductive1 : any_list1 = (any5::any_list2)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any3(rank:11)
intro any4(rank:11)
=================================================
Progress: 50


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))
any_list1 : any list
any5 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))
Inductive1 : any_list1 = (any5::any_list2)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))
any_list1 : any list
any5 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))
Inductive1 : any_list1 = (any5::any_list2)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro any4(rank:11)
=================================================
Progress: 51


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))
any_list1 : any list
any5 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))
Inductive1 : any_list1 = (any5::any_list2)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))
any_list1 : any list
any5 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))
Inductive1 : any_list1 = (any5::any_list2)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any4
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg26:any list) (arg27:any list) (arg28:any list) (arg29:any list) (arg30:nat), rotate (arg30) ((((((arg26 @ (any1::(Nil))) @ (any2::(Nil))) @ arg27) @ arg28) @ arg29)) = (any1::(any2::rotate (arg30) ((((arg26 @ arg27) @ arg28) @ arg29))))
Model : any1: 6, any2: 3, arg26: (Nil), arg27: (Nil), arg28: (Nil), arg29: (5::(Nil)), arg30: ZERO
Model : any1: 3, any2: 0, arg26: (Nil), arg27: (Nil), arg28: (Nil), arg29: (Nil), arg30: ZERO
Model : any1: 5, any2: 4, arg26: (5::(Nil)), arg27: (Nil), arg28: (Nil), arg29: (7::(Nil)), arg30: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) (((((((Nil) @ (6::(Nil))) @ (3::(Nil))) @ (Nil)) @ (Nil)) @ (5::(Nil)))) = (6::(3::rotate (ZERO) (((((Nil) @ (Nil)) @ (Nil)) @ (5::(Nil))))))
rotate (ZERO) (((((((Nil) @ (3::(Nil))) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil))) = (3::(0::rotate (ZERO) (((((Nil) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) (((((((5::(Nil)) @ (5::(Nil))) @ (4::(Nil))) @ (Nil)) @ (Nil)) @ (7::(Nil)))) = (5::(4::rotate (ZERO) (((((5::(Nil)) @ (Nil)) @ (Nil)) @ (7::(Nil))))))
Simplifying took 0.001655 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list2:any list), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
Model : any1: 7, any2: 5, any3: 3, any4: 3, any5: 5, any_list2: (1::(Nil))
Model : any1: 1, any2: 2, any3: 8, any4: 2, any5: 0, any_list2: (Nil)
Model : any1: 3, any2: 4, any3: 3, any4: 1, any5: 4, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((1::(Nil)))) ((((((((1::(Nil)) @ (Nil)) @ (7::(Nil))) @ (5::(Nil))) @ (3::(Nil))) @ (3::(Nil))) @ (5::(Nil)))) = (7::(5::rotate (len ((1::(Nil)))) ((((((1::(Nil)) @ (Nil)) @ (3::(Nil))) @ (3::(Nil))) @ (5::(Nil))))))
rotate (len ((Nil))) ((((((((Nil) @ (Nil)) @ (1::(Nil))) @ (2::(Nil))) @ (8::(Nil))) @ (2::(Nil))) @ (0::(Nil)))) = (1::(2::rotate (len ((Nil))) ((((((Nil) @ (Nil)) @ (8::(Nil))) @ (2::(Nil))) @ (0::(Nil))))))
rotate (len ((Nil))) ((((((((Nil) @ (Nil)) @ (3::(Nil))) @ (4::(Nil))) @ (3::(Nil))) @ (1::(Nil))) @ (4::(Nil)))) = (3::(4::rotate (len ((Nil))) ((((((Nil) @ (Nil)) @ (3::(Nil))) @ (1::(Nil))) @ (4::(Nil))))))
Simplifying took 0.003928 seconds
Result : true
advanced_generalize done


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))
any_list1 : any list
any5 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))
Inductive1 : any_list1 = (any5::any_list2)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))

0 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 52


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))
any_list1 : any list
any5 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))
Inductive1 : any_list1 = (any5::any_list2)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))

0 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list2:any list), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:14)
=================================================
Progress: 53


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))
any_list1 : any list
any5 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))
Inductive1 : any_list1 = (any5::any_list2)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any2(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))
any_list1 : any list
any5 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))
Inductive1 : any_list1 = (any5::any_list2)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any3(rank:11)
intro any4(rank:11)
=================================================
Progress: 54


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))
any_list1 : any list
any5 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))
Inductive1 : any_list1 = (any5::any_list2)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))
any_list1 : any list
any5 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))
Inductive1 : any_list1 = (any5::any_list2)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro any4(rank:11)
=================================================
Progress: 55


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))
any_list1 : any list
any5 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))
Inductive1 : any_list1 = (any5::any_list2)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))
any_list1 : any list
any5 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))
Inductive1 : any_list1 = (any5::any_list2)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any4
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg31:any list) (arg32:any list) (arg33:any list) (arg34:any list) (arg35:nat), rotate (arg35) ((((((arg31 @ (any1::(Nil))) @ (any2::(Nil))) @ arg32) @ arg33) @ arg34)) = (any1::(any2::rotate (arg35) ((((arg31 @ arg32) @ arg33) @ arg34))))
Model : any1: 5, any2: 7, arg31: (Nil), arg32: (Nil), arg33: (Nil), arg34: (Nil), arg35: ZERO
Model : any1: 5, any2: 8, arg31: (Nil), arg32: (Nil), arg33: (1::(Nil)), arg34: (Nil), arg35: ZERO
Model : any1: 1, any2: 4, arg31: (Nil), arg32: (Nil), arg33: (Nil), arg34: (Nil), arg35: SUCC (ZERO)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) (((((((Nil) @ (5::(Nil))) @ (7::(Nil))) @ (Nil)) @ (Nil)) @ (Nil))) = (5::(7::rotate (ZERO) (((((Nil) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) (((((((Nil) @ (5::(Nil))) @ (8::(Nil))) @ (Nil)) @ (1::(Nil))) @ (Nil))) = (5::(8::rotate (ZERO) (((((Nil) @ (Nil)) @ (1::(Nil))) @ (Nil)))))
rotate (SUCC (ZERO)) (((((((Nil) @ (1::(Nil))) @ (4::(Nil))) @ (Nil)) @ (Nil)) @ (Nil))) = (1::(4::rotate (SUCC (ZERO)) (((((Nil) @ (Nil)) @ (Nil)) @ (Nil)))))
Simplifying took 0.001392 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list2:any list), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
Model : any1: 7, any2: 7, any3: 2, any4: 3, any5: 8, any_list2: (Nil)
Model : any1: 5, any2: 8, any3: 3, any4: 2, any5: 0, any_list2: (Nil)
Model : any1: 8, any2: 2, any3: 0, any4: 8, any5: 4, any_list2: (0::(Nil))
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) ((((((((Nil) @ (Nil)) @ (7::(Nil))) @ (7::(Nil))) @ (2::(Nil))) @ (3::(Nil))) @ (8::(Nil)))) = (7::(7::rotate (len ((Nil))) ((((((Nil) @ (Nil)) @ (2::(Nil))) @ (3::(Nil))) @ (8::(Nil))))))
rotate (len ((Nil))) ((((((((Nil) @ (Nil)) @ (5::(Nil))) @ (8::(Nil))) @ (3::(Nil))) @ (2::(Nil))) @ (0::(Nil)))) = (5::(8::rotate (len ((Nil))) ((((((Nil) @ (Nil)) @ (3::(Nil))) @ (2::(Nil))) @ (0::(Nil))))))
rotate (len ((0::(Nil)))) ((((((((0::(Nil)) @ (Nil)) @ (8::(Nil))) @ (2::(Nil))) @ (0::(Nil))) @ (8::(Nil))) @ (4::(Nil)))) = (8::(2::rotate (len ((0::(Nil)))) ((((((0::(Nil)) @ (Nil)) @ (0::(Nil))) @ (8::(Nil))) @ (4::(Nil))))))
Simplifying took 0.003893 seconds
Result : true
advanced_generalize done
=================================================
Progress: 56


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))
any_list1 : any list
any5 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))
Inductive1 : any_list1 = (any5::any_list2)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))
any_list1 : any list
any5 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))
Inductive1 : any_list1 = (any5::any_list2)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro any4(rank:11)
=================================================
Progress: 57


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))
any_list1 : any list
any5 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))
Inductive1 : any_list1 = (any5::any_list2)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))
any_list1 : any list
any5 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))
Inductive1 : any_list1 = (any5::any_list2)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any4
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg36:any list) (arg37:any list) (arg38:any list) (arg39:any list) (arg40:nat), rotate (arg40) ((((((arg36 @ (any1::(Nil))) @ (any2::(Nil))) @ arg37) @ arg38) @ arg39)) = (any1::(any2::rotate (arg40) ((((arg36 @ arg37) @ arg38) @ arg39))))
Model : any1: 7, any2: 0, arg36: (Nil), arg37: (Nil), arg38: (Nil), arg39: (Nil), arg40: ZERO
Model : any1: 2, any2: 5, arg36: (Nil), arg37: (Nil), arg38: (Nil), arg39: (Nil), arg40: ZERO
Model : any1: 3, any2: 2, arg36: (Nil), arg37: (0::(2::(Nil))), arg38: (4::(Nil)), arg39: (Nil), arg40: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) (((((((Nil) @ (7::(Nil))) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil))) = (7::(0::rotate (ZERO) (((((Nil) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) (((((((Nil) @ (2::(Nil))) @ (5::(Nil))) @ (Nil)) @ (Nil)) @ (Nil))) = (2::(5::rotate (ZERO) (((((Nil) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) (((((((Nil) @ (3::(Nil))) @ (2::(Nil))) @ (0::(2::(Nil)))) @ (4::(Nil))) @ (Nil))) = (3::(2::rotate (ZERO) (((((Nil) @ (0::(2::(Nil)))) @ (4::(Nil))) @ (Nil)))))
Simplifying took 0.001583 seconds
Result : true
advanced_generalize done


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))
any_list1 : any list
any5 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))
Inductive1 : any_list1 = (any5::any_list2)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))

0 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 58


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))
any_list1 : any list
any5 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))
Inductive1 : any_list1 = (any5::any_list2)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))

0 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (arg36:any list) (arg37:any list) (arg38:any list) (arg39:any list) (arg40:nat), rotate (arg40) ((((((arg36 @ (any1::(Nil))) @ (any2::(Nil))) @ arg37) @ arg38) @ arg39)) = (any1::(any2::rotate (arg40) ((((arg36 @ arg37) @ arg38) @ arg39))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (nat1:nat), rotate (nat1) ((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4)) = (any1::(any2::rotate (nat1) ((((any_list1 @ any_list2) @ any_list3) @ any_list4))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (nat1:nat), rotate (nat1) ((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4)) = (any1::(any2::rotate (nat1) ((((any_list1 @ any_list2) @ any_list3) @ any_list4))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:14)
=================================================
Progress: 59


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))
any_list1 : any list
any5 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))
Inductive1 : any_list1 = (any5::any_list2)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))
any_list1 : any list
any5 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))
Inductive1 : any_list1 = (any5::any_list2)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any4
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg41:any list) (arg42:any list) (arg43:any list) (arg44:any list) (arg45:nat), rotate (arg45) ((((((arg41 @ (any1::(Nil))) @ (any2::(Nil))) @ arg42) @ arg43) @ arg44)) = (any1::(any2::rotate (arg45) ((((arg41 @ arg42) @ arg43) @ arg44))))
Model : any1: 3, any2: 0, arg41: (7::(Nil)), arg42: (Nil), arg43: (Nil), arg44: (Nil), arg45: ZERO
Model : any1: 1, any2: 7, arg41: (Nil), arg42: (Nil), arg43: (Nil), arg44: (Nil), arg45: ZERO
Model : any1: 8, any2: 6, arg41: (Nil), arg42: (Nil), arg43: (Nil), arg44: (Nil), arg45: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) (((((((7::(Nil)) @ (3::(Nil))) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil))) = (3::(0::rotate (ZERO) (((((7::(Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) (((((((Nil) @ (1::(Nil))) @ (7::(Nil))) @ (Nil)) @ (Nil)) @ (Nil))) = (1::(7::rotate (ZERO) (((((Nil) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) (((((((Nil) @ (8::(Nil))) @ (6::(Nil))) @ (Nil)) @ (Nil)) @ (Nil))) = (8::(6::rotate (ZERO) (((((Nil) @ (Nil)) @ (Nil)) @ (Nil)))))
Simplifying took 0.001710 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list2:any list), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
Model : any1: 6, any2: 7, any3: 0, any4: 5, any5: 0, any_list2: (Nil)
Model : any1: 7, any2: 0, any3: 6, any4: 0, any5: 3, any_list2: (Nil)
Model : any1: 4, any2: 1, any3: 3, any4: 3, any5: 8, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) ((((((((Nil) @ (Nil)) @ (6::(Nil))) @ (7::(Nil))) @ (0::(Nil))) @ (5::(Nil))) @ (0::(Nil)))) = (6::(7::rotate (len ((Nil))) ((((((Nil) @ (Nil)) @ (0::(Nil))) @ (5::(Nil))) @ (0::(Nil))))))
rotate (len ((Nil))) ((((((((Nil) @ (Nil)) @ (7::(Nil))) @ (0::(Nil))) @ (6::(Nil))) @ (0::(Nil))) @ (3::(Nil)))) = (7::(0::rotate (len ((Nil))) ((((((Nil) @ (Nil)) @ (6::(Nil))) @ (0::(Nil))) @ (3::(Nil))))))
rotate (len ((Nil))) ((((((((Nil) @ (Nil)) @ (4::(Nil))) @ (1::(Nil))) @ (3::(Nil))) @ (3::(Nil))) @ (8::(Nil)))) = (4::(1::rotate (len ((Nil))) ((((((Nil) @ (Nil)) @ (3::(Nil))) @ (3::(Nil))) @ (8::(Nil))))))
Simplifying took 0.002675 seconds
Result : true
advanced_generalize done
=================================================
Progress: 60


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))
any_list1 : any list
any5 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))
Inductive1 : any_list1 = (any5::any_list2)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any3(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))
any_list1 : any list
any5 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))
Inductive1 : any_list1 = (any5::any_list2)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro any4(rank:11)
=================================================
Progress: 61


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))
any_list1 : any list
any5 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))
Inductive1 : any_list1 = (any5::any_list2)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))
any_list1 : any list
any5 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))
Inductive1 : any_list1 = (any5::any_list2)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any4
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg46:any list) (arg47:any list) (arg48:any list) (arg49:any list) (arg50:nat), rotate (arg50) ((((((arg46 @ (any1::(Nil))) @ (any2::(Nil))) @ arg47) @ arg48) @ arg49)) = (any1::(any2::rotate (arg50) ((((arg46 @ arg47) @ arg48) @ arg49))))
Model : any1: 3, any2: 0, arg46: (Nil), arg47: (Nil), arg48: (Nil), arg49: (Nil), arg50: ZERO
Model : any1: 0, any2: 0, arg46: (Nil), arg47: (Nil), arg48: (Nil), arg49: (Nil), arg50: ZERO
Model : any1: 1, any2: 0, arg46: (6::(Nil)), arg47: (7::(4::(Nil))), arg48: (Nil), arg49: (Nil), arg50: SUCC (ZERO)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) (((((((Nil) @ (3::(Nil))) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil))) = (3::(0::rotate (ZERO) (((((Nil) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) (((((((Nil) @ (0::(Nil))) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil))) = (0::(0::rotate (ZERO) (((((Nil) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (SUCC (ZERO)) (((((((6::(Nil)) @ (1::(Nil))) @ (0::(Nil))) @ (7::(4::(Nil)))) @ (Nil)) @ (Nil))) = (1::(0::rotate (SUCC (ZERO)) (((((6::(Nil)) @ (7::(4::(Nil)))) @ (Nil)) @ (Nil)))))
Simplifying took 0.002336 seconds
Result : true
advanced_generalize done


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))
any_list1 : any list
any5 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))
Inductive1 : any_list1 = (any5::any_list2)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))

0 goal(s) more...

4 conjecture(s) more...
=================================================
Progress: 62


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))
any_list1 : any list
any5 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))
Inductive1 : any_list1 = (any5::any_list2)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))

0 goal(s) more...

4 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (arg46:any list) (arg47:any list) (arg48:any list) (arg49:any list) (arg50:nat), rotate (arg50) ((((((arg46 @ (any1::(Nil))) @ (any2::(Nil))) @ arg47) @ arg48) @ arg49)) = (any1::(any2::rotate (arg50) ((((arg46 @ arg47) @ arg48) @ arg49))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (nat1:nat), rotate (nat1) ((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4)) = (any1::(any2::rotate (nat1) ((((any_list1 @ any_list2) @ any_list3) @ any_list4))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (nat1:nat), rotate (nat1) ((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4)) = (any1::(any2::rotate (nat1) ((((any_list1 @ any_list2) @ any_list3) @ any_list4))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:14)
=================================================
Progress: 63


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))
any_list1 : any list
any5 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))
Inductive1 : any_list1 = (any5::any_list2)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))
any_list1 : any list
any5 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))
Inductive1 : any_list1 = (any5::any_list2)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any4
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg51:any list) (arg52:any list) (arg53:any list) (arg54:any list) (arg55:nat), rotate (arg55) ((((((arg51 @ (any1::(Nil))) @ (any2::(Nil))) @ arg52) @ arg53) @ arg54)) = (any1::(any2::rotate (arg55) ((((arg51 @ arg52) @ arg53) @ arg54))))
Model : any1: 8, any2: 8, arg51: (0::(Nil)), arg52: (2::(Nil)), arg53: (Nil), arg54: (Nil), arg55: ZERO
Model : any1: 3, any2: 5, arg51: (Nil), arg52: (Nil), arg53: (Nil), arg54: (Nil), arg55: ZERO
Model : any1: 0, any2: 2, arg51: (7::(Nil)), arg52: (Nil), arg53: (Nil), arg54: (Nil), arg55: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) (((((((0::(Nil)) @ (8::(Nil))) @ (8::(Nil))) @ (2::(Nil))) @ (Nil)) @ (Nil))) = (8::(8::rotate (ZERO) (((((0::(Nil)) @ (2::(Nil))) @ (Nil)) @ (Nil)))))
rotate (ZERO) (((((((Nil) @ (3::(Nil))) @ (5::(Nil))) @ (Nil)) @ (Nil)) @ (Nil))) = (3::(5::rotate (ZERO) (((((Nil) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) (((((((7::(Nil)) @ (0::(Nil))) @ (2::(Nil))) @ (Nil)) @ (Nil)) @ (Nil))) = (0::(2::rotate (ZERO) (((((7::(Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
Simplifying took 0.002039 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list2:any list), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
Model : any1: 8, any2: 0, any3: 6, any4: 5, any5: 7, any_list2: (Nil)
Model : any1: 5, any2: 2, any3: 6, any4: 1, any5: 0, any_list2: (Nil)
Model : any1: 7, any2: 5, any3: 8, any4: 8, any5: 5, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) ((((((((Nil) @ (Nil)) @ (8::(Nil))) @ (0::(Nil))) @ (6::(Nil))) @ (5::(Nil))) @ (7::(Nil)))) = (8::(0::rotate (len ((Nil))) ((((((Nil) @ (Nil)) @ (6::(Nil))) @ (5::(Nil))) @ (7::(Nil))))))
rotate (len ((Nil))) ((((((((Nil) @ (Nil)) @ (5::(Nil))) @ (2::(Nil))) @ (6::(Nil))) @ (1::(Nil))) @ (0::(Nil)))) = (5::(2::rotate (len ((Nil))) ((((((Nil) @ (Nil)) @ (6::(Nil))) @ (1::(Nil))) @ (0::(Nil))))))
rotate (len ((Nil))) ((((((((Nil) @ (Nil)) @ (7::(Nil))) @ (5::(Nil))) @ (8::(Nil))) @ (8::(Nil))) @ (5::(Nil)))) = (7::(5::rotate (len ((Nil))) ((((((Nil) @ (Nil)) @ (8::(Nil))) @ (8::(Nil))) @ (5::(Nil))))))
Simplifying took 0.003073 seconds
Result : true
advanced_generalize done
=================================================
Progress: 64


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))
any_list1 : any list
any5 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))
Inductive1 : any_list1 = (any5::any_list2)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))
any_list1 : any list
any5 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))
Inductive1 : any_list1 = (any5::any_list2)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any4
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg56:any list) (arg57:any list) (arg58:any list) (arg59:any list) (arg60:nat), rotate (arg60) ((((((arg56 @ (any1::(Nil))) @ (any2::(Nil))) @ arg57) @ arg58) @ arg59)) = (any1::(any2::rotate (arg60) ((((arg56 @ arg57) @ arg58) @ arg59))))
Model : any1: 5, any2: 4, arg56: (Nil), arg57: (Nil), arg58: (Nil), arg59: (Nil), arg60: ZERO
Model : any1: 5, any2: 5, arg56: (Nil), arg57: (Nil), arg58: (Nil), arg59: (Nil), arg60: ZERO
Model : any1: 0, any2: 0, arg56: (4::(8::(Nil))), arg57: (Nil), arg58: (Nil), arg59: (0::(4::(0::(Nil)))), arg60: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) (((((((Nil) @ (5::(Nil))) @ (4::(Nil))) @ (Nil)) @ (Nil)) @ (Nil))) = (5::(4::rotate (ZERO) (((((Nil) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) (((((((Nil) @ (5::(Nil))) @ (5::(Nil))) @ (Nil)) @ (Nil)) @ (Nil))) = (5::(5::rotate (ZERO) (((((Nil) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) (((((((4::(8::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (0::(4::(0::(Nil)))))) = (0::(0::rotate (ZERO) (((((4::(8::(Nil))) @ (Nil)) @ (Nil)) @ (0::(4::(0::(Nil))))))))
Simplifying took 0.001986 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list2:any list), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
Model : any1: 4, any2: 2, any3: 1, any4: 4, any5: 2, any_list2: (Nil)
Model : any1: 0, any2: 5, any3: 5, any4: 2, any5: 8, any_list2: (Nil)
Model : any1: 5, any2: 4, any3: 0, any4: 2, any5: 0, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) ((((((((Nil) @ (Nil)) @ (4::(Nil))) @ (2::(Nil))) @ (1::(Nil))) @ (4::(Nil))) @ (2::(Nil)))) = (4::(2::rotate (len ((Nil))) ((((((Nil) @ (Nil)) @ (1::(Nil))) @ (4::(Nil))) @ (2::(Nil))))))
rotate (len ((Nil))) ((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (5::(Nil))) @ (5::(Nil))) @ (2::(Nil))) @ (8::(Nil)))) = (0::(5::rotate (len ((Nil))) ((((((Nil) @ (Nil)) @ (5::(Nil))) @ (2::(Nil))) @ (8::(Nil))))))
rotate (len ((Nil))) ((((((((Nil) @ (Nil)) @ (5::(Nil))) @ (4::(Nil))) @ (0::(Nil))) @ (2::(Nil))) @ (0::(Nil)))) = (5::(4::rotate (len ((Nil))) ((((((Nil) @ (Nil)) @ (0::(Nil))) @ (2::(Nil))) @ (0::(Nil))))))
Simplifying took 0.002514 seconds
Result : true
advanced_generalize done
=================================================
Progress: 65


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))
any_list1 : any list
any5 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))
Inductive1 : any_list1 = (any5::any_list2)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))

0 goal(s) more...

4 conjecture(s) more...
>>> intro any4(rank : 11)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any_list1:any list), rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))
any_list1 : any list
any5 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any), rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))))))
Inductive1 : any_list1 = (any5::any_list2)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any4
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg61:any list) (arg62:any list) (arg63:any list) (arg64:any list) (arg65:nat), rotate (arg65) ((((((arg61 @ (any1::(Nil))) @ (any2::(Nil))) @ arg62) @ arg63) @ arg64)) = (any1::(any2::rotate (arg65) ((((arg61 @ arg62) @ arg63) @ arg64))))
Model : any1: 6, any2: 0, arg61: (5::(8::(0::(Nil)))), arg62: (Nil), arg63: (Nil), arg64: (Nil), arg65: ZERO
Model : any1: 1, any2: 7, arg61: (Nil), arg62: (Nil), arg63: (Nil), arg64: (Nil), arg65: ZERO
Model : any1: 7, any2: 3, arg61: (Nil), arg62: (Nil), arg63: (Nil), arg64: (Nil), arg65: SUCC (ZERO)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) (((((((5::(8::(0::(Nil)))) @ (6::(Nil))) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil))) = (6::(0::rotate (ZERO) (((((5::(8::(0::(Nil)))) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) (((((((Nil) @ (1::(Nil))) @ (7::(Nil))) @ (Nil)) @ (Nil)) @ (Nil))) = (1::(7::rotate (ZERO) (((((Nil) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (SUCC (ZERO)) (((((((Nil) @ (7::(Nil))) @ (3::(Nil))) @ (Nil)) @ (Nil)) @ (Nil))) = (7::(3::rotate (SUCC (ZERO)) (((((Nil) @ (Nil)) @ (Nil)) @ (Nil)))))
Simplifying took 0.002607 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list2:any list), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
Model : any1: 5, any2: 5, any3: 8, any4: 0, any5: 3, any_list2: (2::(Nil))
Model : any1: 6, any2: 0, any3: 0, any4: 8, any5: 8, any_list2: (Nil)
Model : any1: 7, any2: 5, any3: 1, any4: 0, any5: 3, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((2::(Nil)))) ((((((((2::(Nil)) @ (Nil)) @ (5::(Nil))) @ (5::(Nil))) @ (8::(Nil))) @ (0::(Nil))) @ (3::(Nil)))) = (5::(5::rotate (len ((2::(Nil)))) ((((((2::(Nil)) @ (Nil)) @ (8::(Nil))) @ (0::(Nil))) @ (3::(Nil))))))
rotate (len ((Nil))) ((((((((Nil) @ (Nil)) @ (6::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (8::(Nil))) @ (8::(Nil)))) = (6::(0::rotate (len ((Nil))) ((((((Nil) @ (Nil)) @ (0::(Nil))) @ (8::(Nil))) @ (8::(Nil))))))
rotate (len ((Nil))) ((((((((Nil) @ (Nil)) @ (7::(Nil))) @ (5::(Nil))) @ (1::(Nil))) @ (0::(Nil))) @ (3::(Nil)))) = (7::(5::rotate (len ((Nil))) ((((((Nil) @ (Nil)) @ (1::(Nil))) @ (0::(Nil))) @ (3::(Nil))))))
Simplifying took 0.003868 seconds
Result : true
advanced_generalize done
=================================================
Progress: 66


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (nat1:nat), rotate (nat1) (((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3)) = (any1::(any2::rotate (nat1) (((any_list1 @ any_list2) @ any_list3))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (nat1:nat), rotate (nat1) (((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3)) = (any1::(any2::rotate (nat1) (((any_list1 @ any_list2) @ any_list3))))

0 goal(s) more...

4 conjecture(s) more...
>>> induction any_list1(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (nat1:nat), rotate (nat1) (((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3)) = (any1::(any2::rotate (nat1) (((any_list1 @ any_list2) @ any_list3))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list) (nat1:nat), rotate (nat1) ((((((Nil) @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3)) = (any1::(any2::rotate (nat1) ((((Nil) @ any_list2) @ any_list3))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12)
=================================================
Progress: 67


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (nat1:nat), rotate (nat1) (((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3)) = (any1::(any2::rotate (nat1) (((any_list1 @ any_list2) @ any_list3))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list) (nat1:nat), rotate (nat1) ((((((Nil) @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3)) = (any1::(any2::rotate (nat1) ((((Nil) @ any_list2) @ any_list3))))

1 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 12)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (nat1:nat), rotate (nat1) (((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3)) = (any1::(any2::rotate (nat1) (((any_list1 @ any_list2) @ any_list3))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list) (nat1:nat), rotate (nat1) ((any1::(any2::(any_list2 @ any_list3)))) = (any1::(any2::rotate (nat1) ((any_list2 @ any_list3))))

1 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:13)
=================================================
Progress: 68


1st goal of : forall (any1:any) (any_list1:any list), rotate (len (any_list1)) (((any_list1 @ (Nil)) @ (any1::(Nil)))) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), rotate (len (any_list2)) (((any_list2 @ (Nil)) @ (any1::(Nil)))) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil)))) = (any1::(any2::any_list2))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13)


1st goal of : forall (any1:any) (any_list1:any list), rotate (len (any_list1)) (((any_list1 @ (Nil)) @ (any1::(Nil)))) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), rotate (len (any_list2)) (((any_list2 @ (Nil)) @ (any1::(Nil)))) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil)))) = (any1::rotate (len (any_list2)) (((any_list2 @ (Nil)) @ (any2::(Nil)))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (arg66:any list) (arg67:any list) (arg68:nat), rotate (arg68) (((arg66 @ (any1::(Nil))) @ arg67)) = (any1::rotate (arg68) ((arg66 @ arg67)))
Model : any1: 5, arg66: (Nil), arg67: (0::(Nil)), arg68: ZERO
Model : any1: 6, arg66: (Nil), arg67: (Nil), arg68: ZERO
Model : any1: 7, arg66: (Nil), arg67: (Nil), arg68: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) ((((Nil) @ (5::(Nil))) @ (0::(Nil)))) = (5::rotate (ZERO) (((Nil) @ (0::(Nil)))))
rotate (ZERO) ((((Nil) @ (6::(Nil))) @ (Nil))) = (6::rotate (ZERO) (((Nil) @ (Nil))))
rotate (ZERO) ((((Nil) @ (7::(Nil))) @ (Nil))) = (7::rotate (ZERO) (((Nil) @ (Nil))))
Simplifying took 0.000395 seconds
Result : true
advanced_generalize done


1st goal of : forall (any1:any) (any_list1:any list), rotate (len (any_list1)) (((any_list1 @ (Nil)) @ (any1::(Nil)))) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), rotate (len (any_list2)) (((any_list2 @ (Nil)) @ (any1::(Nil)))) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil)))) = (any1::rotate (len (any_list2)) (((any_list2 @ (Nil)) @ (any2::(Nil)))))

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 69


1st goal of : forall (any1:any) (any_list1:any list), rotate (len (any_list1)) (((any_list1 @ (Nil)) @ (any1::(Nil)))) = (any1::any_list1)
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), rotate (len (any_list2)) (((any_list2 @ (Nil)) @ (any1::(Nil)))) = (any1::any_list2)
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), rotate (len (any_list2)) ((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil)))) = (any1::rotate (len (any_list2)) (((any_list2 @ (Nil)) @ (any2::(Nil)))))

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (any1:any) (arg66:any list) (arg67:any list) (arg68:nat), rotate (arg68) (((arg66 @ (any1::(Nil))) @ arg67)) = (any1::rotate (arg68) ((arg66 @ arg67)))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (nat1:nat), rotate (nat1) (((any_list1 @ (any1::(Nil))) @ any_list2)) = (any1::rotate (nat1) ((any_list1 @ any_list2)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (nat1:nat), rotate (nat1) (((any_list1 @ (any1::(Nil))) @ any_list2)) = (any1::rotate (nat1) ((any_list1 @ any_list2)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:8)
=================================================
Progress: 70


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (nat1:nat), rotate (nat1) (((any_list1 @ (any1::(Nil))) @ any_list2)) = (any1::rotate (nat1) ((any_list1 @ any_list2)))

---------------------------------------
forall (any1:any) (any_list1:any list) (any_list2:any list) (nat1:nat), rotate (nat1) (((any_list1 @ (any1::(Nil))) @ any_list2)) = (any1::rotate (nat1) ((any_list1 @ any_list2)))

0 goal(s) more...

2 conjecture(s) more...
>>> induction any_list1(rank : 8)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (nat1:nat), rotate (nat1) (((any_list1 @ (any1::(Nil))) @ any_list2)) = (any1::rotate (nat1) ((any_list1 @ any_list2)))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any_list2:any list) (nat1:nat), rotate (nat1) ((((Nil) @ (any1::(Nil))) @ any_list2)) = (any1::rotate (nat1) (((Nil) @ any_list2)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8)
=================================================
Progress: 71


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (nat1:nat), rotate (nat1) (((any_list1 @ (any1::(Nil))) @ any_list2)) = (any1::rotate (nat1) ((any_list1 @ any_list2)))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any_list2:any list) (nat1:nat), rotate (nat1) ((((Nil) @ (any1::(Nil))) @ any_list2)) = (any1::rotate (nat1) (((Nil) @ any_list2)))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (nat1:nat), rotate (nat1) (((any_list1 @ (any1::(Nil))) @ any_list2)) = (any1::rotate (nat1) ((any_list1 @ any_list2)))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any_list2:any list) (nat1:nat), rotate (nat1) ((any1::any_list2)) = (any1::rotate (nat1) (any_list2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:9)
=================================================
Progress: 72


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (nat1:nat), rotate (nat1) (((any_list1 @ (any1::(Nil))) @ any_list2)) = (any1::rotate (nat1) ((any_list1 @ any_list2)))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any_list2:any list) (nat1:nat), rotate (nat1) ((any1::any_list2)) = (any1::rotate (nat1) (any_list2))

1 goal(s) more...

2 conjecture(s) more...
>>> induction any_list2(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (nat1:nat), rotate (nat1) (((any_list1 @ (any1::(Nil))) @ any_list2)) = (any1::rotate (nat1) ((any_list1 @ any_list2)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (nat1:nat), rotate (nat1) ((any1::(Nil))) = (any1::rotate (nat1) ((Nil)))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat1(rank:10)
=================================================
Progress: 73


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (nat1:nat), rotate (nat1) (((any_list1 @ (any1::(Nil))) @ any_list2)) = (any1::rotate (nat1) ((any_list1 @ any_list2)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (nat1:nat), rotate (nat1) ((any1::(Nil))) = (any1::rotate (nat1) ((Nil)))

2 goal(s) more...

2 conjecture(s) more...
>>> induction nat1(rank : 10)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (nat1:nat), rotate (nat1) (((any_list1 @ (any1::(Nil))) @ any_list2)) = (any1::rotate (nat1) ((any_list1 @ any_list2)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
nat1 : nat
Base3 : nat1 = ZERO
---------------------------------------
forall (any1:any), rotate (ZERO) ((any1::(Nil))) = (any1::rotate (ZERO) ((Nil)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9)
=================================================
Progress: 74


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (nat1:nat), rotate (nat1) (((any_list1 @ (any1::(Nil))) @ any_list2)) = (any1::rotate (nat1) ((any_list1 @ any_list2)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
nat1 : nat
Base3 : nat1 = ZERO
---------------------------------------
forall (any1:any), rotate (ZERO) ((any1::(Nil))) = (any1::rotate (ZERO) ((Nil)))

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (nat1:nat), rotate (nat1) (((any_list1 @ (any1::(Nil))) @ any_list2)) = (any1::rotate (nat1) ((any_list1 @ any_list2)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
nat1 : nat
nat2 : nat
IH1 : forall (any1:any), rotate (nat2) ((any1::(Nil))) = (any1::rotate (nat2) ((Nil)))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
forall (any1:any), rotate (SUCC (nat2)) ((any1::(Nil))) = (any1::rotate (SUCC (nat2)) ((Nil)))

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 75


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (nat1:nat), rotate (nat1) (((any_list1 @ (any1::(Nil))) @ any_list2)) = (any1::rotate (nat1) ((any_list1 @ any_list2)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
nat1 : nat
nat2 : nat
IH1 : forall (any1:any), rotate (nat2) ((any1::(Nil))) = (any1::rotate (nat2) ((Nil)))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
forall (any1:any), rotate (SUCC (nat2)) ((any1::(Nil))) = (any1::rotate (SUCC (nat2)) ((Nil)))

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (nat1:nat), rotate (nat1) (((any_list1 @ (any1::(Nil))) @ any_list2)) = (any1::rotate (nat1) ((any_list1 @ any_list2)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
nat1 : nat
nat2 : nat
IH1 : forall (any1:any), rotate (nat2) ((any1::(Nil))) = (any1::rotate (nat2) ((Nil)))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
forall (any1:any), rotate (nat2) ((any1::(Nil))) = (any1::(Nil))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro any1(rank:9)
rewrite IH1 in goal at 0(rank:25)
=================================================
Progress: 76


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (nat1:nat), rotate (nat1) (((any_list1 @ (any1::(Nil))) @ any_list2)) = (any1::rotate (nat1) ((any_list1 @ any_list2)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
nat1 : nat
nat2 : nat
IH1 : forall (any1:any), rotate (nat2) ((any1::(Nil))) = (any1::rotate (nat2) ((Nil)))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
forall (any1:any), rotate (nat2) ((any1::(Nil))) = (any1::(Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> intro any1(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (nat1:nat), rotate (nat1) (((any_list1 @ (any1::(Nil))) @ any_list2)) = (any1::rotate (nat1) ((any_list1 @ any_list2)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
nat1 : nat
nat2 : nat
IH1 : forall (any1:any), rotate (nat2) ((any1::(Nil))) = (any1::rotate (nat2) ((Nil)))
Inductive1 : nat1 = SUCC (nat2)
any1 : any
---------------------------------------
rotate (nat2) ((any1::(Nil))) = (any1::(Nil))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:9)
=================================================
Progress: 77


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (nat1:nat), rotate (nat1) (((any_list1 @ (any1::(Nil))) @ any_list2)) = (any1::rotate (nat1) ((any_list1 @ any_list2)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
nat1 : nat
nat2 : nat
IH1 : forall (any1:any), rotate (nat2) ((any1::(Nil))) = (any1::rotate (nat2) ((Nil)))
Inductive1 : nat1 = SUCC (nat2)
any1 : any
---------------------------------------
rotate (nat2) ((any1::(Nil))) = (any1::(Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (nat1:nat), rotate (nat1) (((any_list1 @ (any1::(Nil))) @ any_list2)) = (any1::rotate (nat1) ((any_list1 @ any_list2)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
nat1 : nat
nat2 : nat
IH1 : forall (any1:any), rotate (nat2) ((any1::(Nil))) = (any1::rotate (nat2) ((Nil)))
Inductive1 : nat1 = SUCC (nat2)
any1 : any
---------------------------------------
(any1::rotate (nat2) ((Nil))) = (any1::(Nil))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (nat2:nat), (any1::rotate (nat2) ((Nil))) = (any1::(Nil))
Model : any1: 1, nat2: ZERO
Model : any1: 6, nat2: ZERO
Model : any1: 6, nat2: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
(1::rotate (ZERO) ((Nil))) = (1::(Nil))
(6::rotate (ZERO) ((Nil))) = (6::(Nil))
(6::rotate (ZERO) ((Nil))) = (6::(Nil))
Simplifying took 0.000087 seconds
Result : true
advanced_generalize done


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (nat1:nat), rotate (nat1) (((any_list1 @ (any1::(Nil))) @ any_list2)) = (any1::rotate (nat1) ((any_list1 @ any_list2)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
nat1 : nat
nat2 : nat
IH1 : forall (any1:any), rotate (nat2) ((any1::(Nil))) = (any1::rotate (nat2) ((Nil)))
Inductive1 : nat1 = SUCC (nat2)
any1 : any
---------------------------------------
(any1::rotate (nat2) ((Nil))) = (any1::(Nil))

2 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 78


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (nat1:nat), rotate (nat1) (((any_list1 @ (any1::(Nil))) @ any_list2)) = (any1::rotate (nat1) ((any_list1 @ any_list2)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
nat1 : nat
nat2 : nat
IH1 : forall (any1:any), rotate (nat2) ((any1::(Nil))) = (any1::rotate (nat2) ((Nil)))
Inductive1 : nat1 = SUCC (nat2)
any1 : any
---------------------------------------
(any1::rotate (nat2) ((Nil))) = (any1::(Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> assert forall (any1:any) (nat2:nat), (any1::rotate (nat2) ((Nil))) = (any1::(Nil))(rank : 0)


1st goal of : forall (any1:any) (nat1:nat), (any1::rotate (nat1) ((Nil))) = (any1::(Nil))

---------------------------------------
forall (any1:any) (nat1:nat), (any1::rotate (nat1) ((Nil))) = (any1::(Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction nat1(rank:10)
=================================================
Progress: 79


1st goal of : forall (any1:any) (nat1:nat), (any1::rotate (nat1) ((Nil))) = (any1::(Nil))

---------------------------------------
forall (any1:any) (nat1:nat), (any1::rotate (nat1) ((Nil))) = (any1::(Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> induction nat1(rank : 10)


1st goal of : forall (any1:any) (nat1:nat), (any1::rotate (nat1) ((Nil))) = (any1::(Nil))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (any1:any), (any1::rotate (ZERO) ((Nil))) = (any1::(Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9)
=================================================
Progress: 80


1st goal of : forall (any1:any) (nat1:nat), (any1::rotate (nat1) ((Nil))) = (any1::(Nil))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (any1:any), (any1::rotate (ZERO) ((Nil))) = (any1::(Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 9)


1st goal of : forall (any1:any) (nat1:nat), (any1::rotate (nat1) ((Nil))) = (any1::(Nil))
nat1 : nat
nat2 : nat
IH1 : forall (any1:any), (any1::rotate (nat2) ((Nil))) = (any1::(Nil))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
forall (any1:any), (any1::rotate (SUCC (nat2)) ((Nil))) = (any1::(Nil))

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
reflexivity(rank:9)
=================================================
Progress: 81


1st goal of : forall (any1:any) (nat1:nat), (any1::rotate (nat1) ((Nil))) = (any1::(Nil))
nat1 : nat
nat2 : nat
IH1 : forall (any1:any), (any1::rotate (nat2) ((Nil))) = (any1::(Nil))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
forall (any1:any), (any1::rotate (SUCC (nat2)) ((Nil))) = (any1::(Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (nat1:nat), rotate (nat1) (((any_list1 @ (any1::(Nil))) @ any_list2)) = (any1::rotate (nat1) ((any_list1 @ any_list2)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
nat1 : nat
nat2 : nat
IH1 : forall (any1:any), rotate (nat2) ((any1::(Nil))) = (any1::rotate (nat2) ((Nil)))
Inductive1 : nat1 = SUCC (nat2)
any1 : any
---------------------------------------
(any1::rotate (nat2) ((Nil))) = (any1::(Nil))

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
rewrite lemma3 in goal at 0(rank:9)
=================================================
Progress: 82


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (nat1:nat), rotate (nat1) (((any_list1 @ (any1::(Nil))) @ any_list2)) = (any1::rotate (nat1) ((any_list1 @ any_list2)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
nat1 : nat
nat2 : nat
IH1 : forall (any1:any), rotate (nat2) ((any1::(Nil))) = (any1::rotate (nat2) ((Nil)))
Inductive1 : nat1 = SUCC (nat2)
any1 : any
---------------------------------------
(any1::rotate (nat2) ((Nil))) = (any1::(Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (nat1:nat), rotate (nat1) (((any_list1 @ (any1::(Nil))) @ any_list2)) = (any1::rotate (nat1) ((any_list1 @ any_list2)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
nat1 : nat
nat2 : nat
IH1 : forall (any1:any), rotate (nat2) ((any1::(Nil))) = (any1::rotate (nat2) ((Nil)))
Inductive1 : nat1 = SUCC (nat2)
any1 : any
---------------------------------------
(any1::(Nil)) = (any1::(Nil))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8)
=================================================
Progress: 83


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (nat1:nat), rotate (nat1) (((any_list1 @ (any1::(Nil))) @ any_list2)) = (any1::rotate (nat1) ((any_list1 @ any_list2)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
nat1 : nat
nat2 : nat
IH1 : forall (any1:any), rotate (nat2) ((any1::(Nil))) = (any1::rotate (nat2) ((Nil)))
Inductive1 : nat1 = SUCC (nat2)
any1 : any
---------------------------------------
(any1::(Nil)) = (any1::(Nil))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (nat1:nat), rotate (nat1) (((any_list1 @ (any1::(Nil))) @ any_list2)) = (any1::rotate (nat1) ((any_list1 @ any_list2)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (nat1:nat), rotate (nat1) ((any1::any_list3)) = (any1::rotate (nat1) (any_list3))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (nat1:nat), rotate (nat1) ((any1::(any2::any_list3))) = (any1::rotate (nat1) ((any2::any_list3)))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 1
Tactic List : 1
induction nat1(rank:9)
=================================================
Progress: 84


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (nat1:nat), rotate (nat1) (((any_list1 @ (any1::(Nil))) @ any_list2)) = (any1::rotate (nat1) ((any_list1 @ any_list2)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (nat1:nat), rotate (nat1) ((any1::any_list3)) = (any1::rotate (nat1) (any_list3))
Inductive1 : any_list2 = (any2::any_list3)
---------------------------------------
forall (any1:any) (nat1:nat), rotate (nat1) ((any1::(any2::any_list3))) = (any1::rotate (nat1) ((any2::any_list3)))

1 goal(s) more...

2 conjecture(s) more...
>>> induction nat1(rank : 9)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (nat1:nat), rotate (nat1) (((any_list1 @ (any1::(Nil))) @ any_list2)) = (any1::rotate (nat1) ((any_list1 @ any_list2)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (nat1:nat), rotate (nat1) ((any1::any_list3)) = (any1::rotate (nat1) (any_list3))
Inductive1 : any_list2 = (any2::any_list3)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
forall (any1:any), rotate (ZERO) ((any1::(any2::any_list3))) = (any1::rotate (ZERO) ((any2::any_list3)))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8)
=================================================
Progress: 85


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (nat1:nat), rotate (nat1) (((any_list1 @ (any1::(Nil))) @ any_list2)) = (any1::rotate (nat1) ((any_list1 @ any_list2)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (nat1:nat), rotate (nat1) ((any1::any_list3)) = (any1::rotate (nat1) (any_list3))
Inductive1 : any_list2 = (any2::any_list3)
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
forall (any1:any), rotate (ZERO) ((any1::(any2::any_list3))) = (any1::rotate (ZERO) ((any2::any_list3)))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (nat1:nat), rotate (nat1) (((any_list1 @ (any1::(Nil))) @ any_list2)) = (any1::rotate (nat1) ((any_list1 @ any_list2)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (nat1:nat), rotate (nat1) ((any1::any_list3)) = (any1::rotate (nat1) (any_list3))
Inductive1 : any_list2 = (any2::any_list3)
nat1 : nat
nat2 : nat
IH2 : forall (any1:any), rotate (nat2) ((any1::(any2::any_list3))) = (any1::rotate (nat2) ((any2::any_list3)))
Inductive2 : nat1 = SUCC (nat2)
---------------------------------------
forall (any1:any), rotate (SUCC (nat2)) ((any1::(any2::any_list3))) = (any1::rotate (SUCC (nat2)) ((any2::any_list3)))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:8)
=================================================
Progress: 86


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (nat1:nat), rotate (nat1) (((any_list1 @ (any1::(Nil))) @ any_list2)) = (any1::rotate (nat1) ((any_list1 @ any_list2)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (nat1:nat), rotate (nat1) ((any1::any_list3)) = (any1::rotate (nat1) (any_list3))
Inductive1 : any_list2 = (any2::any_list3)
nat1 : nat
nat2 : nat
IH2 : forall (any1:any), rotate (nat2) ((any1::(any2::any_list3))) = (any1::rotate (nat2) ((any2::any_list3)))
Inductive2 : nat1 = SUCC (nat2)
---------------------------------------
forall (any1:any), rotate (SUCC (nat2)) ((any1::(any2::any_list3))) = (any1::rotate (SUCC (nat2)) ((any2::any_list3)))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (nat1:nat), rotate (nat1) (((any_list1 @ (any1::(Nil))) @ any_list2)) = (any1::rotate (nat1) ((any_list1 @ any_list2)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (nat1:nat), rotate (nat1) ((any1::any_list3)) = (any1::rotate (nat1) (any_list3))
Inductive1 : any_list2 = (any2::any_list3)
nat1 : nat
nat2 : nat
IH2 : forall (any1:any), rotate (nat2) ((any1::(any2::any_list3))) = (any1::rotate (nat2) ((any2::any_list3)))
Inductive2 : nat1 = SUCC (nat2)
---------------------------------------
forall (any1:any), rotate (nat2) ((any2::(any_list3 @ (any1::(Nil))))) = (any1::rotate (nat2) ((any_list3 @ (any2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro any1(rank:8)
=================================================
Progress: 87


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (nat1:nat), rotate (nat1) (((any_list1 @ (any1::(Nil))) @ any_list2)) = (any1::rotate (nat1) ((any_list1 @ any_list2)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (nat1:nat), rotate (nat1) ((any1::any_list3)) = (any1::rotate (nat1) (any_list3))
Inductive1 : any_list2 = (any2::any_list3)
nat1 : nat
nat2 : nat
IH2 : forall (any1:any), rotate (nat2) ((any1::(any2::any_list3))) = (any1::rotate (nat2) ((any2::any_list3)))
Inductive2 : nat1 = SUCC (nat2)
---------------------------------------
forall (any1:any), rotate (nat2) ((any2::(any_list3 @ (any1::(Nil))))) = (any1::rotate (nat2) ((any_list3 @ (any2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro any1(rank : 8)


1st goal of : forall (any1:any) (any_list1:any list) (any_list2:any list) (nat1:nat), rotate (nat1) (((any_list1 @ (any1::(Nil))) @ any_list2)) = (any1::rotate (nat1) ((any_list1 @ any_list2)))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
any2 : any
any_list3 : any list
IH1 : forall (any1:any) (nat1:nat), rotate (nat1) ((any1::any_list3)) = (any1::rotate (nat1) (any_list3))
Inductive1 : any_list2 = (any2::any_list3)
nat1 : nat
nat2 : nat
IH2 : forall (any1:any), rotate (nat2) ((any1::(any2::any_list3))) = (any1::rotate (nat2) ((any2::any_list3)))
Inductive2 : nat1 = SUCC (nat2)
any1 : any
---------------------------------------
rotate (nat2) ((any2::(any_list3 @ (any1::(Nil))))) = (any1::rotate (nat2) ((any_list3 @ (any2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (any_list3:any list) (nat2:nat), rotate (nat2) ((any2::(any_list3 @ (any1::(Nil))))) = (any1::rotate (nat2) ((any_list3 @ (any2::(Nil)))))
Model : any1: 3, any2: 1, any_list3: (Nil), nat2: ZERO
Model : any1: 0, any2: 0, any_list3: (Nil), nat2: ZERO
Model : any1: 4, any2: 5, any_list3: (Nil), nat2: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) ((1::((Nil) @ (3::(Nil))))) = (3::rotate (ZERO) (((Nil) @ (1::(Nil)))))
rotate (ZERO) ((0::((Nil) @ (0::(Nil))))) = (0::rotate (ZERO) (((Nil) @ (0::(Nil)))))
rotate (ZERO) ((5::((Nil) @ (4::(Nil))))) = (4::rotate (ZERO) (((Nil) @ (5::(Nil)))))
Simplifying took 0.000317 seconds
Result : false
asdf
advanced_generalize done
=================================================
Progress: 88


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (nat1:nat), rotate (nat1) (((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3)) = (any1::(any2::rotate (nat1) (((any_list1 @ any_list2) @ any_list3))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list) (nat1:nat), rotate (nat1) ((any1::(any2::(any_list2 @ any_list3)))) = (any1::(any2::rotate (nat1) ((any_list2 @ any_list3))))

1 goal(s) more...

4 conjecture(s) more...
>>> induction any_list2(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (nat1:nat), rotate (nat1) (((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3)) = (any1::(any2::rotate (nat1) (((any_list1 @ any_list2) @ any_list3))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list3:any list) (nat1:nat), rotate (nat1) ((any1::(any2::((Nil) @ any_list3)))) = (any1::(any2::rotate (nat1) (((Nil) @ any_list3))))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:13)
=================================================
Progress: 89


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (nat1:nat), rotate (nat1) (((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3)) = (any1::(any2::rotate (nat1) (((any_list1 @ any_list2) @ any_list3))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list3:any list) (nat1:nat), rotate (nat1) ((any1::(any2::((Nil) @ any_list3)))) = (any1::(any2::rotate (nat1) (((Nil) @ any_list3))))

2 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (nat1:nat), rotate (nat1) (((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3)) = (any1::(any2::rotate (nat1) (((any_list1 @ any_list2) @ any_list3))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list3:any list) (nat1:nat), rotate (nat1) ((any1::(any2::any_list3))) = (any1::(any2::rotate (nat1) (any_list3)))

2 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction any_list3(rank:14)
=================================================
Progress: 90


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))

0 goal(s) more...

5 conjecture(s) more...
>>> induction any_list1(rank : 14)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len ((Nil))) ((((((((Nil) @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len ((Nil))) ((((((Nil) @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))

1 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13)
=================================================
Progress: 91


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len ((Nil))) ((((((((Nil) @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len ((Nil))) ((((((Nil) @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))

1 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
any_list1 : any list
any6 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
Inductive1 : any_list1 = (any6::any_list2)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len ((any6::any_list2))) ((((((((any6::any_list2) @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len ((any6::any_list2))) ((((((any6::any_list2) @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))

0 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:13)
=================================================
Progress: 92


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
any_list1 : any list
any6 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
Inductive1 : any_list1 = (any6::any_list2)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len ((any6::any_list2))) ((((((((any6::any_list2) @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len ((any6::any_list2))) ((((((any6::any_list2) @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))

0 goal(s) more...

5 conjecture(s) more...
>>> simpl in goal(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
any_list1 : any list
any6 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
Inductive1 : any_list1 = (any6::any_list2)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 5
intro any1(rank:13)
intro any3(rank:13)
intro any4(rank:13)
intro any5(rank:13)
intro any2(rank:13)
=================================================
Progress: 93


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
any_list1 : any list
any6 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
Inductive1 : any_list1 = (any6::any_list2)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any1(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
any_list1 : any list
any6 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
Inductive1 : any_list1 = (any6::any_list2)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 4
intro any2(rank:13)
intro any3(rank:13)
intro any4(rank:13)
intro any5(rank:13)
=================================================
Progress: 94


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
any_list1 : any list
any6 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
Inductive1 : any_list1 = (any6::any_list2)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any2(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
any_list1 : any list
any6 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
Inductive1 : any_list1 = (any6::any_list2)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 3
intro any3(rank:13)
intro any4(rank:13)
intro any5(rank:13)
=================================================
Progress: 95


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
any_list1 : any list
any6 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
Inductive1 : any_list1 = (any6::any_list2)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any3(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
any_list1 : any list
any6 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
Inductive1 : any_list1 = (any6::any_list2)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any5:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro any4(rank:13)
intro any5(rank:13)
=================================================
Progress: 96


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
any_list1 : any list
any6 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
Inductive1 : any_list1 = (any6::any_list2)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any4(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
any_list1 : any list
any6 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
Inductive1 : any_list1 = (any6::any_list2)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any5:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any5(rank:13)
=================================================
Progress: 97


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
any_list1 : any list
any6 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
Inductive1 : any_list1 = (any6::any_list2)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any5(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
any_list1 : any list
any6 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
Inductive1 : any_list1 = (any6::any_list2)
any5 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any5
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg69:any list) (arg70:any list) (arg71:any list) (arg72:any list) (arg73:any list) (arg74:nat), rotate (arg74) (((((((arg69 @ (any1::(Nil))) @ (any2::(Nil))) @ arg70) @ arg71) @ arg72) @ arg73)) = (any1::(any2::rotate (arg74) (((((arg69 @ arg70) @ arg71) @ arg72) @ arg73))))
Model : any1: 2, any2: 2, arg69: (Nil), arg70: (Nil), arg71: (Nil), arg72: (Nil), arg73: (2::(Nil)), arg74: ZERO
Model : any1: 5, any2: 1, arg69: (8::(7::(Nil))), arg70: (Nil), arg71: (Nil), arg72: (Nil), arg73: (3::(Nil)), arg74: ZERO
Model : any1: 5, any2: 0, arg69: (Nil), arg70: (Nil), arg71: (Nil), arg72: (Nil), arg73: (0::(0::(Nil))), arg74: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) ((((((((Nil) @ (2::(Nil))) @ (2::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (2::(Nil)))) = (2::(2::rotate (ZERO) ((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (2::(Nil))))))
rotate (ZERO) ((((((((8::(7::(Nil))) @ (5::(Nil))) @ (1::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (3::(Nil)))) = (5::(1::rotate (ZERO) ((((((8::(7::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (3::(Nil))))))
rotate (ZERO) ((((((((Nil) @ (5::(Nil))) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (0::(0::(Nil))))) = (5::(0::rotate (ZERO) ((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (0::(0::(Nil)))))))
Simplifying took 0.002524 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list2:any list), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Model : any1: 2, any2: 5, any3: 1, any4: 2, any5: 0, any6: 3, any_list2: (Nil)
Model : any1: 4, any2: 2, any3: 6, any4: 1, any5: 8, any6: 5, any_list2: (Nil)
Model : any1: 8, any2: 0, any3: 1, any4: 5, any5: 2, any6: 0, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (2::(Nil))) @ (5::(Nil))) @ (1::(Nil))) @ (2::(Nil))) @ (0::(Nil))) @ (3::(Nil)))) = (2::(5::rotate (len ((Nil))) (((((((Nil) @ (Nil)) @ (1::(Nil))) @ (2::(Nil))) @ (0::(Nil))) @ (3::(Nil))))))
rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (4::(Nil))) @ (2::(Nil))) @ (6::(Nil))) @ (1::(Nil))) @ (8::(Nil))) @ (5::(Nil)))) = (4::(2::rotate (len ((Nil))) (((((((Nil) @ (Nil)) @ (6::(Nil))) @ (1::(Nil))) @ (8::(Nil))) @ (5::(Nil))))))
rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (8::(Nil))) @ (0::(Nil))) @ (1::(Nil))) @ (5::(Nil))) @ (2::(Nil))) @ (0::(Nil)))) = (8::(0::rotate (len ((Nil))) (((((((Nil) @ (Nil)) @ (1::(Nil))) @ (5::(Nil))) @ (2::(Nil))) @ (0::(Nil))))))
Simplifying took 0.003952 seconds
Result : true
advanced_generalize done


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
any_list1 : any list
any6 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
Inductive1 : any_list1 = (any6::any_list2)
any5 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 98


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
any_list1 : any list
any6 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
Inductive1 : any_list1 = (any6::any_list2)
any5 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list2:any list), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:16)
=================================================
Progress: 99


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
any_list1 : any list
any6 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
Inductive1 : any_list1 = (any6::any_list2)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any2(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
any_list1 : any list
any6 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
Inductive1 : any_list1 = (any6::any_list2)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 3
intro any3(rank:13)
intro any4(rank:13)
intro any5(rank:13)
=================================================
Progress: 100


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
any_list1 : any list
any6 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
Inductive1 : any_list1 = (any6::any_list2)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any3(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
any_list1 : any list
any6 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
Inductive1 : any_list1 = (any6::any_list2)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any5:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro any4(rank:13)
intro any5(rank:13)
=================================================
Progress: 101


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
any_list1 : any list
any6 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
Inductive1 : any_list1 = (any6::any_list2)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any4(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
any_list1 : any list
any6 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
Inductive1 : any_list1 = (any6::any_list2)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any) (any5:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any5(rank:13)
=================================================
Progress: 102


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
any_list1 : any list
any6 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
Inductive1 : any_list1 = (any6::any_list2)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any5(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
any_list1 : any list
any6 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
Inductive1 : any_list1 = (any6::any_list2)
any1 : any
any5 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any5
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg75:any list) (arg76:any list) (arg77:any list) (arg78:any list) (arg79:any list) (arg80:nat), rotate (arg80) (((((((arg75 @ (any1::(Nil))) @ (any2::(Nil))) @ arg76) @ arg77) @ arg78) @ arg79)) = (any1::(any2::rotate (arg80) (((((arg75 @ arg76) @ arg77) @ arg78) @ arg79))))
Model : any1: 3, any2: 4, arg75: (Nil), arg76: (Nil), arg77: (Nil), arg78: (Nil), arg79: (Nil), arg80: ZERO
Model : any1: 5, any2: 8, arg75: (Nil), arg76: (Nil), arg77: (Nil), arg78: (1::(Nil)), arg79: (Nil), arg80: SUCC (ZERO)
Model : any1: 2, any2: 0, arg75: (Nil), arg76: (Nil), arg77: (Nil), arg78: (8::(Nil)), arg79: (Nil), arg80: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) ((((((((Nil) @ (3::(Nil))) @ (4::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (3::(4::rotate (ZERO) ((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (SUCC (ZERO)) ((((((((Nil) @ (5::(Nil))) @ (8::(Nil))) @ (Nil)) @ (Nil)) @ (1::(Nil))) @ (Nil))) = (5::(8::rotate (SUCC (ZERO)) ((((((Nil) @ (Nil)) @ (Nil)) @ (1::(Nil))) @ (Nil)))))
rotate (ZERO) ((((((((Nil) @ (2::(Nil))) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (8::(Nil))) @ (Nil))) = (2::(0::rotate (ZERO) ((((((Nil) @ (Nil)) @ (Nil)) @ (8::(Nil))) @ (Nil)))))
Simplifying took 0.001744 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list2:any list), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Model : any1: 6, any2: 4, any3: 7, any4: 3, any5: 2, any6: 4, any_list2: (Nil)
Model : any1: 4, any2: 0, any3: 3, any4: 7, any5: 8, any6: 4, any_list2: (1::(Nil))
Model : any1: 0, any2: 4, any3: 5, any4: 6, any5: 5, any6: 0, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (6::(Nil))) @ (4::(Nil))) @ (7::(Nil))) @ (3::(Nil))) @ (2::(Nil))) @ (4::(Nil)))) = (6::(4::rotate (len ((Nil))) (((((((Nil) @ (Nil)) @ (7::(Nil))) @ (3::(Nil))) @ (2::(Nil))) @ (4::(Nil))))))
rotate (len ((1::(Nil)))) (((((((((1::(Nil)) @ (Nil)) @ (4::(Nil))) @ (0::(Nil))) @ (3::(Nil))) @ (7::(Nil))) @ (8::(Nil))) @ (4::(Nil)))) = (4::(0::rotate (len ((1::(Nil)))) (((((((1::(Nil)) @ (Nil)) @ (3::(Nil))) @ (7::(Nil))) @ (8::(Nil))) @ (4::(Nil))))))
rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (4::(Nil))) @ (5::(Nil))) @ (6::(Nil))) @ (5::(Nil))) @ (0::(Nil)))) = (0::(4::rotate (len ((Nil))) (((((((Nil) @ (Nil)) @ (5::(Nil))) @ (6::(Nil))) @ (5::(Nil))) @ (0::(Nil))))))
Simplifying took 0.006304 seconds
Result : true
advanced_generalize done
=================================================
Progress: 103


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
any_list1 : any list
any6 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
Inductive1 : any_list1 = (any6::any_list2)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any3(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
any_list1 : any list
any6 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
Inductive1 : any_list1 = (any6::any_list2)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any5:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro any4(rank:13)
intro any5(rank:13)
=================================================
Progress: 104


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
any_list1 : any list
any6 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
Inductive1 : any_list1 = (any6::any_list2)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any4(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
any_list1 : any list
any6 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
Inductive1 : any_list1 = (any6::any_list2)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any) (any5:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any5(rank:13)
=================================================
Progress: 105


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
any_list1 : any list
any6 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
Inductive1 : any_list1 = (any6::any_list2)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any5(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
any_list1 : any list
any6 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
Inductive1 : any_list1 = (any6::any_list2)
any2 : any
any5 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any5
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg81:any list) (arg82:any list) (arg83:any list) (arg84:any list) (arg85:any list) (arg86:nat), rotate (arg86) (((((((arg81 @ (any1::(Nil))) @ (any2::(Nil))) @ arg82) @ arg83) @ arg84) @ arg85)) = (any1::(any2::rotate (arg86) (((((arg81 @ arg82) @ arg83) @ arg84) @ arg85))))
Model : any1: 3, any2: 3, arg81: (2::(Nil)), arg82: (5::(Nil)), arg83: (4::(Nil)), arg84: (Nil), arg85: (2::(Nil)), arg86: SUCC (ZERO)
Model : any1: 4, any2: 5, arg81: (Nil), arg82: (Nil), arg83: (Nil), arg84: (6::(0::(Nil))), arg85: (Nil), arg86: ZERO
Model : any1: 8, any2: 0, arg81: (Nil), arg82: (Nil), arg83: (Nil), arg84: (Nil), arg85: (Nil), arg86: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (SUCC (ZERO)) ((((((((2::(Nil)) @ (3::(Nil))) @ (3::(Nil))) @ (5::(Nil))) @ (4::(Nil))) @ (Nil)) @ (2::(Nil)))) = (3::(3::rotate (SUCC (ZERO)) ((((((2::(Nil)) @ (5::(Nil))) @ (4::(Nil))) @ (Nil)) @ (2::(Nil))))))
rotate (ZERO) ((((((((Nil) @ (4::(Nil))) @ (5::(Nil))) @ (Nil)) @ (Nil)) @ (6::(0::(Nil)))) @ (Nil))) = (4::(5::rotate (ZERO) ((((((Nil) @ (Nil)) @ (Nil)) @ (6::(0::(Nil)))) @ (Nil)))))
rotate (ZERO) ((((((((Nil) @ (8::(Nil))) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (8::(0::rotate (ZERO) ((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
Simplifying took 0.003476 seconds
Result : true
advanced_generalize done


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
any_list1 : any list
any6 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
Inductive1 : any_list1 = (any6::any_list2)
any2 : any
any5 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 106


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
any_list1 : any list
any6 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
Inductive1 : any_list1 = (any6::any_list2)
any2 : any
any5 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (arg81:any list) (arg82:any list) (arg83:any list) (arg84:any list) (arg85:any list) (arg86:nat), rotate (arg86) (((((((arg81 @ (any1::(Nil))) @ (any2::(Nil))) @ arg82) @ arg83) @ arg84) @ arg85)) = (any1::(any2::rotate (arg86) (((((arg81 @ arg82) @ arg83) @ arg84) @ arg85))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:16)
=================================================
Progress: 107


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
any_list1 : any list
any6 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
Inductive1 : any_list1 = (any6::any_list2)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any5:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any4(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
any_list1 : any list
any6 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
Inductive1 : any_list1 = (any6::any_list2)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any5:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any5(rank:13)
=================================================
Progress: 108


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
any_list1 : any list
any6 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
Inductive1 : any_list1 = (any6::any_list2)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any5:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any5(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
any_list1 : any list
any6 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
Inductive1 : any_list1 = (any6::any_list2)
any3 : any
any5 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any5
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg87:any list) (arg88:any list) (arg89:any list) (arg90:any list) (arg91:any list) (arg92:nat), rotate (arg92) (((((((arg87 @ (any1::(Nil))) @ (any2::(Nil))) @ arg88) @ arg89) @ arg90) @ arg91)) = (any1::(any2::rotate (arg92) (((((arg87 @ arg88) @ arg89) @ arg90) @ arg91))))
Model : any1: 4, any2: 3, arg87: (4::(Nil)), arg88: (Nil), arg89: (Nil), arg90: (Nil), arg91: (Nil), arg92: ZERO
Model : any1: 6, any2: 4, arg87: (Nil), arg88: (Nil), arg89: (Nil), arg90: (Nil), arg91: (Nil), arg92: ZERO
Model : any1: 5, any2: 3, arg87: (Nil), arg88: (Nil), arg89: (2::(Nil)), arg90: (Nil), arg91: (6::(Nil)), arg92: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) ((((((((4::(Nil)) @ (4::(Nil))) @ (3::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (4::(3::rotate (ZERO) ((((((4::(Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) ((((((((Nil) @ (6::(Nil))) @ (4::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (6::(4::rotate (ZERO) ((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) ((((((((Nil) @ (5::(Nil))) @ (3::(Nil))) @ (Nil)) @ (2::(Nil))) @ (Nil)) @ (6::(Nil)))) = (5::(3::rotate (ZERO) ((((((Nil) @ (Nil)) @ (2::(Nil))) @ (Nil)) @ (6::(Nil))))))
Simplifying took 0.002023 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list2:any list), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Model : any1: 2, any2: 3, any3: 3, any4: 0, any5: 3, any6: 5, any_list2: (4::(Nil))
Model : any1: 3, any2: 0, any3: 1, any4: 0, any5: 4, any6: 0, any_list2: (Nil)
Model : any1: 0, any2: 6, any3: 6, any4: 3, any5: 3, any6: 2, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((4::(Nil)))) (((((((((4::(Nil)) @ (Nil)) @ (2::(Nil))) @ (3::(Nil))) @ (3::(Nil))) @ (0::(Nil))) @ (3::(Nil))) @ (5::(Nil)))) = (2::(3::rotate (len ((4::(Nil)))) (((((((4::(Nil)) @ (Nil)) @ (3::(Nil))) @ (0::(Nil))) @ (3::(Nil))) @ (5::(Nil))))))
rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (3::(Nil))) @ (0::(Nil))) @ (1::(Nil))) @ (0::(Nil))) @ (4::(Nil))) @ (0::(Nil)))) = (3::(0::rotate (len ((Nil))) (((((((Nil) @ (Nil)) @ (1::(Nil))) @ (0::(Nil))) @ (4::(Nil))) @ (0::(Nil))))))
rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (6::(Nil))) @ (6::(Nil))) @ (3::(Nil))) @ (3::(Nil))) @ (2::(Nil)))) = (0::(6::rotate (len ((Nil))) (((((((Nil) @ (Nil)) @ (6::(Nil))) @ (3::(Nil))) @ (3::(Nil))) @ (2::(Nil))))))
Simplifying took 0.005119 seconds
Result : true
advanced_generalize done
=================================================
Progress: 109


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
any_list1 : any list
any6 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
Inductive1 : any_list1 = (any6::any_list2)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any5:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any5(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
any_list1 : any list
any6 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
Inductive1 : any_list1 = (any6::any_list2)
any4 : any
any5 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any4
intro any5
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg93:any list) (arg94:any list) (arg95:any list) (arg96:any list) (arg97:any list) (arg98:nat), rotate (arg98) (((((((arg93 @ (any1::(Nil))) @ (any2::(Nil))) @ arg94) @ arg95) @ arg96) @ arg97)) = (any1::(any2::rotate (arg98) (((((arg93 @ arg94) @ arg95) @ arg96) @ arg97))))
Model : any1: 0, any2: 7, arg93: (Nil), arg94: (Nil), arg95: (1::(Nil)), arg96: (Nil), arg97: (6::(Nil)), arg98: ZERO
Model : any1: 4, any2: 0, arg93: (Nil), arg94: (Nil), arg95: (Nil), arg96: (Nil), arg97: (Nil), arg98: ZERO
Model : any1: 4, any2: 4, arg93: (Nil), arg94: (Nil), arg95: (Nil), arg96: (Nil), arg97: (7::(Nil)), arg98: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) ((((((((Nil) @ (0::(Nil))) @ (7::(Nil))) @ (Nil)) @ (1::(Nil))) @ (Nil)) @ (6::(Nil)))) = (0::(7::rotate (ZERO) ((((((Nil) @ (Nil)) @ (1::(Nil))) @ (Nil)) @ (6::(Nil))))))
rotate (ZERO) ((((((((Nil) @ (4::(Nil))) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (4::(0::rotate (ZERO) ((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) ((((((((Nil) @ (4::(Nil))) @ (4::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (7::(Nil)))) = (4::(4::rotate (ZERO) ((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (7::(Nil))))))
Simplifying took 0.001604 seconds
Result : true
advanced_generalize done


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
any_list1 : any list
any6 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
Inductive1 : any_list1 = (any6::any_list2)
any4 : any
any5 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 110


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
any_list1 : any list
any6 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
Inductive1 : any_list1 = (any6::any_list2)
any4 : any
any5 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (arg93:any list) (arg94:any list) (arg95:any list) (arg96:any list) (arg97:any list) (arg98:nat), rotate (arg98) (((((((arg93 @ (any1::(Nil))) @ (any2::(Nil))) @ arg94) @ arg95) @ arg96) @ arg97)) = (any1::(any2::rotate (arg98) (((((arg93 @ arg94) @ arg95) @ arg96) @ arg97))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:16)
=================================================
Progress: 111


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
any_list1 : any list
any6 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
Inductive1 : any_list1 = (any6::any_list2)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any3(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
any_list1 : any list
any6 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
Inductive1 : any_list1 = (any6::any_list2)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any5:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro any4(rank:13)
intro any5(rank:13)
=================================================
Progress: 112


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
any_list1 : any list
any6 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
Inductive1 : any_list1 = (any6::any_list2)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any4(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
any_list1 : any list
any6 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
Inductive1 : any_list1 = (any6::any_list2)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any) (any5:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any5(rank:13)
=================================================
Progress: 113


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
any_list1 : any list
any6 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
Inductive1 : any_list1 = (any6::any_list2)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any5(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
any_list1 : any list
any6 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
Inductive1 : any_list1 = (any6::any_list2)
any1 : any
any2 : any
any5 : any
---------------------------------------
forall (any3:any) (any4:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any5
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg100:any list) (arg101:any list) (arg102:any list) (arg103:any list) (arg104:nat) (arg99:any list), rotate (arg104) (((((((arg99 @ (any1::(Nil))) @ (any2::(Nil))) @ arg100) @ arg101) @ arg102) @ arg103)) = (any1::(any2::rotate (arg104) (((((arg99 @ arg100) @ arg101) @ arg102) @ arg103))))
Model : any1: 1, any2: 7, arg100: (4::(Nil)), arg101: (Nil), arg102: (Nil), arg103: (Nil), arg104: SUCC (ZERO), arg99: (Nil)
Model : any1: 8, any2: 0, arg100: (4::(0::(Nil))), arg101: (Nil), arg102: (Nil), arg103: (Nil), arg104: ZERO, arg99: (Nil)
Model : any1: 1, any2: 0, arg100: (3::(0::(Nil))), arg101: (Nil), arg102: (Nil), arg103: (Nil), arg104: SUCC (SUCC (ZERO)), arg99: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (SUCC (ZERO)) ((((((((Nil) @ (1::(Nil))) @ (7::(Nil))) @ (4::(Nil))) @ (Nil)) @ (Nil)) @ (Nil))) = (1::(7::rotate (SUCC (ZERO)) ((((((Nil) @ (4::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) ((((((((Nil) @ (8::(Nil))) @ (0::(Nil))) @ (4::(0::(Nil)))) @ (Nil)) @ (Nil)) @ (Nil))) = (8::(0::rotate (ZERO) ((((((Nil) @ (4::(0::(Nil)))) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (SUCC (SUCC (ZERO))) ((((((((Nil) @ (1::(Nil))) @ (0::(Nil))) @ (3::(0::(Nil)))) @ (Nil)) @ (Nil)) @ (Nil))) = (1::(0::rotate (SUCC (SUCC (ZERO))) ((((((Nil) @ (3::(0::(Nil)))) @ (Nil)) @ (Nil)) @ (Nil)))))
Simplifying took 0.003074 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list2:any list), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Model : any1: 0, any2: 1, any3: 3, any4: 2, any5: 5, any6: 1, any_list2: (8::(Nil))
Model : any1: 6, any2: 5, any3: 3, any4: 4, any5: 2, any6: 4, any_list2: (Nil)
Model : any1: 3, any2: 3, any3: 5, any4: 3, any5: 0, any6: 8, any_list2: (5::(Nil))
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((8::(Nil)))) (((((((((8::(Nil)) @ (Nil)) @ (0::(Nil))) @ (1::(Nil))) @ (3::(Nil))) @ (2::(Nil))) @ (5::(Nil))) @ (1::(Nil)))) = (0::(1::rotate (len ((8::(Nil)))) (((((((8::(Nil)) @ (Nil)) @ (3::(Nil))) @ (2::(Nil))) @ (5::(Nil))) @ (1::(Nil))))))
rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (6::(Nil))) @ (5::(Nil))) @ (3::(Nil))) @ (4::(Nil))) @ (2::(Nil))) @ (4::(Nil)))) = (6::(5::rotate (len ((Nil))) (((((((Nil) @ (Nil)) @ (3::(Nil))) @ (4::(Nil))) @ (2::(Nil))) @ (4::(Nil))))))
rotate (len ((5::(Nil)))) (((((((((5::(Nil)) @ (Nil)) @ (3::(Nil))) @ (3::(Nil))) @ (5::(Nil))) @ (3::(Nil))) @ (0::(Nil))) @ (8::(Nil)))) = (3::(3::rotate (len ((5::(Nil)))) (((((((5::(Nil)) @ (Nil)) @ (5::(Nil))) @ (3::(Nil))) @ (0::(Nil))) @ (8::(Nil))))))
Simplifying took 0.007411 seconds
Result : true
advanced_generalize done
=================================================
Progress: 114


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
any_list1 : any list
any6 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
Inductive1 : any_list1 = (any6::any_list2)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any5:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any4(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
any_list1 : any list
any6 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
Inductive1 : any_list1 = (any6::any_list2)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any) (any5:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any5(rank:13)
=================================================
Progress: 115


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
any_list1 : any list
any6 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
Inductive1 : any_list1 = (any6::any_list2)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any5:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any5(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
any_list1 : any list
any6 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
Inductive1 : any_list1 = (any6::any_list2)
any1 : any
any3 : any
any5 : any
---------------------------------------
forall (any2:any) (any4:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any5
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg105:any list) (arg106:any list) (arg107:any list) (arg108:any list) (arg109:any list) (arg110:nat), rotate (arg110) (((((((arg105 @ (any1::(Nil))) @ (any2::(Nil))) @ arg106) @ arg107) @ arg108) @ arg109)) = (any1::(any2::rotate (arg110) (((((arg105 @ arg106) @ arg107) @ arg108) @ arg109))))
Model : any1: 0, any2: 2, arg105: (Nil), arg106: (Nil), arg107: (Nil), arg108: (Nil), arg109: (Nil), arg110: ZERO
Model : any1: 1, any2: 7, arg105: (Nil), arg106: (Nil), arg107: (Nil), arg108: (Nil), arg109: (5::(7::(Nil))), arg110: ZERO
Model : any1: 6, any2: 2, arg105: (Nil), arg106: (Nil), arg107: (Nil), arg108: (Nil), arg109: (Nil), arg110: SUCC (SUCC (ZERO))
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) ((((((((Nil) @ (0::(Nil))) @ (2::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (0::(2::rotate (ZERO) ((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) ((((((((Nil) @ (1::(Nil))) @ (7::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (5::(7::(Nil))))) = (1::(7::rotate (ZERO) ((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (5::(7::(Nil)))))))
rotate (SUCC (SUCC (ZERO))) ((((((((Nil) @ (6::(Nil))) @ (2::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (6::(2::rotate (SUCC (SUCC (ZERO))) ((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
Simplifying took 0.001644 seconds
Result : true
advanced_generalize done


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
any_list1 : any list
any6 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
Inductive1 : any_list1 = (any6::any_list2)
any1 : any
any3 : any
any5 : any
---------------------------------------
forall (any2:any) (any4:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 116


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
any_list1 : any list
any6 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
Inductive1 : any_list1 = (any6::any_list2)
any1 : any
any3 : any
any5 : any
---------------------------------------
forall (any2:any) (any4:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (arg105:any list) (arg106:any list) (arg107:any list) (arg108:any list) (arg109:any list) (arg110:nat), rotate (arg110) (((((((arg105 @ (any1::(Nil))) @ (any2::(Nil))) @ arg106) @ arg107) @ arg108) @ arg109)) = (any1::(any2::rotate (arg110) (((((arg105 @ arg106) @ arg107) @ arg108) @ arg109))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:16)
=================================================
Progress: 117


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
any_list1 : any list
any6 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
Inductive1 : any_list1 = (any6::any_list2)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any) (any5:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any5(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
any_list1 : any list
any6 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
Inductive1 : any_list1 = (any6::any_list2)
any1 : any
any4 : any
any5 : any
---------------------------------------
forall (any2:any) (any3:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any4
intro any5
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg111:any list) (arg112:any list) (arg113:any list) (arg114:any list) (arg115:any list) (arg116:nat), rotate (arg116) (((((((arg111 @ (any1::(Nil))) @ (any2::(Nil))) @ arg112) @ arg113) @ arg114) @ arg115)) = (any1::(any2::rotate (arg116) (((((arg111 @ arg112) @ arg113) @ arg114) @ arg115))))
Model : any1: 2, any2: 1, arg111: (Nil), arg112: (Nil), arg113: (Nil), arg114: (Nil), arg115: (5::(Nil)), arg116: SUCC (ZERO)
Model : any1: 8, any2: 7, arg111: (Nil), arg112: (Nil), arg113: (Nil), arg114: (7::(5::(Nil))), arg115: (Nil), arg116: ZERO
Model : any1: 7, any2: 4, arg111: (Nil), arg112: (Nil), arg113: (0::(Nil)), arg114: (Nil), arg115: (Nil), arg116: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (SUCC (ZERO)) ((((((((Nil) @ (2::(Nil))) @ (1::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (5::(Nil)))) = (2::(1::rotate (SUCC (ZERO)) ((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (5::(Nil))))))
rotate (ZERO) ((((((((Nil) @ (8::(Nil))) @ (7::(Nil))) @ (Nil)) @ (Nil)) @ (7::(5::(Nil)))) @ (Nil))) = (8::(7::rotate (ZERO) ((((((Nil) @ (Nil)) @ (Nil)) @ (7::(5::(Nil)))) @ (Nil)))))
rotate (ZERO) ((((((((Nil) @ (7::(Nil))) @ (4::(Nil))) @ (Nil)) @ (0::(Nil))) @ (Nil)) @ (Nil))) = (7::(4::rotate (ZERO) ((((((Nil) @ (Nil)) @ (0::(Nil))) @ (Nil)) @ (Nil)))))
Simplifying took 0.002127 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list2:any list), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Model : any1: 3, any2: 8, any3: 7, any4: 1, any5: 3, any6: 5, any_list2: (5::(7::(0::(Nil))))
Model : any1: 4, any2: 5, any3: 6, any4: 7, any5: 5, any6: 7, any_list2: (Nil)
Model : any1: 4, any2: 1, any3: 3, any4: 1, any5: 8, any6: 2, any_list2: (1::(Nil))
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((5::(7::(0::(Nil)))))) (((((((((5::(7::(0::(Nil)))) @ (Nil)) @ (3::(Nil))) @ (8::(Nil))) @ (7::(Nil))) @ (1::(Nil))) @ (3::(Nil))) @ (5::(Nil)))) = (3::(8::rotate (len ((5::(7::(0::(Nil)))))) (((((((5::(7::(0::(Nil)))) @ (Nil)) @ (7::(Nil))) @ (1::(Nil))) @ (3::(Nil))) @ (5::(Nil))))))
rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (4::(Nil))) @ (5::(Nil))) @ (6::(Nil))) @ (7::(Nil))) @ (5::(Nil))) @ (7::(Nil)))) = (4::(5::rotate (len ((Nil))) (((((((Nil) @ (Nil)) @ (6::(Nil))) @ (7::(Nil))) @ (5::(Nil))) @ (7::(Nil))))))
rotate (len ((1::(Nil)))) (((((((((1::(Nil)) @ (Nil)) @ (4::(Nil))) @ (1::(Nil))) @ (3::(Nil))) @ (1::(Nil))) @ (8::(Nil))) @ (2::(Nil)))) = (4::(1::rotate (len ((1::(Nil)))) (((((((1::(Nil)) @ (Nil)) @ (3::(Nil))) @ (1::(Nil))) @ (8::(Nil))) @ (2::(Nil))))))
Simplifying took 0.013571 seconds
Result : true
advanced_generalize done
=================================================
Progress: 118


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
any_list1 : any list
any6 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
Inductive1 : any_list1 = (any6::any_list2)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any5:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any4(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
any_list1 : any list
any6 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
Inductive1 : any_list1 = (any6::any_list2)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any5:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any5(rank:13)
=================================================
Progress: 119


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
any_list1 : any list
any6 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
Inductive1 : any_list1 = (any6::any_list2)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any5:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any5(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
any_list1 : any list
any6 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
Inductive1 : any_list1 = (any6::any_list2)
any2 : any
any3 : any
any5 : any
---------------------------------------
forall (any1:any) (any4:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any5
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg117:any list) (arg118:any list) (arg119:any list) (arg120:any list) (arg121:any list) (arg122:nat), rotate (arg122) (((((((arg117 @ (any1::(Nil))) @ (any2::(Nil))) @ arg118) @ arg119) @ arg120) @ arg121)) = (any1::(any2::rotate (arg122) (((((arg117 @ arg118) @ arg119) @ arg120) @ arg121))))
Model : any1: 1, any2: 5, arg117: (Nil), arg118: (Nil), arg119: (6::(Nil)), arg120: (Nil), arg121: (Nil), arg122: ZERO
Model : any1: 0, any2: 3, arg117: (Nil), arg118: (Nil), arg119: (Nil), arg120: (Nil), arg121: (Nil), arg122: ZERO
Model : any1: 0, any2: 1, arg117: (Nil), arg118: (Nil), arg119: (0::(Nil)), arg120: (2::(Nil)), arg121: (Nil), arg122: SUCC (ZERO)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) ((((((((Nil) @ (1::(Nil))) @ (5::(Nil))) @ (Nil)) @ (6::(Nil))) @ (Nil)) @ (Nil))) = (1::(5::rotate (ZERO) ((((((Nil) @ (Nil)) @ (6::(Nil))) @ (Nil)) @ (Nil)))))
rotate (ZERO) ((((((((Nil) @ (0::(Nil))) @ (3::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (0::(3::rotate (ZERO) ((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (SUCC (ZERO)) ((((((((Nil) @ (0::(Nil))) @ (1::(Nil))) @ (Nil)) @ (0::(Nil))) @ (2::(Nil))) @ (Nil))) = (0::(1::rotate (SUCC (ZERO)) ((((((Nil) @ (Nil)) @ (0::(Nil))) @ (2::(Nil))) @ (Nil)))))
Simplifying took 0.001728 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list2:any list), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Model : any1: 6, any2: 5, any3: 2, any4: 6, any5: 8, any6: 4, any_list2: (Nil)
Model : any1: 7, any2: 2, any3: 2, any4: 8, any5: 8, any6: 0, any_list2: (1::(Nil))
Model : any1: 3, any2: 3, any3: 0, any4: 0, any5: 0, any6: 2, any_list2: (3::(Nil))
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (6::(Nil))) @ (5::(Nil))) @ (2::(Nil))) @ (6::(Nil))) @ (8::(Nil))) @ (4::(Nil)))) = (6::(5::rotate (len ((Nil))) (((((((Nil) @ (Nil)) @ (2::(Nil))) @ (6::(Nil))) @ (8::(Nil))) @ (4::(Nil))))))
rotate (len ((1::(Nil)))) (((((((((1::(Nil)) @ (Nil)) @ (7::(Nil))) @ (2::(Nil))) @ (2::(Nil))) @ (8::(Nil))) @ (8::(Nil))) @ (0::(Nil)))) = (7::(2::rotate (len ((1::(Nil)))) (((((((1::(Nil)) @ (Nil)) @ (2::(Nil))) @ (8::(Nil))) @ (8::(Nil))) @ (0::(Nil))))))
rotate (len ((3::(Nil)))) (((((((((3::(Nil)) @ (Nil)) @ (3::(Nil))) @ (3::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (2::(Nil)))) = (3::(3::rotate (len ((3::(Nil)))) (((((((3::(Nil)) @ (Nil)) @ (0::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (2::(Nil))))))
Simplifying took 0.006731 seconds
Result : true
advanced_generalize done
=================================================
Progress: 120


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
any_list1 : any list
any6 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
Inductive1 : any_list1 = (any6::any_list2)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any) (any5:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any5(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
any_list1 : any list
any6 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
Inductive1 : any_list1 = (any6::any_list2)
any2 : any
any4 : any
any5 : any
---------------------------------------
forall (any1:any) (any3:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any4
intro any5
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg123:any list) (arg124:any list) (arg125:any list) (arg126:any list) (arg127:any list) (arg128:nat), rotate (arg128) (((((((arg123 @ (any1::(Nil))) @ (any2::(Nil))) @ arg124) @ arg125) @ arg126) @ arg127)) = (any1::(any2::rotate (arg128) (((((arg123 @ arg124) @ arg125) @ arg126) @ arg127))))
Model : any1: 3, any2: 1, arg123: (Nil), arg124: (Nil), arg125: (Nil), arg126: (1::(2::(Nil))), arg127: (Nil), arg128: ZERO
Model : any1: 0, any2: 5, arg123: (Nil), arg124: (Nil), arg125: (Nil), arg126: (Nil), arg127: (Nil), arg128: ZERO
Model : any1: 1, any2: 0, arg123: (Nil), arg124: (1::(Nil)), arg125: (Nil), arg126: (Nil), arg127: (Nil), arg128: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) ((((((((Nil) @ (3::(Nil))) @ (1::(Nil))) @ (Nil)) @ (Nil)) @ (1::(2::(Nil)))) @ (Nil))) = (3::(1::rotate (ZERO) ((((((Nil) @ (Nil)) @ (Nil)) @ (1::(2::(Nil)))) @ (Nil)))))
rotate (ZERO) ((((((((Nil) @ (0::(Nil))) @ (5::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (0::(5::rotate (ZERO) ((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) ((((((((Nil) @ (1::(Nil))) @ (0::(Nil))) @ (1::(Nil))) @ (Nil)) @ (Nil)) @ (Nil))) = (1::(0::rotate (ZERO) ((((((Nil) @ (1::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)))))
Simplifying took 0.001520 seconds
Result : true
advanced_generalize done


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
any_list1 : any list
any6 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
Inductive1 : any_list1 = (any6::any_list2)
any2 : any
any4 : any
any5 : any
---------------------------------------
forall (any1:any) (any3:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 121


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
any_list1 : any list
any6 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
Inductive1 : any_list1 = (any6::any_list2)
any2 : any
any4 : any
any5 : any
---------------------------------------
forall (any1:any) (any3:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (arg123:any list) (arg124:any list) (arg125:any list) (arg126:any list) (arg127:any list) (arg128:nat), rotate (arg128) (((((((arg123 @ (any1::(Nil))) @ (any2::(Nil))) @ arg124) @ arg125) @ arg126) @ arg127)) = (any1::(any2::rotate (arg128) (((((arg123 @ arg124) @ arg125) @ arg126) @ arg127))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:16)
=================================================
Progress: 122


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
any_list1 : any list
any6 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
Inductive1 : any_list1 = (any6::any_list2)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any5:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any5(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
any_list1 : any list
any6 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
Inductive1 : any_list1 = (any6::any_list2)
any3 : any
any4 : any
any5 : any
---------------------------------------
forall (any1:any) (any2:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any4
intro any5
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg129:any list) (arg130:any list) (arg131:any list) (arg132:any list) (arg133:any list) (arg134:nat), rotate (arg134) (((((((arg129 @ (any1::(Nil))) @ (any2::(Nil))) @ arg130) @ arg131) @ arg132) @ arg133)) = (any1::(any2::rotate (arg134) (((((arg129 @ arg130) @ arg131) @ arg132) @ arg133))))
Model : any1: 2, any2: 0, arg129: (Nil), arg130: (3::(Nil)), arg131: (Nil), arg132: (Nil), arg133: (6::(Nil)), arg134: ZERO
Model : any1: 7, any2: 2, arg129: (Nil), arg130: (Nil), arg131: (Nil), arg132: (Nil), arg133: (7::(Nil)), arg134: SUCC (ZERO)
Model : any1: 5, any2: 2, arg129: (Nil), arg130: (8::(Nil)), arg131: (Nil), arg132: (Nil), arg133: (Nil), arg134: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) ((((((((Nil) @ (2::(Nil))) @ (0::(Nil))) @ (3::(Nil))) @ (Nil)) @ (Nil)) @ (6::(Nil)))) = (2::(0::rotate (ZERO) ((((((Nil) @ (3::(Nil))) @ (Nil)) @ (Nil)) @ (6::(Nil))))))
rotate (SUCC (ZERO)) ((((((((Nil) @ (7::(Nil))) @ (2::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (7::(Nil)))) = (7::(2::rotate (SUCC (ZERO)) ((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (7::(Nil))))))
rotate (ZERO) ((((((((Nil) @ (5::(Nil))) @ (2::(Nil))) @ (8::(Nil))) @ (Nil)) @ (Nil)) @ (Nil))) = (5::(2::rotate (ZERO) ((((((Nil) @ (8::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)))))
Simplifying took 0.002296 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list2:any list), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Model : any1: 3, any2: 7, any3: 0, any4: 6, any5: 0, any6: 5, any_list2: (Nil)
Model : any1: 6, any2: 5, any3: 2, any4: 0, any5: 0, any6: 3, any_list2: (Nil)
Model : any1: 3, any2: 0, any3: 1, any4: 4, any5: 1, any6: 7, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (3::(Nil))) @ (7::(Nil))) @ (0::(Nil))) @ (6::(Nil))) @ (0::(Nil))) @ (5::(Nil)))) = (3::(7::rotate (len ((Nil))) (((((((Nil) @ (Nil)) @ (0::(Nil))) @ (6::(Nil))) @ (0::(Nil))) @ (5::(Nil))))))
rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (6::(Nil))) @ (5::(Nil))) @ (2::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (3::(Nil)))) = (6::(5::rotate (len ((Nil))) (((((((Nil) @ (Nil)) @ (2::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (3::(Nil))))))
rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (3::(Nil))) @ (0::(Nil))) @ (1::(Nil))) @ (4::(Nil))) @ (1::(Nil))) @ (7::(Nil)))) = (3::(0::rotate (len ((Nil))) (((((((Nil) @ (Nil)) @ (1::(Nil))) @ (4::(Nil))) @ (1::(Nil))) @ (7::(Nil))))))
Simplifying took 0.003871 seconds
Result : true
advanced_generalize done
=================================================
Progress: 123


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
any_list1 : any list
any6 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
Inductive1 : any_list1 = (any6::any_list2)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any5:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any4(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
any_list1 : any list
any6 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
Inductive1 : any_list1 = (any6::any_list2)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any5:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
intro any5(rank:13)
=================================================
Progress: 124


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
any_list1 : any list
any6 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
Inductive1 : any_list1 = (any6::any_list2)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any5:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any5(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
any_list1 : any list
any6 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
Inductive1 : any_list1 = (any6::any_list2)
any1 : any
any2 : any
any3 : any
any5 : any
---------------------------------------
forall (any4:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any5
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg135:any list) (arg136:any list) (arg137:any list) (arg138:any list) (arg139:any list) (arg140:nat), rotate (arg140) (((((((arg135 @ (any1::(Nil))) @ (any2::(Nil))) @ arg136) @ arg137) @ arg138) @ arg139)) = (any1::(any2::rotate (arg140) (((((arg135 @ arg136) @ arg137) @ arg138) @ arg139))))
Model : any1: 4, any2: 7, arg135: (Nil), arg136: (Nil), arg137: (Nil), arg138: (Nil), arg139: (Nil), arg140: ZERO
Model : any1: 1, any2: 7, arg135: (2::(Nil)), arg136: (Nil), arg137: (Nil), arg138: (8::(Nil)), arg139: (Nil), arg140: ZERO
Model : any1: 1, any2: 3, arg135: (Nil), arg136: (1::(4::(Nil))), arg137: (5::(Nil)), arg138: (Nil), arg139: (Nil), arg140: SUCC (SUCC (ZERO))
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) ((((((((Nil) @ (4::(Nil))) @ (7::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (4::(7::rotate (ZERO) ((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) ((((((((2::(Nil)) @ (1::(Nil))) @ (7::(Nil))) @ (Nil)) @ (Nil)) @ (8::(Nil))) @ (Nil))) = (1::(7::rotate (ZERO) ((((((2::(Nil)) @ (Nil)) @ (Nil)) @ (8::(Nil))) @ (Nil)))))
rotate (SUCC (SUCC (ZERO))) ((((((((Nil) @ (1::(Nil))) @ (3::(Nil))) @ (1::(4::(Nil)))) @ (5::(Nil))) @ (Nil)) @ (Nil))) = (1::(3::rotate (SUCC (SUCC (ZERO))) ((((((Nil) @ (1::(4::(Nil)))) @ (5::(Nil))) @ (Nil)) @ (Nil)))))
Simplifying took 0.003974 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list2:any list), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Model : any1: 8, any2: 1, any3: 0, any4: 4, any5: 5, any6: 8, any_list2: (Nil)
Model : any1: 0, any2: 8, any3: 7, any4: 6, any5: 4, any6: 5, any_list2: (Nil)
Model : any1: 7, any2: 8, any3: 7, any4: 1, any5: 2, any6: 6, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (8::(Nil))) @ (1::(Nil))) @ (0::(Nil))) @ (4::(Nil))) @ (5::(Nil))) @ (8::(Nil)))) = (8::(1::rotate (len ((Nil))) (((((((Nil) @ (Nil)) @ (0::(Nil))) @ (4::(Nil))) @ (5::(Nil))) @ (8::(Nil))))))
rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (8::(Nil))) @ (7::(Nil))) @ (6::(Nil))) @ (4::(Nil))) @ (5::(Nil)))) = (0::(8::rotate (len ((Nil))) (((((((Nil) @ (Nil)) @ (7::(Nil))) @ (6::(Nil))) @ (4::(Nil))) @ (5::(Nil))))))
rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (7::(Nil))) @ (8::(Nil))) @ (7::(Nil))) @ (1::(Nil))) @ (2::(Nil))) @ (6::(Nil)))) = (7::(8::rotate (len ((Nil))) (((((((Nil) @ (Nil)) @ (7::(Nil))) @ (1::(Nil))) @ (2::(Nil))) @ (6::(Nil))))))
Simplifying took 0.004799 seconds
Result : true
advanced_generalize done
=================================================
Progress: 125


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
any_list1 : any list
any6 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
Inductive1 : any_list1 = (any6::any_list2)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any) (any5:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any5(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
any_list1 : any list
any6 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
Inductive1 : any_list1 = (any6::any_list2)
any1 : any
any2 : any
any4 : any
any5 : any
---------------------------------------
forall (any3:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any4
intro any5
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg141:any list) (arg142:any list) (arg143:any list) (arg144:any list) (arg145:any list) (arg146:nat), rotate (arg146) (((((((arg141 @ (any1::(Nil))) @ (any2::(Nil))) @ arg142) @ arg143) @ arg144) @ arg145)) = (any1::(any2::rotate (arg146) (((((arg141 @ arg142) @ arg143) @ arg144) @ arg145))))
Model : any1: 2, any2: 0, arg141: (Nil), arg142: (Nil), arg143: (Nil), arg144: (Nil), arg145: (Nil), arg146: ZERO
Model : any1: 5, any2: 3, arg141: (Nil), arg142: (Nil), arg143: (Nil), arg144: (8::(Nil)), arg145: (Nil), arg146: ZERO
Model : any1: 8, any2: 1, arg141: (Nil), arg142: (Nil), arg143: (Nil), arg144: (Nil), arg145: (Nil), arg146: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) ((((((((Nil) @ (2::(Nil))) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (2::(0::rotate (ZERO) ((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) ((((((((Nil) @ (5::(Nil))) @ (3::(Nil))) @ (Nil)) @ (Nil)) @ (8::(Nil))) @ (Nil))) = (5::(3::rotate (ZERO) ((((((Nil) @ (Nil)) @ (Nil)) @ (8::(Nil))) @ (Nil)))))
rotate (ZERO) ((((((((Nil) @ (8::(Nil))) @ (1::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (8::(1::rotate (ZERO) ((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
Simplifying took 0.001424 seconds
Result : true
advanced_generalize done


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
any_list1 : any list
any6 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
Inductive1 : any_list1 = (any6::any_list2)
any1 : any
any2 : any
any4 : any
any5 : any
---------------------------------------
forall (any3:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))

0 goal(s) more...

5 conjecture(s) more...
=================================================
Progress: 126


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
any_list1 : any list
any6 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
Inductive1 : any_list1 = (any6::any_list2)
any1 : any
any2 : any
any4 : any
any5 : any
---------------------------------------
forall (any3:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))

0 goal(s) more...

5 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (arg141:any list) (arg142:any list) (arg143:any list) (arg144:any list) (arg145:any list) (arg146:nat), rotate (arg146) (((((((arg141 @ (any1::(Nil))) @ (any2::(Nil))) @ arg142) @ arg143) @ arg144) @ arg145)) = (any1::(any2::rotate (arg146) (((((arg141 @ arg142) @ arg143) @ arg144) @ arg145))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:16)
=================================================
Progress: 127


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
any_list1 : any list
any6 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
Inductive1 : any_list1 = (any6::any_list2)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any) (any5:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any5(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
any_list1 : any list
any6 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
Inductive1 : any_list1 = (any6::any_list2)
any1 : any
any3 : any
any4 : any
any5 : any
---------------------------------------
forall (any2:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any4
intro any5
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg147:any list) (arg148:any list) (arg149:any list) (arg150:any list) (arg151:any list) (arg152:nat), rotate (arg152) (((((((arg147 @ (any1::(Nil))) @ (any2::(Nil))) @ arg148) @ arg149) @ arg150) @ arg151)) = (any1::(any2::rotate (arg152) (((((arg147 @ arg148) @ arg149) @ arg150) @ arg151))))
Model : any1: 3, any2: 1, arg147: (Nil), arg148: (Nil), arg149: (Nil), arg150: (Nil), arg151: (Nil), arg152: SUCC (ZERO)
Model : any1: 0, any2: 8, arg147: (Nil), arg148: (Nil), arg149: (Nil), arg150: (Nil), arg151: (4::(Nil)), arg152: SUCC (ZERO)
Model : any1: 5, any2: 1, arg147: (Nil), arg148: (Nil), arg149: (5::(Nil)), arg150: (Nil), arg151: (Nil), arg152: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (SUCC (ZERO)) ((((((((Nil) @ (3::(Nil))) @ (1::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (3::(1::rotate (SUCC (ZERO)) ((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (SUCC (ZERO)) ((((((((Nil) @ (0::(Nil))) @ (8::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (4::(Nil)))) = (0::(8::rotate (SUCC (ZERO)) ((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (4::(Nil))))))
rotate (ZERO) ((((((((Nil) @ (5::(Nil))) @ (1::(Nil))) @ (Nil)) @ (5::(Nil))) @ (Nil)) @ (Nil))) = (5::(1::rotate (ZERO) ((((((Nil) @ (Nil)) @ (5::(Nil))) @ (Nil)) @ (Nil)))))
Simplifying took 0.001790 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list2:any list), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Model : any1: 0, any2: 1, any3: 3, any4: 0, any5: 0, any6: 3, any_list2: (Nil)
Model : any1: 0, any2: 6, any3: 4, any4: 1, any5: 0, any6: 0, any_list2: (Nil)
Model : any1: 3, any2: 2, any3: 2, any4: 5, any5: 4, any6: 4, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (1::(Nil))) @ (3::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (3::(Nil)))) = (0::(1::rotate (len ((Nil))) (((((((Nil) @ (Nil)) @ (3::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (3::(Nil))))))
rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (6::(Nil))) @ (4::(Nil))) @ (1::(Nil))) @ (0::(Nil))) @ (0::(Nil)))) = (0::(6::rotate (len ((Nil))) (((((((Nil) @ (Nil)) @ (4::(Nil))) @ (1::(Nil))) @ (0::(Nil))) @ (0::(Nil))))))
rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (3::(Nil))) @ (2::(Nil))) @ (2::(Nil))) @ (5::(Nil))) @ (4::(Nil))) @ (4::(Nil)))) = (3::(2::rotate (len ((Nil))) (((((((Nil) @ (Nil)) @ (2::(Nil))) @ (5::(Nil))) @ (4::(Nil))) @ (4::(Nil))))))
Simplifying took 0.003485 seconds
Result : true
advanced_generalize done
=================================================
Progress: 128


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
any_list1 : any list
any6 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
Inductive1 : any_list1 = (any6::any_list2)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any5:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any5(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
any_list1 : any list
any6 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
Inductive1 : any_list1 = (any6::any_list2)
any2 : any
any3 : any
any4 : any
any5 : any
---------------------------------------
forall (any1:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any4
intro any5
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg153:any list) (arg154:any list) (arg155:any list) (arg156:any list) (arg157:any list) (arg158:nat), rotate (arg158) (((((((arg153 @ (any1::(Nil))) @ (any2::(Nil))) @ arg154) @ arg155) @ arg156) @ arg157)) = (any1::(any2::rotate (arg158) (((((arg153 @ arg154) @ arg155) @ arg156) @ arg157))))
Model : any1: 1, any2: 7, arg153: (Nil), arg154: (Nil), arg155: (Nil), arg156: (Nil), arg157: (Nil), arg158: ZERO
Model : any1: 6, any2: 3, arg153: (0::(Nil)), arg154: (Nil), arg155: (Nil), arg156: (Nil), arg157: (0::(Nil)), arg158: SUCC (ZERO)
Model : any1: 5, any2: 4, arg153: (3::(Nil)), arg154: (0::(Nil)), arg155: (Nil), arg156: (Nil), arg157: (Nil), arg158: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) ((((((((Nil) @ (1::(Nil))) @ (7::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (1::(7::rotate (ZERO) ((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (SUCC (ZERO)) ((((((((0::(Nil)) @ (6::(Nil))) @ (3::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (0::(Nil)))) = (6::(3::rotate (SUCC (ZERO)) ((((((0::(Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (0::(Nil))))))
rotate (ZERO) ((((((((3::(Nil)) @ (5::(Nil))) @ (4::(Nil))) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil))) = (5::(4::rotate (ZERO) ((((((3::(Nil)) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)))))
Simplifying took 0.002545 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list2:any list), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Model : any1: 0, any2: 0, any3: 7, any4: 2, any5: 0, any6: 6, any_list2: (Nil)
Model : any1: 5, any2: 8, any3: 1, any4: 2, any5: 8, any6: 6, any_list2: (Nil)
Model : any1: 8, any2: 4, any3: 2, any4: 3, any5: 4, any6: 2, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (0::(Nil))) @ (7::(Nil))) @ (2::(Nil))) @ (0::(Nil))) @ (6::(Nil)))) = (0::(0::rotate (len ((Nil))) (((((((Nil) @ (Nil)) @ (7::(Nil))) @ (2::(Nil))) @ (0::(Nil))) @ (6::(Nil))))))
rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (5::(Nil))) @ (8::(Nil))) @ (1::(Nil))) @ (2::(Nil))) @ (8::(Nil))) @ (6::(Nil)))) = (5::(8::rotate (len ((Nil))) (((((((Nil) @ (Nil)) @ (1::(Nil))) @ (2::(Nil))) @ (8::(Nil))) @ (6::(Nil))))))
rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (8::(Nil))) @ (4::(Nil))) @ (2::(Nil))) @ (3::(Nil))) @ (4::(Nil))) @ (2::(Nil)))) = (8::(4::rotate (len ((Nil))) (((((((Nil) @ (Nil)) @ (2::(Nil))) @ (3::(Nil))) @ (4::(Nil))) @ (2::(Nil))))))
Simplifying took 0.004327 seconds
Result : true
advanced_generalize done
=================================================
Progress: 129


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
any_list1 : any list
any6 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
Inductive1 : any_list1 = (any6::any_list2)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any5:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))

0 goal(s) more...

5 conjecture(s) more...
>>> intro any5(rank : 13)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any_list1:any list), rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
any_list1 : any list
any6 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))))))
Inductive1 : any_list1 = (any6::any_list2)
any1 : any
any2 : any
any3 : any
any4 : any
any5 : any
---------------------------------------
rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))

0 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any4
intro any5
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg159:any list) (arg160:any list) (arg161:any list) (arg162:any list) (arg163:any list) (arg164:nat), rotate (arg164) (((((((arg159 @ (any1::(Nil))) @ (any2::(Nil))) @ arg160) @ arg161) @ arg162) @ arg163)) = (any1::(any2::rotate (arg164) (((((arg159 @ arg160) @ arg161) @ arg162) @ arg163))))
Model : any1: 7, any2: 7, arg159: (2::(1::(Nil))), arg160: (Nil), arg161: (Nil), arg162: (4::(Nil)), arg163: (Nil), arg164: SUCC (ZERO)
Model : any1: 7, any2: 0, arg159: (Nil), arg160: (Nil), arg161: (4::(3::(Nil))), arg162: (Nil), arg163: (6::(Nil)), arg164: ZERO
Model : any1: 7, any2: 6, arg159: (4::(Nil)), arg160: (Nil), arg161: (Nil), arg162: (0::(Nil)), arg163: (Nil), arg164: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (SUCC (ZERO)) ((((((((2::(1::(Nil))) @ (7::(Nil))) @ (7::(Nil))) @ (Nil)) @ (Nil)) @ (4::(Nil))) @ (Nil))) = (7::(7::rotate (SUCC (ZERO)) ((((((2::(1::(Nil))) @ (Nil)) @ (Nil)) @ (4::(Nil))) @ (Nil)))))
rotate (ZERO) ((((((((Nil) @ (7::(Nil))) @ (0::(Nil))) @ (Nil)) @ (4::(3::(Nil)))) @ (Nil)) @ (6::(Nil)))) = (7::(0::rotate (ZERO) ((((((Nil) @ (Nil)) @ (4::(3::(Nil)))) @ (Nil)) @ (6::(Nil))))))
rotate (ZERO) ((((((((4::(Nil)) @ (7::(Nil))) @ (6::(Nil))) @ (Nil)) @ (Nil)) @ (0::(Nil))) @ (Nil))) = (7::(6::rotate (ZERO) ((((((4::(Nil)) @ (Nil)) @ (Nil)) @ (0::(Nil))) @ (Nil)))))
Simplifying took 0.004681 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list2:any list), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Model : any1: 4, any2: 8, any3: 8, any4: 3, any5: 5, any6: 1, any_list2: (Nil)
Model : any1: 0, any2: 8, any3: 4, any4: 6, any5: 8, any6: 0, any_list2: (Nil)
Model : any1: 4, any2: 2, any3: 4, any4: 4, any5: 0, any6: 1, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (4::(Nil))) @ (8::(Nil))) @ (8::(Nil))) @ (3::(Nil))) @ (5::(Nil))) @ (1::(Nil)))) = (4::(8::rotate (len ((Nil))) (((((((Nil) @ (Nil)) @ (8::(Nil))) @ (3::(Nil))) @ (5::(Nil))) @ (1::(Nil))))))
rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (8::(Nil))) @ (4::(Nil))) @ (6::(Nil))) @ (8::(Nil))) @ (0::(Nil)))) = (0::(8::rotate (len ((Nil))) (((((((Nil) @ (Nil)) @ (4::(Nil))) @ (6::(Nil))) @ (8::(Nil))) @ (0::(Nil))))))
rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (4::(Nil))) @ (2::(Nil))) @ (4::(Nil))) @ (4::(Nil))) @ (0::(Nil))) @ (1::(Nil)))) = (4::(2::rotate (len ((Nil))) (((((((Nil) @ (Nil)) @ (4::(Nil))) @ (4::(Nil))) @ (0::(Nil))) @ (1::(Nil))))))
Simplifying took 0.004760 seconds
Result : true
advanced_generalize done
=================================================
Progress: 130


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (nat1:nat), rotate (nat1) ((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4)) = (any1::(any2::rotate (nat1) ((((any_list1 @ any_list2) @ any_list3) @ any_list4))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (nat1:nat), rotate (nat1) ((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4)) = (any1::(any2::rotate (nat1) ((((any_list1 @ any_list2) @ any_list3) @ any_list4))))

0 goal(s) more...

5 conjecture(s) more...
>>> induction any_list1(rank : 14)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (nat1:nat), rotate (nat1) ((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4)) = (any1::(any2::rotate (nat1) ((((any_list1 @ any_list2) @ any_list3) @ any_list4))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list) (any_list4:any list) (nat1:nat), rotate (nat1) (((((((Nil) @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4)) = (any1::(any2::rotate (nat1) (((((Nil) @ any_list2) @ any_list3) @ any_list4))))

1 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:14)
=================================================
Progress: 131


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (nat1:nat), rotate (nat1) ((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4)) = (any1::(any2::rotate (nat1) ((((any_list1 @ any_list2) @ any_list3) @ any_list4))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (nat1:nat), rotate (nat1) ((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4)) = (any1::(any2::rotate (nat1) ((((any_list1 @ any_list2) @ any_list3) @ any_list4))))

0 goal(s) more...

5 conjecture(s) more...
>>> induction any_list1(rank : 14)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (nat1:nat), rotate (nat1) ((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4)) = (any1::(any2::rotate (nat1) ((((any_list1 @ any_list2) @ any_list3) @ any_list4))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list) (any_list4:any list) (nat1:nat), rotate (nat1) (((((((Nil) @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4)) = (any1::(any2::rotate (nat1) (((((Nil) @ any_list2) @ any_list3) @ any_list4))))

1 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:14)
=================================================
Progress: 132


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (nat1:nat), rotate (nat1) (((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3)) = (any1::(any2::rotate (nat1) (((any_list1 @ any_list2) @ any_list3))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list3:any list) (nat1:nat), rotate (nat1) ((any1::(any2::any_list3))) = (any1::(any2::rotate (nat1) (any_list3)))

2 goal(s) more...

4 conjecture(s) more...
>>> induction any_list3(rank : 14)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (nat1:nat), rotate (nat1) (((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3)) = (any1::(any2::rotate (nat1) (((any_list1 @ any_list2) @ any_list3))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (nat1:nat), rotate (nat1) ((any1::(any2::(Nil)))) = (any1::(any2::rotate (nat1) ((Nil))))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
induction nat1(rank:15)
=================================================
Progress: 133


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (nat1:nat), rotate (nat1) ((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4)) = (any1::(any2::rotate (nat1) ((((any_list1 @ any_list2) @ any_list3) @ any_list4))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list) (any_list4:any list) (nat1:nat), rotate (nat1) (((((((Nil) @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4)) = (any1::(any2::rotate (nat1) (((((Nil) @ any_list2) @ any_list3) @ any_list4))))

1 goal(s) more...

5 conjecture(s) more...
>>> simpl in goal(rank : 14)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (nat1:nat), rotate (nat1) ((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4)) = (any1::(any2::rotate (nat1) ((((any_list1 @ any_list2) @ any_list3) @ any_list4))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list) (any_list4:any list) (nat1:nat), rotate (nat1) ((any1::(any2::((any_list2 @ any_list3) @ any_list4)))) = (any1::(any2::rotate (nat1) (((any_list2 @ any_list3) @ any_list4))))

1 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:15)
=================================================
Progress: 134


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (nat1:nat), rotate (nat1) ((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4)) = (any1::(any2::rotate (nat1) ((((any_list1 @ any_list2) @ any_list3) @ any_list4))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list) (any_list4:any list) (nat1:nat), rotate (nat1) (((((((Nil) @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4)) = (any1::(any2::rotate (nat1) (((((Nil) @ any_list2) @ any_list3) @ any_list4))))

1 goal(s) more...

5 conjecture(s) more...
>>> simpl in goal(rank : 14)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (nat1:nat), rotate (nat1) ((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4)) = (any1::(any2::rotate (nat1) ((((any_list1 @ any_list2) @ any_list3) @ any_list4))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list) (any_list4:any list) (nat1:nat), rotate (nat1) ((any1::(any2::((any_list2 @ any_list3) @ any_list4)))) = (any1::(any2::rotate (nat1) (((any_list2 @ any_list3) @ any_list4))))

1 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:15)
=================================================
Progress: 135


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (nat1:nat), rotate (nat1) (((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3)) = (any1::(any2::rotate (nat1) (((any_list1 @ any_list2) @ any_list3))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (nat1:nat), rotate (nat1) ((any1::(any2::(Nil)))) = (any1::(any2::rotate (nat1) ((Nil))))

3 goal(s) more...

4 conjecture(s) more...
>>> induction nat1(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (nat1:nat), rotate (nat1) (((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3)) = (any1::(any2::rotate (nat1) (((any_list1 @ any_list2) @ any_list3))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
nat1 : nat
Base4 : nat1 = ZERO
---------------------------------------
forall (any1:any) (any2:any), rotate (ZERO) ((any1::(any2::(Nil)))) = (any1::(any2::rotate (ZERO) ((Nil))))

4 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
reflexivity(rank:14)
=================================================
Progress: 136


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (nat1:nat), rotate (nat1) (((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3)) = (any1::(any2::rotate (nat1) (((any_list1 @ any_list2) @ any_list3))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
nat1 : nat
Base4 : nat1 = ZERO
---------------------------------------
forall (any1:any) (any2:any), rotate (ZERO) ((any1::(any2::(Nil)))) = (any1::(any2::rotate (ZERO) ((Nil))))

4 goal(s) more...

4 conjecture(s) more...
>>> reflexivity(rank : 14)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (nat1:nat), rotate (nat1) (((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3)) = (any1::(any2::rotate (nat1) (((any_list1 @ any_list2) @ any_list3))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
nat1 : nat
nat2 : nat
IH1 : forall (any1:any) (any2:any), rotate (nat2) ((any1::(any2::(Nil)))) = (any1::(any2::rotate (nat2) ((Nil))))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
forall (any1:any) (any2:any), rotate (SUCC (nat2)) ((any1::(any2::(Nil)))) = (any1::(any2::rotate (SUCC (nat2)) ((Nil))))

3 goal(s) more...

4 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:14)
=================================================
Progress: 137


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (nat1:nat), rotate (nat1) (((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3)) = (any1::(any2::rotate (nat1) (((any_list1 @ any_list2) @ any_list3))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
nat1 : nat
nat2 : nat
IH1 : forall (any1:any) (any2:any), rotate (nat2) ((any1::(any2::(Nil)))) = (any1::(any2::rotate (nat2) ((Nil))))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
forall (any1:any) (any2:any), rotate (SUCC (nat2)) ((any1::(any2::(Nil)))) = (any1::(any2::rotate (SUCC (nat2)) ((Nil))))

3 goal(s) more...

4 conjecture(s) more...
>>> simpl in goal(rank : 14)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (nat1:nat), rotate (nat1) (((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3)) = (any1::(any2::rotate (nat1) (((any_list1 @ any_list2) @ any_list3))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
nat1 : nat
nat2 : nat
IH1 : forall (any1:any) (any2:any), rotate (nat2) ((any1::(any2::(Nil)))) = (any1::(any2::rotate (nat2) ((Nil))))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
forall (any1:any) (any2:any), rotate (nat2) ((any2::(any1::(Nil)))) = (any1::(any2::(Nil)))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 3
intro any1(rank:14)
intro any2(rank:14)
rewrite IH1 in goal at 0(rank:30)
=================================================
Progress: 138


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (nat1:nat), rotate (nat1) (((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3)) = (any1::(any2::rotate (nat1) (((any_list1 @ any_list2) @ any_list3))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
nat1 : nat
nat2 : nat
IH1 : forall (any1:any) (any2:any), rotate (nat2) ((any1::(any2::(Nil)))) = (any1::(any2::rotate (nat2) ((Nil))))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
forall (any1:any) (any2:any), rotate (nat2) ((any2::(any1::(Nil)))) = (any1::(any2::(Nil)))

3 goal(s) more...

4 conjecture(s) more...
>>> intro any1(rank : 14)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (nat1:nat), rotate (nat1) (((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3)) = (any1::(any2::rotate (nat1) (((any_list1 @ any_list2) @ any_list3))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
nat1 : nat
nat2 : nat
IH1 : forall (any1:any) (any2:any), rotate (nat2) ((any1::(any2::(Nil)))) = (any1::(any2::rotate (nat2) ((Nil))))
Inductive1 : nat1 = SUCC (nat2)
any1 : any
---------------------------------------
forall (any2:any), rotate (nat2) ((any2::(any1::(Nil)))) = (any1::(any2::(Nil)))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 2
intro any2(rank:14)
rewrite IH1 in goal at 0(rank:30)
=================================================
Progress: 139


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (nat1:nat), rotate (nat1) (((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3)) = (any1::(any2::rotate (nat1) (((any_list1 @ any_list2) @ any_list3))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
nat1 : nat
nat2 : nat
IH1 : forall (any1:any) (any2:any), rotate (nat2) ((any1::(any2::(Nil)))) = (any1::(any2::rotate (nat2) ((Nil))))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
forall (any1:any) (any2:any), rotate (nat2) ((any2::(any1::(Nil)))) = (any1::(any2::(Nil)))

3 goal(s) more...

4 conjecture(s) more...
>>> intro any2(rank : 14)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (nat1:nat), rotate (nat1) (((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3)) = (any1::(any2::rotate (nat1) (((any_list1 @ any_list2) @ any_list3))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
nat1 : nat
nat2 : nat
IH1 : forall (any1:any) (any2:any), rotate (nat2) ((any1::(any2::(Nil)))) = (any1::(any2::rotate (nat2) ((Nil))))
Inductive1 : nat1 = SUCC (nat2)
any2 : any
---------------------------------------
forall (any1:any), rotate (nat2) ((any2::(any1::(Nil)))) = (any1::(any2::(Nil)))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:14)
=================================================
Progress: 140


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (nat1:nat), rotate (nat1) (((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3)) = (any1::(any2::rotate (nat1) (((any_list1 @ any_list2) @ any_list3))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
nat1 : nat
nat2 : nat
IH1 : forall (any1:any) (any2:any), rotate (nat2) ((any1::(any2::(Nil)))) = (any1::(any2::rotate (nat2) ((Nil))))
Inductive1 : nat1 = SUCC (nat2)
any1 : any
---------------------------------------
forall (any2:any), rotate (nat2) ((any2::(any1::(Nil)))) = (any1::(any2::(Nil)))

3 goal(s) more...

4 conjecture(s) more...
>>> intro any2(rank : 14)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (nat1:nat), rotate (nat1) (((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3)) = (any1::(any2::rotate (nat1) (((any_list1 @ any_list2) @ any_list3))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
nat1 : nat
nat2 : nat
IH1 : forall (any1:any) (any2:any), rotate (nat2) ((any1::(any2::(Nil)))) = (any1::(any2::rotate (nat2) ((Nil))))
Inductive1 : nat1 = SUCC (nat2)
any1 : any
any2 : any
---------------------------------------
rotate (nat2) ((any2::(any1::(Nil)))) = (any1::(any2::(Nil)))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:14)
=================================================
Progress: 141


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (nat1:nat), rotate (nat1) (((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3)) = (any1::(any2::rotate (nat1) (((any_list1 @ any_list2) @ any_list3))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
nat1 : nat
nat2 : nat
IH1 : forall (any1:any) (any2:any), rotate (nat2) ((any1::(any2::(Nil)))) = (any1::(any2::rotate (nat2) ((Nil))))
Inductive1 : nat1 = SUCC (nat2)
any2 : any
---------------------------------------
forall (any1:any), rotate (nat2) ((any2::(any1::(Nil)))) = (any1::(any2::(Nil)))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 14)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (nat1:nat), rotate (nat1) (((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3)) = (any1::(any2::rotate (nat1) (((any_list1 @ any_list2) @ any_list3))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
nat1 : nat
nat2 : nat
IH1 : forall (any1:any) (any2:any), rotate (nat2) ((any1::(any2::(Nil)))) = (any1::(any2::rotate (nat2) ((Nil))))
Inductive1 : nat1 = SUCC (nat2)
any2 : any
---------------------------------------
forall (any1:any), (any2::(any1::rotate (nat2) ((Nil)))) = (any1::(any2::(Nil)))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (nat2:nat), (any2::(any1::rotate (nat2) ((Nil)))) = (any1::(any2::(Nil)))
Model : any1: 8, any2: 0, nat2: ZERO
Model : any1: 2, any2: 4, nat2: ZERO
Model : any1: 7, any2: 3, nat2: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
(0::(8::rotate (ZERO) ((Nil)))) = (8::(0::(Nil)))
(4::(2::rotate (ZERO) ((Nil)))) = (2::(4::(Nil)))
(3::(7::rotate (ZERO) ((Nil)))) = (7::(3::(Nil)))
Simplifying took 0.000131 seconds
Result : false
asdf
advanced_generalize done
=================================================
Progress: 142


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (nat1:nat), rotate (nat1) (((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3)) = (any1::(any2::rotate (nat1) (((any_list1 @ any_list2) @ any_list3))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
nat1 : nat
nat2 : nat
IH1 : forall (any1:any) (any2:any), rotate (nat2) ((any1::(any2::(Nil)))) = (any1::(any2::rotate (nat2) ((Nil))))
Inductive1 : nat1 = SUCC (nat2)
any1 : any
any2 : any
---------------------------------------
rotate (nat2) ((any2::(any1::(Nil)))) = (any1::(any2::(Nil)))

3 goal(s) more...

4 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 14)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (nat1:nat), rotate (nat1) (((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3)) = (any1::(any2::rotate (nat1) (((any_list1 @ any_list2) @ any_list3))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
nat1 : nat
nat2 : nat
IH1 : forall (any1:any) (any2:any), rotate (nat2) ((any1::(any2::(Nil)))) = (any1::(any2::rotate (nat2) ((Nil))))
Inductive1 : nat1 = SUCC (nat2)
any1 : any
any2 : any
---------------------------------------
(any2::(any1::rotate (nat2) ((Nil)))) = (any1::(any2::(Nil)))

3 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (nat2:nat), (any2::(any1::rotate (nat2) ((Nil)))) = (any1::(any2::(Nil)))
Model : any1: 3, any2: 0, nat2: ZERO
Model : any1: 6, any2: 5, nat2: ZERO
Model : any1: 0, any2: 2, nat2: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
(0::(3::rotate (ZERO) ((Nil)))) = (3::(0::(Nil)))
(5::(6::rotate (ZERO) ((Nil)))) = (6::(5::(Nil)))
(2::(0::rotate (ZERO) ((Nil)))) = (0::(2::(Nil)))
Simplifying took 0.000111 seconds
Result : false
asdf
advanced_generalize done
=================================================
Progress: 143


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (nat1:nat), rotate (nat1) ((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4)) = (any1::(any2::rotate (nat1) ((((any_list1 @ any_list2) @ any_list3) @ any_list4))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list) (any_list4:any list) (nat1:nat), rotate (nat1) ((any1::(any2::((any_list2 @ any_list3) @ any_list4)))) = (any1::(any2::rotate (nat1) (((any_list2 @ any_list3) @ any_list4))))

1 goal(s) more...

5 conjecture(s) more...
>>> induction any_list2(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (nat1:nat), rotate (nat1) ((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4)) = (any1::(any2::rotate (nat1) ((((any_list1 @ any_list2) @ any_list3) @ any_list4))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list3:any list) (any_list4:any list) (nat1:nat), rotate (nat1) ((any1::(any2::(((Nil) @ any_list3) @ any_list4)))) = (any1::(any2::rotate (nat1) ((((Nil) @ any_list3) @ any_list4))))

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:15)
=================================================
Progress: 144


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (nat1:nat), rotate (nat1) ((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4)) = (any1::(any2::rotate (nat1) ((((any_list1 @ any_list2) @ any_list3) @ any_list4))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list) (any_list4:any list) (nat1:nat), rotate (nat1) ((any1::(any2::((any_list2 @ any_list3) @ any_list4)))) = (any1::(any2::rotate (nat1) (((any_list2 @ any_list3) @ any_list4))))

1 goal(s) more...

5 conjecture(s) more...
>>> induction any_list2(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (nat1:nat), rotate (nat1) ((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4)) = (any1::(any2::rotate (nat1) ((((any_list1 @ any_list2) @ any_list3) @ any_list4))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list3:any list) (any_list4:any list) (nat1:nat), rotate (nat1) ((any1::(any2::(((Nil) @ any_list3) @ any_list4)))) = (any1::(any2::rotate (nat1) ((((Nil) @ any_list3) @ any_list4))))

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:15)
=================================================
Progress: 145


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (nat1:nat), rotate (nat1) ((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4)) = (any1::(any2::rotate (nat1) ((((any_list1 @ any_list2) @ any_list3) @ any_list4))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list3:any list) (any_list4:any list) (nat1:nat), rotate (nat1) ((any1::(any2::(((Nil) @ any_list3) @ any_list4)))) = (any1::(any2::rotate (nat1) ((((Nil) @ any_list3) @ any_list4))))

2 goal(s) more...

5 conjecture(s) more...
>>> simpl in goal(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (nat1:nat), rotate (nat1) ((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4)) = (any1::(any2::rotate (nat1) ((((any_list1 @ any_list2) @ any_list3) @ any_list4))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list3:any list) (any_list4:any list) (nat1:nat), rotate (nat1) ((any1::(any2::(any_list3 @ any_list4)))) = (any1::(any2::rotate (nat1) ((any_list3 @ any_list4))))

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list3(rank:16)
=================================================
Progress: 146


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (nat1:nat), rotate (nat1) ((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4)) = (any1::(any2::rotate (nat1) ((((any_list1 @ any_list2) @ any_list3) @ any_list4))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list3:any list) (any_list4:any list) (nat1:nat), rotate (nat1) ((any1::(any2::(((Nil) @ any_list3) @ any_list4)))) = (any1::(any2::rotate (nat1) ((((Nil) @ any_list3) @ any_list4))))

2 goal(s) more...

5 conjecture(s) more...
>>> simpl in goal(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (nat1:nat), rotate (nat1) ((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4)) = (any1::(any2::rotate (nat1) ((((any_list1 @ any_list2) @ any_list3) @ any_list4))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list3:any list) (any_list4:any list) (nat1:nat), rotate (nat1) ((any1::(any2::(any_list3 @ any_list4)))) = (any1::(any2::rotate (nat1) ((any_list3 @ any_list4))))

2 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list3(rank:16)
=================================================
Progress: 147


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
>>> induction any_list1(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len ((Nil))) (((((((Nil) @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))

1 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
reflexivity(rank:15)
=================================================
Progress: 148


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len ((Nil))) (((((((Nil) @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))

1 goal(s) more...

6 conjecture(s) more...
>>> reflexivity(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len ((any7::any_list2))) (((((((((any7::any_list2) @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len ((any7::any_list2))) (((((((any7::any_list2) @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:15)
=================================================
Progress: 149


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len ((any7::any_list2))) (((((((((any7::any_list2) @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len ((any7::any_list2))) (((((((any7::any_list2) @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
>>> simpl in goal(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 6
intro any1(rank:15)
intro any3(rank:15)
intro any4(rank:15)
intro any5(rank:15)
intro any6(rank:15)
intro any2(rank:15)
=================================================
Progress: 150


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any1(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 5
intro any2(rank:15)
intro any4(rank:15)
intro any5(rank:15)
intro any6(rank:15)
intro any3(rank:15)
=================================================
Progress: 151


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any2(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 4
intro any3(rank:15)
intro any4(rank:15)
intro any5(rank:15)
intro any6(rank:15)
=================================================
Progress: 152


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any3(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 3
intro any4(rank:15)
intro any5(rank:15)
intro any6(rank:15)
=================================================
Progress: 153


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any4(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any5:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro any5(rank:15)
intro any6(rank:15)
=================================================
Progress: 154


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any5(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any5 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any6(rank:15)
=================================================
Progress: 155


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any6(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any6 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any6
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg165:any list) (arg166:any list) (arg167:any list) (arg168:any list) (arg169:any list) (arg170:any list) (arg171:nat), rotate (arg171) ((((((((arg165 @ (any1::(Nil))) @ (any2::(Nil))) @ arg166) @ arg167) @ arg168) @ arg169) @ arg170)) = (any1::(any2::rotate (arg171) ((((((arg165 @ arg166) @ arg167) @ arg168) @ arg169) @ arg170))))
Model : any1: 3, any2: 5, arg165: (5::(Nil)), arg166: (Nil), arg167: (1::(Nil)), arg168: (6::(0::(Nil))), arg169: (2::(Nil)), arg170: (Nil), arg171: ZERO
Model : any1: 3, any2: 5, arg165: (Nil), arg166: (Nil), arg167: (Nil), arg168: (0::(Nil)), arg169: (Nil), arg170: (7::(Nil)), arg171: ZERO
Model : any1: 2, any2: 2, arg165: (Nil), arg166: (Nil), arg167: (Nil), arg168: (2::(Nil)), arg169: (3::(6::(Nil))), arg170: (Nil), arg171: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) (((((((((5::(Nil)) @ (3::(Nil))) @ (5::(Nil))) @ (Nil)) @ (1::(Nil))) @ (6::(0::(Nil)))) @ (2::(Nil))) @ (Nil))) = (3::(5::rotate (ZERO) (((((((5::(Nil)) @ (Nil)) @ (1::(Nil))) @ (6::(0::(Nil)))) @ (2::(Nil))) @ (Nil)))))
rotate (ZERO) (((((((((Nil) @ (3::(Nil))) @ (5::(Nil))) @ (Nil)) @ (Nil)) @ (0::(Nil))) @ (Nil)) @ (7::(Nil)))) = (3::(5::rotate (ZERO) (((((((Nil) @ (Nil)) @ (Nil)) @ (0::(Nil))) @ (Nil)) @ (7::(Nil))))))
rotate (ZERO) (((((((((Nil) @ (2::(Nil))) @ (2::(Nil))) @ (Nil)) @ (Nil)) @ (2::(Nil))) @ (3::(6::(Nil)))) @ (Nil))) = (2::(2::rotate (ZERO) (((((((Nil) @ (Nil)) @ (Nil)) @ (2::(Nil))) @ (3::(6::(Nil)))) @ (Nil)))))
Simplifying took 0.004179 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list2:any list), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Model : any1: 5, any2: 0, any3: 0, any4: 4, any5: 1, any6: 1, any7: 4, any_list2: (Nil)
Model : any1: 2, any2: 5, any3: 2, any4: 4, any5: 5, any6: 5, any7: 3, any_list2: (Nil)
Model : any1: 8, any2: 2, any3: 3, any4: 3, any5: 7, any6: 0, any7: 3, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (5::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (4::(Nil))) @ (1::(Nil))) @ (1::(Nil))) @ (4::(Nil)))) = (5::(0::rotate (len ((Nil))) ((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (4::(Nil))) @ (1::(Nil))) @ (1::(Nil))) @ (4::(Nil))))))
rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (2::(Nil))) @ (5::(Nil))) @ (2::(Nil))) @ (4::(Nil))) @ (5::(Nil))) @ (5::(Nil))) @ (3::(Nil)))) = (2::(5::rotate (len ((Nil))) ((((((((Nil) @ (Nil)) @ (2::(Nil))) @ (4::(Nil))) @ (5::(Nil))) @ (5::(Nil))) @ (3::(Nil))))))
rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (8::(Nil))) @ (2::(Nil))) @ (3::(Nil))) @ (3::(Nil))) @ (7::(Nil))) @ (0::(Nil))) @ (3::(Nil)))) = (8::(2::rotate (len ((Nil))) ((((((((Nil) @ (Nil)) @ (3::(Nil))) @ (3::(Nil))) @ (7::(Nil))) @ (0::(Nil))) @ (3::(Nil))))))
Simplifying took 0.005905 seconds
Result : true
advanced_generalize done


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any6 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 156


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any6 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list2:any list), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:18)
=================================================
Progress: 157


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any2(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 4
intro any3(rank:15)
intro any4(rank:15)
intro any5(rank:15)
intro any6(rank:15)
=================================================
Progress: 158


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any3(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 3
intro any4(rank:15)
intro any5(rank:15)
intro any6(rank:15)
=================================================
Progress: 159


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any4(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any) (any5:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro any5(rank:15)
intro any6(rank:15)
=================================================
Progress: 160


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any5(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any1 : any
any5 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any6(rank:15)
=================================================
Progress: 161


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any6(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any1 : any
any6 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any6
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg172:any list) (arg173:any list) (arg174:any list) (arg175:any list) (arg176:any list) (arg177:any list) (arg178:nat), rotate (arg178) ((((((((arg172 @ (any1::(Nil))) @ (any2::(Nil))) @ arg173) @ arg174) @ arg175) @ arg176) @ arg177)) = (any1::(any2::rotate (arg178) ((((((arg172 @ arg173) @ arg174) @ arg175) @ arg176) @ arg177))))
Model : any1: 6, any2: 7, arg172: (Nil), arg173: (1::(6::(Nil))), arg174: (Nil), arg175: (Nil), arg176: (Nil), arg177: (Nil), arg178: ZERO
Model : any1: 0, any2: 2, arg172: (Nil), arg173: (4::(Nil)), arg174: (Nil), arg175: (Nil), arg176: (Nil), arg177: (Nil), arg178: ZERO
Model : any1: 2, any2: 5, arg172: (Nil), arg173: (Nil), arg174: (Nil), arg175: (4::(Nil)), arg176: (Nil), arg177: (Nil), arg178: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) (((((((((Nil) @ (6::(Nil))) @ (7::(Nil))) @ (1::(6::(Nil)))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (6::(7::rotate (ZERO) (((((((Nil) @ (1::(6::(Nil)))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) (((((((((Nil) @ (0::(Nil))) @ (2::(Nil))) @ (4::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (0::(2::rotate (ZERO) (((((((Nil) @ (4::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) (((((((((Nil) @ (2::(Nil))) @ (5::(Nil))) @ (Nil)) @ (Nil)) @ (4::(Nil))) @ (Nil)) @ (Nil))) = (2::(5::rotate (ZERO) (((((((Nil) @ (Nil)) @ (Nil)) @ (4::(Nil))) @ (Nil)) @ (Nil)))))
Simplifying took 0.003049 seconds
Result : true
advanced_generalize done


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any1 : any
any6 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 162


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any1 : any
any6 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (arg172:any list) (arg173:any list) (arg174:any list) (arg175:any list) (arg176:any list) (arg177:any list) (arg178:nat), rotate (arg178) ((((((((arg172 @ (any1::(Nil))) @ (any2::(Nil))) @ arg173) @ arg174) @ arg175) @ arg176) @ arg177)) = (any1::(any2::rotate (arg178) ((((((arg172 @ arg173) @ arg174) @ arg175) @ arg176) @ arg177))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:18)
=================================================
Progress: 163


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any3(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 3
intro any4(rank:15)
intro any5(rank:15)
intro any6(rank:15)
=================================================
Progress: 164


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any4(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any) (any5:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro any5(rank:15)
intro any6(rank:15)
=================================================
Progress: 165


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any5(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any2 : any
any5 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any6(rank:15)
=================================================
Progress: 166


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any6(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any2 : any
any6 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any6
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg179:any list) (arg180:any list) (arg181:any list) (arg182:any list) (arg183:any list) (arg184:any list) (arg185:nat), rotate (arg185) ((((((((arg179 @ (any1::(Nil))) @ (any2::(Nil))) @ arg180) @ arg181) @ arg182) @ arg183) @ arg184)) = (any1::(any2::rotate (arg185) ((((((arg179 @ arg180) @ arg181) @ arg182) @ arg183) @ arg184))))
Model : any1: 7, any2: 0, arg179: (2::(Nil)), arg180: (Nil), arg181: (Nil), arg182: (Nil), arg183: (Nil), arg184: (Nil), arg185: ZERO
Model : any1: 5, any2: 6, arg179: (Nil), arg180: (Nil), arg181: (7::(Nil)), arg182: (Nil), arg183: (Nil), arg184: (Nil), arg185: ZERO
Model : any1: 0, any2: 8, arg179: (Nil), arg180: (Nil), arg181: (6::(Nil)), arg182: (Nil), arg183: (Nil), arg184: (Nil), arg185: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) (((((((((2::(Nil)) @ (7::(Nil))) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (7::(0::rotate (ZERO) (((((((2::(Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) (((((((((Nil) @ (5::(Nil))) @ (6::(Nil))) @ (Nil)) @ (7::(Nil))) @ (Nil)) @ (Nil)) @ (Nil))) = (5::(6::rotate (ZERO) (((((((Nil) @ (Nil)) @ (7::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) (((((((((Nil) @ (0::(Nil))) @ (8::(Nil))) @ (Nil)) @ (6::(Nil))) @ (Nil)) @ (Nil)) @ (Nil))) = (0::(8::rotate (ZERO) (((((((Nil) @ (Nil)) @ (6::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)))))
Simplifying took 0.002772 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list2:any list), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Model : any1: 3, any2: 5, any3: 2, any4: 3, any5: 6, any6: 5, any7: 3, any_list2: (7::(Nil))
Model : any1: 8, any2: 3, any3: 2, any4: 2, any5: 0, any6: 1, any7: 8, any_list2: (1::(Nil))
Model : any1: 4, any2: 3, any3: 2, any4: 6, any5: 8, any6: 8, any7: 8, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((7::(Nil)))) ((((((((((7::(Nil)) @ (Nil)) @ (3::(Nil))) @ (5::(Nil))) @ (2::(Nil))) @ (3::(Nil))) @ (6::(Nil))) @ (5::(Nil))) @ (3::(Nil)))) = (3::(5::rotate (len ((7::(Nil)))) ((((((((7::(Nil)) @ (Nil)) @ (2::(Nil))) @ (3::(Nil))) @ (6::(Nil))) @ (5::(Nil))) @ (3::(Nil))))))
rotate (len ((1::(Nil)))) ((((((((((1::(Nil)) @ (Nil)) @ (8::(Nil))) @ (3::(Nil))) @ (2::(Nil))) @ (2::(Nil))) @ (0::(Nil))) @ (1::(Nil))) @ (8::(Nil)))) = (8::(3::rotate (len ((1::(Nil)))) ((((((((1::(Nil)) @ (Nil)) @ (2::(Nil))) @ (2::(Nil))) @ (0::(Nil))) @ (1::(Nil))) @ (8::(Nil))))))
rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (4::(Nil))) @ (3::(Nil))) @ (2::(Nil))) @ (6::(Nil))) @ (8::(Nil))) @ (8::(Nil))) @ (8::(Nil)))) = (4::(3::rotate (len ((Nil))) ((((((((Nil) @ (Nil)) @ (2::(Nil))) @ (6::(Nil))) @ (8::(Nil))) @ (8::(Nil))) @ (8::(Nil))))))
Simplifying took 0.011000 seconds
Result : true
advanced_generalize done
=================================================
Progress: 167


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any4(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any5:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro any5(rank:15)
intro any6(rank:15)
=================================================
Progress: 168


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any5(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any3 : any
any5 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any6(rank:15)
=================================================
Progress: 169


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any6(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any3 : any
any6 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any6
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg186:any list) (arg187:any list) (arg188:any list) (arg189:any list) (arg190:any list) (arg191:any list) (arg192:nat), rotate (arg192) ((((((((arg186 @ (any1::(Nil))) @ (any2::(Nil))) @ arg187) @ arg188) @ arg189) @ arg190) @ arg191)) = (any1::(any2::rotate (arg192) ((((((arg186 @ arg187) @ arg188) @ arg189) @ arg190) @ arg191))))
Model : any1: 2, any2: 3, arg186: (Nil), arg187: (Nil), arg188: (Nil), arg189: (6::(Nil)), arg190: (Nil), arg191: (Nil), arg192: SUCC (ZERO)
Model : any1: 5, any2: 7, arg186: (Nil), arg187: (Nil), arg188: (Nil), arg189: (Nil), arg190: (Nil), arg191: (Nil), arg192: ZERO
Model : any1: 6, any2: 1, arg186: (Nil), arg187: (Nil), arg188: (Nil), arg189: (Nil), arg190: (Nil), arg191: (Nil), arg192: SUCC (ZERO)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (SUCC (ZERO)) (((((((((Nil) @ (2::(Nil))) @ (3::(Nil))) @ (Nil)) @ (Nil)) @ (6::(Nil))) @ (Nil)) @ (Nil))) = (2::(3::rotate (SUCC (ZERO)) (((((((Nil) @ (Nil)) @ (Nil)) @ (6::(Nil))) @ (Nil)) @ (Nil)))))
rotate (ZERO) (((((((((Nil) @ (5::(Nil))) @ (7::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (5::(7::rotate (ZERO) (((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (SUCC (ZERO)) (((((((((Nil) @ (6::(Nil))) @ (1::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (6::(1::rotate (SUCC (ZERO)) (((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
Simplifying took 0.002141 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list2:any list), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Model : any1: 7, any2: 7, any3: 5, any4: 3, any5: 7, any6: 3, any7: 1, any_list2: (Nil)
Model : any1: 4, any2: 0, any3: 6, any4: 2, any5: 5, any6: 6, any7: 1, any_list2: (Nil)
Model : any1: 7, any2: 2, any3: 8, any4: 7, any5: 1, any6: 7, any7: 2, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (7::(Nil))) @ (7::(Nil))) @ (5::(Nil))) @ (3::(Nil))) @ (7::(Nil))) @ (3::(Nil))) @ (1::(Nil)))) = (7::(7::rotate (len ((Nil))) ((((((((Nil) @ (Nil)) @ (5::(Nil))) @ (3::(Nil))) @ (7::(Nil))) @ (3::(Nil))) @ (1::(Nil))))))
rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (4::(Nil))) @ (0::(Nil))) @ (6::(Nil))) @ (2::(Nil))) @ (5::(Nil))) @ (6::(Nil))) @ (1::(Nil)))) = (4::(0::rotate (len ((Nil))) ((((((((Nil) @ (Nil)) @ (6::(Nil))) @ (2::(Nil))) @ (5::(Nil))) @ (6::(Nil))) @ (1::(Nil))))))
rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (7::(Nil))) @ (2::(Nil))) @ (8::(Nil))) @ (7::(Nil))) @ (1::(Nil))) @ (7::(Nil))) @ (2::(Nil)))) = (7::(2::rotate (len ((Nil))) ((((((((Nil) @ (Nil)) @ (8::(Nil))) @ (7::(Nil))) @ (1::(Nil))) @ (7::(Nil))) @ (2::(Nil))))))
Simplifying took 0.007079 seconds
Result : true
advanced_generalize done
=================================================
Progress: 170


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any5:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any5(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any4 : any
any5 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any6(rank:15)
=================================================
Progress: 171


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any5:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any6(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any4 : any
any6 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any5:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any4
intro any6
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg193:any list) (arg194:any list) (arg195:any list) (arg196:any list) (arg197:any list) (arg198:any list) (arg199:nat), rotate (arg199) ((((((((arg193 @ (any1::(Nil))) @ (any2::(Nil))) @ arg194) @ arg195) @ arg196) @ arg197) @ arg198)) = (any1::(any2::rotate (arg199) ((((((arg193 @ arg194) @ arg195) @ arg196) @ arg197) @ arg198))))
Model : any1: 3, any2: 0, arg193: (Nil), arg194: (Nil), arg195: (Nil), arg196: (Nil), arg197: (Nil), arg198: (Nil), arg199: ZERO
Model : any1: 5, any2: 0, arg193: (8::(Nil)), arg194: (Nil), arg195: (Nil), arg196: (Nil), arg197: (Nil), arg198: (Nil), arg199: ZERO
Model : any1: 1, any2: 3, arg193: (Nil), arg194: (Nil), arg195: (Nil), arg196: (Nil), arg197: (Nil), arg198: (Nil), arg199: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) (((((((((Nil) @ (3::(Nil))) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (3::(0::rotate (ZERO) (((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) (((((((((8::(Nil)) @ (5::(Nil))) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (5::(0::rotate (ZERO) (((((((8::(Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) (((((((((Nil) @ (1::(Nil))) @ (3::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (1::(3::rotate (ZERO) (((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
Simplifying took 0.001704 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list2:any list), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Model : any1: 6, any2: 6, any3: 0, any4: 8, any5: 6, any6: 0, any7: 7, any_list2: (4::(Nil))
Model : any1: 8, any2: 0, any3: 8, any4: 8, any5: 4, any6: 1, any7: 8, any_list2: (0::(Nil))
Model : any1: 6, any2: 0, any3: 4, any4: 5, any5: 4, any6: 2, any7: 0, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((4::(Nil)))) ((((((((((4::(Nil)) @ (Nil)) @ (6::(Nil))) @ (6::(Nil))) @ (0::(Nil))) @ (8::(Nil))) @ (6::(Nil))) @ (0::(Nil))) @ (7::(Nil)))) = (6::(6::rotate (len ((4::(Nil)))) ((((((((4::(Nil)) @ (Nil)) @ (0::(Nil))) @ (8::(Nil))) @ (6::(Nil))) @ (0::(Nil))) @ (7::(Nil))))))
rotate (len ((0::(Nil)))) ((((((((((0::(Nil)) @ (Nil)) @ (8::(Nil))) @ (0::(Nil))) @ (8::(Nil))) @ (8::(Nil))) @ (4::(Nil))) @ (1::(Nil))) @ (8::(Nil)))) = (8::(0::rotate (len ((0::(Nil)))) ((((((((0::(Nil)) @ (Nil)) @ (8::(Nil))) @ (8::(Nil))) @ (4::(Nil))) @ (1::(Nil))) @ (8::(Nil))))))
rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (6::(Nil))) @ (0::(Nil))) @ (4::(Nil))) @ (5::(Nil))) @ (4::(Nil))) @ (2::(Nil))) @ (0::(Nil)))) = (6::(0::rotate (len ((Nil))) ((((((((Nil) @ (Nil)) @ (4::(Nil))) @ (5::(Nil))) @ (4::(Nil))) @ (2::(Nil))) @ (0::(Nil))))))
Simplifying took 0.011240 seconds
Result : true
advanced_generalize done
=================================================
Progress: 172


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any5 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any6(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any5 : any
any6 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any5
intro any6
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg200:any list) (arg201:any list) (arg202:any list) (arg203:any list) (arg204:any list) (arg205:any list) (arg206:nat), rotate (arg206) ((((((((arg200 @ (any1::(Nil))) @ (any2::(Nil))) @ arg201) @ arg202) @ arg203) @ arg204) @ arg205)) = (any1::(any2::rotate (arg206) ((((((arg200 @ arg201) @ arg202) @ arg203) @ arg204) @ arg205))))
Model : any1: 1, any2: 3, arg200: (Nil), arg201: (Nil), arg202: (Nil), arg203: (Nil), arg204: (Nil), arg205: (Nil), arg206: ZERO
Model : any1: 1, any2: 3, arg200: (Nil), arg201: (Nil), arg202: (Nil), arg203: (Nil), arg204: (8::(Nil)), arg205: (Nil), arg206: ZERO
Model : any1: 2, any2: 0, arg200: (Nil), arg201: (Nil), arg202: (Nil), arg203: (Nil), arg204: (Nil), arg205: (Nil), arg206: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) (((((((((Nil) @ (1::(Nil))) @ (3::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (1::(3::rotate (ZERO) (((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) (((((((((Nil) @ (1::(Nil))) @ (3::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (8::(Nil))) @ (Nil))) = (1::(3::rotate (ZERO) (((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (8::(Nil))) @ (Nil)))))
rotate (ZERO) (((((((((Nil) @ (2::(Nil))) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (2::(0::rotate (ZERO) (((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
Simplifying took 0.001430 seconds
Result : true
advanced_generalize done


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any5 : any
any6 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 173


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any5 : any
any6 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (arg200:any list) (arg201:any list) (arg202:any list) (arg203:any list) (arg204:any list) (arg205:any list) (arg206:nat), rotate (arg206) ((((((((arg200 @ (any1::(Nil))) @ (any2::(Nil))) @ arg201) @ arg202) @ arg203) @ arg204) @ arg205)) = (any1::(any2::rotate (arg206) ((((((arg200 @ arg201) @ arg202) @ arg203) @ arg204) @ arg205))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:18)
=================================================
Progress: 174


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any3(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 3
intro any4(rank:15)
intro any5(rank:15)
intro any6(rank:15)
=================================================
Progress: 175


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any4(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any) (any5:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro any5(rank:15)
intro any6(rank:15)
=================================================
Progress: 176


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any5(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any1 : any
any2 : any
any5 : any
---------------------------------------
forall (any3:any) (any4:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any6(rank:15)
=================================================
Progress: 177


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any6(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any1 : any
any2 : any
any6 : any
---------------------------------------
forall (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any6
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg207:any list) (arg208:any list) (arg209:any list) (arg210:any list) (arg211:any list) (arg212:any list) (arg213:nat), rotate (arg213) ((((((((arg207 @ (any1::(Nil))) @ (any2::(Nil))) @ arg208) @ arg209) @ arg210) @ arg211) @ arg212)) = (any1::(any2::rotate (arg213) ((((((arg207 @ arg208) @ arg209) @ arg210) @ arg211) @ arg212))))
Model : any1: 8, any2: 4, arg207: (Nil), arg208: (Nil), arg209: (Nil), arg210: (0::(Nil)), arg211: (Nil), arg212: (Nil), arg213: ZERO
Model : any1: 1, any2: 0, arg207: (Nil), arg208: (Nil), arg209: (Nil), arg210: (Nil), arg211: (0::(Nil)), arg212: (6::(6::(Nil))), arg213: ZERO
Model : any1: 4, any2: 3, arg207: (Nil), arg208: (Nil), arg209: (Nil), arg210: (Nil), arg211: (Nil), arg212: (Nil), arg213: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) (((((((((Nil) @ (8::(Nil))) @ (4::(Nil))) @ (Nil)) @ (Nil)) @ (0::(Nil))) @ (Nil)) @ (Nil))) = (8::(4::rotate (ZERO) (((((((Nil) @ (Nil)) @ (Nil)) @ (0::(Nil))) @ (Nil)) @ (Nil)))))
rotate (ZERO) (((((((((Nil) @ (1::(Nil))) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (0::(Nil))) @ (6::(6::(Nil))))) = (1::(0::rotate (ZERO) (((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (0::(Nil))) @ (6::(6::(Nil)))))))
rotate (ZERO) (((((((((Nil) @ (4::(Nil))) @ (3::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (4::(3::rotate (ZERO) (((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
Simplifying took 0.001974 seconds
Result : true
advanced_generalize done


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any1 : any
any2 : any
any6 : any
---------------------------------------
forall (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 178


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any1 : any
any2 : any
any6 : any
---------------------------------------
forall (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (arg207:any list) (arg208:any list) (arg209:any list) (arg210:any list) (arg211:any list) (arg212:any list) (arg213:nat), rotate (arg213) ((((((((arg207 @ (any1::(Nil))) @ (any2::(Nil))) @ arg208) @ arg209) @ arg210) @ arg211) @ arg212)) = (any1::(any2::rotate (arg213) ((((((arg207 @ arg208) @ arg209) @ arg210) @ arg211) @ arg212))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:18)
=================================================
Progress: 179


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any4(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any) (any5:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro any5(rank:15)
intro any6(rank:15)
=================================================
Progress: 180


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any5(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any1 : any
any3 : any
any5 : any
---------------------------------------
forall (any2:any) (any4:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any6(rank:15)
=================================================
Progress: 181


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any6(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any1 : any
any3 : any
any6 : any
---------------------------------------
forall (any2:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any6
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg214:any list) (arg215:any list) (arg216:any list) (arg217:any list) (arg218:any list) (arg219:any list) (arg220:nat), rotate (arg220) ((((((((arg214 @ (any1::(Nil))) @ (any2::(Nil))) @ arg215) @ arg216) @ arg217) @ arg218) @ arg219)) = (any1::(any2::rotate (arg220) ((((((arg214 @ arg215) @ arg216) @ arg217) @ arg218) @ arg219))))
Model : any1: 0, any2: 8, arg214: (Nil), arg215: (Nil), arg216: (Nil), arg217: (Nil), arg218: (Nil), arg219: (Nil), arg220: SUCC (SUCC (ZERO))
Model : any1: 0, any2: 1, arg214: (Nil), arg215: (Nil), arg216: (Nil), arg217: (7::(Nil)), arg218: (6::(1::(Nil))), arg219: (Nil), arg220: ZERO
Model : any1: 4, any2: 5, arg214: (1::(Nil)), arg215: (Nil), arg216: (6::(Nil)), arg217: (1::(Nil)), arg218: (Nil), arg219: (Nil), arg220: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (SUCC (SUCC (ZERO))) (((((((((Nil) @ (0::(Nil))) @ (8::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (0::(8::rotate (SUCC (SUCC (ZERO))) (((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) (((((((((Nil) @ (0::(Nil))) @ (1::(Nil))) @ (Nil)) @ (Nil)) @ (7::(Nil))) @ (6::(1::(Nil)))) @ (Nil))) = (0::(1::rotate (ZERO) (((((((Nil) @ (Nil)) @ (Nil)) @ (7::(Nil))) @ (6::(1::(Nil)))) @ (Nil)))))
rotate (ZERO) (((((((((1::(Nil)) @ (4::(Nil))) @ (5::(Nil))) @ (Nil)) @ (6::(Nil))) @ (1::(Nil))) @ (Nil)) @ (Nil))) = (4::(5::rotate (ZERO) (((((((1::(Nil)) @ (Nil)) @ (6::(Nil))) @ (1::(Nil))) @ (Nil)) @ (Nil)))))
Simplifying took 0.003567 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list2:any list), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Model : any1: 8, any2: 6, any3: 6, any4: 6, any5: 2, any6: 1, any7: 4, any_list2: (Nil)
Model : any1: 4, any2: 7, any3: 3, any4: 5, any5: 8, any6: 1, any7: 3, any_list2: (Nil)
Model : any1: 5, any2: 8, any3: 8, any4: 0, any5: 8, any6: 4, any7: 0, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (8::(Nil))) @ (6::(Nil))) @ (6::(Nil))) @ (6::(Nil))) @ (2::(Nil))) @ (1::(Nil))) @ (4::(Nil)))) = (8::(6::rotate (len ((Nil))) ((((((((Nil) @ (Nil)) @ (6::(Nil))) @ (6::(Nil))) @ (2::(Nil))) @ (1::(Nil))) @ (4::(Nil))))))
rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (4::(Nil))) @ (7::(Nil))) @ (3::(Nil))) @ (5::(Nil))) @ (8::(Nil))) @ (1::(Nil))) @ (3::(Nil)))) = (4::(7::rotate (len ((Nil))) ((((((((Nil) @ (Nil)) @ (3::(Nil))) @ (5::(Nil))) @ (8::(Nil))) @ (1::(Nil))) @ (3::(Nil))))))
rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (5::(Nil))) @ (8::(Nil))) @ (8::(Nil))) @ (0::(Nil))) @ (8::(Nil))) @ (4::(Nil))) @ (0::(Nil)))) = (5::(8::rotate (len ((Nil))) ((((((((Nil) @ (Nil)) @ (8::(Nil))) @ (0::(Nil))) @ (8::(Nil))) @ (4::(Nil))) @ (0::(Nil))))))
Simplifying took 0.007203 seconds
Result : true
advanced_generalize done
=================================================
Progress: 182


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any) (any5:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any5(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any1 : any
any4 : any
any5 : any
---------------------------------------
forall (any2:any) (any3:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any6(rank:15)
=================================================
Progress: 183


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any) (any5:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any6(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any1 : any
any4 : any
any6 : any
---------------------------------------
forall (any2:any) (any3:any) (any5:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any4
intro any6
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg221:any list) (arg222:any list) (arg223:any list) (arg224:any list) (arg225:any list) (arg226:any list) (arg227:nat), rotate (arg227) ((((((((arg221 @ (any1::(Nil))) @ (any2::(Nil))) @ arg222) @ arg223) @ arg224) @ arg225) @ arg226)) = (any1::(any2::rotate (arg227) ((((((arg221 @ arg222) @ arg223) @ arg224) @ arg225) @ arg226))))
Model : any1: 1, any2: 8, arg221: (Nil), arg222: (Nil), arg223: (Nil), arg224: (0::(Nil)), arg225: (2::(Nil)), arg226: (Nil), arg227: ZERO
Model : any1: 5, any2: 2, arg221: (3::(Nil)), arg222: (Nil), arg223: (0::(Nil)), arg224: (Nil), arg225: (3::(2::(1::(Nil)))), arg226: (Nil), arg227: SUCC (ZERO)
Model : any1: 6, any2: 7, arg221: (Nil), arg222: (0::(Nil)), arg223: (4::(Nil)), arg224: (1::(Nil)), arg225: (5::(Nil)), arg226: (Nil), arg227: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) (((((((((Nil) @ (1::(Nil))) @ (8::(Nil))) @ (Nil)) @ (Nil)) @ (0::(Nil))) @ (2::(Nil))) @ (Nil))) = (1::(8::rotate (ZERO) (((((((Nil) @ (Nil)) @ (Nil)) @ (0::(Nil))) @ (2::(Nil))) @ (Nil)))))
rotate (SUCC (ZERO)) (((((((((3::(Nil)) @ (5::(Nil))) @ (2::(Nil))) @ (Nil)) @ (0::(Nil))) @ (Nil)) @ (3::(2::(1::(Nil))))) @ (Nil))) = (5::(2::rotate (SUCC (ZERO)) (((((((3::(Nil)) @ (Nil)) @ (0::(Nil))) @ (Nil)) @ (3::(2::(1::(Nil))))) @ (Nil)))))
rotate (ZERO) (((((((((Nil) @ (6::(Nil))) @ (7::(Nil))) @ (0::(Nil))) @ (4::(Nil))) @ (1::(Nil))) @ (5::(Nil))) @ (Nil))) = (6::(7::rotate (ZERO) (((((((Nil) @ (0::(Nil))) @ (4::(Nil))) @ (1::(Nil))) @ (5::(Nil))) @ (Nil)))))
Simplifying took 0.005087 seconds
Result : true
advanced_generalize done


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any1 : any
any4 : any
any6 : any
---------------------------------------
forall (any2:any) (any3:any) (any5:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 184


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any1 : any
any4 : any
any6 : any
---------------------------------------
forall (any2:any) (any3:any) (any5:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (arg221:any list) (arg222:any list) (arg223:any list) (arg224:any list) (arg225:any list) (arg226:any list) (arg227:nat), rotate (arg227) ((((((((arg221 @ (any1::(Nil))) @ (any2::(Nil))) @ arg222) @ arg223) @ arg224) @ arg225) @ arg226)) = (any1::(any2::rotate (arg227) ((((((arg221 @ arg222) @ arg223) @ arg224) @ arg225) @ arg226))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:18)
=================================================
Progress: 185


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any1 : any
any5 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any6(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any1 : any
any5 : any
any6 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any5
intro any6
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg228:any list) (arg229:any list) (arg230:any list) (arg231:any list) (arg232:any list) (arg233:any list) (arg234:nat), rotate (arg234) ((((((((arg228 @ (any1::(Nil))) @ (any2::(Nil))) @ arg229) @ arg230) @ arg231) @ arg232) @ arg233)) = (any1::(any2::rotate (arg234) ((((((arg228 @ arg229) @ arg230) @ arg231) @ arg232) @ arg233))))
Model : any1: 0, any2: 5, arg228: (Nil), arg229: (Nil), arg230: (4::(Nil)), arg231: (4::(Nil)), arg232: (Nil), arg233: (Nil), arg234: ZERO
Model : any1: 8, any2: 7, arg228: (Nil), arg229: (Nil), arg230: (Nil), arg231: (Nil), arg232: (Nil), arg233: (Nil), arg234: ZERO
Model : any1: 3, any2: 0, arg228: (3::(Nil)), arg229: (Nil), arg230: (Nil), arg231: (Nil), arg232: (Nil), arg233: (Nil), arg234: SUCC (ZERO)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) (((((((((Nil) @ (0::(Nil))) @ (5::(Nil))) @ (Nil)) @ (4::(Nil))) @ (4::(Nil))) @ (Nil)) @ (Nil))) = (0::(5::rotate (ZERO) (((((((Nil) @ (Nil)) @ (4::(Nil))) @ (4::(Nil))) @ (Nil)) @ (Nil)))))
rotate (ZERO) (((((((((Nil) @ (8::(Nil))) @ (7::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (8::(7::rotate (ZERO) (((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (SUCC (ZERO)) (((((((((3::(Nil)) @ (3::(Nil))) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (3::(0::rotate (SUCC (ZERO)) (((((((3::(Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
Simplifying took 0.002781 seconds
Result : true
advanced_generalize done


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any1 : any
any5 : any
any6 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 186


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any1 : any
any5 : any
any6 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (arg228:any list) (arg229:any list) (arg230:any list) (arg231:any list) (arg232:any list) (arg233:any list) (arg234:nat), rotate (arg234) ((((((((arg228 @ (any1::(Nil))) @ (any2::(Nil))) @ arg229) @ arg230) @ arg231) @ arg232) @ arg233)) = (any1::(any2::rotate (arg234) ((((((arg228 @ arg229) @ arg230) @ arg231) @ arg232) @ arg233))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:18)
=================================================
Progress: 187


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any4(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any5:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro any5(rank:15)
intro any6(rank:15)
=================================================
Progress: 188


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any5(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any2 : any
any3 : any
any5 : any
---------------------------------------
forall (any1:any) (any4:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any6(rank:15)
=================================================
Progress: 189


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any6(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any2 : any
any3 : any
any6 : any
---------------------------------------
forall (any1:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any6
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg235:any list) (arg236:any list) (arg237:any list) (arg238:any list) (arg239:any list) (arg240:any list) (arg241:nat), rotate (arg241) ((((((((arg235 @ (any1::(Nil))) @ (any2::(Nil))) @ arg236) @ arg237) @ arg238) @ arg239) @ arg240)) = (any1::(any2::rotate (arg241) ((((((arg235 @ arg236) @ arg237) @ arg238) @ arg239) @ arg240))))
Model : any1: 4, any2: 0, arg235: (Nil), arg236: (8::(Nil)), arg237: (Nil), arg238: (Nil), arg239: (Nil), arg240: (Nil), arg241: ZERO
Model : any1: 8, any2: 4, arg235: (Nil), arg236: (Nil), arg237: (Nil), arg238: (0::(6::(Nil))), arg239: (6::(Nil)), arg240: (Nil), arg241: ZERO
Model : any1: 4, any2: 1, arg235: (4::(Nil)), arg236: (Nil), arg237: (Nil), arg238: (0::(0::(0::(Nil)))), arg239: (Nil), arg240: (Nil), arg241: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) (((((((((Nil) @ (4::(Nil))) @ (0::(Nil))) @ (8::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (4::(0::rotate (ZERO) (((((((Nil) @ (8::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) (((((((((Nil) @ (8::(Nil))) @ (4::(Nil))) @ (Nil)) @ (Nil)) @ (0::(6::(Nil)))) @ (6::(Nil))) @ (Nil))) = (8::(4::rotate (ZERO) (((((((Nil) @ (Nil)) @ (Nil)) @ (0::(6::(Nil)))) @ (6::(Nil))) @ (Nil)))))
rotate (ZERO) (((((((((4::(Nil)) @ (4::(Nil))) @ (1::(Nil))) @ (Nil)) @ (Nil)) @ (0::(0::(0::(Nil))))) @ (Nil)) @ (Nil))) = (4::(1::rotate (ZERO) (((((((4::(Nil)) @ (Nil)) @ (Nil)) @ (0::(0::(0::(Nil))))) @ (Nil)) @ (Nil)))))
Simplifying took 0.003698 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list2:any list), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Model : any1: 2, any2: 1, any3: 6, any4: 0, any5: 2, any6: 5, any7: 6, any_list2: (Nil)
Model : any1: 1, any2: 7, any3: 0, any4: 0, any5: 8, any6: 2, any7: 0, any_list2: (Nil)
Model : any1: 8, any2: 7, any3: 6, any4: 2, any5: 6, any6: 5, any7: 2, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (2::(Nil))) @ (1::(Nil))) @ (6::(Nil))) @ (0::(Nil))) @ (2::(Nil))) @ (5::(Nil))) @ (6::(Nil)))) = (2::(1::rotate (len ((Nil))) ((((((((Nil) @ (Nil)) @ (6::(Nil))) @ (0::(Nil))) @ (2::(Nil))) @ (5::(Nil))) @ (6::(Nil))))))
rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (1::(Nil))) @ (7::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (8::(Nil))) @ (2::(Nil))) @ (0::(Nil)))) = (1::(7::rotate (len ((Nil))) ((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (0::(Nil))) @ (8::(Nil))) @ (2::(Nil))) @ (0::(Nil))))))
rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (8::(Nil))) @ (7::(Nil))) @ (6::(Nil))) @ (2::(Nil))) @ (6::(Nil))) @ (5::(Nil))) @ (2::(Nil)))) = (8::(7::rotate (len ((Nil))) ((((((((Nil) @ (Nil)) @ (6::(Nil))) @ (2::(Nil))) @ (6::(Nil))) @ (5::(Nil))) @ (2::(Nil))))))
Simplifying took 0.006325 seconds
Result : true
advanced_generalize done
=================================================
Progress: 190


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any) (any5:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any5(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any2 : any
any4 : any
any5 : any
---------------------------------------
forall (any1:any) (any3:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any6(rank:15)
=================================================
Progress: 191


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any) (any5:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any6(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any2 : any
any4 : any
any6 : any
---------------------------------------
forall (any1:any) (any3:any) (any5:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any4
intro any6
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg242:any list) (arg243:any list) (arg244:any list) (arg245:any list) (arg246:any list) (arg247:any list) (arg248:nat), rotate (arg248) ((((((((arg242 @ (any1::(Nil))) @ (any2::(Nil))) @ arg243) @ arg244) @ arg245) @ arg246) @ arg247)) = (any1::(any2::rotate (arg248) ((((((arg242 @ arg243) @ arg244) @ arg245) @ arg246) @ arg247))))
Model : any1: 4, any2: 8, arg242: (6::(Nil)), arg243: (Nil), arg244: (Nil), arg245: (Nil), arg246: (4::(Nil)), arg247: (Nil), arg248: SUCC (ZERO)
Model : any1: 8, any2: 0, arg242: (Nil), arg243: (Nil), arg244: (Nil), arg245: (Nil), arg246: (Nil), arg247: (Nil), arg248: ZERO
Model : any1: 5, any2: 5, arg242: (5::(8::(Nil))), arg243: (Nil), arg244: (Nil), arg245: (Nil), arg246: (Nil), arg247: (Nil), arg248: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (SUCC (ZERO)) (((((((((6::(Nil)) @ (4::(Nil))) @ (8::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (4::(Nil))) @ (Nil))) = (4::(8::rotate (SUCC (ZERO)) (((((((6::(Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (4::(Nil))) @ (Nil)))))
rotate (ZERO) (((((((((Nil) @ (8::(Nil))) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (8::(0::rotate (ZERO) (((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) (((((((((5::(8::(Nil))) @ (5::(Nil))) @ (5::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (5::(5::rotate (ZERO) (((((((5::(8::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
Simplifying took 0.004415 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list2:any list), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Model : any1: 2, any2: 2, any3: 8, any4: 8, any5: 2, any6: 0, any7: 0, any_list2: (Nil)
Model : any1: 1, any2: 4, any3: 4, any4: 8, any5: 4, any6: 8, any7: 0, any_list2: (Nil)
Model : any1: 1, any2: 2, any3: 4, any4: 6, any5: 3, any6: 6, any7: 4, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (2::(Nil))) @ (2::(Nil))) @ (8::(Nil))) @ (8::(Nil))) @ (2::(Nil))) @ (0::(Nil))) @ (0::(Nil)))) = (2::(2::rotate (len ((Nil))) ((((((((Nil) @ (Nil)) @ (8::(Nil))) @ (8::(Nil))) @ (2::(Nil))) @ (0::(Nil))) @ (0::(Nil))))))
rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (1::(Nil))) @ (4::(Nil))) @ (4::(Nil))) @ (8::(Nil))) @ (4::(Nil))) @ (8::(Nil))) @ (0::(Nil)))) = (1::(4::rotate (len ((Nil))) ((((((((Nil) @ (Nil)) @ (4::(Nil))) @ (8::(Nil))) @ (4::(Nil))) @ (8::(Nil))) @ (0::(Nil))))))
rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (1::(Nil))) @ (2::(Nil))) @ (4::(Nil))) @ (6::(Nil))) @ (3::(Nil))) @ (6::(Nil))) @ (4::(Nil)))) = (1::(2::rotate (len ((Nil))) ((((((((Nil) @ (Nil)) @ (4::(Nil))) @ (6::(Nil))) @ (3::(Nil))) @ (6::(Nil))) @ (4::(Nil))))))
Simplifying took 0.006821 seconds
Result : true
advanced_generalize done
=================================================
Progress: 192


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any2 : any
any5 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any6(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any2 : any
any5 : any
any6 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any5
intro any6
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg249:any list) (arg250:any list) (arg251:any list) (arg252:any list) (arg253:any list) (arg254:any list) (arg255:nat), rotate (arg255) ((((((((arg249 @ (any1::(Nil))) @ (any2::(Nil))) @ arg250) @ arg251) @ arg252) @ arg253) @ arg254)) = (any1::(any2::rotate (arg255) ((((((arg249 @ arg250) @ arg251) @ arg252) @ arg253) @ arg254))))
Model : any1: 6, any2: 0, arg249: (Nil), arg250: (Nil), arg251: (Nil), arg252: (Nil), arg253: (Nil), arg254: (Nil), arg255: ZERO
Model : any1: 7, any2: 6, arg249: (Nil), arg250: (Nil), arg251: (4::(7::(Nil))), arg252: (Nil), arg253: (3::(Nil)), arg254: (Nil), arg255: ZERO
Model : any1: 0, any2: 2, arg249: (Nil), arg250: (Nil), arg251: (7::(Nil)), arg252: (Nil), arg253: (Nil), arg254: (Nil), arg255: SUCC (ZERO)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) (((((((((Nil) @ (6::(Nil))) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (6::(0::rotate (ZERO) (((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) (((((((((Nil) @ (7::(Nil))) @ (6::(Nil))) @ (Nil)) @ (4::(7::(Nil)))) @ (Nil)) @ (3::(Nil))) @ (Nil))) = (7::(6::rotate (ZERO) (((((((Nil) @ (Nil)) @ (4::(7::(Nil)))) @ (Nil)) @ (3::(Nil))) @ (Nil)))))
rotate (SUCC (ZERO)) (((((((((Nil) @ (0::(Nil))) @ (2::(Nil))) @ (Nil)) @ (7::(Nil))) @ (Nil)) @ (Nil)) @ (Nil))) = (0::(2::rotate (SUCC (ZERO)) (((((((Nil) @ (Nil)) @ (7::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)))))
Simplifying took 0.003082 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list2:any list), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Model : any1: 6, any2: 2, any3: 0, any4: 5, any5: 8, any6: 3, any7: 4, any_list2: (Nil)
Model : any1: 6, any2: 1, any3: 5, any4: 2, any5: 8, any6: 8, any7: 3, any_list2: (Nil)
Model : any1: 1, any2: 6, any3: 6, any4: 5, any5: 0, any6: 5, any7: 7, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (6::(Nil))) @ (2::(Nil))) @ (0::(Nil))) @ (5::(Nil))) @ (8::(Nil))) @ (3::(Nil))) @ (4::(Nil)))) = (6::(2::rotate (len ((Nil))) ((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (5::(Nil))) @ (8::(Nil))) @ (3::(Nil))) @ (4::(Nil))))))
rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (6::(Nil))) @ (1::(Nil))) @ (5::(Nil))) @ (2::(Nil))) @ (8::(Nil))) @ (8::(Nil))) @ (3::(Nil)))) = (6::(1::rotate (len ((Nil))) ((((((((Nil) @ (Nil)) @ (5::(Nil))) @ (2::(Nil))) @ (8::(Nil))) @ (8::(Nil))) @ (3::(Nil))))))
rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (1::(Nil))) @ (6::(Nil))) @ (6::(Nil))) @ (5::(Nil))) @ (0::(Nil))) @ (5::(Nil))) @ (7::(Nil)))) = (1::(6::rotate (len ((Nil))) ((((((((Nil) @ (Nil)) @ (6::(Nil))) @ (5::(Nil))) @ (0::(Nil))) @ (5::(Nil))) @ (7::(Nil))))))
Simplifying took 0.006822 seconds
Result : true
advanced_generalize done
=================================================
Progress: 193


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any5:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any5(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any3 : any
any4 : any
any5 : any
---------------------------------------
forall (any1:any) (any2:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any6(rank:15)
=================================================
Progress: 194


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any5:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any6(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any3 : any
any4 : any
any6 : any
---------------------------------------
forall (any1:any) (any2:any) (any5:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any4
intro any6
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg256:any list) (arg257:any list) (arg258:any list) (arg259:any list) (arg260:any list) (arg261:any list) (arg262:nat), rotate (arg262) ((((((((arg256 @ (any1::(Nil))) @ (any2::(Nil))) @ arg257) @ arg258) @ arg259) @ arg260) @ arg261)) = (any1::(any2::rotate (arg262) ((((((arg256 @ arg257) @ arg258) @ arg259) @ arg260) @ arg261))))
Model : any1: 0, any2: 7, arg256: (Nil), arg257: (1::(Nil)), arg258: (4::(Nil)), arg259: (Nil), arg260: (8::(Nil)), arg261: (Nil), arg262: ZERO
Model : any1: 3, any2: 0, arg256: (Nil), arg257: (Nil), arg258: (Nil), arg259: (Nil), arg260: (Nil), arg261: (Nil), arg262: ZERO
Model : any1: 0, any2: 0, arg256: (4::(Nil)), arg257: (Nil), arg258: (Nil), arg259: (Nil), arg260: (Nil), arg261: (5::(Nil)), arg262: SUCC (ZERO)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) (((((((((Nil) @ (0::(Nil))) @ (7::(Nil))) @ (1::(Nil))) @ (4::(Nil))) @ (Nil)) @ (8::(Nil))) @ (Nil))) = (0::(7::rotate (ZERO) (((((((Nil) @ (1::(Nil))) @ (4::(Nil))) @ (Nil)) @ (8::(Nil))) @ (Nil)))))
rotate (ZERO) (((((((((Nil) @ (3::(Nil))) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (3::(0::rotate (ZERO) (((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (SUCC (ZERO)) (((((((((4::(Nil)) @ (0::(Nil))) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (5::(Nil)))) = (0::(0::rotate (SUCC (ZERO)) (((((((4::(Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (5::(Nil))))))
Simplifying took 0.003146 seconds
Result : true
advanced_generalize done


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any3 : any
any4 : any
any6 : any
---------------------------------------
forall (any1:any) (any2:any) (any5:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 195


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any3 : any
any4 : any
any6 : any
---------------------------------------
forall (any1:any) (any2:any) (any5:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (arg256:any list) (arg257:any list) (arg258:any list) (arg259:any list) (arg260:any list) (arg261:any list) (arg262:nat), rotate (arg262) ((((((((arg256 @ (any1::(Nil))) @ (any2::(Nil))) @ arg257) @ arg258) @ arg259) @ arg260) @ arg261)) = (any1::(any2::rotate (arg262) ((((((arg256 @ arg257) @ arg258) @ arg259) @ arg260) @ arg261))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:18)
=================================================
Progress: 196


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any3 : any
any5 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any6(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any3 : any
any5 : any
any6 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any5
intro any6
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg263:any list) (arg264:any list) (arg265:any list) (arg266:any list) (arg267:any list) (arg268:any list) (arg269:nat), rotate (arg269) ((((((((arg263 @ (any1::(Nil))) @ (any2::(Nil))) @ arg264) @ arg265) @ arg266) @ arg267) @ arg268)) = (any1::(any2::rotate (arg269) ((((((arg263 @ arg264) @ arg265) @ arg266) @ arg267) @ arg268))))
Model : any1: 2, any2: 0, arg263: (Nil), arg264: (Nil), arg265: (0::(Nil)), arg266: (Nil), arg267: (0::(Nil)), arg268: (Nil), arg269: ZERO
Model : any1: 5, any2: 3, arg263: (4::(6::(Nil))), arg264: (Nil), arg265: (Nil), arg266: (Nil), arg267: (8::(Nil)), arg268: (Nil), arg269: ZERO
Model : any1: 3, any2: 7, arg263: (1::(Nil)), arg264: (Nil), arg265: (Nil), arg266: (0::(5::(Nil))), arg267: (Nil), arg268: (Nil), arg269: SUCC (ZERO)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) (((((((((Nil) @ (2::(Nil))) @ (0::(Nil))) @ (Nil)) @ (0::(Nil))) @ (Nil)) @ (0::(Nil))) @ (Nil))) = (2::(0::rotate (ZERO) (((((((Nil) @ (Nil)) @ (0::(Nil))) @ (Nil)) @ (0::(Nil))) @ (Nil)))))
rotate (ZERO) (((((((((4::(6::(Nil))) @ (5::(Nil))) @ (3::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (8::(Nil))) @ (Nil))) = (5::(3::rotate (ZERO) (((((((4::(6::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (8::(Nil))) @ (Nil)))))
rotate (SUCC (ZERO)) (((((((((1::(Nil)) @ (3::(Nil))) @ (7::(Nil))) @ (Nil)) @ (Nil)) @ (0::(5::(Nil)))) @ (Nil)) @ (Nil))) = (3::(7::rotate (SUCC (ZERO)) (((((((1::(Nil)) @ (Nil)) @ (Nil)) @ (0::(5::(Nil)))) @ (Nil)) @ (Nil)))))
Simplifying took 0.004824 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list2:any list), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Model : any1: 0, any2: 8, any3: 4, any4: 0, any5: 4, any6: 2, any7: 5, any_list2: (Nil)
Model : any1: 2, any2: 6, any3: 4, any4: 7, any5: 6, any6: 7, any7: 7, any_list2: (Nil)
Model : any1: 6, any2: 0, any3: 8, any4: 5, any5: 7, any6: 4, any7: 5, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (8::(Nil))) @ (4::(Nil))) @ (0::(Nil))) @ (4::(Nil))) @ (2::(Nil))) @ (5::(Nil)))) = (0::(8::rotate (len ((Nil))) ((((((((Nil) @ (Nil)) @ (4::(Nil))) @ (0::(Nil))) @ (4::(Nil))) @ (2::(Nil))) @ (5::(Nil))))))
rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (2::(Nil))) @ (6::(Nil))) @ (4::(Nil))) @ (7::(Nil))) @ (6::(Nil))) @ (7::(Nil))) @ (7::(Nil)))) = (2::(6::rotate (len ((Nil))) ((((((((Nil) @ (Nil)) @ (4::(Nil))) @ (7::(Nil))) @ (6::(Nil))) @ (7::(Nil))) @ (7::(Nil))))))
rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (6::(Nil))) @ (0::(Nil))) @ (8::(Nil))) @ (5::(Nil))) @ (7::(Nil))) @ (4::(Nil))) @ (5::(Nil)))) = (6::(0::rotate (len ((Nil))) ((((((((Nil) @ (Nil)) @ (8::(Nil))) @ (5::(Nil))) @ (7::(Nil))) @ (4::(Nil))) @ (5::(Nil))))))
Simplifying took 0.007136 seconds
Result : true
advanced_generalize done
=================================================
Progress: 197


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any4 : any
any5 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any6(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any4 : any
any5 : any
any6 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any4
intro any5
intro any6
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg270:any list) (arg271:any list) (arg272:any list) (arg273:any list) (arg274:any list) (arg275:any list) (arg276:nat), rotate (arg276) ((((((((arg270 @ (any1::(Nil))) @ (any2::(Nil))) @ arg271) @ arg272) @ arg273) @ arg274) @ arg275)) = (any1::(any2::rotate (arg276) ((((((arg270 @ arg271) @ arg272) @ arg273) @ arg274) @ arg275))))
Model : any1: 1, any2: 3, arg270: (Nil), arg271: (Nil), arg272: (Nil), arg273: (Nil), arg274: (Nil), arg275: (0::(Nil)), arg276: SUCC (SUCC (SUCC (ZERO)))
Model : any1: 1, any2: 3, arg270: (Nil), arg271: (Nil), arg272: (1::(Nil)), arg273: (Nil), arg274: (0::(Nil)), arg275: (7::(Nil)), arg276: ZERO
Model : any1: 0, any2: 8, arg270: (Nil), arg271: (Nil), arg272: (Nil), arg273: (Nil), arg274: (Nil), arg275: (Nil), arg276: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (SUCC (SUCC (SUCC (ZERO)))) (((((((((Nil) @ (1::(Nil))) @ (3::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (0::(Nil)))) = (1::(3::rotate (SUCC (SUCC (SUCC (ZERO)))) (((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (0::(Nil))))))
rotate (ZERO) (((((((((Nil) @ (1::(Nil))) @ (3::(Nil))) @ (Nil)) @ (1::(Nil))) @ (Nil)) @ (0::(Nil))) @ (7::(Nil)))) = (1::(3::rotate (ZERO) (((((((Nil) @ (Nil)) @ (1::(Nil))) @ (Nil)) @ (0::(Nil))) @ (7::(Nil))))))
rotate (ZERO) (((((((((Nil) @ (0::(Nil))) @ (8::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (0::(8::rotate (ZERO) (((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
Simplifying took 0.002154 seconds
Result : true
advanced_generalize done


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any4 : any
any5 : any
any6 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 198


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any4 : any
any5 : any
any6 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (arg270:any list) (arg271:any list) (arg272:any list) (arg273:any list) (arg274:any list) (arg275:any list) (arg276:nat), rotate (arg276) ((((((((arg270 @ (any1::(Nil))) @ (any2::(Nil))) @ arg271) @ arg272) @ arg273) @ arg274) @ arg275)) = (any1::(any2::rotate (arg276) ((((((arg270 @ arg271) @ arg272) @ arg273) @ arg274) @ arg275))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:18)
=================================================
Progress: 199


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any4(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any5:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 2
intro any5(rank:15)
intro any6(rank:15)
=================================================
Progress: 200


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any5(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any1 : any
any2 : any
any3 : any
any5 : any
---------------------------------------
forall (any4:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any6(rank:15)
=================================================
Progress: 201


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any6(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any1 : any
any2 : any
any3 : any
any6 : any
---------------------------------------
forall (any4:any) (any5:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any6
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg277:any list) (arg278:any list) (arg279:any list) (arg280:any list) (arg281:any list) (arg282:any list) (arg283:nat), rotate (arg283) ((((((((arg277 @ (any1::(Nil))) @ (any2::(Nil))) @ arg278) @ arg279) @ arg280) @ arg281) @ arg282)) = (any1::(any2::rotate (arg283) ((((((arg277 @ arg278) @ arg279) @ arg280) @ arg281) @ arg282))))
Model : any1: 6, any2: 5, arg277: (Nil), arg278: (Nil), arg279: (Nil), arg280: (Nil), arg281: (Nil), arg282: (0::(2::(7::(Nil)))), arg283: ZERO
Model : any1: 0, any2: 6, arg277: (Nil), arg278: (Nil), arg279: (Nil), arg280: (Nil), arg281: (Nil), arg282: (Nil), arg283: ZERO
Model : any1: 4, any2: 2, arg277: (Nil), arg278: (4::(Nil)), arg279: (Nil), arg280: (Nil), arg281: (Nil), arg282: (4::(Nil)), arg283: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) (((((((((Nil) @ (6::(Nil))) @ (5::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (0::(2::(7::(Nil)))))) = (6::(5::rotate (ZERO) (((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (0::(2::(7::(Nil))))))))
rotate (ZERO) (((((((((Nil) @ (0::(Nil))) @ (6::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (0::(6::rotate (ZERO) (((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) (((((((((Nil) @ (4::(Nil))) @ (2::(Nil))) @ (4::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (4::(Nil)))) = (4::(2::rotate (ZERO) (((((((Nil) @ (4::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (4::(Nil))))))
Simplifying took 0.002173 seconds
Result : true
advanced_generalize done


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any1 : any
any2 : any
any3 : any
any6 : any
---------------------------------------
forall (any4:any) (any5:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 202


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any1 : any
any2 : any
any3 : any
any6 : any
---------------------------------------
forall (any4:any) (any5:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (arg277:any list) (arg278:any list) (arg279:any list) (arg280:any list) (arg281:any list) (arg282:any list) (arg283:nat), rotate (arg283) ((((((((arg277 @ (any1::(Nil))) @ (any2::(Nil))) @ arg278) @ arg279) @ arg280) @ arg281) @ arg282)) = (any1::(any2::rotate (arg283) ((((((arg277 @ arg278) @ arg279) @ arg280) @ arg281) @ arg282))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:18)
=================================================
Progress: 203


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any) (any5:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any5(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any1 : any
any2 : any
any4 : any
any5 : any
---------------------------------------
forall (any3:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any6(rank:15)
=================================================
Progress: 204


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any) (any5:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any6(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any1 : any
any2 : any
any4 : any
any6 : any
---------------------------------------
forall (any3:any) (any5:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any4
intro any6
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg284:any list) (arg285:any list) (arg286:any list) (arg287:any list) (arg288:any list) (arg289:any list) (arg290:nat), rotate (arg290) ((((((((arg284 @ (any1::(Nil))) @ (any2::(Nil))) @ arg285) @ arg286) @ arg287) @ arg288) @ arg289)) = (any1::(any2::rotate (arg290) ((((((arg284 @ arg285) @ arg286) @ arg287) @ arg288) @ arg289))))
Model : any1: 7, any2: 0, arg284: (Nil), arg285: (Nil), arg286: (5::(Nil)), arg287: (Nil), arg288: (Nil), arg289: (6::(Nil)), arg290: SUCC (ZERO)
Model : any1: 0, any2: 7, arg284: (3::(Nil)), arg285: (Nil), arg286: (4::(0::(Nil))), arg287: (Nil), arg288: (Nil), arg289: (Nil), arg290: ZERO
Model : any1: 8, any2: 8, arg284: (Nil), arg285: (Nil), arg286: (4::(Nil)), arg287: (Nil), arg288: (Nil), arg289: (Nil), arg290: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (SUCC (ZERO)) (((((((((Nil) @ (7::(Nil))) @ (0::(Nil))) @ (Nil)) @ (5::(Nil))) @ (Nil)) @ (Nil)) @ (6::(Nil)))) = (7::(0::rotate (SUCC (ZERO)) (((((((Nil) @ (Nil)) @ (5::(Nil))) @ (Nil)) @ (Nil)) @ (6::(Nil))))))
rotate (ZERO) (((((((((3::(Nil)) @ (0::(Nil))) @ (7::(Nil))) @ (Nil)) @ (4::(0::(Nil)))) @ (Nil)) @ (Nil)) @ (Nil))) = (0::(7::rotate (ZERO) (((((((3::(Nil)) @ (Nil)) @ (4::(0::(Nil)))) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) (((((((((Nil) @ (8::(Nil))) @ (8::(Nil))) @ (Nil)) @ (4::(Nil))) @ (Nil)) @ (Nil)) @ (Nil))) = (8::(8::rotate (ZERO) (((((((Nil) @ (Nil)) @ (4::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)))))
Simplifying took 0.004043 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list2:any list), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Model : any1: 0, any2: 0, any3: 0, any4: 1, any5: 1, any6: 7, any7: 6, any_list2: (Nil)
Model : any1: 8, any2: 4, any3: 0, any4: 5, any5: 0, any6: 0, any7: 5, any_list2: (Nil)
Model : any1: 1, any2: 5, any3: 0, any4: 5, any5: 2, any6: 7, any7: 3, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (1::(Nil))) @ (1::(Nil))) @ (7::(Nil))) @ (6::(Nil)))) = (0::(0::rotate (len ((Nil))) ((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (1::(Nil))) @ (1::(Nil))) @ (7::(Nil))) @ (6::(Nil))))))
rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (8::(Nil))) @ (4::(Nil))) @ (0::(Nil))) @ (5::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (5::(Nil)))) = (8::(4::rotate (len ((Nil))) ((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (5::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (5::(Nil))))))
rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (1::(Nil))) @ (5::(Nil))) @ (0::(Nil))) @ (5::(Nil))) @ (2::(Nil))) @ (7::(Nil))) @ (3::(Nil)))) = (1::(5::rotate (len ((Nil))) ((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (5::(Nil))) @ (2::(Nil))) @ (7::(Nil))) @ (3::(Nil))))))
Simplifying took 0.005292 seconds
Result : true
advanced_generalize done
=================================================
Progress: 205


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any1 : any
any2 : any
any5 : any
---------------------------------------
forall (any3:any) (any4:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any6(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any1 : any
any2 : any
any5 : any
any6 : any
---------------------------------------
forall (any3:any) (any4:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any5
intro any6
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg291:any list) (arg292:any list) (arg293:any list) (arg294:any list) (arg295:any list) (arg296:any list) (arg297:nat), rotate (arg297) ((((((((arg291 @ (any1::(Nil))) @ (any2::(Nil))) @ arg292) @ arg293) @ arg294) @ arg295) @ arg296)) = (any1::(any2::rotate (arg297) ((((((arg291 @ arg292) @ arg293) @ arg294) @ arg295) @ arg296))))
Model : any1: 0, any2: 3, arg291: (Nil), arg292: (Nil), arg293: (Nil), arg294: (Nil), arg295: (Nil), arg296: (Nil), arg297: SUCC (ZERO)
Model : any1: 1, any2: 1, arg291: (Nil), arg292: (Nil), arg293: (Nil), arg294: (Nil), arg295: (Nil), arg296: (Nil), arg297: SUCC (ZERO)
Model : any1: 3, any2: 1, arg291: (Nil), arg292: (Nil), arg293: (Nil), arg294: (4::(Nil)), arg295: (Nil), arg296: (Nil), arg297: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (SUCC (ZERO)) (((((((((Nil) @ (0::(Nil))) @ (3::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (0::(3::rotate (SUCC (ZERO)) (((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (SUCC (ZERO)) (((((((((Nil) @ (1::(Nil))) @ (1::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (1::(1::rotate (SUCC (ZERO)) (((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) (((((((((Nil) @ (3::(Nil))) @ (1::(Nil))) @ (Nil)) @ (Nil)) @ (4::(Nil))) @ (Nil)) @ (Nil))) = (3::(1::rotate (ZERO) (((((((Nil) @ (Nil)) @ (Nil)) @ (4::(Nil))) @ (Nil)) @ (Nil)))))
Simplifying took 0.001519 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list2:any list), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Model : any1: 0, any2: 5, any3: 5, any4: 4, any5: 7, any6: 5, any7: 0, any_list2: (Nil)
Model : any1: 5, any2: 4, any3: 5, any4: 0, any5: 5, any6: 0, any7: 0, any_list2: (Nil)
Model : any1: 4, any2: 2, any3: 3, any4: 0, any5: 8, any6: 4, any7: 2, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (5::(Nil))) @ (5::(Nil))) @ (4::(Nil))) @ (7::(Nil))) @ (5::(Nil))) @ (0::(Nil)))) = (0::(5::rotate (len ((Nil))) ((((((((Nil) @ (Nil)) @ (5::(Nil))) @ (4::(Nil))) @ (7::(Nil))) @ (5::(Nil))) @ (0::(Nil))))))
rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (5::(Nil))) @ (4::(Nil))) @ (5::(Nil))) @ (0::(Nil))) @ (5::(Nil))) @ (0::(Nil))) @ (0::(Nil)))) = (5::(4::rotate (len ((Nil))) ((((((((Nil) @ (Nil)) @ (5::(Nil))) @ (0::(Nil))) @ (5::(Nil))) @ (0::(Nil))) @ (0::(Nil))))))
rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (4::(Nil))) @ (2::(Nil))) @ (3::(Nil))) @ (0::(Nil))) @ (8::(Nil))) @ (4::(Nil))) @ (2::(Nil)))) = (4::(2::rotate (len ((Nil))) ((((((((Nil) @ (Nil)) @ (3::(Nil))) @ (0::(Nil))) @ (8::(Nil))) @ (4::(Nil))) @ (2::(Nil))))))
Simplifying took 0.005993 seconds
Result : true
advanced_generalize done
=================================================
Progress: 206


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any) (any5:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any5(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any1 : any
any3 : any
any4 : any
any5 : any
---------------------------------------
forall (any2:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any6(rank:15)
=================================================
Progress: 207


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any) (any5:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any6(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any1 : any
any3 : any
any4 : any
any6 : any
---------------------------------------
forall (any2:any) (any5:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any4
intro any6
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg298:any list) (arg299:any list) (arg300:any list) (arg301:any list) (arg302:any list) (arg303:any list) (arg304:nat), rotate (arg304) ((((((((arg298 @ (any1::(Nil))) @ (any2::(Nil))) @ arg299) @ arg300) @ arg301) @ arg302) @ arg303)) = (any1::(any2::rotate (arg304) ((((((arg298 @ arg299) @ arg300) @ arg301) @ arg302) @ arg303))))
Model : any1: 4, any2: 1, arg298: (Nil), arg299: (Nil), arg300: (Nil), arg301: (Nil), arg302: (Nil), arg303: (Nil), arg304: ZERO
Model : any1: 0, any2: 3, arg298: (0::(Nil)), arg299: (Nil), arg300: (Nil), arg301: (Nil), arg302: (Nil), arg303: (Nil), arg304: ZERO
Model : any1: 7, any2: 8, arg298: (Nil), arg299: (2::(Nil)), arg300: (Nil), arg301: (1::(Nil)), arg302: (Nil), arg303: (Nil), arg304: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) (((((((((Nil) @ (4::(Nil))) @ (1::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (4::(1::rotate (ZERO) (((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) (((((((((0::(Nil)) @ (0::(Nil))) @ (3::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (0::(3::rotate (ZERO) (((((((0::(Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) (((((((((Nil) @ (7::(Nil))) @ (8::(Nil))) @ (2::(Nil))) @ (Nil)) @ (1::(Nil))) @ (Nil)) @ (Nil))) = (7::(8::rotate (ZERO) (((((((Nil) @ (2::(Nil))) @ (Nil)) @ (1::(Nil))) @ (Nil)) @ (Nil)))))
Simplifying took 0.002137 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list2:any list), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Model : any1: 8, any2: 7, any3: 7, any4: 0, any5: 8, any6: 2, any7: 0, any_list2: (Nil)
Model : any1: 0, any2: 5, any3: 5, any4: 2, any5: 4, any6: 7, any7: 2, any_list2: (Nil)
Model : any1: 1, any2: 2, any3: 7, any4: 0, any5: 4, any6: 4, any7: 2, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (8::(Nil))) @ (7::(Nil))) @ (7::(Nil))) @ (0::(Nil))) @ (8::(Nil))) @ (2::(Nil))) @ (0::(Nil)))) = (8::(7::rotate (len ((Nil))) ((((((((Nil) @ (Nil)) @ (7::(Nil))) @ (0::(Nil))) @ (8::(Nil))) @ (2::(Nil))) @ (0::(Nil))))))
rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (5::(Nil))) @ (5::(Nil))) @ (2::(Nil))) @ (4::(Nil))) @ (7::(Nil))) @ (2::(Nil)))) = (0::(5::rotate (len ((Nil))) ((((((((Nil) @ (Nil)) @ (5::(Nil))) @ (2::(Nil))) @ (4::(Nil))) @ (7::(Nil))) @ (2::(Nil))))))
rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (1::(Nil))) @ (2::(Nil))) @ (7::(Nil))) @ (0::(Nil))) @ (4::(Nil))) @ (4::(Nil))) @ (2::(Nil)))) = (1::(2::rotate (len ((Nil))) ((((((((Nil) @ (Nil)) @ (7::(Nil))) @ (0::(Nil))) @ (4::(Nil))) @ (4::(Nil))) @ (2::(Nil))))))
Simplifying took 0.006477 seconds
Result : true
advanced_generalize done
=================================================
Progress: 208


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any1 : any
any3 : any
any5 : any
---------------------------------------
forall (any2:any) (any4:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any6(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any1 : any
any3 : any
any5 : any
any6 : any
---------------------------------------
forall (any2:any) (any4:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any5
intro any6
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg305:any list) (arg306:any list) (arg307:any list) (arg308:any list) (arg309:any list) (arg310:any list) (arg311:nat), rotate (arg311) ((((((((arg305 @ (any1::(Nil))) @ (any2::(Nil))) @ arg306) @ arg307) @ arg308) @ arg309) @ arg310)) = (any1::(any2::rotate (arg311) ((((((arg305 @ arg306) @ arg307) @ arg308) @ arg309) @ arg310))))
Model : any1: 0, any2: 8, arg305: (Nil), arg306: (Nil), arg307: (Nil), arg308: (Nil), arg309: (Nil), arg310: (Nil), arg311: ZERO
Model : any1: 3, any2: 6, arg305: (Nil), arg306: (Nil), arg307: (Nil), arg308: (Nil), arg309: (Nil), arg310: (Nil), arg311: ZERO
Model : any1: 5, any2: 1, arg305: (Nil), arg306: (Nil), arg307: (8::(Nil)), arg308: (Nil), arg309: (Nil), arg310: (Nil), arg311: SUCC (ZERO)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) (((((((((Nil) @ (0::(Nil))) @ (8::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (0::(8::rotate (ZERO) (((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) (((((((((Nil) @ (3::(Nil))) @ (6::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (3::(6::rotate (ZERO) (((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (SUCC (ZERO)) (((((((((Nil) @ (5::(Nil))) @ (1::(Nil))) @ (Nil)) @ (8::(Nil))) @ (Nil)) @ (Nil)) @ (Nil))) = (5::(1::rotate (SUCC (ZERO)) (((((((Nil) @ (Nil)) @ (8::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)))))
Simplifying took 0.002348 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list2:any list), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Model : any1: 7, any2: 6, any3: 5, any4: 1, any5: 1, any6: 1, any7: 0, any_list2: (Nil)
Model : any1: 0, any2: 1, any3: 5, any4: 3, any5: 8, any6: 1, any7: 5, any_list2: (Nil)
Model : any1: 2, any2: 5, any3: 3, any4: 5, any5: 6, any6: 8, any7: 1, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (7::(Nil))) @ (6::(Nil))) @ (5::(Nil))) @ (1::(Nil))) @ (1::(Nil))) @ (1::(Nil))) @ (0::(Nil)))) = (7::(6::rotate (len ((Nil))) ((((((((Nil) @ (Nil)) @ (5::(Nil))) @ (1::(Nil))) @ (1::(Nil))) @ (1::(Nil))) @ (0::(Nil))))))
rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (1::(Nil))) @ (5::(Nil))) @ (3::(Nil))) @ (8::(Nil))) @ (1::(Nil))) @ (5::(Nil)))) = (0::(1::rotate (len ((Nil))) ((((((((Nil) @ (Nil)) @ (5::(Nil))) @ (3::(Nil))) @ (8::(Nil))) @ (1::(Nil))) @ (5::(Nil))))))
rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (2::(Nil))) @ (5::(Nil))) @ (3::(Nil))) @ (5::(Nil))) @ (6::(Nil))) @ (8::(Nil))) @ (1::(Nil)))) = (2::(5::rotate (len ((Nil))) ((((((((Nil) @ (Nil)) @ (3::(Nil))) @ (5::(Nil))) @ (6::(Nil))) @ (8::(Nil))) @ (1::(Nil))))))
Simplifying took 0.006739 seconds
Result : true
advanced_generalize done
=================================================
Progress: 209


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any1 : any
any4 : any
any5 : any
---------------------------------------
forall (any2:any) (any3:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any6(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any1 : any
any4 : any
any5 : any
any6 : any
---------------------------------------
forall (any2:any) (any3:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any4
intro any5
intro any6
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg312:any list) (arg313:any list) (arg314:any list) (arg315:any list) (arg316:any list) (arg317:any list) (arg318:nat), rotate (arg318) ((((((((arg312 @ (any1::(Nil))) @ (any2::(Nil))) @ arg313) @ arg314) @ arg315) @ arg316) @ arg317)) = (any1::(any2::rotate (arg318) ((((((arg312 @ arg313) @ arg314) @ arg315) @ arg316) @ arg317))))
Model : any1: 4, any2: 0, arg312: (8::(Nil)), arg313: (Nil), arg314: (0::(Nil)), arg315: (Nil), arg316: (Nil), arg317: (Nil), arg318: ZERO
Model : any1: 2, any2: 1, arg312: (1::(Nil)), arg313: (Nil), arg314: (Nil), arg315: (Nil), arg316: (Nil), arg317: (Nil), arg318: SUCC (SUCC (ZERO))
Model : any1: 8, any2: 2, arg312: (Nil), arg313: (0::(Nil)), arg314: (Nil), arg315: (Nil), arg316: (Nil), arg317: (Nil), arg318: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) (((((((((8::(Nil)) @ (4::(Nil))) @ (0::(Nil))) @ (Nil)) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil))) = (4::(0::rotate (ZERO) (((((((8::(Nil)) @ (Nil)) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (SUCC (SUCC (ZERO))) (((((((((1::(Nil)) @ (2::(Nil))) @ (1::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (2::(1::rotate (SUCC (SUCC (ZERO))) (((((((1::(Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) (((((((((Nil) @ (8::(Nil))) @ (2::(Nil))) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (8::(2::rotate (ZERO) (((((((Nil) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
Simplifying took 0.003046 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list2:any list), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Model : any1: 4, any2: 5, any3: 0, any4: 7, any5: 0, any6: 0, any7: 1, any_list2: (Nil)
Model : any1: 6, any2: 8, any3: 7, any4: 3, any5: 0, any6: 8, any7: 0, any_list2: (Nil)
Model : any1: 8, any2: 2, any3: 8, any4: 1, any5: 6, any6: 8, any7: 6, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (4::(Nil))) @ (5::(Nil))) @ (0::(Nil))) @ (7::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (1::(Nil)))) = (4::(5::rotate (len ((Nil))) ((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (7::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (1::(Nil))))))
rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (6::(Nil))) @ (8::(Nil))) @ (7::(Nil))) @ (3::(Nil))) @ (0::(Nil))) @ (8::(Nil))) @ (0::(Nil)))) = (6::(8::rotate (len ((Nil))) ((((((((Nil) @ (Nil)) @ (7::(Nil))) @ (3::(Nil))) @ (0::(Nil))) @ (8::(Nil))) @ (0::(Nil))))))
rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (8::(Nil))) @ (2::(Nil))) @ (8::(Nil))) @ (1::(Nil))) @ (6::(Nil))) @ (8::(Nil))) @ (6::(Nil)))) = (8::(2::rotate (len ((Nil))) ((((((((Nil) @ (Nil)) @ (8::(Nil))) @ (1::(Nil))) @ (6::(Nil))) @ (8::(Nil))) @ (6::(Nil))))))
Simplifying took 0.006899 seconds
Result : true
advanced_generalize done
=================================================
Progress: 210


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any5:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any5(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any2 : any
any3 : any
any4 : any
any5 : any
---------------------------------------
forall (any1:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any6(rank:15)
=================================================
Progress: 211


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any5:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any6(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any2 : any
any3 : any
any4 : any
any6 : any
---------------------------------------
forall (any1:any) (any5:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any4
intro any6
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg319:any list) (arg320:any list) (arg321:any list) (arg322:any list) (arg323:any list) (arg324:any list) (arg325:nat), rotate (arg325) ((((((((arg319 @ (any1::(Nil))) @ (any2::(Nil))) @ arg320) @ arg321) @ arg322) @ arg323) @ arg324)) = (any1::(any2::rotate (arg325) ((((((arg319 @ arg320) @ arg321) @ arg322) @ arg323) @ arg324))))
Model : any1: 3, any2: 8, arg319: (Nil), arg320: (0::(Nil)), arg321: (Nil), arg322: (Nil), arg323: (Nil), arg324: (Nil), arg325: SUCC (SUCC (SUCC (SUCC (ZERO))))
Model : any1: 5, any2: 0, arg319: (3::(Nil)), arg320: (4::(Nil)), arg321: (1::(Nil)), arg322: (0::(Nil)), arg323: (Nil), arg324: (Nil), arg325: SUCC (ZERO)
Model : any1: 1, any2: 8, arg319: (Nil), arg320: (Nil), arg321: (Nil), arg322: (Nil), arg323: (Nil), arg324: (Nil), arg325: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (SUCC (SUCC (SUCC (SUCC (ZERO))))) (((((((((Nil) @ (3::(Nil))) @ (8::(Nil))) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (3::(8::rotate (SUCC (SUCC (SUCC (SUCC (ZERO))))) (((((((Nil) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (SUCC (ZERO)) (((((((((3::(Nil)) @ (5::(Nil))) @ (0::(Nil))) @ (4::(Nil))) @ (1::(Nil))) @ (0::(Nil))) @ (Nil)) @ (Nil))) = (5::(0::rotate (SUCC (ZERO)) (((((((3::(Nil)) @ (4::(Nil))) @ (1::(Nil))) @ (0::(Nil))) @ (Nil)) @ (Nil)))))
rotate (ZERO) (((((((((Nil) @ (1::(Nil))) @ (8::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (1::(8::rotate (ZERO) (((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
Simplifying took 0.004443 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list2:any list), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Model : any1: 7, any2: 1, any3: 4, any4: 5, any5: 3, any6: 3, any7: 8, any_list2: (Nil)
Model : any1: 6, any2: 7, any3: 7, any4: 2, any5: 0, any6: 3, any7: 0, any_list2: (Nil)
Model : any1: 1, any2: 2, any3: 0, any4: 2, any5: 5, any6: 1, any7: 4, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (7::(Nil))) @ (1::(Nil))) @ (4::(Nil))) @ (5::(Nil))) @ (3::(Nil))) @ (3::(Nil))) @ (8::(Nil)))) = (7::(1::rotate (len ((Nil))) ((((((((Nil) @ (Nil)) @ (4::(Nil))) @ (5::(Nil))) @ (3::(Nil))) @ (3::(Nil))) @ (8::(Nil))))))
rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (6::(Nil))) @ (7::(Nil))) @ (7::(Nil))) @ (2::(Nil))) @ (0::(Nil))) @ (3::(Nil))) @ (0::(Nil)))) = (6::(7::rotate (len ((Nil))) ((((((((Nil) @ (Nil)) @ (7::(Nil))) @ (2::(Nil))) @ (0::(Nil))) @ (3::(Nil))) @ (0::(Nil))))))
rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (1::(Nil))) @ (2::(Nil))) @ (0::(Nil))) @ (2::(Nil))) @ (5::(Nil))) @ (1::(Nil))) @ (4::(Nil)))) = (1::(2::rotate (len ((Nil))) ((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (2::(Nil))) @ (5::(Nil))) @ (1::(Nil))) @ (4::(Nil))))))
Simplifying took 0.006081 seconds
Result : true
advanced_generalize done
=================================================
Progress: 212


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any2 : any
any3 : any
any5 : any
---------------------------------------
forall (any1:any) (any4:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any6(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any2 : any
any3 : any
any5 : any
any6 : any
---------------------------------------
forall (any1:any) (any4:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any5
intro any6
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg326:any list) (arg327:any list) (arg328:any list) (arg329:any list) (arg330:any list) (arg331:any list) (arg332:nat), rotate (arg332) ((((((((arg326 @ (any1::(Nil))) @ (any2::(Nil))) @ arg327) @ arg328) @ arg329) @ arg330) @ arg331)) = (any1::(any2::rotate (arg332) ((((((arg326 @ arg327) @ arg328) @ arg329) @ arg330) @ arg331))))
Model : any1: 0, any2: 2, arg326: (Nil), arg327: (Nil), arg328: (Nil), arg329: (Nil), arg330: (Nil), arg331: (Nil), arg332: SUCC (ZERO)
Model : any1: 3, any2: 5, arg326: (Nil), arg327: (Nil), arg328: (0::(Nil)), arg329: (1::(Nil)), arg330: (Nil), arg331: (Nil), arg332: SUCC (SUCC (ZERO))
Model : any1: 0, any2: 6, arg326: (Nil), arg327: (0::(Nil)), arg328: (7::(Nil)), arg329: (Nil), arg330: (Nil), arg331: (Nil), arg332: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (SUCC (ZERO)) (((((((((Nil) @ (0::(Nil))) @ (2::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (0::(2::rotate (SUCC (ZERO)) (((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (SUCC (SUCC (ZERO))) (((((((((Nil) @ (3::(Nil))) @ (5::(Nil))) @ (Nil)) @ (0::(Nil))) @ (1::(Nil))) @ (Nil)) @ (Nil))) = (3::(5::rotate (SUCC (SUCC (ZERO))) (((((((Nil) @ (Nil)) @ (0::(Nil))) @ (1::(Nil))) @ (Nil)) @ (Nil)))))
rotate (ZERO) (((((((((Nil) @ (0::(Nil))) @ (6::(Nil))) @ (0::(Nil))) @ (7::(Nil))) @ (Nil)) @ (Nil)) @ (Nil))) = (0::(6::rotate (ZERO) (((((((Nil) @ (0::(Nil))) @ (7::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)))))
Simplifying took 0.002951 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list2:any list), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Model : any1: 3, any2: 1, any3: 4, any4: 4, any5: 4, any6: 2, any7: 4, any_list2: (Nil)
Model : any1: 2, any2: 4, any3: 7, any4: 3, any5: 3, any6: 1, any7: 4, any_list2: (Nil)
Model : any1: 7, any2: 6, any3: 1, any4: 2, any5: 6, any6: 1, any7: 5, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (3::(Nil))) @ (1::(Nil))) @ (4::(Nil))) @ (4::(Nil))) @ (4::(Nil))) @ (2::(Nil))) @ (4::(Nil)))) = (3::(1::rotate (len ((Nil))) ((((((((Nil) @ (Nil)) @ (4::(Nil))) @ (4::(Nil))) @ (4::(Nil))) @ (2::(Nil))) @ (4::(Nil))))))
rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (2::(Nil))) @ (4::(Nil))) @ (7::(Nil))) @ (3::(Nil))) @ (3::(Nil))) @ (1::(Nil))) @ (4::(Nil)))) = (2::(4::rotate (len ((Nil))) ((((((((Nil) @ (Nil)) @ (7::(Nil))) @ (3::(Nil))) @ (3::(Nil))) @ (1::(Nil))) @ (4::(Nil))))))
rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (7::(Nil))) @ (6::(Nil))) @ (1::(Nil))) @ (2::(Nil))) @ (6::(Nil))) @ (1::(Nil))) @ (5::(Nil)))) = (7::(6::rotate (len ((Nil))) ((((((((Nil) @ (Nil)) @ (1::(Nil))) @ (2::(Nil))) @ (6::(Nil))) @ (1::(Nil))) @ (5::(Nil))))))
Simplifying took 0.006261 seconds
Result : true
advanced_generalize done
=================================================
Progress: 213


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any2 : any
any4 : any
any5 : any
---------------------------------------
forall (any1:any) (any3:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any6(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any2 : any
any4 : any
any5 : any
any6 : any
---------------------------------------
forall (any1:any) (any3:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any4
intro any5
intro any6
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg333:any list) (arg334:any list) (arg335:any list) (arg336:any list) (arg337:any list) (arg338:any list) (arg339:nat), rotate (arg339) ((((((((arg333 @ (any1::(Nil))) @ (any2::(Nil))) @ arg334) @ arg335) @ arg336) @ arg337) @ arg338)) = (any1::(any2::rotate (arg339) ((((((arg333 @ arg334) @ arg335) @ arg336) @ arg337) @ arg338))))
Model : any1: 1, any2: 3, arg333: (Nil), arg334: (0::(Nil)), arg335: (Nil), arg336: (0::(Nil)), arg337: (0::(Nil)), arg338: (Nil), arg339: ZERO
Model : any1: 3, any2: 5, arg333: (8::(Nil)), arg334: (Nil), arg335: (Nil), arg336: (7::(6::(Nil))), arg337: (Nil), arg338: (Nil), arg339: ZERO
Model : any1: 8, any2: 5, arg333: (Nil), arg334: (Nil), arg335: (Nil), arg336: (Nil), arg337: (Nil), arg338: (Nil), arg339: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) (((((((((Nil) @ (1::(Nil))) @ (3::(Nil))) @ (0::(Nil))) @ (Nil)) @ (0::(Nil))) @ (0::(Nil))) @ (Nil))) = (1::(3::rotate (ZERO) (((((((Nil) @ (0::(Nil))) @ (Nil)) @ (0::(Nil))) @ (0::(Nil))) @ (Nil)))))
rotate (ZERO) (((((((((8::(Nil)) @ (3::(Nil))) @ (5::(Nil))) @ (Nil)) @ (Nil)) @ (7::(6::(Nil)))) @ (Nil)) @ (Nil))) = (3::(5::rotate (ZERO) (((((((8::(Nil)) @ (Nil)) @ (Nil)) @ (7::(6::(Nil)))) @ (Nil)) @ (Nil)))))
rotate (ZERO) (((((((((Nil) @ (8::(Nil))) @ (5::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (8::(5::rotate (ZERO) (((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
Simplifying took 0.003598 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list2:any list), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Model : any1: 0, any2: 0, any3: 3, any4: 5, any5: 8, any6: 5, any7: 6, any_list2: (Nil)
Model : any1: 0, any2: 0, any3: 6, any4: 3, any5: 0, any6: 8, any7: 2, any_list2: (Nil)
Model : any1: 7, any2: 7, any3: 1, any4: 8, any5: 2, any6: 6, any7: 2, any_list2: (6::(Nil))
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (0::(Nil))) @ (3::(Nil))) @ (5::(Nil))) @ (8::(Nil))) @ (5::(Nil))) @ (6::(Nil)))) = (0::(0::rotate (len ((Nil))) ((((((((Nil) @ (Nil)) @ (3::(Nil))) @ (5::(Nil))) @ (8::(Nil))) @ (5::(Nil))) @ (6::(Nil))))))
rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (0::(Nil))) @ (6::(Nil))) @ (3::(Nil))) @ (0::(Nil))) @ (8::(Nil))) @ (2::(Nil)))) = (0::(0::rotate (len ((Nil))) ((((((((Nil) @ (Nil)) @ (6::(Nil))) @ (3::(Nil))) @ (0::(Nil))) @ (8::(Nil))) @ (2::(Nil))))))
rotate (len ((6::(Nil)))) ((((((((((6::(Nil)) @ (Nil)) @ (7::(Nil))) @ (7::(Nil))) @ (1::(Nil))) @ (8::(Nil))) @ (2::(Nil))) @ (6::(Nil))) @ (2::(Nil)))) = (7::(7::rotate (len ((6::(Nil)))) ((((((((6::(Nil)) @ (Nil)) @ (1::(Nil))) @ (8::(Nil))) @ (2::(Nil))) @ (6::(Nil))) @ (2::(Nil))))))
Simplifying took 0.009091 seconds
Result : true
advanced_generalize done
=================================================
Progress: 214


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any3 : any
any4 : any
any5 : any
---------------------------------------
forall (any1:any) (any2:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any6(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any3 : any
any4 : any
any5 : any
any6 : any
---------------------------------------
forall (any1:any) (any2:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any4
intro any5
intro any6
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg340:any list) (arg341:any list) (arg342:any list) (arg343:any list) (arg344:any list) (arg345:any list) (arg346:nat), rotate (arg346) ((((((((arg340 @ (any1::(Nil))) @ (any2::(Nil))) @ arg341) @ arg342) @ arg343) @ arg344) @ arg345)) = (any1::(any2::rotate (arg346) ((((((arg340 @ arg341) @ arg342) @ arg343) @ arg344) @ arg345))))
Model : any1: 3, any2: 5, arg340: (Nil), arg341: (Nil), arg342: (Nil), arg343: (3::(Nil)), arg344: (0::(Nil)), arg345: (Nil), arg346: ZERO
Model : any1: 2, any2: 7, arg340: (4::(Nil)), arg341: (3::(Nil)), arg342: (Nil), arg343: (Nil), arg344: (4::(Nil)), arg345: (Nil), arg346: ZERO
Model : any1: 5, any2: 1, arg340: (2::(Nil)), arg341: (Nil), arg342: (Nil), arg343: (Nil), arg344: (Nil), arg345: (Nil), arg346: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) (((((((((Nil) @ (3::(Nil))) @ (5::(Nil))) @ (Nil)) @ (Nil)) @ (3::(Nil))) @ (0::(Nil))) @ (Nil))) = (3::(5::rotate (ZERO) (((((((Nil) @ (Nil)) @ (Nil)) @ (3::(Nil))) @ (0::(Nil))) @ (Nil)))))
rotate (ZERO) (((((((((4::(Nil)) @ (2::(Nil))) @ (7::(Nil))) @ (3::(Nil))) @ (Nil)) @ (Nil)) @ (4::(Nil))) @ (Nil))) = (2::(7::rotate (ZERO) (((((((4::(Nil)) @ (3::(Nil))) @ (Nil)) @ (Nil)) @ (4::(Nil))) @ (Nil)))))
rotate (ZERO) (((((((((2::(Nil)) @ (5::(Nil))) @ (1::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (5::(1::rotate (ZERO) (((((((2::(Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
Simplifying took 0.003734 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list2:any list), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Model : any1: 7, any2: 5, any3: 1, any4: 0, any5: 0, any6: 3, any7: 1, any_list2: (Nil)
Model : any1: 8, any2: 8, any3: 3, any4: 3, any5: 4, any6: 8, any7: 3, any_list2: (Nil)
Model : any1: 0, any2: 0, any3: 4, any4: 0, any5: 7, any6: 4, any7: 7, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (7::(Nil))) @ (5::(Nil))) @ (1::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (3::(Nil))) @ (1::(Nil)))) = (7::(5::rotate (len ((Nil))) ((((((((Nil) @ (Nil)) @ (1::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (3::(Nil))) @ (1::(Nil))))))
rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (8::(Nil))) @ (8::(Nil))) @ (3::(Nil))) @ (3::(Nil))) @ (4::(Nil))) @ (8::(Nil))) @ (3::(Nil)))) = (8::(8::rotate (len ((Nil))) ((((((((Nil) @ (Nil)) @ (3::(Nil))) @ (3::(Nil))) @ (4::(Nil))) @ (8::(Nil))) @ (3::(Nil))))))
rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (0::(Nil))) @ (4::(Nil))) @ (0::(Nil))) @ (7::(Nil))) @ (4::(Nil))) @ (7::(Nil)))) = (0::(0::rotate (len ((Nil))) ((((((((Nil) @ (Nil)) @ (4::(Nil))) @ (0::(Nil))) @ (7::(Nil))) @ (4::(Nil))) @ (7::(Nil))))))
Simplifying took 0.006367 seconds
Result : true
advanced_generalize done
=================================================
Progress: 215


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any5:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any5(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any1 : any
any2 : any
any3 : any
any4 : any
any5 : any
---------------------------------------
forall (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
intro any6(rank:15)
=================================================
Progress: 216


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any5:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any6(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any1 : any
any2 : any
any3 : any
any4 : any
any6 : any
---------------------------------------
forall (any5:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any4
intro any6
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg347:any list) (arg348:any list) (arg349:any list) (arg350:any list) (arg351:any list) (arg352:any list) (arg353:nat), rotate (arg353) ((((((((arg347 @ (any1::(Nil))) @ (any2::(Nil))) @ arg348) @ arg349) @ arg350) @ arg351) @ arg352)) = (any1::(any2::rotate (arg353) ((((((arg347 @ arg348) @ arg349) @ arg350) @ arg351) @ arg352))))
Model : any1: 3, any2: 2, arg347: (1::(2::(Nil))), arg348: (1::(Nil)), arg349: (Nil), arg350: (Nil), arg351: (Nil), arg352: (Nil), arg353: SUCC (SUCC (ZERO))
Model : any1: 0, any2: 6, arg347: (Nil), arg348: (Nil), arg349: (Nil), arg350: (6::(Nil)), arg351: (Nil), arg352: (1::(5::(Nil))), arg353: ZERO
Model : any1: 5, any2: 5, arg347: (Nil), arg348: (Nil), arg349: (Nil), arg350: (Nil), arg351: (Nil), arg352: (Nil), arg353: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (SUCC (SUCC (ZERO))) (((((((((1::(2::(Nil))) @ (3::(Nil))) @ (2::(Nil))) @ (1::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (3::(2::rotate (SUCC (SUCC (ZERO))) (((((((1::(2::(Nil))) @ (1::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) (((((((((Nil) @ (0::(Nil))) @ (6::(Nil))) @ (Nil)) @ (Nil)) @ (6::(Nil))) @ (Nil)) @ (1::(5::(Nil))))) = (0::(6::rotate (ZERO) (((((((Nil) @ (Nil)) @ (Nil)) @ (6::(Nil))) @ (Nil)) @ (1::(5::(Nil)))))))
rotate (ZERO) (((((((((Nil) @ (5::(Nil))) @ (5::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (5::(5::rotate (ZERO) (((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
Simplifying took 0.003974 seconds
Result : true
advanced_generalize done


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any1 : any
any2 : any
any3 : any
any4 : any
any6 : any
---------------------------------------
forall (any5:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 217


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any1 : any
any2 : any
any3 : any
any4 : any
any6 : any
---------------------------------------
forall (any5:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (arg347:any list) (arg348:any list) (arg349:any list) (arg350:any list) (arg351:any list) (arg352:any list) (arg353:nat), rotate (arg353) ((((((((arg347 @ (any1::(Nil))) @ (any2::(Nil))) @ arg348) @ arg349) @ arg350) @ arg351) @ arg352)) = (any1::(any2::rotate (arg353) ((((((arg347 @ arg348) @ arg349) @ arg350) @ arg351) @ arg352))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:18)
=================================================
Progress: 218


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any1 : any
any2 : any
any3 : any
any5 : any
---------------------------------------
forall (any4:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any6(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any1 : any
any2 : any
any3 : any
any5 : any
any6 : any
---------------------------------------
forall (any4:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any5
intro any6
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg354:any list) (arg355:any list) (arg356:any list) (arg357:any list) (arg358:any list) (arg359:any list) (arg360:nat), rotate (arg360) ((((((((arg354 @ (any1::(Nil))) @ (any2::(Nil))) @ arg355) @ arg356) @ arg357) @ arg358) @ arg359)) = (any1::(any2::rotate (arg360) ((((((arg354 @ arg355) @ arg356) @ arg357) @ arg358) @ arg359))))
Model : any1: 7, any2: 6, arg354: (Nil), arg355: (Nil), arg356: (Nil), arg357: (0::(Nil)), arg358: (1::(Nil)), arg359: (Nil), arg360: ZERO
Model : any1: 7, any2: 0, arg354: (Nil), arg355: (2::(Nil)), arg356: (Nil), arg357: (Nil), arg358: (Nil), arg359: (Nil), arg360: ZERO
Model : any1: 2, any2: 7, arg354: (Nil), arg355: (7::(6::(Nil))), arg356: (Nil), arg357: (Nil), arg358: (Nil), arg359: (Nil), arg360: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) (((((((((Nil) @ (7::(Nil))) @ (6::(Nil))) @ (Nil)) @ (Nil)) @ (0::(Nil))) @ (1::(Nil))) @ (Nil))) = (7::(6::rotate (ZERO) (((((((Nil) @ (Nil)) @ (Nil)) @ (0::(Nil))) @ (1::(Nil))) @ (Nil)))))
rotate (ZERO) (((((((((Nil) @ (7::(Nil))) @ (0::(Nil))) @ (2::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (7::(0::rotate (ZERO) (((((((Nil) @ (2::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) (((((((((Nil) @ (2::(Nil))) @ (7::(Nil))) @ (7::(6::(Nil)))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (2::(7::rotate (ZERO) (((((((Nil) @ (7::(6::(Nil)))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
Simplifying took 0.003415 seconds
Result : true
advanced_generalize done


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any1 : any
any2 : any
any3 : any
any5 : any
any6 : any
---------------------------------------
forall (any4:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 219


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any1 : any
any2 : any
any3 : any
any5 : any
any6 : any
---------------------------------------
forall (any4:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (arg354:any list) (arg355:any list) (arg356:any list) (arg357:any list) (arg358:any list) (arg359:any list) (arg360:nat), rotate (arg360) ((((((((arg354 @ (any1::(Nil))) @ (any2::(Nil))) @ arg355) @ arg356) @ arg357) @ arg358) @ arg359)) = (any1::(any2::rotate (arg360) ((((((arg354 @ arg355) @ arg356) @ arg357) @ arg358) @ arg359))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:18)
=================================================
Progress: 220


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any1 : any
any2 : any
any4 : any
any5 : any
---------------------------------------
forall (any3:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any6(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any1 : any
any2 : any
any4 : any
any5 : any
any6 : any
---------------------------------------
forall (any3:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any4
intro any5
intro any6
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg361:any list) (arg362:any list) (arg363:any list) (arg364:any list) (arg365:any list) (arg366:any list) (arg367:nat), rotate (arg367) ((((((((arg361 @ (any1::(Nil))) @ (any2::(Nil))) @ arg362) @ arg363) @ arg364) @ arg365) @ arg366)) = (any1::(any2::rotate (arg367) ((((((arg361 @ arg362) @ arg363) @ arg364) @ arg365) @ arg366))))
Model : any1: 0, any2: 6, arg361: (Nil), arg362: (Nil), arg363: (8::(0::(Nil))), arg364: (0::(Nil)), arg365: (Nil), arg366: (Nil), arg367: ZERO
Model : any1: 2, any2: 0, arg361: (Nil), arg362: (Nil), arg363: (Nil), arg364: (Nil), arg365: (5::(2::(0::(Nil)))), arg366: (Nil), arg367: ZERO
Model : any1: 5, any2: 0, arg361: (Nil), arg362: (Nil), arg363: (Nil), arg364: (Nil), arg365: (0::(Nil)), arg366: (Nil), arg367: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) (((((((((Nil) @ (0::(Nil))) @ (6::(Nil))) @ (Nil)) @ (8::(0::(Nil)))) @ (0::(Nil))) @ (Nil)) @ (Nil))) = (0::(6::rotate (ZERO) (((((((Nil) @ (Nil)) @ (8::(0::(Nil)))) @ (0::(Nil))) @ (Nil)) @ (Nil)))))
rotate (ZERO) (((((((((Nil) @ (2::(Nil))) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (5::(2::(0::(Nil))))) @ (Nil))) = (2::(0::rotate (ZERO) (((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (5::(2::(0::(Nil))))) @ (Nil)))))
rotate (ZERO) (((((((((Nil) @ (5::(Nil))) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (0::(Nil))) @ (Nil))) = (5::(0::rotate (ZERO) (((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (0::(Nil))) @ (Nil)))))
Simplifying took 0.002392 seconds
Result : true
advanced_generalize done


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any1 : any
any2 : any
any4 : any
any5 : any
any6 : any
---------------------------------------
forall (any3:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 221


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any1 : any
any2 : any
any4 : any
any5 : any
any6 : any
---------------------------------------
forall (any3:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (arg361:any list) (arg362:any list) (arg363:any list) (arg364:any list) (arg365:any list) (arg366:any list) (arg367:nat), rotate (arg367) ((((((((arg361 @ (any1::(Nil))) @ (any2::(Nil))) @ arg362) @ arg363) @ arg364) @ arg365) @ arg366)) = (any1::(any2::rotate (arg367) ((((((arg361 @ arg362) @ arg363) @ arg364) @ arg365) @ arg366))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:18)
=================================================
Progress: 222


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any1 : any
any3 : any
any4 : any
any5 : any
---------------------------------------
forall (any2:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any6(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any1 : any
any3 : any
any4 : any
any5 : any
any6 : any
---------------------------------------
forall (any2:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any4
intro any5
intro any6
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg368:any list) (arg369:any list) (arg370:any list) (arg371:any list) (arg372:any list) (arg373:any list) (arg374:nat), rotate (arg374) ((((((((arg368 @ (any1::(Nil))) @ (any2::(Nil))) @ arg369) @ arg370) @ arg371) @ arg372) @ arg373)) = (any1::(any2::rotate (arg374) ((((((arg368 @ arg369) @ arg370) @ arg371) @ arg372) @ arg373))))
Model : any1: 6, any2: 0, arg368: (Nil), arg369: (7::(Nil)), arg370: (Nil), arg371: (Nil), arg372: (Nil), arg373: (Nil), arg374: ZERO
Model : any1: 4, any2: 0, arg368: (4::(Nil)), arg369: (Nil), arg370: (Nil), arg371: (8::(Nil)), arg372: (Nil), arg373: (Nil), arg374: SUCC (ZERO)
Model : any1: 4, any2: 6, arg368: (Nil), arg369: (Nil), arg370: (0::(Nil)), arg371: (Nil), arg372: (Nil), arg373: (Nil), arg374: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) (((((((((Nil) @ (6::(Nil))) @ (0::(Nil))) @ (7::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (6::(0::rotate (ZERO) (((((((Nil) @ (7::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (SUCC (ZERO)) (((((((((4::(Nil)) @ (4::(Nil))) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (8::(Nil))) @ (Nil)) @ (Nil))) = (4::(0::rotate (SUCC (ZERO)) (((((((4::(Nil)) @ (Nil)) @ (Nil)) @ (8::(Nil))) @ (Nil)) @ (Nil)))))
rotate (ZERO) (((((((((Nil) @ (4::(Nil))) @ (6::(Nil))) @ (Nil)) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil))) = (4::(6::rotate (ZERO) (((((((Nil) @ (Nil)) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)))))
Simplifying took 0.003399 seconds
Result : true
advanced_generalize done


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any1 : any
any3 : any
any4 : any
any5 : any
any6 : any
---------------------------------------
forall (any2:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
=================================================
Progress: 223


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any1 : any
any3 : any
any4 : any
any5 : any
any6 : any
---------------------------------------
forall (any2:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (arg368:any list) (arg369:any list) (arg370:any list) (arg371:any list) (arg372:any list) (arg373:any list) (arg374:nat), rotate (arg374) ((((((((arg368 @ (any1::(Nil))) @ (any2::(Nil))) @ arg369) @ arg370) @ arg371) @ arg372) @ arg373)) = (any1::(any2::rotate (arg374) ((((((arg368 @ arg369) @ arg370) @ arg371) @ arg372) @ arg373))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:18)
=================================================
Progress: 224


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any2 : any
any3 : any
any4 : any
any5 : any
---------------------------------------
forall (any1:any) (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any6(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any2 : any
any3 : any
any4 : any
any5 : any
any6 : any
---------------------------------------
forall (any1:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any4
intro any5
intro any6
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg375:any list) (arg376:any list) (arg377:any list) (arg378:any list) (arg379:any list) (arg380:any list) (arg381:nat), rotate (arg381) ((((((((arg375 @ (any1::(Nil))) @ (any2::(Nil))) @ arg376) @ arg377) @ arg378) @ arg379) @ arg380)) = (any1::(any2::rotate (arg381) ((((((arg375 @ arg376) @ arg377) @ arg378) @ arg379) @ arg380))))
Model : any1: 6, any2: 5, arg375: (0::(Nil)), arg376: (Nil), arg377: (Nil), arg378: (Nil), arg379: (Nil), arg380: (7::(Nil)), arg381: ZERO
Model : any1: 1, any2: 6, arg375: (Nil), arg376: (5::(Nil)), arg377: (3::(Nil)), arg378: (Nil), arg379: (Nil), arg380: (Nil), arg381: ZERO
Model : any1: 7, any2: 4, arg375: (Nil), arg376: (Nil), arg377: (Nil), arg378: (6::(Nil)), arg379: (Nil), arg380: (Nil), arg381: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) (((((((((0::(Nil)) @ (6::(Nil))) @ (5::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (7::(Nil)))) = (6::(5::rotate (ZERO) (((((((0::(Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (7::(Nil))))))
rotate (ZERO) (((((((((Nil) @ (1::(Nil))) @ (6::(Nil))) @ (5::(Nil))) @ (3::(Nil))) @ (Nil)) @ (Nil)) @ (Nil))) = (1::(6::rotate (ZERO) (((((((Nil) @ (5::(Nil))) @ (3::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) (((((((((Nil) @ (7::(Nil))) @ (4::(Nil))) @ (Nil)) @ (Nil)) @ (6::(Nil))) @ (Nil)) @ (Nil))) = (7::(4::rotate (ZERO) (((((((Nil) @ (Nil)) @ (Nil)) @ (6::(Nil))) @ (Nil)) @ (Nil)))))
Simplifying took 0.003303 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list2:any list), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Model : any1: 4, any2: 4, any3: 1, any4: 0, any5: 5, any6: 5, any7: 1, any_list2: (Nil)
Model : any1: 4, any2: 0, any3: 0, any4: 0, any5: 2, any6: 0, any7: 8, any_list2: (Nil)
Model : any1: 4, any2: 0, any3: 5, any4: 6, any5: 1, any6: 3, any7: 1, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (4::(Nil))) @ (4::(Nil))) @ (1::(Nil))) @ (0::(Nil))) @ (5::(Nil))) @ (5::(Nil))) @ (1::(Nil)))) = (4::(4::rotate (len ((Nil))) ((((((((Nil) @ (Nil)) @ (1::(Nil))) @ (0::(Nil))) @ (5::(Nil))) @ (5::(Nil))) @ (1::(Nil))))))
rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (4::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (2::(Nil))) @ (0::(Nil))) @ (8::(Nil)))) = (4::(0::rotate (len ((Nil))) ((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (0::(Nil))) @ (2::(Nil))) @ (0::(Nil))) @ (8::(Nil))))))
rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (4::(Nil))) @ (0::(Nil))) @ (5::(Nil))) @ (6::(Nil))) @ (1::(Nil))) @ (3::(Nil))) @ (1::(Nil)))) = (4::(0::rotate (len ((Nil))) ((((((((Nil) @ (Nil)) @ (5::(Nil))) @ (6::(Nil))) @ (1::(Nil))) @ (3::(Nil))) @ (1::(Nil))))))
Simplifying took 0.005100 seconds
Result : true
advanced_generalize done
=================================================
Progress: 225


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any1 : any
any2 : any
any3 : any
any4 : any
any5 : any
---------------------------------------
forall (any6:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
>>> intro any6(rank : 15)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any_list1:any list), rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
any_list1 : any list
any7 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))))))
Inductive1 : any_list1 = (any7::any_list2)
any1 : any
any2 : any
any3 : any
any4 : any
any5 : any
any6 : any
---------------------------------------
rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

6 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any4
intro any5
intro any6
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg382:any list) (arg383:any list) (arg384:any list) (arg385:any list) (arg386:any list) (arg387:any list) (arg388:nat), rotate (arg388) ((((((((arg382 @ (any1::(Nil))) @ (any2::(Nil))) @ arg383) @ arg384) @ arg385) @ arg386) @ arg387)) = (any1::(any2::rotate (arg388) ((((((arg382 @ arg383) @ arg384) @ arg385) @ arg386) @ arg387))))
Model : any1: 8, any2: 5, arg382: (Nil), arg383: (Nil), arg384: (Nil), arg385: (Nil), arg386: (Nil), arg387: (Nil), arg388: ZERO
Model : any1: 6, any2: 0, arg382: (6::(Nil)), arg383: (Nil), arg384: (Nil), arg385: (Nil), arg386: (Nil), arg387: (Nil), arg388: ZERO
Model : any1: 8, any2: 7, arg382: (Nil), arg383: (Nil), arg384: (Nil), arg385: (Nil), arg386: (3::(Nil)), arg387: (Nil), arg388: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) (((((((((Nil) @ (8::(Nil))) @ (5::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (8::(5::rotate (ZERO) (((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) (((((((((6::(Nil)) @ (6::(Nil))) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (6::(0::rotate (ZERO) (((((((6::(Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) (((((((((Nil) @ (8::(Nil))) @ (7::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (3::(Nil))) @ (Nil))) = (8::(7::rotate (ZERO) (((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (3::(Nil))) @ (Nil)))))
Simplifying took 0.002328 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list2:any list), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Model : any1: 0, any2: 0, any3: 6, any4: 0, any5: 3, any6: 4, any7: 1, any_list2: (Nil)
Model : any1: 0, any2: 2, any3: 3, any4: 8, any5: 5, any6: 0, any7: 1, any_list2: (Nil)
Model : any1: 2, any2: 1, any3: 4, any4: 0, any5: 0, any6: 5, any7: 3, any_list2: (3::(Nil))
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (0::(Nil))) @ (6::(Nil))) @ (0::(Nil))) @ (3::(Nil))) @ (4::(Nil))) @ (1::(Nil)))) = (0::(0::rotate (len ((Nil))) ((((((((Nil) @ (Nil)) @ (6::(Nil))) @ (0::(Nil))) @ (3::(Nil))) @ (4::(Nil))) @ (1::(Nil))))))
rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (2::(Nil))) @ (3::(Nil))) @ (8::(Nil))) @ (5::(Nil))) @ (0::(Nil))) @ (1::(Nil)))) = (0::(2::rotate (len ((Nil))) ((((((((Nil) @ (Nil)) @ (3::(Nil))) @ (8::(Nil))) @ (5::(Nil))) @ (0::(Nil))) @ (1::(Nil))))))
rotate (len ((3::(Nil)))) ((((((((((3::(Nil)) @ (Nil)) @ (2::(Nil))) @ (1::(Nil))) @ (4::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (5::(Nil))) @ (3::(Nil)))) = (2::(1::rotate (len ((3::(Nil)))) ((((((((3::(Nil)) @ (Nil)) @ (4::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (5::(Nil))) @ (3::(Nil))))))
Simplifying took 0.007068 seconds
Result : true
advanced_generalize done
=================================================
Progress: 226


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))

0 goal(s) more...

6 conjecture(s) more...
>>> induction any_list1(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) ((((((((Nil) @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) ((((((Nil) @ any_list2) @ any_list3) @ any_list4) @ any_list5))))

1 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:16)
=================================================
Progress: 227


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))

0 goal(s) more...

6 conjecture(s) more...
>>> induction any_list1(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) ((((((((Nil) @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) ((((((Nil) @ any_list2) @ any_list3) @ any_list4) @ any_list5))))

1 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:16)
=================================================
Progress: 228


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))

0 goal(s) more...

6 conjecture(s) more...
>>> induction any_list1(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) ((((((((Nil) @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) ((((((Nil) @ any_list2) @ any_list3) @ any_list4) @ any_list5))))

1 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:16)
=================================================
Progress: 229


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))

0 goal(s) more...

6 conjecture(s) more...
>>> induction any_list1(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) ((((((((Nil) @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) ((((((Nil) @ any_list2) @ any_list3) @ any_list4) @ any_list5))))

1 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:16)
=================================================
Progress: 230


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))

0 goal(s) more...

6 conjecture(s) more...
>>> induction any_list1(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) ((((((((Nil) @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) ((((((Nil) @ any_list2) @ any_list3) @ any_list4) @ any_list5))))

1 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:16)
=================================================
Progress: 231


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (nat1:nat), rotate (nat1) ((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4)) = (any1::(any2::rotate (nat1) ((((any_list1 @ any_list2) @ any_list3) @ any_list4))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list3:any list) (any_list4:any list) (nat1:nat), rotate (nat1) ((any1::(any2::(any_list3 @ any_list4)))) = (any1::(any2::rotate (nat1) ((any_list3 @ any_list4))))

2 goal(s) more...

5 conjecture(s) more...
>>> induction any_list3(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (nat1:nat), rotate (nat1) ((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4)) = (any1::(any2::rotate (nat1) ((((any_list1 @ any_list2) @ any_list3) @ any_list4))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list4:any list) (nat1:nat), rotate (nat1) ((any1::(any2::((Nil) @ any_list4)))) = (any1::(any2::rotate (nat1) (((Nil) @ any_list4))))

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:16)
=================================================
Progress: 232


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (nat1:nat), rotate (nat1) ((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4)) = (any1::(any2::rotate (nat1) ((((any_list1 @ any_list2) @ any_list3) @ any_list4))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list3:any list) (any_list4:any list) (nat1:nat), rotate (nat1) ((any1::(any2::(any_list3 @ any_list4)))) = (any1::(any2::rotate (nat1) ((any_list3 @ any_list4))))

2 goal(s) more...

5 conjecture(s) more...
>>> induction any_list3(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (nat1:nat), rotate (nat1) ((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4)) = (any1::(any2::rotate (nat1) ((((any_list1 @ any_list2) @ any_list3) @ any_list4))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list4:any list) (nat1:nat), rotate (nat1) ((any1::(any2::((Nil) @ any_list4)))) = (any1::(any2::rotate (nat1) (((Nil) @ any_list4))))

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:16)
=================================================
Progress: 233


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) ((((((((Nil) @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) ((((((Nil) @ any_list2) @ any_list3) @ any_list4) @ any_list5))))

1 goal(s) more...

6 conjecture(s) more...
>>> simpl in goal(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) ((any1::(any2::(((any_list2 @ any_list3) @ any_list4) @ any_list5)))) = (any1::(any2::rotate (nat1) ((((any_list2 @ any_list3) @ any_list4) @ any_list5))))

1 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:17)
=================================================
Progress: 234


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) ((((((((Nil) @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) ((((((Nil) @ any_list2) @ any_list3) @ any_list4) @ any_list5))))

1 goal(s) more...

6 conjecture(s) more...
>>> simpl in goal(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) ((any1::(any2::(((any_list2 @ any_list3) @ any_list4) @ any_list5)))) = (any1::(any2::rotate (nat1) ((((any_list2 @ any_list3) @ any_list4) @ any_list5))))

1 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:17)
=================================================
Progress: 235


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) ((((((((Nil) @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) ((((((Nil) @ any_list2) @ any_list3) @ any_list4) @ any_list5))))

1 goal(s) more...

6 conjecture(s) more...
>>> simpl in goal(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) ((any1::(any2::(((any_list2 @ any_list3) @ any_list4) @ any_list5)))) = (any1::(any2::rotate (nat1) ((((any_list2 @ any_list3) @ any_list4) @ any_list5))))

1 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:17)
=================================================
Progress: 236


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) ((((((((Nil) @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) ((((((Nil) @ any_list2) @ any_list3) @ any_list4) @ any_list5))))

1 goal(s) more...

6 conjecture(s) more...
>>> simpl in goal(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) ((any1::(any2::(((any_list2 @ any_list3) @ any_list4) @ any_list5)))) = (any1::(any2::rotate (nat1) ((((any_list2 @ any_list3) @ any_list4) @ any_list5))))

1 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:17)
=================================================
Progress: 237


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) ((((((((Nil) @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) ((((((Nil) @ any_list2) @ any_list3) @ any_list4) @ any_list5))))

1 goal(s) more...

6 conjecture(s) more...
>>> simpl in goal(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) ((any1::(any2::(((any_list2 @ any_list3) @ any_list4) @ any_list5)))) = (any1::(any2::rotate (nat1) ((((any_list2 @ any_list3) @ any_list4) @ any_list5))))

1 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:17)
=================================================
Progress: 238


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (nat1:nat), rotate (nat1) ((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4)) = (any1::(any2::rotate (nat1) ((((any_list1 @ any_list2) @ any_list3) @ any_list4))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list4:any list) (nat1:nat), rotate (nat1) ((any1::(any2::((Nil) @ any_list4)))) = (any1::(any2::rotate (nat1) (((Nil) @ any_list4))))

3 goal(s) more...

5 conjecture(s) more...
>>> simpl in goal(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (nat1:nat), rotate (nat1) ((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4)) = (any1::(any2::rotate (nat1) ((((any_list1 @ any_list2) @ any_list3) @ any_list4))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list4:any list) (nat1:nat), rotate (nat1) ((any1::(any2::any_list4))) = (any1::(any2::rotate (nat1) (any_list4)))

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:17)
=================================================
Progress: 239


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (nat1:nat), rotate (nat1) ((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4)) = (any1::(any2::rotate (nat1) ((((any_list1 @ any_list2) @ any_list3) @ any_list4))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list4:any list) (nat1:nat), rotate (nat1) ((any1::(any2::((Nil) @ any_list4)))) = (any1::(any2::rotate (nat1) (((Nil) @ any_list4))))

3 goal(s) more...

5 conjecture(s) more...
>>> simpl in goal(rank : 16)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (nat1:nat), rotate (nat1) ((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4)) = (any1::(any2::rotate (nat1) ((((any_list1 @ any_list2) @ any_list3) @ any_list4))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list4:any list) (nat1:nat), rotate (nat1) ((any1::(any2::any_list4))) = (any1::(any2::rotate (nat1) (any_list4)))

3 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:17)
=================================================
Progress: 240


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) ((any1::(any2::(((any_list2 @ any_list3) @ any_list4) @ any_list5)))) = (any1::(any2::rotate (nat1) ((((any_list2 @ any_list3) @ any_list4) @ any_list5))))

1 goal(s) more...

6 conjecture(s) more...
>>> induction any_list2(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) ((any1::(any2::((((Nil) @ any_list3) @ any_list4) @ any_list5)))) = (any1::(any2::rotate (nat1) (((((Nil) @ any_list3) @ any_list4) @ any_list5))))

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:17)
=================================================
Progress: 241


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) ((any1::(any2::(((any_list2 @ any_list3) @ any_list4) @ any_list5)))) = (any1::(any2::rotate (nat1) ((((any_list2 @ any_list3) @ any_list4) @ any_list5))))

1 goal(s) more...

6 conjecture(s) more...
>>> induction any_list2(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) ((any1::(any2::((((Nil) @ any_list3) @ any_list4) @ any_list5)))) = (any1::(any2::rotate (nat1) (((((Nil) @ any_list3) @ any_list4) @ any_list5))))

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:17)
=================================================
Progress: 242


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) ((any1::(any2::(((any_list2 @ any_list3) @ any_list4) @ any_list5)))) = (any1::(any2::rotate (nat1) ((((any_list2 @ any_list3) @ any_list4) @ any_list5))))

1 goal(s) more...

6 conjecture(s) more...
>>> induction any_list2(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) ((any1::(any2::((((Nil) @ any_list3) @ any_list4) @ any_list5)))) = (any1::(any2::rotate (nat1) (((((Nil) @ any_list3) @ any_list4) @ any_list5))))

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:17)
=================================================
Progress: 243


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) ((any1::(any2::(((any_list2 @ any_list3) @ any_list4) @ any_list5)))) = (any1::(any2::rotate (nat1) ((((any_list2 @ any_list3) @ any_list4) @ any_list5))))

1 goal(s) more...

6 conjecture(s) more...
>>> induction any_list2(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) ((any1::(any2::((((Nil) @ any_list3) @ any_list4) @ any_list5)))) = (any1::(any2::rotate (nat1) (((((Nil) @ any_list3) @ any_list4) @ any_list5))))

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:17)
=================================================
Progress: 244


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) ((any1::(any2::(((any_list2 @ any_list3) @ any_list4) @ any_list5)))) = (any1::(any2::rotate (nat1) ((((any_list2 @ any_list3) @ any_list4) @ any_list5))))

1 goal(s) more...

6 conjecture(s) more...
>>> induction any_list2(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) ((any1::(any2::((((Nil) @ any_list3) @ any_list4) @ any_list5)))) = (any1::(any2::rotate (nat1) (((((Nil) @ any_list3) @ any_list4) @ any_list5))))

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:17)
=================================================
Progress: 245


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (nat1:nat), rotate (nat1) ((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4)) = (any1::(any2::rotate (nat1) ((((any_list1 @ any_list2) @ any_list3) @ any_list4))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list4:any list) (nat1:nat), rotate (nat1) ((any1::(any2::any_list4))) = (any1::(any2::rotate (nat1) (any_list4)))

3 goal(s) more...

5 conjecture(s) more...
>>> induction any_list4(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (nat1:nat), rotate (nat1) ((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4)) = (any1::(any2::rotate (nat1) ((((any_list1 @ any_list2) @ any_list3) @ any_list4))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
any_list4 : any list
Base4 : any_list4 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (nat1:nat), rotate (nat1) ((any1::(any2::(Nil)))) = (any1::(any2::rotate (nat1) ((Nil))))

4 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction nat1(rank:18)
=================================================
Progress: 246


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (nat1:nat), rotate (nat1) ((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4)) = (any1::(any2::rotate (nat1) ((((any_list1 @ any_list2) @ any_list3) @ any_list4))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list4:any list) (nat1:nat), rotate (nat1) ((any1::(any2::any_list4))) = (any1::(any2::rotate (nat1) (any_list4)))

3 goal(s) more...

5 conjecture(s) more...
>>> induction any_list4(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (nat1:nat), rotate (nat1) ((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4)) = (any1::(any2::rotate (nat1) ((((any_list1 @ any_list2) @ any_list3) @ any_list4))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
any_list4 : any list
Base4 : any_list4 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (nat1:nat), rotate (nat1) ((any1::(any2::(Nil)))) = (any1::(any2::rotate (nat1) ((Nil))))

4 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
induction nat1(rank:18)
=================================================
Progress: 247


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) ((any1::(any2::((((Nil) @ any_list3) @ any_list4) @ any_list5)))) = (any1::(any2::rotate (nat1) (((((Nil) @ any_list3) @ any_list4) @ any_list5))))

2 goal(s) more...

6 conjecture(s) more...
>>> simpl in goal(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) ((any1::(any2::((any_list3 @ any_list4) @ any_list5)))) = (any1::(any2::rotate (nat1) (((any_list3 @ any_list4) @ any_list5))))

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list3(rank:18)
=================================================
Progress: 248


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) ((any1::(any2::((((Nil) @ any_list3) @ any_list4) @ any_list5)))) = (any1::(any2::rotate (nat1) (((((Nil) @ any_list3) @ any_list4) @ any_list5))))

2 goal(s) more...

6 conjecture(s) more...
>>> simpl in goal(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) ((any1::(any2::((any_list3 @ any_list4) @ any_list5)))) = (any1::(any2::rotate (nat1) (((any_list3 @ any_list4) @ any_list5))))

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list3(rank:18)
=================================================
Progress: 249


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) ((any1::(any2::((((Nil) @ any_list3) @ any_list4) @ any_list5)))) = (any1::(any2::rotate (nat1) (((((Nil) @ any_list3) @ any_list4) @ any_list5))))

2 goal(s) more...

6 conjecture(s) more...
>>> simpl in goal(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) ((any1::(any2::((any_list3 @ any_list4) @ any_list5)))) = (any1::(any2::rotate (nat1) (((any_list3 @ any_list4) @ any_list5))))

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list3(rank:18)
=================================================
Progress: 250


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) ((any1::(any2::((((Nil) @ any_list3) @ any_list4) @ any_list5)))) = (any1::(any2::rotate (nat1) (((((Nil) @ any_list3) @ any_list4) @ any_list5))))

2 goal(s) more...

6 conjecture(s) more...
>>> simpl in goal(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) ((any1::(any2::((any_list3 @ any_list4) @ any_list5)))) = (any1::(any2::rotate (nat1) (((any_list3 @ any_list4) @ any_list5))))

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list3(rank:18)
=================================================
Progress: 251


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) ((any1::(any2::((((Nil) @ any_list3) @ any_list4) @ any_list5)))) = (any1::(any2::rotate (nat1) (((((Nil) @ any_list3) @ any_list4) @ any_list5))))

2 goal(s) more...

6 conjecture(s) more...
>>> simpl in goal(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) ((any1::(any2::((any_list3 @ any_list4) @ any_list5)))) = (any1::(any2::rotate (nat1) (((any_list3 @ any_list4) @ any_list5))))

2 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list3(rank:18)
=================================================
Progress: 252


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> induction any_list1(rank : 18)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len ((Nil))) ((((((((Nil) @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

1 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
reflexivity(rank:17)
=================================================
Progress: 253


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len ((Nil))) ((((((((Nil) @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

1 goal(s) more...

7 conjecture(s) more...
>>> reflexivity(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len ((any8::any_list2))) ((((((((((any8::any_list2) @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len ((any8::any_list2))) ((((((((any8::any_list2) @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:17)
=================================================
Progress: 254


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len ((any8::any_list2))) ((((((((((any8::any_list2) @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len ((any8::any_list2))) ((((((((any8::any_list2) @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> simpl in goal(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 7
intro any1(rank:17)
intro any3(rank:17)
intro any5(rank:17)
intro any6(rank:17)
intro any7(rank:17)
intro any4(rank:17)
intro any2(rank:17)
=================================================
Progress: 255


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any1(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 6
intro any2(rank:17)
intro any4(rank:17)
intro any5(rank:17)
intro any6(rank:17)
intro any7(rank:17)
intro any3(rank:17)
=================================================
Progress: 256


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any2(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 5
intro any3(rank:17)
intro any5(rank:17)
intro any6(rank:17)
intro any7(rank:17)
intro any4(rank:17)
=================================================
Progress: 257


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any3(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 4
intro any4(rank:17)
intro any5(rank:17)
intro any6(rank:17)
intro any7(rank:17)
=================================================
Progress: 258


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any4(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 3
intro any5(rank:17)
intro any6(rank:17)
intro any7(rank:17)
=================================================
Progress: 259


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any5(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any5 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 2
intro any6(rank:17)
intro any7(rank:17)
=================================================
Progress: 260


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any6(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any6 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro any7(rank:17)
=================================================
Progress: 261


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any7(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any7 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any7
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg389:any list) (arg390:any list) (arg391:any list) (arg392:any list) (arg393:any list) (arg394:any list) (arg395:any list) (arg396:nat), rotate (arg396) (((((((((arg389 @ (any1::(Nil))) @ (any2::(Nil))) @ arg390) @ arg391) @ arg392) @ arg393) @ arg394) @ arg395)) = (any1::(any2::rotate (arg396) (((((((arg389 @ arg390) @ arg391) @ arg392) @ arg393) @ arg394) @ arg395))))
Model : any1: 7, any2: 0, arg389: (Nil), arg390: (3::(Nil)), arg391: (Nil), arg392: (Nil), arg393: (6::(Nil)), arg394: (Nil), arg395: (5::(Nil)), arg396: SUCC (ZERO)
Model : any1: 6, any2: 4, arg389: (Nil), arg390: (Nil), arg391: (Nil), arg392: (Nil), arg393: (Nil), arg394: (Nil), arg395: (Nil), arg396: ZERO
Model : any1: 7, any2: 0, arg389: (Nil), arg390: (0::(Nil)), arg391: (Nil), arg392: (Nil), arg393: (7::(Nil)), arg394: (Nil), arg395: (Nil), arg396: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (SUCC (ZERO)) ((((((((((Nil) @ (7::(Nil))) @ (0::(Nil))) @ (3::(Nil))) @ (Nil)) @ (Nil)) @ (6::(Nil))) @ (Nil)) @ (5::(Nil)))) = (7::(0::rotate (SUCC (ZERO)) ((((((((Nil) @ (3::(Nil))) @ (Nil)) @ (Nil)) @ (6::(Nil))) @ (Nil)) @ (5::(Nil))))))
rotate (ZERO) ((((((((((Nil) @ (6::(Nil))) @ (4::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (6::(4::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) ((((((((((Nil) @ (7::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (7::(Nil))) @ (Nil)) @ (Nil))) = (7::(0::rotate (ZERO) ((((((((Nil) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (7::(Nil))) @ (Nil)) @ (Nil)))))
Simplifying took 0.003669 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list2:any list), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Model : any1: 1, any2: 2, any3: 5, any4: 8, any5: 4, any6: 0, any7: 5, any8: 2, any_list2: (Nil)
Model : any1: 0, any2: 3, any3: 3, any4: 3, any5: 6, any6: 0, any7: 8, any8: 7, any_list2: (0::(Nil))
Model : any1: 6, any2: 2, any3: 4, any4: 1, any5: 7, any6: 4, any7: 1, any8: 2, any_list2: (5::(Nil))
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (1::(Nil))) @ (2::(Nil))) @ (5::(Nil))) @ (8::(Nil))) @ (4::(Nil))) @ (0::(Nil))) @ (5::(Nil))) @ (2::(Nil)))) = (1::(2::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (5::(Nil))) @ (8::(Nil))) @ (4::(Nil))) @ (0::(Nil))) @ (5::(Nil))) @ (2::(Nil))))))
rotate (len ((0::(Nil)))) (((((((((((0::(Nil)) @ (Nil)) @ (0::(Nil))) @ (3::(Nil))) @ (3::(Nil))) @ (3::(Nil))) @ (6::(Nil))) @ (0::(Nil))) @ (8::(Nil))) @ (7::(Nil)))) = (0::(3::rotate (len ((0::(Nil)))) (((((((((0::(Nil)) @ (Nil)) @ (3::(Nil))) @ (3::(Nil))) @ (6::(Nil))) @ (0::(Nil))) @ (8::(Nil))) @ (7::(Nil))))))
rotate (len ((5::(Nil)))) (((((((((((5::(Nil)) @ (Nil)) @ (6::(Nil))) @ (2::(Nil))) @ (4::(Nil))) @ (1::(Nil))) @ (7::(Nil))) @ (4::(Nil))) @ (1::(Nil))) @ (2::(Nil)))) = (6::(2::rotate (len ((5::(Nil)))) (((((((((5::(Nil)) @ (Nil)) @ (4::(Nil))) @ (1::(Nil))) @ (7::(Nil))) @ (4::(Nil))) @ (1::(Nil))) @ (2::(Nil))))))
Simplifying took 0.014476 seconds
Result : true
advanced_generalize done


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any7 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
=================================================
Progress: 262


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any7 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list2:any list), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:20)
=================================================
Progress: 263


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any2(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 5
intro any3(rank:17)
intro any5(rank:17)
intro any6(rank:17)
intro any7(rank:17)
intro any4(rank:17)
=================================================
Progress: 264


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any3(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 4
intro any4(rank:17)
intro any5(rank:17)
intro any6(rank:17)
intro any7(rank:17)
=================================================
Progress: 265


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any4(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 3
intro any5(rank:17)
intro any6(rank:17)
intro any7(rank:17)
=================================================
Progress: 266


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any5(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any5 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 2
intro any6(rank:17)
intro any7(rank:17)
=================================================
Progress: 267


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any6(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any6 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any5:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro any7(rank:17)
=================================================
Progress: 268


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any7(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any7 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any7
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg397:any list) (arg398:any list) (arg399:any list) (arg400:any list) (arg401:any list) (arg402:any list) (arg403:any list) (arg404:nat), rotate (arg404) (((((((((arg397 @ (any1::(Nil))) @ (any2::(Nil))) @ arg398) @ arg399) @ arg400) @ arg401) @ arg402) @ arg403)) = (any1::(any2::rotate (arg404) (((((((arg397 @ arg398) @ arg399) @ arg400) @ arg401) @ arg402) @ arg403))))
Model : any1: 2, any2: 8, arg397: (Nil), arg398: (Nil), arg399: (Nil), arg400: (Nil), arg401: (Nil), arg402: (6::(Nil)), arg403: (Nil), arg404: ZERO
Model : any1: 0, any2: 5, arg397: (Nil), arg398: (6::(Nil)), arg399: (Nil), arg400: (Nil), arg401: (6::(Nil)), arg402: (Nil), arg403: (Nil), arg404: ZERO
Model : any1: 3, any2: 4, arg397: (Nil), arg398: (3::(Nil)), arg399: (0::(5::(Nil))), arg400: (Nil), arg401: (Nil), arg402: (Nil), arg403: (8::(0::(Nil))), arg404: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) ((((((((((Nil) @ (2::(Nil))) @ (8::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (6::(Nil))) @ (Nil))) = (2::(8::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (6::(Nil))) @ (Nil)))))
rotate (ZERO) ((((((((((Nil) @ (0::(Nil))) @ (5::(Nil))) @ (6::(Nil))) @ (Nil)) @ (Nil)) @ (6::(Nil))) @ (Nil)) @ (Nil))) = (0::(5::rotate (ZERO) ((((((((Nil) @ (6::(Nil))) @ (Nil)) @ (Nil)) @ (6::(Nil))) @ (Nil)) @ (Nil)))))
rotate (ZERO) ((((((((((Nil) @ (3::(Nil))) @ (4::(Nil))) @ (3::(Nil))) @ (0::(5::(Nil)))) @ (Nil)) @ (Nil)) @ (Nil)) @ (8::(0::(Nil))))) = (3::(4::rotate (ZERO) ((((((((Nil) @ (3::(Nil))) @ (0::(5::(Nil)))) @ (Nil)) @ (Nil)) @ (Nil)) @ (8::(0::(Nil)))))))
Simplifying took 0.004566 seconds
Result : true
advanced_generalize done


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any7 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
=================================================
Progress: 269


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any7 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (arg397:any list) (arg398:any list) (arg399:any list) (arg400:any list) (arg401:any list) (arg402:any list) (arg403:any list) (arg404:nat), rotate (arg404) (((((((((arg397 @ (any1::(Nil))) @ (any2::(Nil))) @ arg398) @ arg399) @ arg400) @ arg401) @ arg402) @ arg403)) = (any1::(any2::rotate (arg404) (((((((arg397 @ arg398) @ arg399) @ arg400) @ arg401) @ arg402) @ arg403))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (any_list7:any list) (nat1:nat), rotate (nat1) (((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7)) = (any1::(any2::rotate (nat1) (((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (any_list7:any list) (nat1:nat), rotate (nat1) (((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7)) = (any1::(any2::rotate (nat1) (((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:20)
=================================================
Progress: 270


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any3(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 4
intro any4(rank:17)
intro any5(rank:17)
intro any6(rank:17)
intro any7(rank:17)
=================================================
Progress: 271


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any4(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 3
intro any5(rank:17)
intro any6(rank:17)
intro any7(rank:17)
=================================================
Progress: 272


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any5(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any2 : any
any5 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 2
intro any6(rank:17)
intro any7(rank:17)
=================================================
Progress: 273


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any6(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any2 : any
any6 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any5:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro any7(rank:17)
=================================================
Progress: 274


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any7(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any2 : any
any7 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any7
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg405:any list) (arg406:any list) (arg407:any list) (arg408:any list) (arg409:any list) (arg410:any list) (arg411:any list) (arg412:nat), rotate (arg412) (((((((((arg405 @ (any1::(Nil))) @ (any2::(Nil))) @ arg406) @ arg407) @ arg408) @ arg409) @ arg410) @ arg411)) = (any1::(any2::rotate (arg412) (((((((arg405 @ arg406) @ arg407) @ arg408) @ arg409) @ arg410) @ arg411))))
Model : any1: 0, any2: 5, arg405: (Nil), arg406: (Nil), arg407: (Nil), arg408: (Nil), arg409: (Nil), arg410: (2::(3::(Nil))), arg411: (Nil), arg412: SUCC (SUCC (ZERO))
Model : any1: 8, any2: 1, arg405: (Nil), arg406: (Nil), arg407: (Nil), arg408: (7::(Nil)), arg409: (Nil), arg410: (Nil), arg411: (Nil), arg412: SUCC (ZERO)
Model : any1: 1, any2: 4, arg405: (Nil), arg406: (0::(5::(Nil))), arg407: (Nil), arg408: (Nil), arg409: (Nil), arg410: (Nil), arg411: (Nil), arg412: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (SUCC (SUCC (ZERO))) ((((((((((Nil) @ (0::(Nil))) @ (5::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (2::(3::(Nil)))) @ (Nil))) = (0::(5::rotate (SUCC (SUCC (ZERO))) ((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (2::(3::(Nil)))) @ (Nil)))))
rotate (SUCC (ZERO)) ((((((((((Nil) @ (8::(Nil))) @ (1::(Nil))) @ (Nil)) @ (Nil)) @ (7::(Nil))) @ (Nil)) @ (Nil)) @ (Nil))) = (8::(1::rotate (SUCC (ZERO)) ((((((((Nil) @ (Nil)) @ (Nil)) @ (7::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) ((((((((((Nil) @ (1::(Nil))) @ (4::(Nil))) @ (0::(5::(Nil)))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (1::(4::rotate (ZERO) ((((((((Nil) @ (0::(5::(Nil)))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
Simplifying took 0.004203 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list2:any list), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Model : any1: 0, any2: 1, any3: 5, any4: 6, any5: 2, any6: 2, any7: 0, any8: 4, any_list2: (Nil)
Model : any1: 5, any2: 0, any3: 4, any4: 7, any5: 6, any6: 1, any7: 3, any8: 0, any_list2: (5::(Nil))
Model : any1: 0, any2: 6, any3: 8, any4: 0, any5: 7, any6: 8, any7: 5, any8: 7, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (1::(Nil))) @ (5::(Nil))) @ (6::(Nil))) @ (2::(Nil))) @ (2::(Nil))) @ (0::(Nil))) @ (4::(Nil)))) = (0::(1::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (5::(Nil))) @ (6::(Nil))) @ (2::(Nil))) @ (2::(Nil))) @ (0::(Nil))) @ (4::(Nil))))))
rotate (len ((5::(Nil)))) (((((((((((5::(Nil)) @ (Nil)) @ (5::(Nil))) @ (0::(Nil))) @ (4::(Nil))) @ (7::(Nil))) @ (6::(Nil))) @ (1::(Nil))) @ (3::(Nil))) @ (0::(Nil)))) = (5::(0::rotate (len ((5::(Nil)))) (((((((((5::(Nil)) @ (Nil)) @ (4::(Nil))) @ (7::(Nil))) @ (6::(Nil))) @ (1::(Nil))) @ (3::(Nil))) @ (0::(Nil))))))
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (6::(Nil))) @ (8::(Nil))) @ (0::(Nil))) @ (7::(Nil))) @ (8::(Nil))) @ (5::(Nil))) @ (7::(Nil)))) = (0::(6::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (8::(Nil))) @ (0::(Nil))) @ (7::(Nil))) @ (8::(Nil))) @ (5::(Nil))) @ (7::(Nil))))))
Simplifying took 0.012301 seconds
Result : true
advanced_generalize done
=================================================
Progress: 275


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any4(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 3
intro any5(rank:17)
intro any6(rank:17)
intro any7(rank:17)
=================================================
Progress: 276


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any5(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any3 : any
any5 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 2
intro any6(rank:17)
intro any7(rank:17)
=================================================
Progress: 277


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any6(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any3 : any
any6 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any5:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro any7(rank:17)
=================================================
Progress: 278


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any7(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any3 : any
any7 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any7
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg413:any list) (arg414:any list) (arg415:any list) (arg416:any list) (arg417:any list) (arg418:any list) (arg419:any list) (arg420:nat), rotate (arg420) (((((((((arg413 @ (any1::(Nil))) @ (any2::(Nil))) @ arg414) @ arg415) @ arg416) @ arg417) @ arg418) @ arg419)) = (any1::(any2::rotate (arg420) (((((((arg413 @ arg414) @ arg415) @ arg416) @ arg417) @ arg418) @ arg419))))
Model : any1: 0, any2: 6, arg413: (Nil), arg414: (Nil), arg415: (7::(Nil)), arg416: (Nil), arg417: (Nil), arg418: (Nil), arg419: (3::(3::(6::(8::(Nil))))), arg420: ZERO
Model : any1: 6, any2: 2, arg413: (Nil), arg414: (Nil), arg415: (Nil), arg416: (Nil), arg417: (Nil), arg418: (Nil), arg419: (0::(4::(Nil))), arg420: ZERO
Model : any1: 5, any2: 5, arg413: (Nil), arg414: (Nil), arg415: (0::(Nil)), arg416: (Nil), arg417: (Nil), arg418: (Nil), arg419: (Nil), arg420: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) ((((((((((Nil) @ (0::(Nil))) @ (6::(Nil))) @ (Nil)) @ (7::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (3::(3::(6::(8::(Nil))))))) = (0::(6::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (7::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (3::(3::(6::(8::(Nil)))))))))
rotate (ZERO) ((((((((((Nil) @ (6::(Nil))) @ (2::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (0::(4::(Nil))))) = (6::(2::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (0::(4::(Nil)))))))
rotate (ZERO) ((((((((((Nil) @ (5::(Nil))) @ (5::(Nil))) @ (Nil)) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (5::(5::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
Simplifying took 0.002851 seconds
Result : true
advanced_generalize done


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any3 : any
any7 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
=================================================
Progress: 279


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any3 : any
any7 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (arg413:any list) (arg414:any list) (arg415:any list) (arg416:any list) (arg417:any list) (arg418:any list) (arg419:any list) (arg420:nat), rotate (arg420) (((((((((arg413 @ (any1::(Nil))) @ (any2::(Nil))) @ arg414) @ arg415) @ arg416) @ arg417) @ arg418) @ arg419)) = (any1::(any2::rotate (arg420) (((((((arg413 @ arg414) @ arg415) @ arg416) @ arg417) @ arg418) @ arg419))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (any_list7:any list) (nat1:nat), rotate (nat1) (((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7)) = (any1::(any2::rotate (nat1) (((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (any_list7:any list) (nat1:nat), rotate (nat1) (((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7)) = (any1::(any2::rotate (nat1) (((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:20)
=================================================
Progress: 280


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any5(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any4 : any
any5 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 2
intro any6(rank:17)
intro any7(rank:17)
=================================================
Progress: 281


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any6(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any4 : any
any6 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any5:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro any7(rank:17)
=================================================
Progress: 282


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any7(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any4 : any
any7 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any4
intro any7
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg421:any list) (arg422:any list) (arg423:any list) (arg424:any list) (arg425:any list) (arg426:any list) (arg427:any list) (arg428:nat), rotate (arg428) (((((((((arg421 @ (any1::(Nil))) @ (any2::(Nil))) @ arg422) @ arg423) @ arg424) @ arg425) @ arg426) @ arg427)) = (any1::(any2::rotate (arg428) (((((((arg421 @ arg422) @ arg423) @ arg424) @ arg425) @ arg426) @ arg427))))
Model : any1: 5, any2: 0, arg421: (Nil), arg422: (Nil), arg423: (Nil), arg424: (Nil), arg425: (Nil), arg426: (Nil), arg427: (4::(Nil)), arg428: SUCC (ZERO)
Model : any1: 1, any2: 6, arg421: (Nil), arg422: (7::(2::(6::(Nil)))), arg423: (Nil), arg424: (Nil), arg425: (0::(Nil)), arg426: (Nil), arg427: (Nil), arg428: ZERO
Model : any1: 4, any2: 2, arg421: (Nil), arg422: (Nil), arg423: (Nil), arg424: (Nil), arg425: (Nil), arg426: (5::(Nil)), arg427: (7::(4::(5::(0::(8::(Nil)))))), arg428: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (SUCC (ZERO)) ((((((((((Nil) @ (5::(Nil))) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (4::(Nil)))) = (5::(0::rotate (SUCC (ZERO)) ((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (4::(Nil))))))
rotate (ZERO) ((((((((((Nil) @ (1::(Nil))) @ (6::(Nil))) @ (7::(2::(6::(Nil))))) @ (Nil)) @ (Nil)) @ (0::(Nil))) @ (Nil)) @ (Nil))) = (1::(6::rotate (ZERO) ((((((((Nil) @ (7::(2::(6::(Nil))))) @ (Nil)) @ (Nil)) @ (0::(Nil))) @ (Nil)) @ (Nil)))))
rotate (ZERO) ((((((((((Nil) @ (4::(Nil))) @ (2::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (5::(Nil))) @ (7::(4::(5::(0::(8::(Nil)))))))) = (4::(2::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (5::(Nil))) @ (7::(4::(5::(0::(8::(Nil))))))))))
Simplifying took 0.004679 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list2:any list), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Model : any1: 7, any2: 4, any3: 0, any4: 3, any5: 3, any6: 2, any7: 0, any8: 2, any_list2: (Nil)
Model : any1: 5, any2: 0, any3: 5, any4: 4, any5: 8, any6: 2, any7: 8, any8: 6, any_list2: (1::(5::(Nil)))
Model : any1: 0, any2: 4, any3: 5, any4: 3, any5: 6, any6: 1, any7: 3, any8: 3, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (7::(Nil))) @ (4::(Nil))) @ (0::(Nil))) @ (3::(Nil))) @ (3::(Nil))) @ (2::(Nil))) @ (0::(Nil))) @ (2::(Nil)))) = (7::(4::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (3::(Nil))) @ (3::(Nil))) @ (2::(Nil))) @ (0::(Nil))) @ (2::(Nil))))))
rotate (len ((1::(5::(Nil))))) (((((((((((1::(5::(Nil))) @ (Nil)) @ (5::(Nil))) @ (0::(Nil))) @ (5::(Nil))) @ (4::(Nil))) @ (8::(Nil))) @ (2::(Nil))) @ (8::(Nil))) @ (6::(Nil)))) = (5::(0::rotate (len ((1::(5::(Nil))))) (((((((((1::(5::(Nil))) @ (Nil)) @ (5::(Nil))) @ (4::(Nil))) @ (8::(Nil))) @ (2::(Nil))) @ (8::(Nil))) @ (6::(Nil))))))
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (4::(Nil))) @ (5::(Nil))) @ (3::(Nil))) @ (6::(Nil))) @ (1::(Nil))) @ (3::(Nil))) @ (3::(Nil)))) = (0::(4::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (5::(Nil))) @ (3::(Nil))) @ (6::(Nil))) @ (1::(Nil))) @ (3::(Nil))) @ (3::(Nil))))))
Simplifying took 0.015839 seconds
Result : true
advanced_generalize done
=================================================
Progress: 283


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any5 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any6(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any5 : any
any6 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro any7(rank:17)
=================================================
Progress: 284


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any5 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any7(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any5 : any
any7 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any6:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any5
intro any7
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg429:any list) (arg430:any list) (arg431:any list) (arg432:any list) (arg433:any list) (arg434:any list) (arg435:any list) (arg436:nat), rotate (arg436) (((((((((arg429 @ (any1::(Nil))) @ (any2::(Nil))) @ arg430) @ arg431) @ arg432) @ arg433) @ arg434) @ arg435)) = (any1::(any2::rotate (arg436) (((((((arg429 @ arg430) @ arg431) @ arg432) @ arg433) @ arg434) @ arg435))))
Model : any1: 6, any2: 5, arg429: (8::(Nil)), arg430: (6::(2::(8::(Nil)))), arg431: (Nil), arg432: (Nil), arg433: (Nil), arg434: (Nil), arg435: (8::(Nil)), arg436: ZERO
Model : any1: 0, any2: 6, arg429: (8::(Nil)), arg430: (0::(Nil)), arg431: (Nil), arg432: (Nil), arg433: (Nil), arg434: (8::(Nil)), arg435: (Nil), arg436: ZERO
Model : any1: 4, any2: 8, arg429: (Nil), arg430: (Nil), arg431: (Nil), arg432: (Nil), arg433: (Nil), arg434: (Nil), arg435: (Nil), arg436: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) ((((((((((8::(Nil)) @ (6::(Nil))) @ (5::(Nil))) @ (6::(2::(8::(Nil))))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (8::(Nil)))) = (6::(5::rotate (ZERO) ((((((((8::(Nil)) @ (6::(2::(8::(Nil))))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (8::(Nil))))))
rotate (ZERO) ((((((((((8::(Nil)) @ (0::(Nil))) @ (6::(Nil))) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (8::(Nil))) @ (Nil))) = (0::(6::rotate (ZERO) ((((((((8::(Nil)) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (8::(Nil))) @ (Nil)))))
rotate (ZERO) ((((((((((Nil) @ (4::(Nil))) @ (8::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (4::(8::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
Simplifying took 0.007196 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list2:any list), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Model : any1: 2, any2: 2, any3: 6, any4: 1, any5: 0, any6: 0, any7: 5, any8: 7, any_list2: (Nil)
Model : any1: 8, any2: 0, any3: 0, any4: 3, any5: 8, any6: 8, any7: 5, any8: 2, any_list2: (Nil)
Model : any1: 7, any2: 0, any3: 6, any4: 1, any5: 2, any6: 3, any7: 3, any8: 5, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (2::(Nil))) @ (2::(Nil))) @ (6::(Nil))) @ (1::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (5::(Nil))) @ (7::(Nil)))) = (2::(2::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (6::(Nil))) @ (1::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (5::(Nil))) @ (7::(Nil))))))
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (8::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (3::(Nil))) @ (8::(Nil))) @ (8::(Nil))) @ (5::(Nil))) @ (2::(Nil)))) = (8::(0::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (3::(Nil))) @ (8::(Nil))) @ (8::(Nil))) @ (5::(Nil))) @ (2::(Nil))))))
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (7::(Nil))) @ (0::(Nil))) @ (6::(Nil))) @ (1::(Nil))) @ (2::(Nil))) @ (3::(Nil))) @ (3::(Nil))) @ (5::(Nil)))) = (7::(0::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (6::(Nil))) @ (1::(Nil))) @ (2::(Nil))) @ (3::(Nil))) @ (3::(Nil))) @ (5::(Nil))))))
Simplifying took 0.008557 seconds
Result : true
advanced_generalize done
=================================================
Progress: 285


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any6 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any7(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any6 : any
any7 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any6
intro any7
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg437:any list) (arg438:any list) (arg439:any list) (arg440:any list) (arg441:any list) (arg442:any list) (arg443:any list) (arg444:nat), rotate (arg444) (((((((((arg437 @ (any1::(Nil))) @ (any2::(Nil))) @ arg438) @ arg439) @ arg440) @ arg441) @ arg442) @ arg443)) = (any1::(any2::rotate (arg444) (((((((arg437 @ arg438) @ arg439) @ arg440) @ arg441) @ arg442) @ arg443))))
Model : any1: 6, any2: 2, arg437: (Nil), arg438: (Nil), arg439: (Nil), arg440: (Nil), arg441: (5::(Nil)), arg442: (Nil), arg443: (Nil), arg444: ZERO
Model : any1: 1, any2: 7, arg437: (Nil), arg438: (Nil), arg439: (Nil), arg440: (Nil), arg441: (Nil), arg442: (Nil), arg443: (Nil), arg444: ZERO
Model : any1: 8, any2: 3, arg437: (Nil), arg438: (Nil), arg439: (Nil), arg440: (Nil), arg441: (Nil), arg442: (Nil), arg443: (Nil), arg444: SUCC (ZERO)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) ((((((((((Nil) @ (6::(Nil))) @ (2::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (5::(Nil))) @ (Nil)) @ (Nil))) = (6::(2::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (5::(Nil))) @ (Nil)) @ (Nil)))))
rotate (ZERO) ((((((((((Nil) @ (1::(Nil))) @ (7::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (1::(7::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (SUCC (ZERO)) ((((((((((Nil) @ (8::(Nil))) @ (3::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (8::(3::rotate (SUCC (ZERO)) ((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
Simplifying took 0.002272 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list2:any list), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Model : any1: 6, any2: 6, any3: 8, any4: 0, any5: 7, any6: 1, any7: 8, any8: 0, any_list2: (Nil)
Model : any1: 5, any2: 0, any3: 2, any4: 5, any5: 0, any6: 0, any7: 0, any8: 4, any_list2: (Nil)
Model : any1: 1, any2: 7, any3: 7, any4: 5, any5: 2, any6: 4, any7: 4, any8: 8, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (6::(Nil))) @ (6::(Nil))) @ (8::(Nil))) @ (0::(Nil))) @ (7::(Nil))) @ (1::(Nil))) @ (8::(Nil))) @ (0::(Nil)))) = (6::(6::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (8::(Nil))) @ (0::(Nil))) @ (7::(Nil))) @ (1::(Nil))) @ (8::(Nil))) @ (0::(Nil))))))
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (5::(Nil))) @ (0::(Nil))) @ (2::(Nil))) @ (5::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (4::(Nil)))) = (5::(0::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (2::(Nil))) @ (5::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (4::(Nil))))))
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (1::(Nil))) @ (7::(Nil))) @ (7::(Nil))) @ (5::(Nil))) @ (2::(Nil))) @ (4::(Nil))) @ (4::(Nil))) @ (8::(Nil)))) = (1::(7::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (7::(Nil))) @ (5::(Nil))) @ (2::(Nil))) @ (4::(Nil))) @ (4::(Nil))) @ (8::(Nil))))))
Simplifying took 0.008912 seconds
Result : true
advanced_generalize done
=================================================
Progress: 286


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any3(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 4
intro any4(rank:17)
intro any5(rank:17)
intro any6(rank:17)
intro any7(rank:17)
=================================================
Progress: 287


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any4(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 3
intro any5(rank:17)
intro any6(rank:17)
intro any7(rank:17)
=================================================
Progress: 288


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any5(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any2 : any
any5 : any
---------------------------------------
forall (any3:any) (any4:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 2
intro any6(rank:17)
intro any7(rank:17)
=================================================
Progress: 289


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any6(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any2 : any
any6 : any
---------------------------------------
forall (any3:any) (any4:any) (any5:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro any7(rank:17)
=================================================
Progress: 290


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any7(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any2 : any
any7 : any
---------------------------------------
forall (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any7
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg445:any list) (arg446:any list) (arg447:any list) (arg448:any list) (arg449:any list) (arg450:any list) (arg451:any list) (arg452:nat), rotate (arg452) (((((((((arg445 @ (any1::(Nil))) @ (any2::(Nil))) @ arg446) @ arg447) @ arg448) @ arg449) @ arg450) @ arg451)) = (any1::(any2::rotate (arg452) (((((((arg445 @ arg446) @ arg447) @ arg448) @ arg449) @ arg450) @ arg451))))
Model : any1: 1, any2: 6, arg445: (Nil), arg446: (Nil), arg447: (0::(Nil)), arg448: (Nil), arg449: (Nil), arg450: (1::(5::(4::(Nil)))), arg451: (Nil), arg452: ZERO
Model : any1: 3, any2: 1, arg445: (Nil), arg446: (Nil), arg447: (Nil), arg448: (Nil), arg449: (Nil), arg450: (4::(Nil)), arg451: (Nil), arg452: ZERO
Model : any1: 5, any2: 3, arg445: (Nil), arg446: (1::(Nil)), arg447: (Nil), arg448: (Nil), arg449: (Nil), arg450: (Nil), arg451: (1::(Nil)), arg452: SUCC (ZERO)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) ((((((((((Nil) @ (1::(Nil))) @ (6::(Nil))) @ (Nil)) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (1::(5::(4::(Nil))))) @ (Nil))) = (1::(6::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (1::(5::(4::(Nil))))) @ (Nil)))))
rotate (ZERO) ((((((((((Nil) @ (3::(Nil))) @ (1::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (4::(Nil))) @ (Nil))) = (3::(1::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (4::(Nil))) @ (Nil)))))
rotate (SUCC (ZERO)) ((((((((((Nil) @ (5::(Nil))) @ (3::(Nil))) @ (1::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (1::(Nil)))) = (5::(3::rotate (SUCC (ZERO)) ((((((((Nil) @ (1::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (1::(Nil))))))
Simplifying took 0.003136 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list2:any list), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Model : any1: 1, any2: 1, any3: 1, any4: 1, any5: 8, any6: 6, any7: 1, any8: 0, any_list2: (Nil)
Model : any1: 5, any2: 6, any3: 5, any4: 0, any5: 2, any6: 8, any7: 5, any8: 0, any_list2: (Nil)
Model : any1: 8, any2: 3, any3: 6, any4: 0, any5: 5, any6: 4, any7: 0, any8: 5, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (1::(Nil))) @ (1::(Nil))) @ (1::(Nil))) @ (1::(Nil))) @ (8::(Nil))) @ (6::(Nil))) @ (1::(Nil))) @ (0::(Nil)))) = (1::(1::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (1::(Nil))) @ (1::(Nil))) @ (8::(Nil))) @ (6::(Nil))) @ (1::(Nil))) @ (0::(Nil))))))
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (5::(Nil))) @ (6::(Nil))) @ (5::(Nil))) @ (0::(Nil))) @ (2::(Nil))) @ (8::(Nil))) @ (5::(Nil))) @ (0::(Nil)))) = (5::(6::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (5::(Nil))) @ (0::(Nil))) @ (2::(Nil))) @ (8::(Nil))) @ (5::(Nil))) @ (0::(Nil))))))
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (8::(Nil))) @ (3::(Nil))) @ (6::(Nil))) @ (0::(Nil))) @ (5::(Nil))) @ (4::(Nil))) @ (0::(Nil))) @ (5::(Nil)))) = (8::(3::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (6::(Nil))) @ (0::(Nil))) @ (5::(Nil))) @ (4::(Nil))) @ (0::(Nil))) @ (5::(Nil))))))
Simplifying took 0.008966 seconds
Result : true
advanced_generalize done
=================================================
Progress: 291


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any4(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 3
intro any5(rank:17)
intro any6(rank:17)
intro any7(rank:17)
=================================================
Progress: 292


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any5(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any3 : any
any5 : any
---------------------------------------
forall (any2:any) (any4:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 2
intro any6(rank:17)
intro any7(rank:17)
=================================================
Progress: 293


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any6(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any3 : any
any6 : any
---------------------------------------
forall (any2:any) (any4:any) (any5:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro any7(rank:17)
=================================================
Progress: 294


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any7(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any3 : any
any7 : any
---------------------------------------
forall (any2:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any7
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg453:any list) (arg454:any list) (arg455:any list) (arg456:any list) (arg457:any list) (arg458:any list) (arg459:any list) (arg460:nat), rotate (arg460) (((((((((arg453 @ (any1::(Nil))) @ (any2::(Nil))) @ arg454) @ arg455) @ arg456) @ arg457) @ arg458) @ arg459)) = (any1::(any2::rotate (arg460) (((((((arg453 @ arg454) @ arg455) @ arg456) @ arg457) @ arg458) @ arg459))))
Model : any1: 8, any2: 2, arg453: (6::(Nil)), arg454: (Nil), arg455: (Nil), arg456: (Nil), arg457: (Nil), arg458: (Nil), arg459: (Nil), arg460: ZERO
Model : any1: 4, any2: 1, arg453: (Nil), arg454: (Nil), arg455: (Nil), arg456: (4::(Nil)), arg457: (Nil), arg458: (Nil), arg459: (3::(Nil)), arg460: ZERO
Model : any1: 6, any2: 0, arg453: (Nil), arg454: (5::(Nil)), arg455: (Nil), arg456: (Nil), arg457: (Nil), arg458: (1::(Nil)), arg459: (Nil), arg460: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) ((((((((((6::(Nil)) @ (8::(Nil))) @ (2::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (8::(2::rotate (ZERO) ((((((((6::(Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) ((((((((((Nil) @ (4::(Nil))) @ (1::(Nil))) @ (Nil)) @ (Nil)) @ (4::(Nil))) @ (Nil)) @ (Nil)) @ (3::(Nil)))) = (4::(1::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (Nil)) @ (4::(Nil))) @ (Nil)) @ (Nil)) @ (3::(Nil))))))
rotate (ZERO) ((((((((((Nil) @ (6::(Nil))) @ (0::(Nil))) @ (5::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (1::(Nil))) @ (Nil))) = (6::(0::rotate (ZERO) ((((((((Nil) @ (5::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (1::(Nil))) @ (Nil)))))
Simplifying took 0.003524 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list2:any list), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Model : any1: 5, any2: 2, any3: 0, any4: 8, any5: 1, any6: 3, any7: 5, any8: 3, any_list2: (Nil)
Model : any1: 1, any2: 1, any3: 4, any4: 3, any5: 4, any6: 4, any7: 1, any8: 5, any_list2: (Nil)
Model : any1: 0, any2: 5, any3: 6, any4: 7, any5: 4, any6: 7, any7: 0, any8: 5, any_list2: (4::(Nil))
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (5::(Nil))) @ (2::(Nil))) @ (0::(Nil))) @ (8::(Nil))) @ (1::(Nil))) @ (3::(Nil))) @ (5::(Nil))) @ (3::(Nil)))) = (5::(2::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (8::(Nil))) @ (1::(Nil))) @ (3::(Nil))) @ (5::(Nil))) @ (3::(Nil))))))
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (1::(Nil))) @ (1::(Nil))) @ (4::(Nil))) @ (3::(Nil))) @ (4::(Nil))) @ (4::(Nil))) @ (1::(Nil))) @ (5::(Nil)))) = (1::(1::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (4::(Nil))) @ (3::(Nil))) @ (4::(Nil))) @ (4::(Nil))) @ (1::(Nil))) @ (5::(Nil))))))
rotate (len ((4::(Nil)))) (((((((((((4::(Nil)) @ (Nil)) @ (0::(Nil))) @ (5::(Nil))) @ (6::(Nil))) @ (7::(Nil))) @ (4::(Nil))) @ (7::(Nil))) @ (0::(Nil))) @ (5::(Nil)))) = (0::(5::rotate (len ((4::(Nil)))) (((((((((4::(Nil)) @ (Nil)) @ (6::(Nil))) @ (7::(Nil))) @ (4::(Nil))) @ (7::(Nil))) @ (0::(Nil))) @ (5::(Nil))))))
Simplifying took 0.012373 seconds
Result : true
advanced_generalize done
=================================================
Progress: 295


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any5(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any4 : any
any5 : any
---------------------------------------
forall (any2:any) (any3:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 2
intro any6(rank:17)
intro any7(rank:17)
=================================================
Progress: 296


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any6(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any4 : any
any6 : any
---------------------------------------
forall (any2:any) (any3:any) (any5:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro any7(rank:17)
=================================================
Progress: 297


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any7(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any4 : any
any7 : any
---------------------------------------
forall (any2:any) (any3:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any4
intro any7
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg461:any list) (arg462:any list) (arg463:any list) (arg464:any list) (arg465:any list) (arg466:any list) (arg467:any list) (arg468:nat), rotate (arg468) (((((((((arg461 @ (any1::(Nil))) @ (any2::(Nil))) @ arg462) @ arg463) @ arg464) @ arg465) @ arg466) @ arg467)) = (any1::(any2::rotate (arg468) (((((((arg461 @ arg462) @ arg463) @ arg464) @ arg465) @ arg466) @ arg467))))
Model : any1: 1, any2: 3, arg461: (Nil), arg462: (Nil), arg463: (Nil), arg464: (Nil), arg465: (Nil), arg466: (Nil), arg467: (Nil), arg468: SUCC (ZERO)
Model : any1: 8, any2: 3, arg461: (Nil), arg462: (Nil), arg463: (Nil), arg464: (Nil), arg465: (Nil), arg466: (Nil), arg467: (Nil), arg468: ZERO
Model : any1: 5, any2: 6, arg461: (Nil), arg462: (Nil), arg463: (Nil), arg464: (Nil), arg465: (Nil), arg466: (0::(Nil)), arg467: (Nil), arg468: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (SUCC (ZERO)) ((((((((((Nil) @ (1::(Nil))) @ (3::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (1::(3::rotate (SUCC (ZERO)) ((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) ((((((((((Nil) @ (8::(Nil))) @ (3::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (8::(3::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) ((((((((((Nil) @ (5::(Nil))) @ (6::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (0::(Nil))) @ (Nil))) = (5::(6::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (0::(Nil))) @ (Nil)))))
Simplifying took 0.001959 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list2:any list), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Model : any1: 0, any2: 7, any3: 5, any4: 4, any5: 6, any6: 6, any7: 0, any8: 6, any_list2: (Nil)
Model : any1: 7, any2: 3, any3: 7, any4: 3, any5: 0, any6: 8, any7: 8, any8: 0, any_list2: (Nil)
Model : any1: 6, any2: 6, any3: 8, any4: 2, any5: 4, any6: 6, any7: 4, any8: 2, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (7::(Nil))) @ (5::(Nil))) @ (4::(Nil))) @ (6::(Nil))) @ (6::(Nil))) @ (0::(Nil))) @ (6::(Nil)))) = (0::(7::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (5::(Nil))) @ (4::(Nil))) @ (6::(Nil))) @ (6::(Nil))) @ (0::(Nil))) @ (6::(Nil))))))
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (7::(Nil))) @ (3::(Nil))) @ (7::(Nil))) @ (3::(Nil))) @ (0::(Nil))) @ (8::(Nil))) @ (8::(Nil))) @ (0::(Nil)))) = (7::(3::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (7::(Nil))) @ (3::(Nil))) @ (0::(Nil))) @ (8::(Nil))) @ (8::(Nil))) @ (0::(Nil))))))
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (6::(Nil))) @ (6::(Nil))) @ (8::(Nil))) @ (2::(Nil))) @ (4::(Nil))) @ (6::(Nil))) @ (4::(Nil))) @ (2::(Nil)))) = (6::(6::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (8::(Nil))) @ (2::(Nil))) @ (4::(Nil))) @ (6::(Nil))) @ (4::(Nil))) @ (2::(Nil))))))
Simplifying took 0.010438 seconds
Result : true
advanced_generalize done
=================================================
Progress: 298


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any5 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any6(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any5 : any
any6 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro any7(rank:17)
=================================================
Progress: 299


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any5 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any7(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any5 : any
any7 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any6:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any5
intro any7
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg469:any list) (arg470:any list) (arg471:any list) (arg472:any list) (arg473:any list) (arg474:any list) (arg475:any list) (arg476:nat), rotate (arg476) (((((((((arg469 @ (any1::(Nil))) @ (any2::(Nil))) @ arg470) @ arg471) @ arg472) @ arg473) @ arg474) @ arg475)) = (any1::(any2::rotate (arg476) (((((((arg469 @ arg470) @ arg471) @ arg472) @ arg473) @ arg474) @ arg475))))
Model : any1: 0, any2: 0, arg469: (Nil), arg470: (0::(Nil)), arg471: (Nil), arg472: (1::(Nil)), arg473: (Nil), arg474: (Nil), arg475: (Nil), arg476: ZERO
Model : any1: 0, any2: 0, arg469: (Nil), arg470: (Nil), arg471: (Nil), arg472: (Nil), arg473: (Nil), arg474: (Nil), arg475: (Nil), arg476: ZERO
Model : any1: 8, any2: 2, arg469: (0::(Nil)), arg470: (Nil), arg471: (Nil), arg472: (Nil), arg473: (Nil), arg474: (Nil), arg475: (Nil), arg476: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) ((((((((((Nil) @ (0::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (Nil)) @ (1::(Nil))) @ (Nil)) @ (Nil)) @ (Nil))) = (0::(0::rotate (ZERO) ((((((((Nil) @ (0::(Nil))) @ (Nil)) @ (1::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) ((((((((((Nil) @ (0::(Nil))) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (0::(0::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) ((((((((((0::(Nil)) @ (8::(Nil))) @ (2::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (8::(2::rotate (ZERO) ((((((((0::(Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
Simplifying took 0.002203 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list2:any list), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Model : any1: 4, any2: 5, any3: 1, any4: 1, any5: 8, any6: 6, any7: 6, any8: 3, any_list2: (Nil)
Model : any1: 5, any2: 2, any3: 5, any4: 2, any5: 6, any6: 4, any7: 2, any8: 3, any_list2: (Nil)
Model : any1: 8, any2: 1, any3: 3, any4: 7, any5: 6, any6: 6, any7: 4, any8: 7, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (4::(Nil))) @ (5::(Nil))) @ (1::(Nil))) @ (1::(Nil))) @ (8::(Nil))) @ (6::(Nil))) @ (6::(Nil))) @ (3::(Nil)))) = (4::(5::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (1::(Nil))) @ (1::(Nil))) @ (8::(Nil))) @ (6::(Nil))) @ (6::(Nil))) @ (3::(Nil))))))
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (5::(Nil))) @ (2::(Nil))) @ (5::(Nil))) @ (2::(Nil))) @ (6::(Nil))) @ (4::(Nil))) @ (2::(Nil))) @ (3::(Nil)))) = (5::(2::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (5::(Nil))) @ (2::(Nil))) @ (6::(Nil))) @ (4::(Nil))) @ (2::(Nil))) @ (3::(Nil))))))
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (8::(Nil))) @ (1::(Nil))) @ (3::(Nil))) @ (7::(Nil))) @ (6::(Nil))) @ (6::(Nil))) @ (4::(Nil))) @ (7::(Nil)))) = (8::(1::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (3::(Nil))) @ (7::(Nil))) @ (6::(Nil))) @ (6::(Nil))) @ (4::(Nil))) @ (7::(Nil))))))
Simplifying took 0.011135 seconds
Result : true
advanced_generalize done
=================================================
Progress: 300


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any6 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any5:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any7(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any6 : any
any7 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any6
intro any7
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg477:any list) (arg478:any list) (arg479:any list) (arg480:any list) (arg481:any list) (arg482:any list) (arg483:any list) (arg484:nat), rotate (arg484) (((((((((arg477 @ (any1::(Nil))) @ (any2::(Nil))) @ arg478) @ arg479) @ arg480) @ arg481) @ arg482) @ arg483)) = (any1::(any2::rotate (arg484) (((((((arg477 @ arg478) @ arg479) @ arg480) @ arg481) @ arg482) @ arg483))))
Model : any1: 0, any2: 0, arg477: (Nil), arg478: (Nil), arg479: (Nil), arg480: (Nil), arg481: (Nil), arg482: (Nil), arg483: (Nil), arg484: ZERO
Model : any1: 8, any2: 4, arg477: (Nil), arg478: (Nil), arg479: (8::(Nil)), arg480: (4::(5::(Nil))), arg481: (Nil), arg482: (Nil), arg483: (Nil), arg484: ZERO
Model : any1: 8, any2: 0, arg477: (Nil), arg478: (Nil), arg479: (4::(Nil)), arg480: (Nil), arg481: (Nil), arg482: (5::(Nil)), arg483: (Nil), arg484: SUCC (ZERO)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) ((((((((((Nil) @ (0::(Nil))) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (0::(0::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) ((((((((((Nil) @ (8::(Nil))) @ (4::(Nil))) @ (Nil)) @ (8::(Nil))) @ (4::(5::(Nil)))) @ (Nil)) @ (Nil)) @ (Nil))) = (8::(4::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (8::(Nil))) @ (4::(5::(Nil)))) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (SUCC (ZERO)) ((((((((((Nil) @ (8::(Nil))) @ (0::(Nil))) @ (Nil)) @ (4::(Nil))) @ (Nil)) @ (Nil)) @ (5::(Nil))) @ (Nil))) = (8::(0::rotate (SUCC (ZERO)) ((((((((Nil) @ (Nil)) @ (4::(Nil))) @ (Nil)) @ (Nil)) @ (5::(Nil))) @ (Nil)))))
Simplifying took 0.004118 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list2:any list), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Model : any1: 3, any2: 1, any3: 0, any4: 5, any5: 6, any6: 4, any7: 4, any8: 0, any_list2: (Nil)
Model : any1: 3, any2: 0, any3: 5, any4: 8, any5: 0, any6: 7, any7: 0, any8: 2, any_list2: (Nil)
Model : any1: 0, any2: 8, any3: 4, any4: 1, any5: 6, any6: 8, any7: 1, any8: 7, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (3::(Nil))) @ (1::(Nil))) @ (0::(Nil))) @ (5::(Nil))) @ (6::(Nil))) @ (4::(Nil))) @ (4::(Nil))) @ (0::(Nil)))) = (3::(1::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (5::(Nil))) @ (6::(Nil))) @ (4::(Nil))) @ (4::(Nil))) @ (0::(Nil))))))
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (3::(Nil))) @ (0::(Nil))) @ (5::(Nil))) @ (8::(Nil))) @ (0::(Nil))) @ (7::(Nil))) @ (0::(Nil))) @ (2::(Nil)))) = (3::(0::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (5::(Nil))) @ (8::(Nil))) @ (0::(Nil))) @ (7::(Nil))) @ (0::(Nil))) @ (2::(Nil))))))
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (8::(Nil))) @ (4::(Nil))) @ (1::(Nil))) @ (6::(Nil))) @ (8::(Nil))) @ (1::(Nil))) @ (7::(Nil)))) = (0::(8::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (4::(Nil))) @ (1::(Nil))) @ (6::(Nil))) @ (8::(Nil))) @ (1::(Nil))) @ (7::(Nil))))))
Simplifying took 0.009413 seconds
Result : true
advanced_generalize done
=================================================
Progress: 301


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any4(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 3
intro any5(rank:17)
intro any6(rank:17)
intro any7(rank:17)
=================================================
Progress: 302


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any5(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any2 : any
any3 : any
any5 : any
---------------------------------------
forall (any1:any) (any4:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 2
intro any6(rank:17)
intro any7(rank:17)
=================================================
Progress: 303


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any6(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any2 : any
any3 : any
any6 : any
---------------------------------------
forall (any1:any) (any4:any) (any5:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro any7(rank:17)
=================================================
Progress: 304


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any7(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any2 : any
any3 : any
any7 : any
---------------------------------------
forall (any1:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any7
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg485:any list) (arg486:any list) (arg487:any list) (arg488:any list) (arg489:any list) (arg490:any list) (arg491:any list) (arg492:nat), rotate (arg492) (((((((((arg485 @ (any1::(Nil))) @ (any2::(Nil))) @ arg486) @ arg487) @ arg488) @ arg489) @ arg490) @ arg491)) = (any1::(any2::rotate (arg492) (((((((arg485 @ arg486) @ arg487) @ arg488) @ arg489) @ arg490) @ arg491))))
Model : any1: 1, any2: 3, arg485: (4::(2::(Nil))), arg486: (6::(Nil)), arg487: (Nil), arg488: (Nil), arg489: (5::(Nil)), arg490: (Nil), arg491: (Nil), arg492: SUCC (ZERO)
Model : any1: 7, any2: 5, arg485: (7::(Nil)), arg486: (2::(Nil)), arg487: (0::(Nil)), arg488: (0::(Nil)), arg489: (Nil), arg490: (0::(Nil)), arg491: (Nil), arg492: ZERO
Model : any1: 0, any2: 0, arg485: (Nil), arg486: (Nil), arg487: (Nil), arg488: (0::(Nil)), arg489: (Nil), arg490: (Nil), arg491: (Nil), arg492: SUCC (ZERO)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (SUCC (ZERO)) ((((((((((4::(2::(Nil))) @ (1::(Nil))) @ (3::(Nil))) @ (6::(Nil))) @ (Nil)) @ (Nil)) @ (5::(Nil))) @ (Nil)) @ (Nil))) = (1::(3::rotate (SUCC (ZERO)) ((((((((4::(2::(Nil))) @ (6::(Nil))) @ (Nil)) @ (Nil)) @ (5::(Nil))) @ (Nil)) @ (Nil)))))
rotate (ZERO) ((((((((((7::(Nil)) @ (7::(Nil))) @ (5::(Nil))) @ (2::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (Nil)) @ (0::(Nil))) @ (Nil))) = (7::(5::rotate (ZERO) ((((((((7::(Nil)) @ (2::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (Nil)) @ (0::(Nil))) @ (Nil)))))
rotate (SUCC (ZERO)) ((((((((((Nil) @ (0::(Nil))) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil))) = (0::(0::rotate (SUCC (ZERO)) ((((((((Nil) @ (Nil)) @ (Nil)) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)))))
Simplifying took 0.007227 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list2:any list), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Model : any1: 8, any2: 4, any3: 5, any4: 3, any5: 4, any6: 7, any7: 7, any8: 1, any_list2: (Nil)
Model : any1: 0, any2: 0, any3: 4, any4: 4, any5: 0, any6: 8, any7: 0, any8: 1, any_list2: (Nil)
Model : any1: 4, any2: 5, any3: 8, any4: 1, any5: 4, any6: 7, any7: 3, any8: 0, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (8::(Nil))) @ (4::(Nil))) @ (5::(Nil))) @ (3::(Nil))) @ (4::(Nil))) @ (7::(Nil))) @ (7::(Nil))) @ (1::(Nil)))) = (8::(4::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (5::(Nil))) @ (3::(Nil))) @ (4::(Nil))) @ (7::(Nil))) @ (7::(Nil))) @ (1::(Nil))))))
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (0::(Nil))) @ (4::(Nil))) @ (4::(Nil))) @ (0::(Nil))) @ (8::(Nil))) @ (0::(Nil))) @ (1::(Nil)))) = (0::(0::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (4::(Nil))) @ (4::(Nil))) @ (0::(Nil))) @ (8::(Nil))) @ (0::(Nil))) @ (1::(Nil))))))
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (4::(Nil))) @ (5::(Nil))) @ (8::(Nil))) @ (1::(Nil))) @ (4::(Nil))) @ (7::(Nil))) @ (3::(Nil))) @ (0::(Nil)))) = (4::(5::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (8::(Nil))) @ (1::(Nil))) @ (4::(Nil))) @ (7::(Nil))) @ (3::(Nil))) @ (0::(Nil))))))
Simplifying took 0.009347 seconds
Result : true
advanced_generalize done
=================================================
Progress: 305


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any5(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any2 : any
any4 : any
any5 : any
---------------------------------------
forall (any1:any) (any3:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 2
intro any6(rank:17)
intro any7(rank:17)
=================================================
Progress: 306


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any6(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any2 : any
any4 : any
any6 : any
---------------------------------------
forall (any1:any) (any3:any) (any5:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro any7(rank:17)
=================================================
Progress: 307


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any7(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any2 : any
any4 : any
any7 : any
---------------------------------------
forall (any1:any) (any3:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any4
intro any7
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg493:any list) (arg494:any list) (arg495:any list) (arg496:any list) (arg497:any list) (arg498:any list) (arg499:any list) (arg500:nat), rotate (arg500) (((((((((arg493 @ (any1::(Nil))) @ (any2::(Nil))) @ arg494) @ arg495) @ arg496) @ arg497) @ arg498) @ arg499)) = (any1::(any2::rotate (arg500) (((((((arg493 @ arg494) @ arg495) @ arg496) @ arg497) @ arg498) @ arg499))))
Model : any1: 7, any2: 5, arg493: (Nil), arg494: (6::(Nil)), arg495: (Nil), arg496: (Nil), arg497: (Nil), arg498: (Nil), arg499: (Nil), arg500: ZERO
Model : any1: 0, any2: 7, arg493: (Nil), arg494: (1::(8::(Nil))), arg495: (2::(Nil)), arg496: (Nil), arg497: (Nil), arg498: (Nil), arg499: (Nil), arg500: ZERO
Model : any1: 5, any2: 2, arg493: (Nil), arg494: (Nil), arg495: (Nil), arg496: (1::(Nil)), arg497: (4::(Nil)), arg498: (Nil), arg499: (Nil), arg500: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) ((((((((((Nil) @ (7::(Nil))) @ (5::(Nil))) @ (6::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (7::(5::rotate (ZERO) ((((((((Nil) @ (6::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) ((((((((((Nil) @ (0::(Nil))) @ (7::(Nil))) @ (1::(8::(Nil)))) @ (2::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (0::(7::rotate (ZERO) ((((((((Nil) @ (1::(8::(Nil)))) @ (2::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) ((((((((((Nil) @ (5::(Nil))) @ (2::(Nil))) @ (Nil)) @ (Nil)) @ (1::(Nil))) @ (4::(Nil))) @ (Nil)) @ (Nil))) = (5::(2::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (Nil)) @ (1::(Nil))) @ (4::(Nil))) @ (Nil)) @ (Nil)))))
Simplifying took 0.004628 seconds
Result : true
advanced_generalize done


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any2 : any
any4 : any
any7 : any
---------------------------------------
forall (any1:any) (any3:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
=================================================
Progress: 308


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any2 : any
any4 : any
any7 : any
---------------------------------------
forall (any1:any) (any3:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (arg493:any list) (arg494:any list) (arg495:any list) (arg496:any list) (arg497:any list) (arg498:any list) (arg499:any list) (arg500:nat), rotate (arg500) (((((((((arg493 @ (any1::(Nil))) @ (any2::(Nil))) @ arg494) @ arg495) @ arg496) @ arg497) @ arg498) @ arg499)) = (any1::(any2::rotate (arg500) (((((((arg493 @ arg494) @ arg495) @ arg496) @ arg497) @ arg498) @ arg499))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (any_list7:any list) (nat1:nat), rotate (nat1) (((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7)) = (any1::(any2::rotate (nat1) (((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (any_list7:any list) (nat1:nat), rotate (nat1) (((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7)) = (any1::(any2::rotate (nat1) (((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:20)
=================================================
Progress: 309


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any2 : any
any5 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any6(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any2 : any
any5 : any
any6 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro any7(rank:17)
=================================================
Progress: 310


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any2 : any
any5 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any7(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any2 : any
any5 : any
any7 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any6:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any5
intro any7
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg501:any list) (arg502:any list) (arg503:any list) (arg504:any list) (arg505:any list) (arg506:any list) (arg507:any list) (arg508:nat), rotate (arg508) (((((((((arg501 @ (any1::(Nil))) @ (any2::(Nil))) @ arg502) @ arg503) @ arg504) @ arg505) @ arg506) @ arg507)) = (any1::(any2::rotate (arg508) (((((((arg501 @ arg502) @ arg503) @ arg504) @ arg505) @ arg506) @ arg507))))
Model : any1: 8, any2: 0, arg501: (1::(Nil)), arg502: (Nil), arg503: (Nil), arg504: (Nil), arg505: (Nil), arg506: (Nil), arg507: (2::(Nil)), arg508: ZERO
Model : any1: 8, any2: 0, arg501: (Nil), arg502: (0::(Nil)), arg503: (Nil), arg504: (0::(Nil)), arg505: (5::(Nil)), arg506: (Nil), arg507: (Nil), arg508: ZERO
Model : any1: 5, any2: 3, arg501: (0::(Nil)), arg502: (Nil), arg503: (Nil), arg504: (Nil), arg505: (Nil), arg506: (Nil), arg507: (Nil), arg508: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) ((((((((((1::(Nil)) @ (8::(Nil))) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (2::(Nil)))) = (8::(0::rotate (ZERO) ((((((((1::(Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (2::(Nil))))))
rotate (ZERO) ((((((((((Nil) @ (8::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (Nil)) @ (0::(Nil))) @ (5::(Nil))) @ (Nil)) @ (Nil))) = (8::(0::rotate (ZERO) ((((((((Nil) @ (0::(Nil))) @ (Nil)) @ (0::(Nil))) @ (5::(Nil))) @ (Nil)) @ (Nil)))))
rotate (ZERO) ((((((((((0::(Nil)) @ (5::(Nil))) @ (3::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (5::(3::rotate (ZERO) ((((((((0::(Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
Simplifying took 0.003480 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list2:any list), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Model : any1: 4, any2: 6, any3: 2, any4: 8, any5: 0, any6: 5, any7: 0, any8: 4, any_list2: (Nil)
Model : any1: 6, any2: 0, any3: 6, any4: 6, any5: 7, any6: 6, any7: 7, any8: 0, any_list2: (Nil)
Model : any1: 0, any2: 2, any3: 0, any4: 6, any5: 3, any6: 7, any7: 2, any8: 0, any_list2: (8::(Nil))
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (4::(Nil))) @ (6::(Nil))) @ (2::(Nil))) @ (8::(Nil))) @ (0::(Nil))) @ (5::(Nil))) @ (0::(Nil))) @ (4::(Nil)))) = (4::(6::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (2::(Nil))) @ (8::(Nil))) @ (0::(Nil))) @ (5::(Nil))) @ (0::(Nil))) @ (4::(Nil))))))
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (6::(Nil))) @ (0::(Nil))) @ (6::(Nil))) @ (6::(Nil))) @ (7::(Nil))) @ (6::(Nil))) @ (7::(Nil))) @ (0::(Nil)))) = (6::(0::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (6::(Nil))) @ (6::(Nil))) @ (7::(Nil))) @ (6::(Nil))) @ (7::(Nil))) @ (0::(Nil))))))
rotate (len ((8::(Nil)))) (((((((((((8::(Nil)) @ (Nil)) @ (0::(Nil))) @ (2::(Nil))) @ (0::(Nil))) @ (6::(Nil))) @ (3::(Nil))) @ (7::(Nil))) @ (2::(Nil))) @ (0::(Nil)))) = (0::(2::rotate (len ((8::(Nil)))) (((((((((8::(Nil)) @ (Nil)) @ (0::(Nil))) @ (6::(Nil))) @ (3::(Nil))) @ (7::(Nil))) @ (2::(Nil))) @ (0::(Nil))))))
Simplifying took 0.012034 seconds
Result : true
advanced_generalize done
=================================================
Progress: 311


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any2 : any
any6 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any5:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any7(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any2 : any
any6 : any
any7 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any6
intro any7
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg509:any list) (arg510:any list) (arg511:any list) (arg512:any list) (arg513:any list) (arg514:any list) (arg515:any list) (arg516:nat), rotate (arg516) (((((((((arg509 @ (any1::(Nil))) @ (any2::(Nil))) @ arg510) @ arg511) @ arg512) @ arg513) @ arg514) @ arg515)) = (any1::(any2::rotate (arg516) (((((((arg509 @ arg510) @ arg511) @ arg512) @ arg513) @ arg514) @ arg515))))
Model : any1: 4, any2: 0, arg509: (2::(Nil)), arg510: (Nil), arg511: (Nil), arg512: (Nil), arg513: (2::(Nil)), arg514: (Nil), arg515: (Nil), arg516: ZERO
Model : any1: 5, any2: 1, arg509: (Nil), arg510: (7::(5::(0::(Nil)))), arg511: (Nil), arg512: (Nil), arg513: (Nil), arg514: (Nil), arg515: (Nil), arg516: ZERO
Model : any1: 0, any2: 1, arg509: (Nil), arg510: (Nil), arg511: (3::(Nil)), arg512: (Nil), arg513: (1::(1::(Nil))), arg514: (Nil), arg515: (1::(Nil)), arg516: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) ((((((((((2::(Nil)) @ (4::(Nil))) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (2::(Nil))) @ (Nil)) @ (Nil))) = (4::(0::rotate (ZERO) ((((((((2::(Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (2::(Nil))) @ (Nil)) @ (Nil)))))
rotate (ZERO) ((((((((((Nil) @ (5::(Nil))) @ (1::(Nil))) @ (7::(5::(0::(Nil))))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (5::(1::rotate (ZERO) ((((((((Nil) @ (7::(5::(0::(Nil))))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) ((((((((((Nil) @ (0::(Nil))) @ (1::(Nil))) @ (Nil)) @ (3::(Nil))) @ (Nil)) @ (1::(1::(Nil)))) @ (Nil)) @ (1::(Nil)))) = (0::(1::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (3::(Nil))) @ (Nil)) @ (1::(1::(Nil)))) @ (Nil)) @ (1::(Nil))))))
Simplifying took 0.004494 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list2:any list), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Model : any1: 6, any2: 0, any3: 6, any4: 4, any5: 8, any6: 8, any7: 0, any8: 8, any_list2: (1::(Nil))
Model : any1: 0, any2: 3, any3: 5, any4: 4, any5: 7, any6: 7, any7: 0, any8: 0, any_list2: (Nil)
Model : any1: 1, any2: 5, any3: 0, any4: 0, any5: 0, any6: 3, any7: 5, any8: 5, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((1::(Nil)))) (((((((((((1::(Nil)) @ (Nil)) @ (6::(Nil))) @ (0::(Nil))) @ (6::(Nil))) @ (4::(Nil))) @ (8::(Nil))) @ (8::(Nil))) @ (0::(Nil))) @ (8::(Nil)))) = (6::(0::rotate (len ((1::(Nil)))) (((((((((1::(Nil)) @ (Nil)) @ (6::(Nil))) @ (4::(Nil))) @ (8::(Nil))) @ (8::(Nil))) @ (0::(Nil))) @ (8::(Nil))))))
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (3::(Nil))) @ (5::(Nil))) @ (4::(Nil))) @ (7::(Nil))) @ (7::(Nil))) @ (0::(Nil))) @ (0::(Nil)))) = (0::(3::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (5::(Nil))) @ (4::(Nil))) @ (7::(Nil))) @ (7::(Nil))) @ (0::(Nil))) @ (0::(Nil))))))
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (1::(Nil))) @ (5::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (3::(Nil))) @ (5::(Nil))) @ (5::(Nil)))) = (1::(5::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (3::(Nil))) @ (5::(Nil))) @ (5::(Nil))))))
Simplifying took 0.011571 seconds
Result : true
advanced_generalize done
=================================================
Progress: 312


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any5(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any3 : any
any4 : any
any5 : any
---------------------------------------
forall (any1:any) (any2:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 2
intro any6(rank:17)
intro any7(rank:17)
=================================================
Progress: 313


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any6(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any3 : any
any4 : any
any6 : any
---------------------------------------
forall (any1:any) (any2:any) (any5:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro any7(rank:17)
=================================================
Progress: 314


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any7(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any3 : any
any4 : any
any7 : any
---------------------------------------
forall (any1:any) (any2:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any4
intro any7
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg517:any list) (arg518:any list) (arg519:any list) (arg520:any list) (arg521:any list) (arg522:any list) (arg523:any list) (arg524:nat), rotate (arg524) (((((((((arg517 @ (any1::(Nil))) @ (any2::(Nil))) @ arg518) @ arg519) @ arg520) @ arg521) @ arg522) @ arg523)) = (any1::(any2::rotate (arg524) (((((((arg517 @ arg518) @ arg519) @ arg520) @ arg521) @ arg522) @ arg523))))
Model : any1: 0, any2: 1, arg517: (Nil), arg518: (Nil), arg519: (0::(Nil)), arg520: (Nil), arg521: (Nil), arg522: (Nil), arg523: (Nil), arg524: ZERO
Model : any1: 3, any2: 0, arg517: (2::(Nil)), arg518: (Nil), arg519: (Nil), arg520: (7::(Nil)), arg521: (Nil), arg522: (Nil), arg523: (5::(Nil)), arg524: ZERO
Model : any1: 5, any2: 1, arg517: (Nil), arg518: (Nil), arg519: (6::(Nil)), arg520: (Nil), arg521: (1::(Nil)), arg522: (Nil), arg523: (Nil), arg524: SUCC (SUCC (ZERO))
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) ((((((((((Nil) @ (0::(Nil))) @ (1::(Nil))) @ (Nil)) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (0::(1::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) ((((((((((2::(Nil)) @ (3::(Nil))) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (7::(Nil))) @ (Nil)) @ (Nil)) @ (5::(Nil)))) = (3::(0::rotate (ZERO) ((((((((2::(Nil)) @ (Nil)) @ (Nil)) @ (7::(Nil))) @ (Nil)) @ (Nil)) @ (5::(Nil))))))
rotate (SUCC (SUCC (ZERO))) ((((((((((Nil) @ (5::(Nil))) @ (1::(Nil))) @ (Nil)) @ (6::(Nil))) @ (Nil)) @ (1::(Nil))) @ (Nil)) @ (Nil))) = (5::(1::rotate (SUCC (SUCC (ZERO))) ((((((((Nil) @ (Nil)) @ (6::(Nil))) @ (Nil)) @ (1::(Nil))) @ (Nil)) @ (Nil)))))
Simplifying took 0.003867 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list2:any list), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Model : any1: 1, any2: 3, any3: 3, any4: 0, any5: 0, any6: 3, any7: 5, any8: 8, any_list2: (Nil)
Model : any1: 8, any2: 7, any3: 6, any4: 3, any5: 5, any6: 0, any7: 3, any8: 3, any_list2: (Nil)
Model : any1: 0, any2: 0, any3: 8, any4: 7, any5: 6, any6: 2, any7: 4, any8: 5, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (1::(Nil))) @ (3::(Nil))) @ (3::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (3::(Nil))) @ (5::(Nil))) @ (8::(Nil)))) = (1::(3::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (3::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (3::(Nil))) @ (5::(Nil))) @ (8::(Nil))))))
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (8::(Nil))) @ (7::(Nil))) @ (6::(Nil))) @ (3::(Nil))) @ (5::(Nil))) @ (0::(Nil))) @ (3::(Nil))) @ (3::(Nil)))) = (8::(7::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (6::(Nil))) @ (3::(Nil))) @ (5::(Nil))) @ (0::(Nil))) @ (3::(Nil))) @ (3::(Nil))))))
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (0::(Nil))) @ (8::(Nil))) @ (7::(Nil))) @ (6::(Nil))) @ (2::(Nil))) @ (4::(Nil))) @ (5::(Nil)))) = (0::(0::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (8::(Nil))) @ (7::(Nil))) @ (6::(Nil))) @ (2::(Nil))) @ (4::(Nil))) @ (5::(Nil))))))
Simplifying took 0.009373 seconds
Result : true
advanced_generalize done
=================================================
Progress: 315


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any3 : any
any5 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any6(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any3 : any
any5 : any
any6 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro any7(rank:17)
=================================================
Progress: 316


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any3 : any
any5 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any7(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any3 : any
any5 : any
any7 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any6:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any5
intro any7
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg525:any list) (arg526:any list) (arg527:any list) (arg528:any list) (arg529:any list) (arg530:any list) (arg531:any list) (arg532:nat), rotate (arg532) (((((((((arg525 @ (any1::(Nil))) @ (any2::(Nil))) @ arg526) @ arg527) @ arg528) @ arg529) @ arg530) @ arg531)) = (any1::(any2::rotate (arg532) (((((((arg525 @ arg526) @ arg527) @ arg528) @ arg529) @ arg530) @ arg531))))
Model : any1: 0, any2: 7, arg525: (Nil), arg526: (Nil), arg527: (4::(Nil)), arg528: (Nil), arg529: (Nil), arg530: (Nil), arg531: (Nil), arg532: ZERO
Model : any1: 3, any2: 6, arg525: (Nil), arg526: (Nil), arg527: (Nil), arg528: (Nil), arg529: (Nil), arg530: (Nil), arg531: (7::(Nil)), arg532: ZERO
Model : any1: 8, any2: 3, arg525: (Nil), arg526: (Nil), arg527: (5::(Nil)), arg528: (Nil), arg529: (Nil), arg530: (Nil), arg531: (Nil), arg532: SUCC (ZERO)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) ((((((((((Nil) @ (0::(Nil))) @ (7::(Nil))) @ (Nil)) @ (4::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (0::(7::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (4::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) ((((((((((Nil) @ (3::(Nil))) @ (6::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (7::(Nil)))) = (3::(6::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (7::(Nil))))))
rotate (SUCC (ZERO)) ((((((((((Nil) @ (8::(Nil))) @ (3::(Nil))) @ (Nil)) @ (5::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (8::(3::rotate (SUCC (ZERO)) ((((((((Nil) @ (Nil)) @ (5::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
Simplifying took 0.002949 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list2:any list), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Model : any1: 5, any2: 6, any3: 8, any4: 5, any5: 0, any6: 0, any7: 0, any8: 5, any_list2: (Nil)
Model : any1: 8, any2: 0, any3: 3, any4: 8, any5: 2, any6: 6, any7: 2, any8: 8, any_list2: (0::(Nil))
Model : any1: 7, any2: 6, any3: 1, any4: 2, any5: 6, any6: 8, any7: 0, any8: 0, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (5::(Nil))) @ (6::(Nil))) @ (8::(Nil))) @ (5::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (5::(Nil)))) = (5::(6::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (8::(Nil))) @ (5::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (5::(Nil))))))
rotate (len ((0::(Nil)))) (((((((((((0::(Nil)) @ (Nil)) @ (8::(Nil))) @ (0::(Nil))) @ (3::(Nil))) @ (8::(Nil))) @ (2::(Nil))) @ (6::(Nil))) @ (2::(Nil))) @ (8::(Nil)))) = (8::(0::rotate (len ((0::(Nil)))) (((((((((0::(Nil)) @ (Nil)) @ (3::(Nil))) @ (8::(Nil))) @ (2::(Nil))) @ (6::(Nil))) @ (2::(Nil))) @ (8::(Nil))))))
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (7::(Nil))) @ (6::(Nil))) @ (1::(Nil))) @ (2::(Nil))) @ (6::(Nil))) @ (8::(Nil))) @ (0::(Nil))) @ (0::(Nil)))) = (7::(6::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (1::(Nil))) @ (2::(Nil))) @ (6::(Nil))) @ (8::(Nil))) @ (0::(Nil))) @ (0::(Nil))))))
Simplifying took 0.011563 seconds
Result : true
advanced_generalize done
=================================================
Progress: 317


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any3 : any
any6 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any5:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any7(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any3 : any
any6 : any
any7 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any5:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any6
intro any7
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg533:any list) (arg534:any list) (arg535:any list) (arg536:any list) (arg537:any list) (arg538:any list) (arg539:any list) (arg540:nat), rotate (arg540) (((((((((arg533 @ (any1::(Nil))) @ (any2::(Nil))) @ arg534) @ arg535) @ arg536) @ arg537) @ arg538) @ arg539)) = (any1::(any2::rotate (arg540) (((((((arg533 @ arg534) @ arg535) @ arg536) @ arg537) @ arg538) @ arg539))))
Model : any1: 0, any2: 8, arg533: (Nil), arg534: (Nil), arg535: (Nil), arg536: (Nil), arg537: (Nil), arg538: (Nil), arg539: (Nil), arg540: ZERO
Model : any1: 0, any2: 0, arg533: (Nil), arg534: (8::(Nil)), arg535: (Nil), arg536: (0::(Nil)), arg537: (5::(8::(Nil))), arg538: (Nil), arg539: (Nil), arg540: ZERO
Model : any1: 4, any2: 0, arg533: (Nil), arg534: (Nil), arg535: (Nil), arg536: (1::(Nil)), arg537: (Nil), arg538: (Nil), arg539: (Nil), arg540: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) ((((((((((Nil) @ (0::(Nil))) @ (8::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (0::(8::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) ((((((((((Nil) @ (0::(Nil))) @ (0::(Nil))) @ (8::(Nil))) @ (Nil)) @ (0::(Nil))) @ (5::(8::(Nil)))) @ (Nil)) @ (Nil))) = (0::(0::rotate (ZERO) ((((((((Nil) @ (8::(Nil))) @ (Nil)) @ (0::(Nil))) @ (5::(8::(Nil)))) @ (Nil)) @ (Nil)))))
rotate (ZERO) ((((((((((Nil) @ (4::(Nil))) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (1::(Nil))) @ (Nil)) @ (Nil)) @ (Nil))) = (4::(0::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (Nil)) @ (1::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)))))
Simplifying took 0.004076 seconds
Result : true
advanced_generalize done


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any3 : any
any6 : any
any7 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any5:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
=================================================
Progress: 318


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any3 : any
any6 : any
any7 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any5:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (arg533:any list) (arg534:any list) (arg535:any list) (arg536:any list) (arg537:any list) (arg538:any list) (arg539:any list) (arg540:nat), rotate (arg540) (((((((((arg533 @ (any1::(Nil))) @ (any2::(Nil))) @ arg534) @ arg535) @ arg536) @ arg537) @ arg538) @ arg539)) = (any1::(any2::rotate (arg540) (((((((arg533 @ arg534) @ arg535) @ arg536) @ arg537) @ arg538) @ arg539))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (any_list7:any list) (nat1:nat), rotate (nat1) (((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7)) = (any1::(any2::rotate (nat1) (((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (any_list7:any list) (nat1:nat), rotate (nat1) (((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7)) = (any1::(any2::rotate (nat1) (((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:20)
=================================================
Progress: 319


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any4 : any
any5 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any6(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any4 : any
any5 : any
any6 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro any7(rank:17)
=================================================
Progress: 320


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any4 : any
any5 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any7(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any4 : any
any5 : any
any7 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any6:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any4
intro any5
intro any7
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg541:any list) (arg542:any list) (arg543:any list) (arg544:any list) (arg545:any list) (arg546:any list) (arg547:any list) (arg548:nat), rotate (arg548) (((((((((arg541 @ (any1::(Nil))) @ (any2::(Nil))) @ arg542) @ arg543) @ arg544) @ arg545) @ arg546) @ arg547)) = (any1::(any2::rotate (arg548) (((((((arg541 @ arg542) @ arg543) @ arg544) @ arg545) @ arg546) @ arg547))))
Model : any1: 1, any2: 2, arg541: (Nil), arg542: (Nil), arg543: (1::(Nil)), arg544: (Nil), arg545: (8::(Nil)), arg546: (Nil), arg547: (8::(Nil)), arg548: ZERO
Model : any1: 7, any2: 0, arg541: (8::(Nil)), arg542: (Nil), arg543: (Nil), arg544: (Nil), arg545: (Nil), arg546: (Nil), arg547: (0::(Nil)), arg548: ZERO
Model : any1: 1, any2: 8, arg541: (Nil), arg542: (7::(Nil)), arg543: (Nil), arg544: (Nil), arg545: (Nil), arg546: (Nil), arg547: (Nil), arg548: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) ((((((((((Nil) @ (1::(Nil))) @ (2::(Nil))) @ (Nil)) @ (1::(Nil))) @ (Nil)) @ (8::(Nil))) @ (Nil)) @ (8::(Nil)))) = (1::(2::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (1::(Nil))) @ (Nil)) @ (8::(Nil))) @ (Nil)) @ (8::(Nil))))))
rotate (ZERO) ((((((((((8::(Nil)) @ (7::(Nil))) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (0::(Nil)))) = (7::(0::rotate (ZERO) ((((((((8::(Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (0::(Nil))))))
rotate (ZERO) ((((((((((Nil) @ (1::(Nil))) @ (8::(Nil))) @ (7::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (1::(8::rotate (ZERO) ((((((((Nil) @ (7::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
Simplifying took 0.003820 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list2:any list), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Model : any1: 6, any2: 2, any3: 4, any4: 1, any5: 0, any6: 2, any7: 7, any8: 1, any_list2: (Nil)
Model : any1: 0, any2: 1, any3: 5, any4: 7, any5: 0, any6: 8, any7: 7, any8: 4, any_list2: (Nil)
Model : any1: 4, any2: 7, any3: 0, any4: 2, any5: 3, any6: 0, any7: 0, any8: 7, any_list2: (1::(Nil))
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (6::(Nil))) @ (2::(Nil))) @ (4::(Nil))) @ (1::(Nil))) @ (0::(Nil))) @ (2::(Nil))) @ (7::(Nil))) @ (1::(Nil)))) = (6::(2::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (4::(Nil))) @ (1::(Nil))) @ (0::(Nil))) @ (2::(Nil))) @ (7::(Nil))) @ (1::(Nil))))))
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (1::(Nil))) @ (5::(Nil))) @ (7::(Nil))) @ (0::(Nil))) @ (8::(Nil))) @ (7::(Nil))) @ (4::(Nil)))) = (0::(1::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (5::(Nil))) @ (7::(Nil))) @ (0::(Nil))) @ (8::(Nil))) @ (7::(Nil))) @ (4::(Nil))))))
rotate (len ((1::(Nil)))) (((((((((((1::(Nil)) @ (Nil)) @ (4::(Nil))) @ (7::(Nil))) @ (0::(Nil))) @ (2::(Nil))) @ (3::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (7::(Nil)))) = (4::(7::rotate (len ((1::(Nil)))) (((((((((1::(Nil)) @ (Nil)) @ (0::(Nil))) @ (2::(Nil))) @ (3::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (7::(Nil))))))
Simplifying took 0.010193 seconds
Result : true
advanced_generalize done
=================================================
Progress: 321


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any4 : any
any6 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any5:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any7(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any4 : any
any6 : any
any7 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any5:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any4
intro any6
intro any7
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg549:any list) (arg550:any list) (arg551:any list) (arg552:any list) (arg553:any list) (arg554:any list) (arg555:any list) (arg556:nat), rotate (arg556) (((((((((arg549 @ (any1::(Nil))) @ (any2::(Nil))) @ arg550) @ arg551) @ arg552) @ arg553) @ arg554) @ arg555)) = (any1::(any2::rotate (arg556) (((((((arg549 @ arg550) @ arg551) @ arg552) @ arg553) @ arg554) @ arg555))))
Model : any1: 0, any2: 0, arg549: (Nil), arg550: (Nil), arg551: (4::(Nil)), arg552: (Nil), arg553: (Nil), arg554: (Nil), arg555: (Nil), arg556: ZERO
Model : any1: 7, any2: 7, arg549: (0::(Nil)), arg550: (Nil), arg551: (Nil), arg552: (Nil), arg553: (7::(Nil)), arg554: (Nil), arg555: (0::(Nil)), arg556: ZERO
Model : any1: 3, any2: 2, arg549: (Nil), arg550: (8::(Nil)), arg551: (Nil), arg552: (Nil), arg553: (Nil), arg554: (Nil), arg555: (Nil), arg556: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) ((((((((((Nil) @ (0::(Nil))) @ (0::(Nil))) @ (Nil)) @ (4::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (0::(0::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (4::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) ((((((((((0::(Nil)) @ (7::(Nil))) @ (7::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (7::(Nil))) @ (Nil)) @ (0::(Nil)))) = (7::(7::rotate (ZERO) ((((((((0::(Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (7::(Nil))) @ (Nil)) @ (0::(Nil))))))
rotate (ZERO) ((((((((((Nil) @ (3::(Nil))) @ (2::(Nil))) @ (8::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (3::(2::rotate (ZERO) ((((((((Nil) @ (8::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
Simplifying took 0.003688 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list2:any list), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Model : any1: 8, any2: 4, any3: 8, any4: 0, any5: 7, any6: 0, any7: 3, any8: 6, any_list2: (Nil)
Model : any1: 0, any2: 0, any3: 3, any4: 4, any5: 2, any6: 7, any7: 6, any8: 3, any_list2: (Nil)
Model : any1: 7, any2: 7, any3: 0, any4: 0, any5: 2, any6: 0, any7: 7, any8: 2, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (8::(Nil))) @ (4::(Nil))) @ (8::(Nil))) @ (0::(Nil))) @ (7::(Nil))) @ (0::(Nil))) @ (3::(Nil))) @ (6::(Nil)))) = (8::(4::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (8::(Nil))) @ (0::(Nil))) @ (7::(Nil))) @ (0::(Nil))) @ (3::(Nil))) @ (6::(Nil))))))
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (0::(Nil))) @ (3::(Nil))) @ (4::(Nil))) @ (2::(Nil))) @ (7::(Nil))) @ (6::(Nil))) @ (3::(Nil)))) = (0::(0::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (3::(Nil))) @ (4::(Nil))) @ (2::(Nil))) @ (7::(Nil))) @ (6::(Nil))) @ (3::(Nil))))))
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (7::(Nil))) @ (7::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (2::(Nil))) @ (0::(Nil))) @ (7::(Nil))) @ (2::(Nil)))) = (7::(7::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (0::(Nil))) @ (2::(Nil))) @ (0::(Nil))) @ (7::(Nil))) @ (2::(Nil))))))
Simplifying took 0.008491 seconds
Result : true
advanced_generalize done
=================================================
Progress: 322


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any5 : any
any6 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any7(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any5 : any
any6 : any
any7 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any5
intro any6
intro any7
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg557:any list) (arg558:any list) (arg559:any list) (arg560:any list) (arg561:any list) (arg562:any list) (arg563:any list) (arg564:nat), rotate (arg564) (((((((((arg557 @ (any1::(Nil))) @ (any2::(Nil))) @ arg558) @ arg559) @ arg560) @ arg561) @ arg562) @ arg563)) = (any1::(any2::rotate (arg564) (((((((arg557 @ arg558) @ arg559) @ arg560) @ arg561) @ arg562) @ arg563))))
Model : any1: 2, any2: 0, arg557: (Nil), arg558: (Nil), arg559: (Nil), arg560: (Nil), arg561: (Nil), arg562: (5::(Nil)), arg563: (Nil), arg564: ZERO
Model : any1: 6, any2: 4, arg557: (Nil), arg558: (Nil), arg559: (Nil), arg560: (Nil), arg561: (Nil), arg562: (2::(Nil)), arg563: (1::(Nil)), arg564: ZERO
Model : any1: 3, any2: 1, arg557: (Nil), arg558: (Nil), arg559: (6::(2::(Nil))), arg560: (Nil), arg561: (5::(Nil)), arg562: (Nil), arg563: (6::(Nil)), arg564: SUCC (SUCC (ZERO))
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) ((((((((((Nil) @ (2::(Nil))) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (5::(Nil))) @ (Nil))) = (2::(0::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (5::(Nil))) @ (Nil)))))
rotate (ZERO) ((((((((((Nil) @ (6::(Nil))) @ (4::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (2::(Nil))) @ (1::(Nil)))) = (6::(4::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (2::(Nil))) @ (1::(Nil))))))
rotate (SUCC (SUCC (ZERO))) ((((((((((Nil) @ (3::(Nil))) @ (1::(Nil))) @ (Nil)) @ (6::(2::(Nil)))) @ (Nil)) @ (5::(Nil))) @ (Nil)) @ (6::(Nil)))) = (3::(1::rotate (SUCC (SUCC (ZERO))) ((((((((Nil) @ (Nil)) @ (6::(2::(Nil)))) @ (Nil)) @ (5::(Nil))) @ (Nil)) @ (6::(Nil))))))
Simplifying took 0.004694 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list2:any list), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Model : any1: 0, any2: 6, any3: 4, any4: 8, any5: 5, any6: 3, any7: 8, any8: 7, any_list2: (Nil)
Model : any1: 7, any2: 2, any3: 6, any4: 7, any5: 0, any6: 2, any7: 6, any8: 7, any_list2: (Nil)
Model : any1: 8, any2: 5, any3: 7, any4: 5, any5: 2, any6: 0, any7: 3, any8: 6, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (6::(Nil))) @ (4::(Nil))) @ (8::(Nil))) @ (5::(Nil))) @ (3::(Nil))) @ (8::(Nil))) @ (7::(Nil)))) = (0::(6::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (4::(Nil))) @ (8::(Nil))) @ (5::(Nil))) @ (3::(Nil))) @ (8::(Nil))) @ (7::(Nil))))))
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (7::(Nil))) @ (2::(Nil))) @ (6::(Nil))) @ (7::(Nil))) @ (0::(Nil))) @ (2::(Nil))) @ (6::(Nil))) @ (7::(Nil)))) = (7::(2::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (6::(Nil))) @ (7::(Nil))) @ (0::(Nil))) @ (2::(Nil))) @ (6::(Nil))) @ (7::(Nil))))))
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (8::(Nil))) @ (5::(Nil))) @ (7::(Nil))) @ (5::(Nil))) @ (2::(Nil))) @ (0::(Nil))) @ (3::(Nil))) @ (6::(Nil)))) = (8::(5::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (7::(Nil))) @ (5::(Nil))) @ (2::(Nil))) @ (0::(Nil))) @ (3::(Nil))) @ (6::(Nil))))))
Simplifying took 0.009831 seconds
Result : true
advanced_generalize done
=================================================
Progress: 323


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any4(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 3
intro any5(rank:17)
intro any6(rank:17)
intro any7(rank:17)
=================================================
Progress: 324


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any5(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any2 : any
any3 : any
any5 : any
---------------------------------------
forall (any4:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 2
intro any6(rank:17)
intro any7(rank:17)
=================================================
Progress: 325


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any6(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any2 : any
any3 : any
any6 : any
---------------------------------------
forall (any4:any) (any5:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro any7(rank:17)
=================================================
Progress: 326


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any7(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any2 : any
any3 : any
any7 : any
---------------------------------------
forall (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any7
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg565:any list) (arg566:any list) (arg567:any list) (arg568:any list) (arg569:any list) (arg570:any list) (arg571:any list) (arg572:nat), rotate (arg572) (((((((((arg565 @ (any1::(Nil))) @ (any2::(Nil))) @ arg566) @ arg567) @ arg568) @ arg569) @ arg570) @ arg571)) = (any1::(any2::rotate (arg572) (((((((arg565 @ arg566) @ arg567) @ arg568) @ arg569) @ arg570) @ arg571))))
Model : any1: 2, any2: 5, arg565: (Nil), arg566: (Nil), arg567: (Nil), arg568: (Nil), arg569: (1::(Nil)), arg570: (Nil), arg571: (2::(Nil)), arg572: ZERO
Model : any1: 5, any2: 5, arg565: (7::(Nil)), arg566: (Nil), arg567: (2::(Nil)), arg568: (Nil), arg569: (Nil), arg570: (0::(Nil)), arg571: (Nil), arg572: ZERO
Model : any1: 1, any2: 0, arg565: (Nil), arg566: (Nil), arg567: (Nil), arg568: (Nil), arg569: (Nil), arg570: (Nil), arg571: (6::(Nil)), arg572: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) ((((((((((Nil) @ (2::(Nil))) @ (5::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (1::(Nil))) @ (Nil)) @ (2::(Nil)))) = (2::(5::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (1::(Nil))) @ (Nil)) @ (2::(Nil))))))
rotate (ZERO) ((((((((((7::(Nil)) @ (5::(Nil))) @ (5::(Nil))) @ (Nil)) @ (2::(Nil))) @ (Nil)) @ (Nil)) @ (0::(Nil))) @ (Nil))) = (5::(5::rotate (ZERO) ((((((((7::(Nil)) @ (Nil)) @ (2::(Nil))) @ (Nil)) @ (Nil)) @ (0::(Nil))) @ (Nil)))))
rotate (ZERO) ((((((((((Nil) @ (1::(Nil))) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (6::(Nil)))) = (1::(0::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (6::(Nil))))))
Simplifying took 0.003165 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list2:any list), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Model : any1: 8, any2: 0, any3: 7, any4: 3, any5: 4, any6: 8, any7: 8, any8: 0, any_list2: (Nil)
Model : any1: 0, any2: 0, any3: 0, any4: 0, any5: 2, any6: 0, any7: 4, any8: 7, any_list2: (1::(Nil))
Model : any1: 0, any2: 7, any3: 1, any4: 6, any5: 1, any6: 8, any7: 0, any8: 4, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (8::(Nil))) @ (0::(Nil))) @ (7::(Nil))) @ (3::(Nil))) @ (4::(Nil))) @ (8::(Nil))) @ (8::(Nil))) @ (0::(Nil)))) = (8::(0::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (7::(Nil))) @ (3::(Nil))) @ (4::(Nil))) @ (8::(Nil))) @ (8::(Nil))) @ (0::(Nil))))))
rotate (len ((1::(Nil)))) (((((((((((1::(Nil)) @ (Nil)) @ (0::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (2::(Nil))) @ (0::(Nil))) @ (4::(Nil))) @ (7::(Nil)))) = (0::(0::rotate (len ((1::(Nil)))) (((((((((1::(Nil)) @ (Nil)) @ (0::(Nil))) @ (0::(Nil))) @ (2::(Nil))) @ (0::(Nil))) @ (4::(Nil))) @ (7::(Nil))))))
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (7::(Nil))) @ (1::(Nil))) @ (6::(Nil))) @ (1::(Nil))) @ (8::(Nil))) @ (0::(Nil))) @ (4::(Nil)))) = (0::(7::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (1::(Nil))) @ (6::(Nil))) @ (1::(Nil))) @ (8::(Nil))) @ (0::(Nil))) @ (4::(Nil))))))
Simplifying took 0.010831 seconds
Result : true
advanced_generalize done
=================================================
Progress: 327


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any5(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any2 : any
any4 : any
any5 : any
---------------------------------------
forall (any3:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 2
intro any6(rank:17)
intro any7(rank:17)
=================================================
Progress: 328


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any6(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any2 : any
any4 : any
any6 : any
---------------------------------------
forall (any3:any) (any5:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro any7(rank:17)
=================================================
Progress: 329


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any7(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any2 : any
any4 : any
any7 : any
---------------------------------------
forall (any3:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any4
intro any7
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg573:any list) (arg574:any list) (arg575:any list) (arg576:any list) (arg577:any list) (arg578:any list) (arg579:any list) (arg580:nat), rotate (arg580) (((((((((arg573 @ (any1::(Nil))) @ (any2::(Nil))) @ arg574) @ arg575) @ arg576) @ arg577) @ arg578) @ arg579)) = (any1::(any2::rotate (arg580) (((((((arg573 @ arg574) @ arg575) @ arg576) @ arg577) @ arg578) @ arg579))))
Model : any1: 5, any2: 7, arg573: (Nil), arg574: (Nil), arg575: (1::(Nil)), arg576: (6::(Nil)), arg577: (2::(Nil)), arg578: (Nil), arg579: (0::(Nil)), arg580: ZERO
Model : any1: 4, any2: 7, arg573: (Nil), arg574: (Nil), arg575: (Nil), arg576: (Nil), arg577: (Nil), arg578: (Nil), arg579: (2::(1::(Nil))), arg580: ZERO
Model : any1: 3, any2: 6, arg573: (Nil), arg574: (Nil), arg575: (3::(Nil)), arg576: (Nil), arg577: (Nil), arg578: (Nil), arg579: (Nil), arg580: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) ((((((((((Nil) @ (5::(Nil))) @ (7::(Nil))) @ (Nil)) @ (1::(Nil))) @ (6::(Nil))) @ (2::(Nil))) @ (Nil)) @ (0::(Nil)))) = (5::(7::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (1::(Nil))) @ (6::(Nil))) @ (2::(Nil))) @ (Nil)) @ (0::(Nil))))))
rotate (ZERO) ((((((((((Nil) @ (4::(Nil))) @ (7::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (2::(1::(Nil))))) = (4::(7::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (2::(1::(Nil)))))))
rotate (ZERO) ((((((((((Nil) @ (3::(Nil))) @ (6::(Nil))) @ (Nil)) @ (3::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (3::(6::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (3::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
Simplifying took 0.003585 seconds
Result : true
advanced_generalize done


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any2 : any
any4 : any
any7 : any
---------------------------------------
forall (any3:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
=================================================
Progress: 330


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any2 : any
any4 : any
any7 : any
---------------------------------------
forall (any3:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (arg573:any list) (arg574:any list) (arg575:any list) (arg576:any list) (arg577:any list) (arg578:any list) (arg579:any list) (arg580:nat), rotate (arg580) (((((((((arg573 @ (any1::(Nil))) @ (any2::(Nil))) @ arg574) @ arg575) @ arg576) @ arg577) @ arg578) @ arg579)) = (any1::(any2::rotate (arg580) (((((((arg573 @ arg574) @ arg575) @ arg576) @ arg577) @ arg578) @ arg579))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (any_list7:any list) (nat1:nat), rotate (nat1) (((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7)) = (any1::(any2::rotate (nat1) (((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (any_list7:any list) (nat1:nat), rotate (nat1) (((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7)) = (any1::(any2::rotate (nat1) (((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:20)
=================================================
Progress: 331


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any2 : any
any5 : any
---------------------------------------
forall (any3:any) (any4:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any6(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any2 : any
any5 : any
any6 : any
---------------------------------------
forall (any3:any) (any4:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro any7(rank:17)
=================================================
Progress: 332


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any2 : any
any5 : any
---------------------------------------
forall (any3:any) (any4:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any7(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any2 : any
any5 : any
any7 : any
---------------------------------------
forall (any3:any) (any4:any) (any6:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any5
intro any7
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg581:any list) (arg582:any list) (arg583:any list) (arg584:any list) (arg585:any list) (arg586:any list) (arg587:any list) (arg588:nat), rotate (arg588) (((((((((arg581 @ (any1::(Nil))) @ (any2::(Nil))) @ arg582) @ arg583) @ arg584) @ arg585) @ arg586) @ arg587)) = (any1::(any2::rotate (arg588) (((((((arg581 @ arg582) @ arg583) @ arg584) @ arg585) @ arg586) @ arg587))))
Model : any1: 8, any2: 5, arg581: (Nil), arg582: (3::(4::(3::(Nil)))), arg583: (Nil), arg584: (Nil), arg585: (Nil), arg586: (Nil), arg587: (Nil), arg588: SUCC (SUCC (ZERO))
Model : any1: 6, any2: 4, arg581: (Nil), arg582: (Nil), arg583: (Nil), arg584: (Nil), arg585: (Nil), arg586: (Nil), arg587: (Nil), arg588: SUCC (SUCC (ZERO))
Model : any1: 4, any2: 2, arg581: (Nil), arg582: (Nil), arg583: (Nil), arg584: (Nil), arg585: (Nil), arg586: (Nil), arg587: (Nil), arg588: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (SUCC (SUCC (ZERO))) ((((((((((Nil) @ (8::(Nil))) @ (5::(Nil))) @ (3::(4::(3::(Nil))))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (8::(5::rotate (SUCC (SUCC (ZERO))) ((((((((Nil) @ (3::(4::(3::(Nil))))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (SUCC (SUCC (ZERO))) ((((((((((Nil) @ (6::(Nil))) @ (4::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (6::(4::rotate (SUCC (SUCC (ZERO))) ((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) ((((((((((Nil) @ (4::(Nil))) @ (2::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (4::(2::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
Simplifying took 0.004883 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list2:any list), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Model : any1: 0, any2: 0, any3: 8, any4: 5, any5: 5, any6: 2, any7: 2, any8: 3, any_list2: (Nil)
Model : any1: 6, any2: 2, any3: 5, any4: 8, any5: 0, any6: 3, any7: 0, any8: 0, any_list2: (Nil)
Model : any1: 4, any2: 6, any3: 8, any4: 6, any5: 8, any6: 3, any7: 1, any8: 5, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (0::(Nil))) @ (8::(Nil))) @ (5::(Nil))) @ (5::(Nil))) @ (2::(Nil))) @ (2::(Nil))) @ (3::(Nil)))) = (0::(0::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (8::(Nil))) @ (5::(Nil))) @ (5::(Nil))) @ (2::(Nil))) @ (2::(Nil))) @ (3::(Nil))))))
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (6::(Nil))) @ (2::(Nil))) @ (5::(Nil))) @ (8::(Nil))) @ (0::(Nil))) @ (3::(Nil))) @ (0::(Nil))) @ (0::(Nil)))) = (6::(2::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (5::(Nil))) @ (8::(Nil))) @ (0::(Nil))) @ (3::(Nil))) @ (0::(Nil))) @ (0::(Nil))))))
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (4::(Nil))) @ (6::(Nil))) @ (8::(Nil))) @ (6::(Nil))) @ (8::(Nil))) @ (3::(Nil))) @ (1::(Nil))) @ (5::(Nil)))) = (4::(6::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (8::(Nil))) @ (6::(Nil))) @ (8::(Nil))) @ (3::(Nil))) @ (1::(Nil))) @ (5::(Nil))))))
Simplifying took 0.009876 seconds
Result : true
advanced_generalize done
=================================================
Progress: 333


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any2 : any
any6 : any
---------------------------------------
forall (any3:any) (any4:any) (any5:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any7(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any2 : any
any6 : any
any7 : any
---------------------------------------
forall (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any6
intro any7
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg589:any list) (arg590:any list) (arg591:any list) (arg592:any list) (arg593:any list) (arg594:any list) (arg595:any list) (arg596:nat), rotate (arg596) (((((((((arg589 @ (any1::(Nil))) @ (any2::(Nil))) @ arg590) @ arg591) @ arg592) @ arg593) @ arg594) @ arg595)) = (any1::(any2::rotate (arg596) (((((((arg589 @ arg590) @ arg591) @ arg592) @ arg593) @ arg594) @ arg595))))
Model : any1: 0, any2: 4, arg589: (Nil), arg590: (Nil), arg591: (Nil), arg592: (5::(Nil)), arg593: (1::(7::(Nil))), arg594: (Nil), arg595: (Nil), arg596: ZERO
Model : any1: 1, any2: 4, arg589: (Nil), arg590: (5::(Nil)), arg591: (5::(Nil)), arg592: (8::(Nil)), arg593: (Nil), arg594: (Nil), arg595: (Nil), arg596: ZERO
Model : any1: 1, any2: 3, arg589: (Nil), arg590: (Nil), arg591: (Nil), arg592: (Nil), arg593: (Nil), arg594: (Nil), arg595: (0::(8::(Nil))), arg596: SUCC (ZERO)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) ((((((((((Nil) @ (0::(Nil))) @ (4::(Nil))) @ (Nil)) @ (Nil)) @ (5::(Nil))) @ (1::(7::(Nil)))) @ (Nil)) @ (Nil))) = (0::(4::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (Nil)) @ (5::(Nil))) @ (1::(7::(Nil)))) @ (Nil)) @ (Nil)))))
rotate (ZERO) ((((((((((Nil) @ (1::(Nil))) @ (4::(Nil))) @ (5::(Nil))) @ (5::(Nil))) @ (8::(Nil))) @ (Nil)) @ (Nil)) @ (Nil))) = (1::(4::rotate (ZERO) ((((((((Nil) @ (5::(Nil))) @ (5::(Nil))) @ (8::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (SUCC (ZERO)) ((((((((((Nil) @ (1::(Nil))) @ (3::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (0::(8::(Nil))))) = (1::(3::rotate (SUCC (ZERO)) ((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (0::(8::(Nil)))))))
Simplifying took 0.004962 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list2:any list), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Model : any1: 1, any2: 5, any3: 0, any4: 0, any5: 5, any6: 2, any7: 5, any8: 0, any_list2: (Nil)
Model : any1: 8, any2: 5, any3: 7, any4: 4, any5: 5, any6: 5, any7: 7, any8: 2, any_list2: (Nil)
Model : any1: 2, any2: 2, any3: 7, any4: 0, any5: 0, any6: 0, any7: 0, any8: 2, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (1::(Nil))) @ (5::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (5::(Nil))) @ (2::(Nil))) @ (5::(Nil))) @ (0::(Nil)))) = (1::(5::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (0::(Nil))) @ (5::(Nil))) @ (2::(Nil))) @ (5::(Nil))) @ (0::(Nil))))))
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (8::(Nil))) @ (5::(Nil))) @ (7::(Nil))) @ (4::(Nil))) @ (5::(Nil))) @ (5::(Nil))) @ (7::(Nil))) @ (2::(Nil)))) = (8::(5::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (7::(Nil))) @ (4::(Nil))) @ (5::(Nil))) @ (5::(Nil))) @ (7::(Nil))) @ (2::(Nil))))))
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (2::(Nil))) @ (2::(Nil))) @ (7::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (2::(Nil)))) = (2::(2::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (7::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (2::(Nil))))))
Simplifying took 0.008821 seconds
Result : true
advanced_generalize done
=================================================
Progress: 334


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any5(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any3 : any
any4 : any
any5 : any
---------------------------------------
forall (any2:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 2
intro any6(rank:17)
intro any7(rank:17)
=================================================
Progress: 335


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any6(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any3 : any
any4 : any
any6 : any
---------------------------------------
forall (any2:any) (any5:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro any7(rank:17)
=================================================
Progress: 336


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any7(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any3 : any
any4 : any
any7 : any
---------------------------------------
forall (any2:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any4
intro any7
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg597:any list) (arg598:any list) (arg599:any list) (arg600:any list) (arg601:any list) (arg602:any list) (arg603:any list) (arg604:nat), rotate (arg604) (((((((((arg597 @ (any1::(Nil))) @ (any2::(Nil))) @ arg598) @ arg599) @ arg600) @ arg601) @ arg602) @ arg603)) = (any1::(any2::rotate (arg604) (((((((arg597 @ arg598) @ arg599) @ arg600) @ arg601) @ arg602) @ arg603))))
Model : any1: 3, any2: 5, arg597: (Nil), arg598: (Nil), arg599: (Nil), arg600: (Nil), arg601: (0::(Nil)), arg602: (Nil), arg603: (Nil), arg604: ZERO
Model : any1: 0, any2: 3, arg597: (Nil), arg598: (Nil), arg599: (Nil), arg600: (Nil), arg601: (0::(6::(Nil))), arg602: (Nil), arg603: (Nil), arg604: ZERO
Model : any1: 2, any2: 4, arg597: (8::(0::(Nil))), arg598: (2::(Nil)), arg599: (5::(Nil)), arg600: (Nil), arg601: (Nil), arg602: (Nil), arg603: (Nil), arg604: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) ((((((((((Nil) @ (3::(Nil))) @ (5::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (0::(Nil))) @ (Nil)) @ (Nil))) = (3::(5::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (0::(Nil))) @ (Nil)) @ (Nil)))))
rotate (ZERO) ((((((((((Nil) @ (0::(Nil))) @ (3::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (0::(6::(Nil)))) @ (Nil)) @ (Nil))) = (0::(3::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (0::(6::(Nil)))) @ (Nil)) @ (Nil)))))
rotate (ZERO) ((((((((((8::(0::(Nil))) @ (2::(Nil))) @ (4::(Nil))) @ (2::(Nil))) @ (5::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (2::(4::rotate (ZERO) ((((((((8::(0::(Nil))) @ (2::(Nil))) @ (5::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
Simplifying took 0.004815 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list2:any list), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Model : any1: 5, any2: 2, any3: 2, any4: 1, any5: 0, any6: 0, any7: 7, any8: 7, any_list2: (2::(Nil))
Model : any1: 0, any2: 7, any3: 0, any4: 0, any5: 7, any6: 2, any7: 7, any8: 0, any_list2: (Nil)
Model : any1: 2, any2: 0, any3: 8, any4: 1, any5: 8, any6: 7, any7: 0, any8: 1, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((2::(Nil)))) (((((((((((2::(Nil)) @ (Nil)) @ (5::(Nil))) @ (2::(Nil))) @ (2::(Nil))) @ (1::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (7::(Nil))) @ (7::(Nil)))) = (5::(2::rotate (len ((2::(Nil)))) (((((((((2::(Nil)) @ (Nil)) @ (2::(Nil))) @ (1::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (7::(Nil))) @ (7::(Nil))))))
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (7::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (7::(Nil))) @ (2::(Nil))) @ (7::(Nil))) @ (0::(Nil)))) = (0::(7::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (0::(Nil))) @ (7::(Nil))) @ (2::(Nil))) @ (7::(Nil))) @ (0::(Nil))))))
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (2::(Nil))) @ (0::(Nil))) @ (8::(Nil))) @ (1::(Nil))) @ (8::(Nil))) @ (7::(Nil))) @ (0::(Nil))) @ (1::(Nil)))) = (2::(0::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (8::(Nil))) @ (1::(Nil))) @ (8::(Nil))) @ (7::(Nil))) @ (0::(Nil))) @ (1::(Nil))))))
Simplifying took 0.010781 seconds
Result : true
advanced_generalize done
=================================================
Progress: 337


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any3 : any
any5 : any
---------------------------------------
forall (any2:any) (any4:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any6(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any3 : any
any5 : any
any6 : any
---------------------------------------
forall (any2:any) (any4:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro any7(rank:17)
=================================================
Progress: 338


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any3 : any
any5 : any
---------------------------------------
forall (any2:any) (any4:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any7(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any3 : any
any5 : any
any7 : any
---------------------------------------
forall (any2:any) (any4:any) (any6:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any5
intro any7
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg605:any list) (arg606:any list) (arg607:any list) (arg608:any list) (arg609:any list) (arg610:any list) (arg611:any list) (arg612:nat), rotate (arg612) (((((((((arg605 @ (any1::(Nil))) @ (any2::(Nil))) @ arg606) @ arg607) @ arg608) @ arg609) @ arg610) @ arg611)) = (any1::(any2::rotate (arg612) (((((((arg605 @ arg606) @ arg607) @ arg608) @ arg609) @ arg610) @ arg611))))
Model : any1: 7, any2: 8, arg605: (Nil), arg606: (Nil), arg607: (Nil), arg608: (Nil), arg609: (4::(Nil)), arg610: (Nil), arg611: (0::(5::(Nil))), arg612: ZERO
Model : any1: 0, any2: 4, arg605: (4::(Nil)), arg606: (Nil), arg607: (Nil), arg608: (Nil), arg609: (Nil), arg610: (Nil), arg611: (Nil), arg612: ZERO
Model : any1: 2, any2: 5, arg605: (7::(Nil)), arg606: (3::(5::(Nil))), arg607: (Nil), arg608: (Nil), arg609: (Nil), arg610: (Nil), arg611: (Nil), arg612: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) ((((((((((Nil) @ (7::(Nil))) @ (8::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (4::(Nil))) @ (Nil)) @ (0::(5::(Nil))))) = (7::(8::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (4::(Nil))) @ (Nil)) @ (0::(5::(Nil)))))))
rotate (ZERO) ((((((((((4::(Nil)) @ (0::(Nil))) @ (4::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (0::(4::rotate (ZERO) ((((((((4::(Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) ((((((((((7::(Nil)) @ (2::(Nil))) @ (5::(Nil))) @ (3::(5::(Nil)))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (2::(5::rotate (ZERO) ((((((((7::(Nil)) @ (3::(5::(Nil)))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
Simplifying took 0.004870 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list2:any list), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Model : any1: 7, any2: 6, any3: 5, any4: 4, any5: 2, any6: 8, any7: 2, any8: 7, any_list2: (Nil)
Model : any1: 3, any2: 6, any3: 8, any4: 8, any5: 0, any6: 1, any7: 2, any8: 2, any_list2: (8::(Nil))
Model : any1: 2, any2: 2, any3: 7, any4: 7, any5: 6, any6: 8, any7: 2, any8: 7, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (7::(Nil))) @ (6::(Nil))) @ (5::(Nil))) @ (4::(Nil))) @ (2::(Nil))) @ (8::(Nil))) @ (2::(Nil))) @ (7::(Nil)))) = (7::(6::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (5::(Nil))) @ (4::(Nil))) @ (2::(Nil))) @ (8::(Nil))) @ (2::(Nil))) @ (7::(Nil))))))
rotate (len ((8::(Nil)))) (((((((((((8::(Nil)) @ (Nil)) @ (3::(Nil))) @ (6::(Nil))) @ (8::(Nil))) @ (8::(Nil))) @ (0::(Nil))) @ (1::(Nil))) @ (2::(Nil))) @ (2::(Nil)))) = (3::(6::rotate (len ((8::(Nil)))) (((((((((8::(Nil)) @ (Nil)) @ (8::(Nil))) @ (8::(Nil))) @ (0::(Nil))) @ (1::(Nil))) @ (2::(Nil))) @ (2::(Nil))))))
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (2::(Nil))) @ (2::(Nil))) @ (7::(Nil))) @ (7::(Nil))) @ (6::(Nil))) @ (8::(Nil))) @ (2::(Nil))) @ (7::(Nil)))) = (2::(2::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (7::(Nil))) @ (7::(Nil))) @ (6::(Nil))) @ (8::(Nil))) @ (2::(Nil))) @ (7::(Nil))))))
Simplifying took 0.013323 seconds
Result : true
advanced_generalize done
=================================================
Progress: 339


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any3 : any
any6 : any
---------------------------------------
forall (any2:any) (any4:any) (any5:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any7(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any3 : any
any6 : any
any7 : any
---------------------------------------
forall (any2:any) (any4:any) (any5:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any6
intro any7
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg613:any list) (arg614:any list) (arg615:any list) (arg616:any list) (arg617:any list) (arg618:any list) (arg619:any list) (arg620:nat), rotate (arg620) (((((((((arg613 @ (any1::(Nil))) @ (any2::(Nil))) @ arg614) @ arg615) @ arg616) @ arg617) @ arg618) @ arg619)) = (any1::(any2::rotate (arg620) (((((((arg613 @ arg614) @ arg615) @ arg616) @ arg617) @ arg618) @ arg619))))
Model : any1: 6, any2: 0, arg613: (Nil), arg614: (Nil), arg615: (Nil), arg616: (Nil), arg617: (Nil), arg618: (Nil), arg619: (Nil), arg620: ZERO
Model : any1: 2, any2: 0, arg613: (Nil), arg614: (4::(7::(Nil))), arg615: (Nil), arg616: (Nil), arg617: (Nil), arg618: (Nil), arg619: (Nil), arg620: ZERO
Model : any1: 6, any2: 3, arg613: (Nil), arg614: (Nil), arg615: (Nil), arg616: (Nil), arg617: (Nil), arg618: (0::(4::(Nil))), arg619: (Nil), arg620: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) ((((((((((Nil) @ (6::(Nil))) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (6::(0::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) ((((((((((Nil) @ (2::(Nil))) @ (0::(Nil))) @ (4::(7::(Nil)))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (2::(0::rotate (ZERO) ((((((((Nil) @ (4::(7::(Nil)))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) ((((((((((Nil) @ (6::(Nil))) @ (3::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (0::(4::(Nil)))) @ (Nil))) = (6::(3::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (0::(4::(Nil)))) @ (Nil)))))
Simplifying took 0.003357 seconds
Result : true
advanced_generalize done


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any3 : any
any6 : any
any7 : any
---------------------------------------
forall (any2:any) (any4:any) (any5:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
=================================================
Progress: 340


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any3 : any
any6 : any
any7 : any
---------------------------------------
forall (any2:any) (any4:any) (any5:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (arg613:any list) (arg614:any list) (arg615:any list) (arg616:any list) (arg617:any list) (arg618:any list) (arg619:any list) (arg620:nat), rotate (arg620) (((((((((arg613 @ (any1::(Nil))) @ (any2::(Nil))) @ arg614) @ arg615) @ arg616) @ arg617) @ arg618) @ arg619)) = (any1::(any2::rotate (arg620) (((((((arg613 @ arg614) @ arg615) @ arg616) @ arg617) @ arg618) @ arg619))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (any_list7:any list) (nat1:nat), rotate (nat1) (((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7)) = (any1::(any2::rotate (nat1) (((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (any_list7:any list) (nat1:nat), rotate (nat1) (((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7)) = (any1::(any2::rotate (nat1) (((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:20)
=================================================
Progress: 341


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any4 : any
any5 : any
---------------------------------------
forall (any2:any) (any3:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any6(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any4 : any
any5 : any
any6 : any
---------------------------------------
forall (any2:any) (any3:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro any7(rank:17)
=================================================
Progress: 342


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any4 : any
any5 : any
---------------------------------------
forall (any2:any) (any3:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any7(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any4 : any
any5 : any
any7 : any
---------------------------------------
forall (any2:any) (any3:any) (any6:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any4
intro any5
intro any7
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg621:any list) (arg622:any list) (arg623:any list) (arg624:any list) (arg625:any list) (arg626:any list) (arg627:any list) (arg628:nat), rotate (arg628) (((((((((arg621 @ (any1::(Nil))) @ (any2::(Nil))) @ arg622) @ arg623) @ arg624) @ arg625) @ arg626) @ arg627)) = (any1::(any2::rotate (arg628) (((((((arg621 @ arg622) @ arg623) @ arg624) @ arg625) @ arg626) @ arg627))))
Model : any1: 1, any2: 0, arg621: (Nil), arg622: (Nil), arg623: (Nil), arg624: (Nil), arg625: (Nil), arg626: (Nil), arg627: (Nil), arg628: ZERO
Model : any1: 3, any2: 1, arg621: (Nil), arg622: (Nil), arg623: (Nil), arg624: (Nil), arg625: (Nil), arg626: (6::(Nil)), arg627: (Nil), arg628: ZERO
Model : any1: 8, any2: 6, arg621: (Nil), arg622: (Nil), arg623: (Nil), arg624: (Nil), arg625: (Nil), arg626: (Nil), arg627: (Nil), arg628: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) ((((((((((Nil) @ (1::(Nil))) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (1::(0::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) ((((((((((Nil) @ (3::(Nil))) @ (1::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (6::(Nil))) @ (Nil))) = (3::(1::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (6::(Nil))) @ (Nil)))))
rotate (ZERO) ((((((((((Nil) @ (8::(Nil))) @ (6::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (8::(6::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
Simplifying took 0.001656 seconds
Result : true
advanced_generalize done


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any4 : any
any5 : any
any7 : any
---------------------------------------
forall (any2:any) (any3:any) (any6:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
=================================================
Progress: 343


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any4 : any
any5 : any
any7 : any
---------------------------------------
forall (any2:any) (any3:any) (any6:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (arg621:any list) (arg622:any list) (arg623:any list) (arg624:any list) (arg625:any list) (arg626:any list) (arg627:any list) (arg628:nat), rotate (arg628) (((((((((arg621 @ (any1::(Nil))) @ (any2::(Nil))) @ arg622) @ arg623) @ arg624) @ arg625) @ arg626) @ arg627)) = (any1::(any2::rotate (arg628) (((((((arg621 @ arg622) @ arg623) @ arg624) @ arg625) @ arg626) @ arg627))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (any_list7:any list) (nat1:nat), rotate (nat1) (((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7)) = (any1::(any2::rotate (nat1) (((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (any_list7:any list) (nat1:nat), rotate (nat1) (((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7)) = (any1::(any2::rotate (nat1) (((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:20)
=================================================
Progress: 344


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any4 : any
any6 : any
---------------------------------------
forall (any2:any) (any3:any) (any5:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any7(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any4 : any
any6 : any
any7 : any
---------------------------------------
forall (any2:any) (any3:any) (any5:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any4
intro any6
intro any7
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg629:any list) (arg630:any list) (arg631:any list) (arg632:any list) (arg633:any list) (arg634:any list) (arg635:any list) (arg636:nat), rotate (arg636) (((((((((arg629 @ (any1::(Nil))) @ (any2::(Nil))) @ arg630) @ arg631) @ arg632) @ arg633) @ arg634) @ arg635)) = (any1::(any2::rotate (arg636) (((((((arg629 @ arg630) @ arg631) @ arg632) @ arg633) @ arg634) @ arg635))))
Model : any1: 8, any2: 6, arg629: (Nil), arg630: (Nil), arg631: (Nil), arg632: (Nil), arg633: (Nil), arg634: (Nil), arg635: (Nil), arg636: ZERO
Model : any1: 6, any2: 7, arg629: (Nil), arg630: (Nil), arg631: (Nil), arg632: (Nil), arg633: (Nil), arg634: (Nil), arg635: (Nil), arg636: ZERO
Model : any1: 0, any2: 4, arg629: (Nil), arg630: (Nil), arg631: (Nil), arg632: (Nil), arg633: (Nil), arg634: (Nil), arg635: (Nil), arg636: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) ((((((((((Nil) @ (8::(Nil))) @ (6::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (8::(6::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) ((((((((((Nil) @ (6::(Nil))) @ (7::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (6::(7::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) ((((((((((Nil) @ (0::(Nil))) @ (4::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (0::(4::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
Simplifying took 0.001879 seconds
Result : true
advanced_generalize done


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any4 : any
any6 : any
any7 : any
---------------------------------------
forall (any2:any) (any3:any) (any5:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
=================================================
Progress: 345


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any4 : any
any6 : any
any7 : any
---------------------------------------
forall (any2:any) (any3:any) (any5:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (arg629:any list) (arg630:any list) (arg631:any list) (arg632:any list) (arg633:any list) (arg634:any list) (arg635:any list) (arg636:nat), rotate (arg636) (((((((((arg629 @ (any1::(Nil))) @ (any2::(Nil))) @ arg630) @ arg631) @ arg632) @ arg633) @ arg634) @ arg635)) = (any1::(any2::rotate (arg636) (((((((arg629 @ arg630) @ arg631) @ arg632) @ arg633) @ arg634) @ arg635))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (any_list7:any list) (nat1:nat), rotate (nat1) (((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7)) = (any1::(any2::rotate (nat1) (((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (any_list7:any list) (nat1:nat), rotate (nat1) (((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7)) = (any1::(any2::rotate (nat1) (((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:20)
=================================================
Progress: 346


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any5 : any
any6 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any7(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any5 : any
any6 : any
any7 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any5
intro any6
intro any7
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg637:any list) (arg638:any list) (arg639:any list) (arg640:any list) (arg641:any list) (arg642:any list) (arg643:any list) (arg644:nat), rotate (arg644) (((((((((arg637 @ (any1::(Nil))) @ (any2::(Nil))) @ arg638) @ arg639) @ arg640) @ arg641) @ arg642) @ arg643)) = (any1::(any2::rotate (arg644) (((((((arg637 @ arg638) @ arg639) @ arg640) @ arg641) @ arg642) @ arg643))))
Model : any1: 7, any2: 6, arg637: (Nil), arg638: (6::(Nil)), arg639: (2::(Nil)), arg640: (Nil), arg641: (Nil), arg642: (Nil), arg643: (0::(3::(Nil))), arg644: ZERO
Model : any1: 0, any2: 8, arg637: (Nil), arg638: (1::(6::(Nil))), arg639: (Nil), arg640: (Nil), arg641: (2::(Nil)), arg642: (Nil), arg643: (6::(Nil)), arg644: ZERO
Model : any1: 2, any2: 2, arg637: (Nil), arg638: (Nil), arg639: (Nil), arg640: (8::(Nil)), arg641: (Nil), arg642: (Nil), arg643: (Nil), arg644: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) ((((((((((Nil) @ (7::(Nil))) @ (6::(Nil))) @ (6::(Nil))) @ (2::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (0::(3::(Nil))))) = (7::(6::rotate (ZERO) ((((((((Nil) @ (6::(Nil))) @ (2::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (0::(3::(Nil)))))))
rotate (ZERO) ((((((((((Nil) @ (0::(Nil))) @ (8::(Nil))) @ (1::(6::(Nil)))) @ (Nil)) @ (Nil)) @ (2::(Nil))) @ (Nil)) @ (6::(Nil)))) = (0::(8::rotate (ZERO) ((((((((Nil) @ (1::(6::(Nil)))) @ (Nil)) @ (Nil)) @ (2::(Nil))) @ (Nil)) @ (6::(Nil))))))
rotate (ZERO) ((((((((((Nil) @ (2::(Nil))) @ (2::(Nil))) @ (Nil)) @ (Nil)) @ (8::(Nil))) @ (Nil)) @ (Nil)) @ (Nil))) = (2::(2::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (Nil)) @ (8::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)))))
Simplifying took 0.004987 seconds
Result : true
advanced_generalize done


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any5 : any
any6 : any
any7 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
=================================================
Progress: 347


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any5 : any
any6 : any
any7 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (arg637:any list) (arg638:any list) (arg639:any list) (arg640:any list) (arg641:any list) (arg642:any list) (arg643:any list) (arg644:nat), rotate (arg644) (((((((((arg637 @ (any1::(Nil))) @ (any2::(Nil))) @ arg638) @ arg639) @ arg640) @ arg641) @ arg642) @ arg643)) = (any1::(any2::rotate (arg644) (((((((arg637 @ arg638) @ arg639) @ arg640) @ arg641) @ arg642) @ arg643))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (any_list7:any list) (nat1:nat), rotate (nat1) (((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7)) = (any1::(any2::rotate (nat1) (((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (any_list7:any list) (nat1:nat), rotate (nat1) (((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7)) = (any1::(any2::rotate (nat1) (((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:20)
=================================================
Progress: 348


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any5(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any2 : any
any3 : any
any4 : any
any5 : any
---------------------------------------
forall (any1:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 2
intro any6(rank:17)
intro any7(rank:17)
=================================================
Progress: 349


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any6(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any2 : any
any3 : any
any4 : any
any6 : any
---------------------------------------
forall (any1:any) (any5:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro any7(rank:17)
=================================================
Progress: 350


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any7(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any2 : any
any3 : any
any4 : any
any7 : any
---------------------------------------
forall (any1:any) (any5:any) (any6:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any4
intro any7
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg645:any list) (arg646:any list) (arg647:any list) (arg648:any list) (arg649:any list) (arg650:any list) (arg651:any list) (arg652:nat), rotate (arg652) (((((((((arg645 @ (any1::(Nil))) @ (any2::(Nil))) @ arg646) @ arg647) @ arg648) @ arg649) @ arg650) @ arg651)) = (any1::(any2::rotate (arg652) (((((((arg645 @ arg646) @ arg647) @ arg648) @ arg649) @ arg650) @ arg651))))
Model : any1: 5, any2: 0, arg645: (Nil), arg646: (Nil), arg647: (Nil), arg648: (Nil), arg649: (Nil), arg650: (Nil), arg651: (Nil), arg652: ZERO
Model : any1: 4, any2: 0, arg645: (6::(Nil)), arg646: (Nil), arg647: (Nil), arg648: (Nil), arg649: (0::(Nil)), arg650: (Nil), arg651: (Nil), arg652: ZERO
Model : any1: 5, any2: 4, arg645: (Nil), arg646: (0::(Nil)), arg647: (Nil), arg648: (Nil), arg649: (0::(Nil)), arg650: (Nil), arg651: (Nil), arg652: SUCC (ZERO)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) ((((((((((Nil) @ (5::(Nil))) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (5::(0::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) ((((((((((6::(Nil)) @ (4::(Nil))) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (0::(Nil))) @ (Nil)) @ (Nil))) = (4::(0::rotate (ZERO) ((((((((6::(Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (0::(Nil))) @ (Nil)) @ (Nil)))))
rotate (SUCC (ZERO)) ((((((((((Nil) @ (5::(Nil))) @ (4::(Nil))) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (0::(Nil))) @ (Nil)) @ (Nil))) = (5::(4::rotate (SUCC (ZERO)) ((((((((Nil) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (0::(Nil))) @ (Nil)) @ (Nil)))))
Simplifying took 0.002789 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list2:any list), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Model : any1: 2, any2: 0, any3: 2, any4: 1, any5: 5, any6: 7, any7: 0, any8: 1, any_list2: (Nil)
Model : any1: 1, any2: 1, any3: 6, any4: 7, any5: 6, any6: 0, any7: 8, any8: 8, any_list2: (4::(Nil))
Model : any1: 0, any2: 7, any3: 0, any4: 2, any5: 5, any6: 2, any7: 2, any8: 6, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (2::(Nil))) @ (0::(Nil))) @ (2::(Nil))) @ (1::(Nil))) @ (5::(Nil))) @ (7::(Nil))) @ (0::(Nil))) @ (1::(Nil)))) = (2::(0::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (2::(Nil))) @ (1::(Nil))) @ (5::(Nil))) @ (7::(Nil))) @ (0::(Nil))) @ (1::(Nil))))))
rotate (len ((4::(Nil)))) (((((((((((4::(Nil)) @ (Nil)) @ (1::(Nil))) @ (1::(Nil))) @ (6::(Nil))) @ (7::(Nil))) @ (6::(Nil))) @ (0::(Nil))) @ (8::(Nil))) @ (8::(Nil)))) = (1::(1::rotate (len ((4::(Nil)))) (((((((((4::(Nil)) @ (Nil)) @ (6::(Nil))) @ (7::(Nil))) @ (6::(Nil))) @ (0::(Nil))) @ (8::(Nil))) @ (8::(Nil))))))
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (7::(Nil))) @ (0::(Nil))) @ (2::(Nil))) @ (5::(Nil))) @ (2::(Nil))) @ (2::(Nil))) @ (6::(Nil)))) = (0::(7::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (2::(Nil))) @ (5::(Nil))) @ (2::(Nil))) @ (2::(Nil))) @ (6::(Nil))))))
Simplifying took 0.012082 seconds
Result : true
advanced_generalize done
=================================================
Progress: 351


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any2 : any
any3 : any
any5 : any
---------------------------------------
forall (any1:any) (any4:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any6(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any2 : any
any3 : any
any5 : any
any6 : any
---------------------------------------
forall (any1:any) (any4:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro any7(rank:17)
=================================================
Progress: 352


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any2 : any
any3 : any
any5 : any
---------------------------------------
forall (any1:any) (any4:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any7(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any2 : any
any3 : any
any5 : any
any7 : any
---------------------------------------
forall (any1:any) (any4:any) (any6:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any5
intro any7
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg653:any list) (arg654:any list) (arg655:any list) (arg656:any list) (arg657:any list) (arg658:any list) (arg659:any list) (arg660:nat), rotate (arg660) (((((((((arg653 @ (any1::(Nil))) @ (any2::(Nil))) @ arg654) @ arg655) @ arg656) @ arg657) @ arg658) @ arg659)) = (any1::(any2::rotate (arg660) (((((((arg653 @ arg654) @ arg655) @ arg656) @ arg657) @ arg658) @ arg659))))
Model : any1: 7, any2: 8, arg653: (Nil), arg654: (Nil), arg655: (Nil), arg656: (Nil), arg657: (Nil), arg658: (Nil), arg659: (Nil), arg660: ZERO
Model : any1: 0, any2: 8, arg653: (Nil), arg654: (Nil), arg655: (Nil), arg656: (Nil), arg657: (8::(Nil)), arg658: (Nil), arg659: (Nil), arg660: ZERO
Model : any1: 4, any2: 6, arg653: (Nil), arg654: (Nil), arg655: (Nil), arg656: (Nil), arg657: (Nil), arg658: (3::(Nil)), arg659: (6::(Nil)), arg660: SUCC (SUCC (ZERO))
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) ((((((((((Nil) @ (7::(Nil))) @ (8::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (7::(8::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) ((((((((((Nil) @ (0::(Nil))) @ (8::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (8::(Nil))) @ (Nil)) @ (Nil))) = (0::(8::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (8::(Nil))) @ (Nil)) @ (Nil)))))
rotate (SUCC (SUCC (ZERO))) ((((((((((Nil) @ (4::(Nil))) @ (6::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (3::(Nil))) @ (6::(Nil)))) = (4::(6::rotate (SUCC (SUCC (ZERO))) ((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (3::(Nil))) @ (6::(Nil))))))
Simplifying took 0.003621 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list2:any list), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Model : any1: 4, any2: 4, any3: 0, any4: 0, any5: 6, any6: 7, any7: 2, any8: 6, any_list2: (Nil)
Model : any1: 0, any2: 4, any3: 1, any4: 3, any5: 0, any6: 1, any7: 5, any8: 1, any_list2: (Nil)
Model : any1: 2, any2: 6, any3: 0, any4: 4, any5: 7, any6: 6, any7: 5, any8: 0, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (4::(Nil))) @ (4::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (6::(Nil))) @ (7::(Nil))) @ (2::(Nil))) @ (6::(Nil)))) = (4::(4::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (0::(Nil))) @ (6::(Nil))) @ (7::(Nil))) @ (2::(Nil))) @ (6::(Nil))))))
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (4::(Nil))) @ (1::(Nil))) @ (3::(Nil))) @ (0::(Nil))) @ (1::(Nil))) @ (5::(Nil))) @ (1::(Nil)))) = (0::(4::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (1::(Nil))) @ (3::(Nil))) @ (0::(Nil))) @ (1::(Nil))) @ (5::(Nil))) @ (1::(Nil))))))
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (2::(Nil))) @ (6::(Nil))) @ (0::(Nil))) @ (4::(Nil))) @ (7::(Nil))) @ (6::(Nil))) @ (5::(Nil))) @ (0::(Nil)))) = (2::(6::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (4::(Nil))) @ (7::(Nil))) @ (6::(Nil))) @ (5::(Nil))) @ (0::(Nil))))))
Simplifying took 0.009272 seconds
Result : true
advanced_generalize done
=================================================
Progress: 353


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any2 : any
any3 : any
any6 : any
---------------------------------------
forall (any1:any) (any4:any) (any5:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any7(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any2 : any
any3 : any
any6 : any
any7 : any
---------------------------------------
forall (any1:any) (any4:any) (any5:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any6
intro any7
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg661:any list) (arg662:any list) (arg663:any list) (arg664:any list) (arg665:any list) (arg666:any list) (arg667:any list) (arg668:nat), rotate (arg668) (((((((((arg661 @ (any1::(Nil))) @ (any2::(Nil))) @ arg662) @ arg663) @ arg664) @ arg665) @ arg666) @ arg667)) = (any1::(any2::rotate (arg668) (((((((arg661 @ arg662) @ arg663) @ arg664) @ arg665) @ arg666) @ arg667))))
Model : any1: 1, any2: 7, arg661: (Nil), arg662: (Nil), arg663: (Nil), arg664: (Nil), arg665: (Nil), arg666: (Nil), arg667: (Nil), arg668: SUCC (ZERO)
Model : any1: 4, any2: 3, arg661: (8::(Nil)), arg662: (Nil), arg663: (3::(Nil)), arg664: (Nil), arg665: (Nil), arg666: (5::(Nil)), arg667: (Nil), arg668: ZERO
Model : any1: 7, any2: 8, arg661: (3::(5::(Nil))), arg662: (Nil), arg663: (Nil), arg664: (Nil), arg665: (Nil), arg666: (Nil), arg667: (Nil), arg668: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (SUCC (ZERO)) ((((((((((Nil) @ (1::(Nil))) @ (7::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (1::(7::rotate (SUCC (ZERO)) ((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) ((((((((((8::(Nil)) @ (4::(Nil))) @ (3::(Nil))) @ (Nil)) @ (3::(Nil))) @ (Nil)) @ (Nil)) @ (5::(Nil))) @ (Nil))) = (4::(3::rotate (ZERO) ((((((((8::(Nil)) @ (Nil)) @ (3::(Nil))) @ (Nil)) @ (Nil)) @ (5::(Nil))) @ (Nil)))))
rotate (ZERO) ((((((((((3::(5::(Nil))) @ (7::(Nil))) @ (8::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (7::(8::rotate (ZERO) ((((((((3::(5::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
Simplifying took 0.005097 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list2:any list), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Model : any1: 6, any2: 0, any3: 4, any4: 2, any5: 0, any6: 5, any7: 8, any8: 0, any_list2: (Nil)
Model : any1: 3, any2: 0, any3: 0, any4: 0, any5: 2, any6: 1, any7: 6, any8: 1, any_list2: (0::(Nil))
Model : any1: 3, any2: 4, any3: 8, any4: 2, any5: 0, any6: 0, any7: 4, any8: 3, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (6::(Nil))) @ (0::(Nil))) @ (4::(Nil))) @ (2::(Nil))) @ (0::(Nil))) @ (5::(Nil))) @ (8::(Nil))) @ (0::(Nil)))) = (6::(0::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (4::(Nil))) @ (2::(Nil))) @ (0::(Nil))) @ (5::(Nil))) @ (8::(Nil))) @ (0::(Nil))))))
rotate (len ((0::(Nil)))) (((((((((((0::(Nil)) @ (Nil)) @ (3::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (2::(Nil))) @ (1::(Nil))) @ (6::(Nil))) @ (1::(Nil)))) = (3::(0::rotate (len ((0::(Nil)))) (((((((((0::(Nil)) @ (Nil)) @ (0::(Nil))) @ (0::(Nil))) @ (2::(Nil))) @ (1::(Nil))) @ (6::(Nil))) @ (1::(Nil))))))
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (3::(Nil))) @ (4::(Nil))) @ (8::(Nil))) @ (2::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (4::(Nil))) @ (3::(Nil)))) = (3::(4::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (8::(Nil))) @ (2::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (4::(Nil))) @ (3::(Nil))))))
Simplifying took 0.009352 seconds
Result : true
advanced_generalize done
=================================================
Progress: 354


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any2 : any
any4 : any
any5 : any
---------------------------------------
forall (any1:any) (any3:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any6(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any2 : any
any4 : any
any5 : any
any6 : any
---------------------------------------
forall (any1:any) (any3:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro any7(rank:17)
=================================================
Progress: 355


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any2 : any
any4 : any
any5 : any
---------------------------------------
forall (any1:any) (any3:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any7(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any2 : any
any4 : any
any5 : any
any7 : any
---------------------------------------
forall (any1:any) (any3:any) (any6:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any4
intro any5
intro any7
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg669:any list) (arg670:any list) (arg671:any list) (arg672:any list) (arg673:any list) (arg674:any list) (arg675:any list) (arg676:nat), rotate (arg676) (((((((((arg669 @ (any1::(Nil))) @ (any2::(Nil))) @ arg670) @ arg671) @ arg672) @ arg673) @ arg674) @ arg675)) = (any1::(any2::rotate (arg676) (((((((arg669 @ arg670) @ arg671) @ arg672) @ arg673) @ arg674) @ arg675))))
Model : any1: 5, any2: 3, arg669: (Nil), arg670: (Nil), arg671: (0::(Nil)), arg672: (Nil), arg673: (Nil), arg674: (Nil), arg675: (Nil), arg676: ZERO
Model : any1: 0, any2: 3, arg669: (Nil), arg670: (7::(Nil)), arg671: (Nil), arg672: (4::(Nil)), arg673: (6::(7::(Nil))), arg674: (Nil), arg675: (Nil), arg676: SUCC (ZERO)
Model : any1: 2, any2: 7, arg669: (3::(Nil)), arg670: (Nil), arg671: (Nil), arg672: (7::(Nil)), arg673: (Nil), arg674: (Nil), arg675: (0::(Nil)), arg676: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) ((((((((((Nil) @ (5::(Nil))) @ (3::(Nil))) @ (Nil)) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (5::(3::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (SUCC (ZERO)) ((((((((((Nil) @ (0::(Nil))) @ (3::(Nil))) @ (7::(Nil))) @ (Nil)) @ (4::(Nil))) @ (6::(7::(Nil)))) @ (Nil)) @ (Nil))) = (0::(3::rotate (SUCC (ZERO)) ((((((((Nil) @ (7::(Nil))) @ (Nil)) @ (4::(Nil))) @ (6::(7::(Nil)))) @ (Nil)) @ (Nil)))))
rotate (ZERO) ((((((((((3::(Nil)) @ (2::(Nil))) @ (7::(Nil))) @ (Nil)) @ (Nil)) @ (7::(Nil))) @ (Nil)) @ (Nil)) @ (0::(Nil)))) = (2::(7::rotate (ZERO) ((((((((3::(Nil)) @ (Nil)) @ (Nil)) @ (7::(Nil))) @ (Nil)) @ (Nil)) @ (0::(Nil))))))
Simplifying took 0.006109 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list2:any list), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Model : any1: 4, any2: 0, any3: 7, any4: 8, any5: 2, any6: 8, any7: 1, any8: 2, any_list2: (Nil)
Model : any1: 4, any2: 4, any3: 8, any4: 2, any5: 6, any6: 0, any7: 6, any8: 4, any_list2: (Nil)
Model : any1: 2, any2: 8, any3: 4, any4: 1, any5: 4, any6: 8, any7: 7, any8: 6, any_list2: (8::(Nil))
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (4::(Nil))) @ (0::(Nil))) @ (7::(Nil))) @ (8::(Nil))) @ (2::(Nil))) @ (8::(Nil))) @ (1::(Nil))) @ (2::(Nil)))) = (4::(0::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (7::(Nil))) @ (8::(Nil))) @ (2::(Nil))) @ (8::(Nil))) @ (1::(Nil))) @ (2::(Nil))))))
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (4::(Nil))) @ (4::(Nil))) @ (8::(Nil))) @ (2::(Nil))) @ (6::(Nil))) @ (0::(Nil))) @ (6::(Nil))) @ (4::(Nil)))) = (4::(4::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (8::(Nil))) @ (2::(Nil))) @ (6::(Nil))) @ (0::(Nil))) @ (6::(Nil))) @ (4::(Nil))))))
rotate (len ((8::(Nil)))) (((((((((((8::(Nil)) @ (Nil)) @ (2::(Nil))) @ (8::(Nil))) @ (4::(Nil))) @ (1::(Nil))) @ (4::(Nil))) @ (8::(Nil))) @ (7::(Nil))) @ (6::(Nil)))) = (2::(8::rotate (len ((8::(Nil)))) (((((((((8::(Nil)) @ (Nil)) @ (4::(Nil))) @ (1::(Nil))) @ (4::(Nil))) @ (8::(Nil))) @ (7::(Nil))) @ (6::(Nil))))))
Simplifying took 0.014644 seconds
Result : true
advanced_generalize done
=================================================
Progress: 356


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any2 : any
any4 : any
any6 : any
---------------------------------------
forall (any1:any) (any3:any) (any5:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any7(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any2 : any
any4 : any
any6 : any
any7 : any
---------------------------------------
forall (any1:any) (any3:any) (any5:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any4
intro any6
intro any7
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg677:any list) (arg678:any list) (arg679:any list) (arg680:any list) (arg681:any list) (arg682:any list) (arg683:any list) (arg684:nat), rotate (arg684) (((((((((arg677 @ (any1::(Nil))) @ (any2::(Nil))) @ arg678) @ arg679) @ arg680) @ arg681) @ arg682) @ arg683)) = (any1::(any2::rotate (arg684) (((((((arg677 @ arg678) @ arg679) @ arg680) @ arg681) @ arg682) @ arg683))))
Model : any1: 0, any2: 0, arg677: (Nil), arg678: (Nil), arg679: (Nil), arg680: (Nil), arg681: (Nil), arg682: (Nil), arg683: (Nil), arg684: ZERO
Model : any1: 2, any2: 3, arg677: (Nil), arg678: (8::(Nil)), arg679: (Nil), arg680: (Nil), arg681: (Nil), arg682: (Nil), arg683: (Nil), arg684: ZERO
Model : any1: 8, any2: 8, arg677: (Nil), arg678: (6::(Nil)), arg679: (Nil), arg680: (Nil), arg681: (7::(Nil)), arg682: (5::(Nil)), arg683: (Nil), arg684: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) ((((((((((Nil) @ (0::(Nil))) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (0::(0::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) ((((((((((Nil) @ (2::(Nil))) @ (3::(Nil))) @ (8::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (2::(3::rotate (ZERO) ((((((((Nil) @ (8::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) ((((((((((Nil) @ (8::(Nil))) @ (8::(Nil))) @ (6::(Nil))) @ (Nil)) @ (Nil)) @ (7::(Nil))) @ (5::(Nil))) @ (Nil))) = (8::(8::rotate (ZERO) ((((((((Nil) @ (6::(Nil))) @ (Nil)) @ (Nil)) @ (7::(Nil))) @ (5::(Nil))) @ (Nil)))))
Simplifying took 0.004011 seconds
Result : true
advanced_generalize done


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any2 : any
any4 : any
any6 : any
any7 : any
---------------------------------------
forall (any1:any) (any3:any) (any5:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
=================================================
Progress: 357


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any2 : any
any4 : any
any6 : any
any7 : any
---------------------------------------
forall (any1:any) (any3:any) (any5:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (arg677:any list) (arg678:any list) (arg679:any list) (arg680:any list) (arg681:any list) (arg682:any list) (arg683:any list) (arg684:nat), rotate (arg684) (((((((((arg677 @ (any1::(Nil))) @ (any2::(Nil))) @ arg678) @ arg679) @ arg680) @ arg681) @ arg682) @ arg683)) = (any1::(any2::rotate (arg684) (((((((arg677 @ arg678) @ arg679) @ arg680) @ arg681) @ arg682) @ arg683))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (any_list7:any list) (nat1:nat), rotate (nat1) (((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7)) = (any1::(any2::rotate (nat1) (((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (any_list7:any list) (nat1:nat), rotate (nat1) (((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7)) = (any1::(any2::rotate (nat1) (((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:20)
=================================================
Progress: 358


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any2 : any
any5 : any
any6 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any7(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any2 : any
any5 : any
any6 : any
any7 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any5
intro any6
intro any7
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg685:any list) (arg686:any list) (arg687:any list) (arg688:any list) (arg689:any list) (arg690:any list) (arg691:any list) (arg692:nat), rotate (arg692) (((((((((arg685 @ (any1::(Nil))) @ (any2::(Nil))) @ arg686) @ arg687) @ arg688) @ arg689) @ arg690) @ arg691)) = (any1::(any2::rotate (arg692) (((((((arg685 @ arg686) @ arg687) @ arg688) @ arg689) @ arg690) @ arg691))))
Model : any1: 7, any2: 2, arg685: (Nil), arg686: (Nil), arg687: (Nil), arg688: (Nil), arg689: (Nil), arg690: (Nil), arg691: (5::(Nil)), arg692: SUCC (ZERO)
Model : any1: 1, any2: 0, arg685: (4::(Nil)), arg686: (Nil), arg687: (Nil), arg688: (Nil), arg689: (7::(Nil)), arg690: (0::(Nil)), arg691: (6::(7::(Nil))), arg692: ZERO
Model : any1: 8, any2: 0, arg685: (Nil), arg686: (Nil), arg687: (Nil), arg688: (Nil), arg689: (Nil), arg690: (Nil), arg691: (Nil), arg692: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (SUCC (ZERO)) ((((((((((Nil) @ (7::(Nil))) @ (2::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (5::(Nil)))) = (7::(2::rotate (SUCC (ZERO)) ((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (5::(Nil))))))
rotate (ZERO) ((((((((((4::(Nil)) @ (1::(Nil))) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (7::(Nil))) @ (0::(Nil))) @ (6::(7::(Nil))))) = (1::(0::rotate (ZERO) ((((((((4::(Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (7::(Nil))) @ (0::(Nil))) @ (6::(7::(Nil)))))))
rotate (ZERO) ((((((((((Nil) @ (8::(Nil))) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (8::(0::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
Simplifying took 0.003071 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list2:any list), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Model : any1: 2, any2: 0, any3: 0, any4: 5, any5: 6, any6: 8, any7: 8, any8: 0, any_list2: (Nil)
Model : any1: 8, any2: 5, any3: 8, any4: 7, any5: 6, any6: 8, any7: 1, any8: 6, any_list2: (Nil)
Model : any1: 0, any2: 8, any3: 3, any4: 0, any5: 0, any6: 5, any7: 5, any8: 7, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (2::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (5::(Nil))) @ (6::(Nil))) @ (8::(Nil))) @ (8::(Nil))) @ (0::(Nil)))) = (2::(0::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (5::(Nil))) @ (6::(Nil))) @ (8::(Nil))) @ (8::(Nil))) @ (0::(Nil))))))
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (8::(Nil))) @ (5::(Nil))) @ (8::(Nil))) @ (7::(Nil))) @ (6::(Nil))) @ (8::(Nil))) @ (1::(Nil))) @ (6::(Nil)))) = (8::(5::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (8::(Nil))) @ (7::(Nil))) @ (6::(Nil))) @ (8::(Nil))) @ (1::(Nil))) @ (6::(Nil))))))
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (8::(Nil))) @ (3::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (5::(Nil))) @ (5::(Nil))) @ (7::(Nil)))) = (0::(8::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (3::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (5::(Nil))) @ (5::(Nil))) @ (7::(Nil))))))
Simplifying took 0.009993 seconds
Result : true
advanced_generalize done
=================================================
Progress: 359


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any3 : any
any4 : any
any5 : any
---------------------------------------
forall (any1:any) (any2:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any6(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any3 : any
any4 : any
any5 : any
any6 : any
---------------------------------------
forall (any1:any) (any2:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro any7(rank:17)
=================================================
Progress: 360


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any3 : any
any4 : any
any5 : any
---------------------------------------
forall (any1:any) (any2:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any7(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any3 : any
any4 : any
any5 : any
any7 : any
---------------------------------------
forall (any1:any) (any2:any) (any6:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any4
intro any5
intro any7
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg693:any list) (arg694:any list) (arg695:any list) (arg696:any list) (arg697:any list) (arg698:any list) (arg699:any list) (arg700:nat), rotate (arg700) (((((((((arg693 @ (any1::(Nil))) @ (any2::(Nil))) @ arg694) @ arg695) @ arg696) @ arg697) @ arg698) @ arg699)) = (any1::(any2::rotate (arg700) (((((((arg693 @ arg694) @ arg695) @ arg696) @ arg697) @ arg698) @ arg699))))
Model : any1: 8, any2: 7, arg693: (Nil), arg694: (Nil), arg695: (Nil), arg696: (Nil), arg697: (Nil), arg698: (Nil), arg699: (Nil), arg700: SUCC (ZERO)
Model : any1: 2, any2: 4, arg693: (Nil), arg694: (8::(Nil)), arg695: (Nil), arg696: (Nil), arg697: (6::(Nil)), arg698: (8::(Nil)), arg699: (Nil), arg700: ZERO
Model : any1: 0, any2: 7, arg693: (2::(Nil)), arg694: (Nil), arg695: (Nil), arg696: (Nil), arg697: (Nil), arg698: (Nil), arg699: (Nil), arg700: SUCC (ZERO)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (SUCC (ZERO)) ((((((((((Nil) @ (8::(Nil))) @ (7::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (8::(7::rotate (SUCC (ZERO)) ((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) ((((((((((Nil) @ (2::(Nil))) @ (4::(Nil))) @ (8::(Nil))) @ (Nil)) @ (Nil)) @ (6::(Nil))) @ (8::(Nil))) @ (Nil))) = (2::(4::rotate (ZERO) ((((((((Nil) @ (8::(Nil))) @ (Nil)) @ (Nil)) @ (6::(Nil))) @ (8::(Nil))) @ (Nil)))))
rotate (SUCC (ZERO)) ((((((((((2::(Nil)) @ (0::(Nil))) @ (7::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (0::(7::rotate (SUCC (ZERO)) ((((((((2::(Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
Simplifying took 0.004223 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list2:any list), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Model : any1: 1, any2: 1, any3: 7, any4: 4, any5: 6, any6: 1, any7: 3, any8: 8, any_list2: (Nil)
Model : any1: 0, any2: 8, any3: 6, any4: 2, any5: 1, any6: 3, any7: 5, any8: 6, any_list2: (Nil)
Model : any1: 6, any2: 6, any3: 1, any4: 6, any5: 0, any6: 1, any7: 6, any8: 5, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (1::(Nil))) @ (1::(Nil))) @ (7::(Nil))) @ (4::(Nil))) @ (6::(Nil))) @ (1::(Nil))) @ (3::(Nil))) @ (8::(Nil)))) = (1::(1::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (7::(Nil))) @ (4::(Nil))) @ (6::(Nil))) @ (1::(Nil))) @ (3::(Nil))) @ (8::(Nil))))))
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (8::(Nil))) @ (6::(Nil))) @ (2::(Nil))) @ (1::(Nil))) @ (3::(Nil))) @ (5::(Nil))) @ (6::(Nil)))) = (0::(8::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (6::(Nil))) @ (2::(Nil))) @ (1::(Nil))) @ (3::(Nil))) @ (5::(Nil))) @ (6::(Nil))))))
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (6::(Nil))) @ (6::(Nil))) @ (1::(Nil))) @ (6::(Nil))) @ (0::(Nil))) @ (1::(Nil))) @ (6::(Nil))) @ (5::(Nil)))) = (6::(6::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (1::(Nil))) @ (6::(Nil))) @ (0::(Nil))) @ (1::(Nil))) @ (6::(Nil))) @ (5::(Nil))))))
Simplifying took 0.009521 seconds
Result : true
advanced_generalize done
=================================================
Progress: 361


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any3 : any
any4 : any
any6 : any
---------------------------------------
forall (any1:any) (any2:any) (any5:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any7(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any3 : any
any4 : any
any6 : any
any7 : any
---------------------------------------
forall (any1:any) (any2:any) (any5:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any4
intro any6
intro any7
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg701:any list) (arg702:any list) (arg703:any list) (arg704:any list) (arg705:any list) (arg706:any list) (arg707:any list) (arg708:nat), rotate (arg708) (((((((((arg701 @ (any1::(Nil))) @ (any2::(Nil))) @ arg702) @ arg703) @ arg704) @ arg705) @ arg706) @ arg707)) = (any1::(any2::rotate (arg708) (((((((arg701 @ arg702) @ arg703) @ arg704) @ arg705) @ arg706) @ arg707))))
Model : any1: 7, any2: 3, arg701: (Nil), arg702: (Nil), arg703: (Nil), arg704: (3::(2::(Nil))), arg705: (6::(Nil)), arg706: (Nil), arg707: (Nil), arg708: SUCC (ZERO)
Model : any1: 5, any2: 0, arg701: (Nil), arg702: (0::(Nil)), arg703: (Nil), arg704: (Nil), arg705: (Nil), arg706: (Nil), arg707: (0::(Nil)), arg708: ZERO
Model : any1: 5, any2: 3, arg701: (Nil), arg702: (7::(8::(Nil))), arg703: (3::(Nil)), arg704: (Nil), arg705: (Nil), arg706: (Nil), arg707: (Nil), arg708: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (SUCC (ZERO)) ((((((((((Nil) @ (7::(Nil))) @ (3::(Nil))) @ (Nil)) @ (Nil)) @ (3::(2::(Nil)))) @ (6::(Nil))) @ (Nil)) @ (Nil))) = (7::(3::rotate (SUCC (ZERO)) ((((((((Nil) @ (Nil)) @ (Nil)) @ (3::(2::(Nil)))) @ (6::(Nil))) @ (Nil)) @ (Nil)))))
rotate (ZERO) ((((((((((Nil) @ (5::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (0::(Nil)))) = (5::(0::rotate (ZERO) ((((((((Nil) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (0::(Nil))))))
rotate (ZERO) ((((((((((Nil) @ (5::(Nil))) @ (3::(Nil))) @ (7::(8::(Nil)))) @ (3::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (5::(3::rotate (ZERO) ((((((((Nil) @ (7::(8::(Nil)))) @ (3::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
Simplifying took 0.005774 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list2:any list), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Model : any1: 5, any2: 0, any3: 0, any4: 2, any5: 4, any6: 0, any7: 5, any8: 5, any_list2: (4::(Nil))
Model : any1: 0, any2: 1, any3: 7, any4: 4, any5: 5, any6: 4, any7: 2, any8: 3, any_list2: (2::(Nil))
Model : any1: 3, any2: 2, any3: 7, any4: 3, any5: 5, any6: 1, any7: 5, any8: 3, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((4::(Nil)))) (((((((((((4::(Nil)) @ (Nil)) @ (5::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (2::(Nil))) @ (4::(Nil))) @ (0::(Nil))) @ (5::(Nil))) @ (5::(Nil)))) = (5::(0::rotate (len ((4::(Nil)))) (((((((((4::(Nil)) @ (Nil)) @ (0::(Nil))) @ (2::(Nil))) @ (4::(Nil))) @ (0::(Nil))) @ (5::(Nil))) @ (5::(Nil))))))
rotate (len ((2::(Nil)))) (((((((((((2::(Nil)) @ (Nil)) @ (0::(Nil))) @ (1::(Nil))) @ (7::(Nil))) @ (4::(Nil))) @ (5::(Nil))) @ (4::(Nil))) @ (2::(Nil))) @ (3::(Nil)))) = (0::(1::rotate (len ((2::(Nil)))) (((((((((2::(Nil)) @ (Nil)) @ (7::(Nil))) @ (4::(Nil))) @ (5::(Nil))) @ (4::(Nil))) @ (2::(Nil))) @ (3::(Nil))))))
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (3::(Nil))) @ (2::(Nil))) @ (7::(Nil))) @ (3::(Nil))) @ (5::(Nil))) @ (1::(Nil))) @ (5::(Nil))) @ (3::(Nil)))) = (3::(2::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (7::(Nil))) @ (3::(Nil))) @ (5::(Nil))) @ (1::(Nil))) @ (5::(Nil))) @ (3::(Nil))))))
Simplifying took 0.014032 seconds
Result : true
advanced_generalize done
=================================================
Progress: 362


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any3 : any
any5 : any
any6 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any7(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any3 : any
any5 : any
any6 : any
any7 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any5
intro any6
intro any7
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg709:any list) (arg710:any list) (arg711:any list) (arg712:any list) (arg713:any list) (arg714:any list) (arg715:any list) (arg716:nat), rotate (arg716) (((((((((arg709 @ (any1::(Nil))) @ (any2::(Nil))) @ arg710) @ arg711) @ arg712) @ arg713) @ arg714) @ arg715)) = (any1::(any2::rotate (arg716) (((((((arg709 @ arg710) @ arg711) @ arg712) @ arg713) @ arg714) @ arg715))))
Model : any1: 5, any2: 6, arg709: (Nil), arg710: (Nil), arg711: (Nil), arg712: (Nil), arg713: (Nil), arg714: (Nil), arg715: (Nil), arg716: ZERO
Model : any1: 4, any2: 5, arg709: (Nil), arg710: (Nil), arg711: (Nil), arg712: (1::(Nil)), arg713: (Nil), arg714: (Nil), arg715: (Nil), arg716: SUCC (SUCC (ZERO))
Model : any1: 0, any2: 1, arg709: (Nil), arg710: (4::(Nil)), arg711: (Nil), arg712: (Nil), arg713: (Nil), arg714: (7::(6::(0::(Nil)))), arg715: (Nil), arg716: SUCC (ZERO)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) ((((((((((Nil) @ (5::(Nil))) @ (6::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (5::(6::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (SUCC (SUCC (ZERO))) ((((((((((Nil) @ (4::(Nil))) @ (5::(Nil))) @ (Nil)) @ (Nil)) @ (1::(Nil))) @ (Nil)) @ (Nil)) @ (Nil))) = (4::(5::rotate (SUCC (SUCC (ZERO))) ((((((((Nil) @ (Nil)) @ (Nil)) @ (1::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (SUCC (ZERO)) ((((((((((Nil) @ (0::(Nil))) @ (1::(Nil))) @ (4::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (7::(6::(0::(Nil))))) @ (Nil))) = (0::(1::rotate (SUCC (ZERO)) ((((((((Nil) @ (4::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (7::(6::(0::(Nil))))) @ (Nil)))))
Simplifying took 0.004114 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list2:any list), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Model : any1: 1, any2: 7, any3: 0, any4: 6, any5: 8, any6: 7, any7: 0, any8: 3, any_list2: (Nil)
Model : any1: 6, any2: 2, any3: 4, any4: 0, any5: 7, any6: 7, any7: 3, any8: 3, any_list2: (Nil)
Model : any1: 3, any2: 7, any3: 2, any4: 3, any5: 2, any6: 4, any7: 6, any8: 2, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (1::(Nil))) @ (7::(Nil))) @ (0::(Nil))) @ (6::(Nil))) @ (8::(Nil))) @ (7::(Nil))) @ (0::(Nil))) @ (3::(Nil)))) = (1::(7::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (6::(Nil))) @ (8::(Nil))) @ (7::(Nil))) @ (0::(Nil))) @ (3::(Nil))))))
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (6::(Nil))) @ (2::(Nil))) @ (4::(Nil))) @ (0::(Nil))) @ (7::(Nil))) @ (7::(Nil))) @ (3::(Nil))) @ (3::(Nil)))) = (6::(2::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (4::(Nil))) @ (0::(Nil))) @ (7::(Nil))) @ (7::(Nil))) @ (3::(Nil))) @ (3::(Nil))))))
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (3::(Nil))) @ (7::(Nil))) @ (2::(Nil))) @ (3::(Nil))) @ (2::(Nil))) @ (4::(Nil))) @ (6::(Nil))) @ (2::(Nil)))) = (3::(7::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (2::(Nil))) @ (3::(Nil))) @ (2::(Nil))) @ (4::(Nil))) @ (6::(Nil))) @ (2::(Nil))))))
Simplifying took 0.009746 seconds
Result : true
advanced_generalize done
=================================================
Progress: 363


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any4 : any
any5 : any
any6 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any7(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any4 : any
any5 : any
any6 : any
any7 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any4
intro any5
intro any6
intro any7
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg717:any list) (arg718:any list) (arg719:any list) (arg720:any list) (arg721:any list) (arg722:any list) (arg723:any list) (arg724:nat), rotate (arg724) (((((((((arg717 @ (any1::(Nil))) @ (any2::(Nil))) @ arg718) @ arg719) @ arg720) @ arg721) @ arg722) @ arg723)) = (any1::(any2::rotate (arg724) (((((((arg717 @ arg718) @ arg719) @ arg720) @ arg721) @ arg722) @ arg723))))
Model : any1: 0, any2: 3, arg717: (Nil), arg718: (Nil), arg719: (Nil), arg720: (Nil), arg721: (Nil), arg722: (Nil), arg723: (Nil), arg724: ZERO
Model : any1: 3, any2: 8, arg717: (Nil), arg718: (3::(Nil)), arg719: (Nil), arg720: (Nil), arg721: (7::(Nil)), arg722: (Nil), arg723: (Nil), arg724: ZERO
Model : any1: 7, any2: 2, arg717: (Nil), arg718: (Nil), arg719: (Nil), arg720: (Nil), arg721: (Nil), arg722: (Nil), arg723: (Nil), arg724: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) ((((((((((Nil) @ (0::(Nil))) @ (3::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (0::(3::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) ((((((((((Nil) @ (3::(Nil))) @ (8::(Nil))) @ (3::(Nil))) @ (Nil)) @ (Nil)) @ (7::(Nil))) @ (Nil)) @ (Nil))) = (3::(8::rotate (ZERO) ((((((((Nil) @ (3::(Nil))) @ (Nil)) @ (Nil)) @ (7::(Nil))) @ (Nil)) @ (Nil)))))
rotate (ZERO) ((((((((((Nil) @ (7::(Nil))) @ (2::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (7::(2::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
Simplifying took 0.002636 seconds
Result : true
advanced_generalize done


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any4 : any
any5 : any
any6 : any
any7 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
=================================================
Progress: 364


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any4 : any
any5 : any
any6 : any
any7 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (arg717:any list) (arg718:any list) (arg719:any list) (arg720:any list) (arg721:any list) (arg722:any list) (arg723:any list) (arg724:nat), rotate (arg724) (((((((((arg717 @ (any1::(Nil))) @ (any2::(Nil))) @ arg718) @ arg719) @ arg720) @ arg721) @ arg722) @ arg723)) = (any1::(any2::rotate (arg724) (((((((arg717 @ arg718) @ arg719) @ arg720) @ arg721) @ arg722) @ arg723))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (any_list7:any list) (nat1:nat), rotate (nat1) (((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7)) = (any1::(any2::rotate (nat1) (((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (any_list7:any list) (nat1:nat), rotate (nat1) (((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7)) = (any1::(any2::rotate (nat1) (((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:20)
=================================================
Progress: 365


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any5(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any2 : any
any3 : any
any4 : any
any5 : any
---------------------------------------
forall (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 2
intro any6(rank:17)
intro any7(rank:17)
=================================================
Progress: 366


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any6(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any2 : any
any3 : any
any4 : any
any6 : any
---------------------------------------
forall (any5:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro any7(rank:17)
=================================================
Progress: 367


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any7(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any2 : any
any3 : any
any4 : any
any7 : any
---------------------------------------
forall (any5:any) (any6:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any4
intro any7
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg725:any list) (arg726:any list) (arg727:any list) (arg728:any list) (arg729:any list) (arg730:any list) (arg731:any list) (arg732:nat), rotate (arg732) (((((((((arg725 @ (any1::(Nil))) @ (any2::(Nil))) @ arg726) @ arg727) @ arg728) @ arg729) @ arg730) @ arg731)) = (any1::(any2::rotate (arg732) (((((((arg725 @ arg726) @ arg727) @ arg728) @ arg729) @ arg730) @ arg731))))
Model : any1: 6, any2: 5, arg725: (Nil), arg726: (Nil), arg727: (Nil), arg728: (0::(Nil)), arg729: (Nil), arg730: (Nil), arg731: (Nil), arg732: ZERO
Model : any1: 2, any2: 0, arg725: (7::(Nil)), arg726: (4::(0::(Nil))), arg727: (Nil), arg728: (Nil), arg729: (Nil), arg730: (Nil), arg731: (Nil), arg732: SUCC (ZERO)
Model : any1: 0, any2: 1, arg725: (Nil), arg726: (Nil), arg727: (2::(Nil)), arg728: (Nil), arg729: (Nil), arg730: (Nil), arg731: (Nil), arg732: SUCC (ZERO)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) ((((((((((Nil) @ (6::(Nil))) @ (5::(Nil))) @ (Nil)) @ (Nil)) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil))) = (6::(5::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (Nil)) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (SUCC (ZERO)) ((((((((((7::(Nil)) @ (2::(Nil))) @ (0::(Nil))) @ (4::(0::(Nil)))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (2::(0::rotate (SUCC (ZERO)) ((((((((7::(Nil)) @ (4::(0::(Nil)))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (SUCC (ZERO)) ((((((((((Nil) @ (0::(Nil))) @ (1::(Nil))) @ (Nil)) @ (2::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (0::(1::rotate (SUCC (ZERO)) ((((((((Nil) @ (Nil)) @ (2::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
Simplifying took 0.004095 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list2:any list), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Model : any1: 2, any2: 7, any3: 3, any4: 8, any5: 6, any6: 8, any7: 8, any8: 1, any_list2: (Nil)
Model : any1: 0, any2: 8, any3: 7, any4: 4, any5: 7, any6: 5, any7: 0, any8: 6, any_list2: (Nil)
Model : any1: 6, any2: 2, any3: 1, any4: 0, any5: 6, any6: 3, any7: 1, any8: 4, any_list2: (2::(Nil))
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (2::(Nil))) @ (7::(Nil))) @ (3::(Nil))) @ (8::(Nil))) @ (6::(Nil))) @ (8::(Nil))) @ (8::(Nil))) @ (1::(Nil)))) = (2::(7::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (3::(Nil))) @ (8::(Nil))) @ (6::(Nil))) @ (8::(Nil))) @ (8::(Nil))) @ (1::(Nil))))))
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (8::(Nil))) @ (7::(Nil))) @ (4::(Nil))) @ (7::(Nil))) @ (5::(Nil))) @ (0::(Nil))) @ (6::(Nil)))) = (0::(8::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (7::(Nil))) @ (4::(Nil))) @ (7::(Nil))) @ (5::(Nil))) @ (0::(Nil))) @ (6::(Nil))))))
rotate (len ((2::(Nil)))) (((((((((((2::(Nil)) @ (Nil)) @ (6::(Nil))) @ (2::(Nil))) @ (1::(Nil))) @ (0::(Nil))) @ (6::(Nil))) @ (3::(Nil))) @ (1::(Nil))) @ (4::(Nil)))) = (6::(2::rotate (len ((2::(Nil)))) (((((((((2::(Nil)) @ (Nil)) @ (1::(Nil))) @ (0::(Nil))) @ (6::(Nil))) @ (3::(Nil))) @ (1::(Nil))) @ (4::(Nil))))))
Simplifying took 0.012325 seconds
Result : true
advanced_generalize done
=================================================
Progress: 368


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any2 : any
any3 : any
any5 : any
---------------------------------------
forall (any4:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any6(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any2 : any
any3 : any
any5 : any
any6 : any
---------------------------------------
forall (any4:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro any7(rank:17)
=================================================
Progress: 369


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any2 : any
any3 : any
any5 : any
---------------------------------------
forall (any4:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any7(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any2 : any
any3 : any
any5 : any
any7 : any
---------------------------------------
forall (any4:any) (any6:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any5
intro any7
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg733:any list) (arg734:any list) (arg735:any list) (arg736:any list) (arg737:any list) (arg738:any list) (arg739:any list) (arg740:nat), rotate (arg740) (((((((((arg733 @ (any1::(Nil))) @ (any2::(Nil))) @ arg734) @ arg735) @ arg736) @ arg737) @ arg738) @ arg739)) = (any1::(any2::rotate (arg740) (((((((arg733 @ arg734) @ arg735) @ arg736) @ arg737) @ arg738) @ arg739))))
Model : any1: 3, any2: 0, arg733: (4::(Nil)), arg734: (Nil), arg735: (Nil), arg736: (Nil), arg737: (Nil), arg738: (Nil), arg739: (Nil), arg740: ZERO
Model : any1: 2, any2: 8, arg733: (2::(5::(Nil))), arg734: (Nil), arg735: (0::(Nil)), arg736: (Nil), arg737: (1::(Nil)), arg738: (Nil), arg739: (Nil), arg740: ZERO
Model : any1: 0, any2: 6, arg733: (6::(0::(3::(Nil)))), arg734: (Nil), arg735: (Nil), arg736: (Nil), arg737: (2::(Nil)), arg738: (Nil), arg739: (Nil), arg740: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) ((((((((((4::(Nil)) @ (3::(Nil))) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (3::(0::rotate (ZERO) ((((((((4::(Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) ((((((((((2::(5::(Nil))) @ (2::(Nil))) @ (8::(Nil))) @ (Nil)) @ (0::(Nil))) @ (Nil)) @ (1::(Nil))) @ (Nil)) @ (Nil))) = (2::(8::rotate (ZERO) ((((((((2::(5::(Nil))) @ (Nil)) @ (0::(Nil))) @ (Nil)) @ (1::(Nil))) @ (Nil)) @ (Nil)))))
rotate (ZERO) ((((((((((6::(0::(3::(Nil)))) @ (0::(Nil))) @ (6::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (2::(Nil))) @ (Nil)) @ (Nil))) = (0::(6::rotate (ZERO) ((((((((6::(0::(3::(Nil)))) @ (Nil)) @ (Nil)) @ (Nil)) @ (2::(Nil))) @ (Nil)) @ (Nil)))))
Simplifying took 0.006712 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list2:any list), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Model : any1: 5, any2: 0, any3: 2, any4: 6, any5: 4, any6: 8, any7: 6, any8: 2, any_list2: (Nil)
Model : any1: 2, any2: 2, any3: 4, any4: 2, any5: 7, any6: 4, any7: 7, any8: 3, any_list2: (Nil)
Model : any1: 5, any2: 1, any3: 7, any4: 0, any5: 0, any6: 8, any7: 3, any8: 6, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (5::(Nil))) @ (0::(Nil))) @ (2::(Nil))) @ (6::(Nil))) @ (4::(Nil))) @ (8::(Nil))) @ (6::(Nil))) @ (2::(Nil)))) = (5::(0::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (2::(Nil))) @ (6::(Nil))) @ (4::(Nil))) @ (8::(Nil))) @ (6::(Nil))) @ (2::(Nil))))))
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (2::(Nil))) @ (2::(Nil))) @ (4::(Nil))) @ (2::(Nil))) @ (7::(Nil))) @ (4::(Nil))) @ (7::(Nil))) @ (3::(Nil)))) = (2::(2::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (4::(Nil))) @ (2::(Nil))) @ (7::(Nil))) @ (4::(Nil))) @ (7::(Nil))) @ (3::(Nil))))))
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (5::(Nil))) @ (1::(Nil))) @ (7::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (8::(Nil))) @ (3::(Nil))) @ (6::(Nil)))) = (5::(1::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (7::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (8::(Nil))) @ (3::(Nil))) @ (6::(Nil))))))
Simplifying took 0.009694 seconds
Result : true
advanced_generalize done
=================================================
Progress: 370


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any2 : any
any3 : any
any6 : any
---------------------------------------
forall (any4:any) (any5:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any7(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any2 : any
any3 : any
any6 : any
any7 : any
---------------------------------------
forall (any4:any) (any5:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any6
intro any7
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg741:any list) (arg742:any list) (arg743:any list) (arg744:any list) (arg745:any list) (arg746:any list) (arg747:any list) (arg748:nat), rotate (arg748) (((((((((arg741 @ (any1::(Nil))) @ (any2::(Nil))) @ arg742) @ arg743) @ arg744) @ arg745) @ arg746) @ arg747)) = (any1::(any2::rotate (arg748) (((((((arg741 @ arg742) @ arg743) @ arg744) @ arg745) @ arg746) @ arg747))))
Model : any1: 5, any2: 1, arg741: (1::(Nil)), arg742: (Nil), arg743: (Nil), arg744: (Nil), arg745: (Nil), arg746: (8::(4::(Nil))), arg747: (Nil), arg748: SUCC (ZERO)
Model : any1: 0, any2: 6, arg741: (Nil), arg742: (Nil), arg743: (5::(1::(5::(Nil)))), arg744: (Nil), arg745: (Nil), arg746: (7::(Nil)), arg747: (Nil), arg748: ZERO
Model : any1: 6, any2: 2, arg741: (Nil), arg742: (Nil), arg743: (Nil), arg744: (Nil), arg745: (Nil), arg746: (Nil), arg747: (Nil), arg748: SUCC (SUCC (ZERO))
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (SUCC (ZERO)) ((((((((((1::(Nil)) @ (5::(Nil))) @ (1::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (8::(4::(Nil)))) @ (Nil))) = (5::(1::rotate (SUCC (ZERO)) ((((((((1::(Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (8::(4::(Nil)))) @ (Nil)))))
rotate (ZERO) ((((((((((Nil) @ (0::(Nil))) @ (6::(Nil))) @ (Nil)) @ (5::(1::(5::(Nil))))) @ (Nil)) @ (Nil)) @ (7::(Nil))) @ (Nil))) = (0::(6::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (5::(1::(5::(Nil))))) @ (Nil)) @ (Nil)) @ (7::(Nil))) @ (Nil)))))
rotate (SUCC (SUCC (ZERO))) ((((((((((Nil) @ (6::(Nil))) @ (2::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (6::(2::rotate (SUCC (SUCC (ZERO))) ((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
Simplifying took 0.005237 seconds
Result : true
advanced_generalize done


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any2 : any
any3 : any
any6 : any
any7 : any
---------------------------------------
forall (any4:any) (any5:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
=================================================
Progress: 371


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any2 : any
any3 : any
any6 : any
any7 : any
---------------------------------------
forall (any4:any) (any5:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (arg741:any list) (arg742:any list) (arg743:any list) (arg744:any list) (arg745:any list) (arg746:any list) (arg747:any list) (arg748:nat), rotate (arg748) (((((((((arg741 @ (any1::(Nil))) @ (any2::(Nil))) @ arg742) @ arg743) @ arg744) @ arg745) @ arg746) @ arg747)) = (any1::(any2::rotate (arg748) (((((((arg741 @ arg742) @ arg743) @ arg744) @ arg745) @ arg746) @ arg747))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (any_list7:any list) (nat1:nat), rotate (nat1) (((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7)) = (any1::(any2::rotate (nat1) (((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (any_list7:any list) (nat1:nat), rotate (nat1) (((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7)) = (any1::(any2::rotate (nat1) (((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:20)
=================================================
Progress: 372


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any2 : any
any4 : any
any5 : any
---------------------------------------
forall (any3:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any6(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any2 : any
any4 : any
any5 : any
any6 : any
---------------------------------------
forall (any3:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro any7(rank:17)
=================================================
Progress: 373


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any2 : any
any4 : any
any5 : any
---------------------------------------
forall (any3:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any7(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any2 : any
any4 : any
any5 : any
any7 : any
---------------------------------------
forall (any3:any) (any6:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any4
intro any5
intro any7
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg749:any list) (arg750:any list) (arg751:any list) (arg752:any list) (arg753:any list) (arg754:any list) (arg755:any list) (arg756:nat), rotate (arg756) (((((((((arg749 @ (any1::(Nil))) @ (any2::(Nil))) @ arg750) @ arg751) @ arg752) @ arg753) @ arg754) @ arg755)) = (any1::(any2::rotate (arg756) (((((((arg749 @ arg750) @ arg751) @ arg752) @ arg753) @ arg754) @ arg755))))
Model : any1: 5, any2: 7, arg749: (Nil), arg750: (Nil), arg751: (Nil), arg752: (Nil), arg753: (Nil), arg754: (Nil), arg755: (Nil), arg756: ZERO
Model : any1: 8, any2: 4, arg749: (6::(Nil)), arg750: (Nil), arg751: (Nil), arg752: (0::(Nil)), arg753: (7::(3::(Nil))), arg754: (Nil), arg755: (Nil), arg756: ZERO
Model : any1: 7, any2: 3, arg749: (Nil), arg750: (5::(Nil)), arg751: (Nil), arg752: (0::(Nil)), arg753: (Nil), arg754: (Nil), arg755: (7::(Nil)), arg756: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) ((((((((((Nil) @ (5::(Nil))) @ (7::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (5::(7::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) ((((((((((6::(Nil)) @ (8::(Nil))) @ (4::(Nil))) @ (Nil)) @ (Nil)) @ (0::(Nil))) @ (7::(3::(Nil)))) @ (Nil)) @ (Nil))) = (8::(4::rotate (ZERO) ((((((((6::(Nil)) @ (Nil)) @ (Nil)) @ (0::(Nil))) @ (7::(3::(Nil)))) @ (Nil)) @ (Nil)))))
rotate (ZERO) ((((((((((Nil) @ (7::(Nil))) @ (3::(Nil))) @ (5::(Nil))) @ (Nil)) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (7::(Nil)))) = (7::(3::rotate (ZERO) ((((((((Nil) @ (5::(Nil))) @ (Nil)) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (7::(Nil))))))
Simplifying took 0.004753 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list2:any list), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Model : any1: 7, any2: 5, any3: 0, any4: 0, any5: 8, any6: 0, any7: 3, any8: 6, any_list2: (Nil)
Model : any1: 2, any2: 0, any3: 1, any4: 3, any5: 6, any6: 3, any7: 2, any8: 0, any_list2: (Nil)
Model : any1: 0, any2: 2, any3: 4, any4: 2, any5: 5, any6: 0, any7: 4, any8: 8, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (7::(Nil))) @ (5::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (8::(Nil))) @ (0::(Nil))) @ (3::(Nil))) @ (6::(Nil)))) = (7::(5::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (0::(Nil))) @ (8::(Nil))) @ (0::(Nil))) @ (3::(Nil))) @ (6::(Nil))))))
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (2::(Nil))) @ (0::(Nil))) @ (1::(Nil))) @ (3::(Nil))) @ (6::(Nil))) @ (3::(Nil))) @ (2::(Nil))) @ (0::(Nil)))) = (2::(0::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (1::(Nil))) @ (3::(Nil))) @ (6::(Nil))) @ (3::(Nil))) @ (2::(Nil))) @ (0::(Nil))))))
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (2::(Nil))) @ (4::(Nil))) @ (2::(Nil))) @ (5::(Nil))) @ (0::(Nil))) @ (4::(Nil))) @ (8::(Nil)))) = (0::(2::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (4::(Nil))) @ (2::(Nil))) @ (5::(Nil))) @ (0::(Nil))) @ (4::(Nil))) @ (8::(Nil))))))
Simplifying took 0.008139 seconds
Result : true
advanced_generalize done
=================================================
Progress: 374


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any2 : any
any4 : any
any6 : any
---------------------------------------
forall (any3:any) (any5:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any7(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any2 : any
any4 : any
any6 : any
any7 : any
---------------------------------------
forall (any3:any) (any5:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any4
intro any6
intro any7
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg757:any list) (arg758:any list) (arg759:any list) (arg760:any list) (arg761:any list) (arg762:any list) (arg763:any list) (arg764:nat), rotate (arg764) (((((((((arg757 @ (any1::(Nil))) @ (any2::(Nil))) @ arg758) @ arg759) @ arg760) @ arg761) @ arg762) @ arg763)) = (any1::(any2::rotate (arg764) (((((((arg757 @ arg758) @ arg759) @ arg760) @ arg761) @ arg762) @ arg763))))
Model : any1: 1, any2: 4, arg757: (Nil), arg758: (Nil), arg759: (Nil), arg760: (6::(Nil)), arg761: (Nil), arg762: (Nil), arg763: (Nil), arg764: SUCC (ZERO)
Model : any1: 0, any2: 0, arg757: (Nil), arg758: (Nil), arg759: (5::(Nil)), arg760: (Nil), arg761: (Nil), arg762: (Nil), arg763: (Nil), arg764: ZERO
Model : any1: 7, any2: 7, arg757: (Nil), arg758: (Nil), arg759: (Nil), arg760: (Nil), arg761: (Nil), arg762: (Nil), arg763: (Nil), arg764: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (SUCC (ZERO)) ((((((((((Nil) @ (1::(Nil))) @ (4::(Nil))) @ (Nil)) @ (Nil)) @ (6::(Nil))) @ (Nil)) @ (Nil)) @ (Nil))) = (1::(4::rotate (SUCC (ZERO)) ((((((((Nil) @ (Nil)) @ (Nil)) @ (6::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) ((((((((((Nil) @ (0::(Nil))) @ (0::(Nil))) @ (Nil)) @ (5::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (0::(0::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (5::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) ((((((((((Nil) @ (7::(Nil))) @ (7::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (7::(7::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
Simplifying took 0.002614 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list2:any list), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Model : any1: 6, any2: 2, any3: 0, any4: 8, any5: 6, any6: 8, any7: 4, any8: 7, any_list2: (Nil)
Model : any1: 6, any2: 3, any3: 4, any4: 8, any5: 4, any6: 7, any7: 6, any8: 2, any_list2: (Nil)
Model : any1: 3, any2: 0, any3: 1, any4: 4, any5: 7, any6: 6, any7: 7, any8: 1, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (6::(Nil))) @ (2::(Nil))) @ (0::(Nil))) @ (8::(Nil))) @ (6::(Nil))) @ (8::(Nil))) @ (4::(Nil))) @ (7::(Nil)))) = (6::(2::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (8::(Nil))) @ (6::(Nil))) @ (8::(Nil))) @ (4::(Nil))) @ (7::(Nil))))))
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (6::(Nil))) @ (3::(Nil))) @ (4::(Nil))) @ (8::(Nil))) @ (4::(Nil))) @ (7::(Nil))) @ (6::(Nil))) @ (2::(Nil)))) = (6::(3::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (4::(Nil))) @ (8::(Nil))) @ (4::(Nil))) @ (7::(Nil))) @ (6::(Nil))) @ (2::(Nil))))))
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (3::(Nil))) @ (0::(Nil))) @ (1::(Nil))) @ (4::(Nil))) @ (7::(Nil))) @ (6::(Nil))) @ (7::(Nil))) @ (1::(Nil)))) = (3::(0::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (1::(Nil))) @ (4::(Nil))) @ (7::(Nil))) @ (6::(Nil))) @ (7::(Nil))) @ (1::(Nil))))))
Simplifying took 0.010564 seconds
Result : true
advanced_generalize done
=================================================
Progress: 375


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any2 : any
any5 : any
any6 : any
---------------------------------------
forall (any3:any) (any4:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any7(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any2 : any
any5 : any
any6 : any
any7 : any
---------------------------------------
forall (any3:any) (any4:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any5
intro any6
intro any7
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg765:any list) (arg766:any list) (arg767:any list) (arg768:any list) (arg769:any list) (arg770:any list) (arg771:any list) (arg772:nat), rotate (arg772) (((((((((arg765 @ (any1::(Nil))) @ (any2::(Nil))) @ arg766) @ arg767) @ arg768) @ arg769) @ arg770) @ arg771)) = (any1::(any2::rotate (arg772) (((((((arg765 @ arg766) @ arg767) @ arg768) @ arg769) @ arg770) @ arg771))))
Model : any1: 2, any2: 1, arg765: (Nil), arg766: (1::(Nil)), arg767: (Nil), arg768: (Nil), arg769: (Nil), arg770: (Nil), arg771: (Nil), arg772: SUCC (SUCC (ZERO))
Model : any1: 3, any2: 4, arg765: (3::(Nil)), arg766: (Nil), arg767: (Nil), arg768: (Nil), arg769: (Nil), arg770: (Nil), arg771: (Nil), arg772: ZERO
Model : any1: 4, any2: 5, arg765: (Nil), arg766: (Nil), arg767: (5::(Nil)), arg768: (Nil), arg769: (Nil), arg770: (Nil), arg771: (Nil), arg772: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (SUCC (SUCC (ZERO))) ((((((((((Nil) @ (2::(Nil))) @ (1::(Nil))) @ (1::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (2::(1::rotate (SUCC (SUCC (ZERO))) ((((((((Nil) @ (1::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) ((((((((((3::(Nil)) @ (3::(Nil))) @ (4::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (3::(4::rotate (ZERO) ((((((((3::(Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) ((((((((((Nil) @ (4::(Nil))) @ (5::(Nil))) @ (Nil)) @ (5::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (4::(5::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (5::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
Simplifying took 0.003136 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list2:any list), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Model : any1: 8, any2: 0, any3: 4, any4: 5, any5: 5, any6: 8, any7: 0, any8: 1, any_list2: (4::(Nil))
Model : any1: 8, any2: 6, any3: 5, any4: 0, any5: 8, any6: 0, any7: 5, any8: 0, any_list2: (Nil)
Model : any1: 8, any2: 5, any3: 0, any4: 7, any5: 3, any6: 4, any7: 7, any8: 6, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((4::(Nil)))) (((((((((((4::(Nil)) @ (Nil)) @ (8::(Nil))) @ (0::(Nil))) @ (4::(Nil))) @ (5::(Nil))) @ (5::(Nil))) @ (8::(Nil))) @ (0::(Nil))) @ (1::(Nil)))) = (8::(0::rotate (len ((4::(Nil)))) (((((((((4::(Nil)) @ (Nil)) @ (4::(Nil))) @ (5::(Nil))) @ (5::(Nil))) @ (8::(Nil))) @ (0::(Nil))) @ (1::(Nil))))))
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (8::(Nil))) @ (6::(Nil))) @ (5::(Nil))) @ (0::(Nil))) @ (8::(Nil))) @ (0::(Nil))) @ (5::(Nil))) @ (0::(Nil)))) = (8::(6::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (5::(Nil))) @ (0::(Nil))) @ (8::(Nil))) @ (0::(Nil))) @ (5::(Nil))) @ (0::(Nil))))))
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (8::(Nil))) @ (5::(Nil))) @ (0::(Nil))) @ (7::(Nil))) @ (3::(Nil))) @ (4::(Nil))) @ (7::(Nil))) @ (6::(Nil)))) = (8::(5::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (7::(Nil))) @ (3::(Nil))) @ (4::(Nil))) @ (7::(Nil))) @ (6::(Nil))))))
Simplifying took 0.012332 seconds
Result : true
advanced_generalize done
=================================================
Progress: 376


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any3 : any
any4 : any
any5 : any
---------------------------------------
forall (any2:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any6(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any3 : any
any4 : any
any5 : any
any6 : any
---------------------------------------
forall (any2:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro any7(rank:17)
=================================================
Progress: 377


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any3 : any
any4 : any
any5 : any
---------------------------------------
forall (any2:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any7(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any3 : any
any4 : any
any5 : any
any7 : any
---------------------------------------
forall (any2:any) (any6:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any4
intro any5
intro any7
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg773:any list) (arg774:any list) (arg775:any list) (arg776:any list) (arg777:any list) (arg778:any list) (arg779:any list) (arg780:nat), rotate (arg780) (((((((((arg773 @ (any1::(Nil))) @ (any2::(Nil))) @ arg774) @ arg775) @ arg776) @ arg777) @ arg778) @ arg779)) = (any1::(any2::rotate (arg780) (((((((arg773 @ arg774) @ arg775) @ arg776) @ arg777) @ arg778) @ arg779))))
Model : any1: 0, any2: 6, arg773: (Nil), arg774: (Nil), arg775: (Nil), arg776: (7::(2::(0::(Nil)))), arg777: (Nil), arg778: (4::(7::(Nil))), arg779: (Nil), arg780: ZERO
Model : any1: 3, any2: 0, arg773: (2::(Nil)), arg774: (Nil), arg775: (Nil), arg776: (Nil), arg777: (Nil), arg778: (Nil), arg779: (5::(Nil)), arg780: ZERO
Model : any1: 6, any2: 1, arg773: (6::(Nil)), arg774: (6::(Nil)), arg775: (Nil), arg776: (Nil), arg777: (2::(0::(Nil))), arg778: (Nil), arg779: (Nil), arg780: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) ((((((((((Nil) @ (0::(Nil))) @ (6::(Nil))) @ (Nil)) @ (Nil)) @ (7::(2::(0::(Nil))))) @ (Nil)) @ (4::(7::(Nil)))) @ (Nil))) = (0::(6::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (Nil)) @ (7::(2::(0::(Nil))))) @ (Nil)) @ (4::(7::(Nil)))) @ (Nil)))))
rotate (ZERO) ((((((((((2::(Nil)) @ (3::(Nil))) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (5::(Nil)))) = (3::(0::rotate (ZERO) ((((((((2::(Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (5::(Nil))))))
rotate (ZERO) ((((((((((6::(Nil)) @ (6::(Nil))) @ (1::(Nil))) @ (6::(Nil))) @ (Nil)) @ (Nil)) @ (2::(0::(Nil)))) @ (Nil)) @ (Nil))) = (6::(1::rotate (ZERO) ((((((((6::(Nil)) @ (6::(Nil))) @ (Nil)) @ (Nil)) @ (2::(0::(Nil)))) @ (Nil)) @ (Nil)))))
Simplifying took 0.005805 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list2:any list), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Model : any1: 0, any2: 4, any3: 4, any4: 8, any5: 4, any6: 8, any7: 0, any8: 5, any_list2: (Nil)
Model : any1: 1, any2: 8, any3: 5, any4: 5, any5: 8, any6: 1, any7: 4, any8: 6, any_list2: (6::(Nil))
Model : any1: 4, any2: 5, any3: 0, any4: 4, any5: 5, any6: 7, any7: 3, any8: 0, any_list2: (1::(Nil))
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (4::(Nil))) @ (4::(Nil))) @ (8::(Nil))) @ (4::(Nil))) @ (8::(Nil))) @ (0::(Nil))) @ (5::(Nil)))) = (0::(4::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (4::(Nil))) @ (8::(Nil))) @ (4::(Nil))) @ (8::(Nil))) @ (0::(Nil))) @ (5::(Nil))))))
rotate (len ((6::(Nil)))) (((((((((((6::(Nil)) @ (Nil)) @ (1::(Nil))) @ (8::(Nil))) @ (5::(Nil))) @ (5::(Nil))) @ (8::(Nil))) @ (1::(Nil))) @ (4::(Nil))) @ (6::(Nil)))) = (1::(8::rotate (len ((6::(Nil)))) (((((((((6::(Nil)) @ (Nil)) @ (5::(Nil))) @ (5::(Nil))) @ (8::(Nil))) @ (1::(Nil))) @ (4::(Nil))) @ (6::(Nil))))))
rotate (len ((1::(Nil)))) (((((((((((1::(Nil)) @ (Nil)) @ (4::(Nil))) @ (5::(Nil))) @ (0::(Nil))) @ (4::(Nil))) @ (5::(Nil))) @ (7::(Nil))) @ (3::(Nil))) @ (0::(Nil)))) = (4::(5::rotate (len ((1::(Nil)))) (((((((((1::(Nil)) @ (Nil)) @ (0::(Nil))) @ (4::(Nil))) @ (5::(Nil))) @ (7::(Nil))) @ (3::(Nil))) @ (0::(Nil))))))
Simplifying took 0.015106 seconds
Result : true
advanced_generalize done
=================================================
Progress: 378


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any3 : any
any4 : any
any6 : any
---------------------------------------
forall (any2:any) (any5:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any7(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any3 : any
any4 : any
any6 : any
any7 : any
---------------------------------------
forall (any2:any) (any5:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any4
intro any6
intro any7
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg781:any list) (arg782:any list) (arg783:any list) (arg784:any list) (arg785:any list) (arg786:any list) (arg787:any list) (arg788:nat), rotate (arg788) (((((((((arg781 @ (any1::(Nil))) @ (any2::(Nil))) @ arg782) @ arg783) @ arg784) @ arg785) @ arg786) @ arg787)) = (any1::(any2::rotate (arg788) (((((((arg781 @ arg782) @ arg783) @ arg784) @ arg785) @ arg786) @ arg787))))
Model : any1: 6, any2: 5, arg781: (Nil), arg782: (Nil), arg783: (Nil), arg784: (Nil), arg785: (Nil), arg786: (Nil), arg787: (0::(Nil)), arg788: ZERO
Model : any1: 7, any2: 4, arg781: (Nil), arg782: (Nil), arg783: (Nil), arg784: (Nil), arg785: (Nil), arg786: (Nil), arg787: (Nil), arg788: ZERO
Model : any1: 8, any2: 0, arg781: (0::(Nil)), arg782: (3::(6::(Nil))), arg783: (Nil), arg784: (Nil), arg785: (7::(Nil)), arg786: (Nil), arg787: (4::(Nil)), arg788: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) ((((((((((Nil) @ (6::(Nil))) @ (5::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (0::(Nil)))) = (6::(5::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (0::(Nil))))))
rotate (ZERO) ((((((((((Nil) @ (7::(Nil))) @ (4::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (7::(4::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) ((((((((((0::(Nil)) @ (8::(Nil))) @ (0::(Nil))) @ (3::(6::(Nil)))) @ (Nil)) @ (Nil)) @ (7::(Nil))) @ (Nil)) @ (4::(Nil)))) = (8::(0::rotate (ZERO) ((((((((0::(Nil)) @ (3::(6::(Nil)))) @ (Nil)) @ (Nil)) @ (7::(Nil))) @ (Nil)) @ (4::(Nil))))))
Simplifying took 0.004715 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list2:any list), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Model : any1: 1, any2: 2, any3: 7, any4: 0, any5: 3, any6: 0, any7: 0, any8: 4, any_list2: (Nil)
Model : any1: 6, any2: 2, any3: 8, any4: 0, any5: 1, any6: 7, any7: 2, any8: 4, any_list2: (Nil)
Model : any1: 0, any2: 1, any3: 6, any4: 7, any5: 5, any6: 0, any7: 1, any8: 3, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (1::(Nil))) @ (2::(Nil))) @ (7::(Nil))) @ (0::(Nil))) @ (3::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (4::(Nil)))) = (1::(2::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (7::(Nil))) @ (0::(Nil))) @ (3::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (4::(Nil))))))
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (6::(Nil))) @ (2::(Nil))) @ (8::(Nil))) @ (0::(Nil))) @ (1::(Nil))) @ (7::(Nil))) @ (2::(Nil))) @ (4::(Nil)))) = (6::(2::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (8::(Nil))) @ (0::(Nil))) @ (1::(Nil))) @ (7::(Nil))) @ (2::(Nil))) @ (4::(Nil))))))
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (1::(Nil))) @ (6::(Nil))) @ (7::(Nil))) @ (5::(Nil))) @ (0::(Nil))) @ (1::(Nil))) @ (3::(Nil)))) = (0::(1::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (6::(Nil))) @ (7::(Nil))) @ (5::(Nil))) @ (0::(Nil))) @ (1::(Nil))) @ (3::(Nil))))))
Simplifying took 0.008516 seconds
Result : true
advanced_generalize done
=================================================
Progress: 379


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any3 : any
any5 : any
any6 : any
---------------------------------------
forall (any2:any) (any4:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any7(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any3 : any
any5 : any
any6 : any
any7 : any
---------------------------------------
forall (any2:any) (any4:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any5
intro any6
intro any7
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg789:any list) (arg790:any list) (arg791:any list) (arg792:any list) (arg793:any list) (arg794:any list) (arg795:any list) (arg796:nat), rotate (arg796) (((((((((arg789 @ (any1::(Nil))) @ (any2::(Nil))) @ arg790) @ arg791) @ arg792) @ arg793) @ arg794) @ arg795)) = (any1::(any2::rotate (arg796) (((((((arg789 @ arg790) @ arg791) @ arg792) @ arg793) @ arg794) @ arg795))))
Model : any1: 7, any2: 8, arg789: (2::(Nil)), arg790: (Nil), arg791: (7::(8::(Nil))), arg792: (Nil), arg793: (Nil), arg794: (Nil), arg795: (Nil), arg796: ZERO
Model : any1: 5, any2: 5, arg789: (Nil), arg790: (Nil), arg791: (5::(Nil)), arg792: (Nil), arg793: (8::(Nil)), arg794: (Nil), arg795: (Nil), arg796: ZERO
Model : any1: 5, any2: 8, arg789: (Nil), arg790: (Nil), arg791: (Nil), arg792: (Nil), arg793: (Nil), arg794: (Nil), arg795: (Nil), arg796: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) ((((((((((2::(Nil)) @ (7::(Nil))) @ (8::(Nil))) @ (Nil)) @ (7::(8::(Nil)))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (7::(8::rotate (ZERO) ((((((((2::(Nil)) @ (Nil)) @ (7::(8::(Nil)))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) ((((((((((Nil) @ (5::(Nil))) @ (5::(Nil))) @ (Nil)) @ (5::(Nil))) @ (Nil)) @ (8::(Nil))) @ (Nil)) @ (Nil))) = (5::(5::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (5::(Nil))) @ (Nil)) @ (8::(Nil))) @ (Nil)) @ (Nil)))))
rotate (ZERO) ((((((((((Nil) @ (5::(Nil))) @ (8::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (5::(8::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
Simplifying took 0.005355 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list2:any list), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Model : any1: 1, any2: 4, any3: 0, any4: 8, any5: 0, any6: 0, any7: 2, any8: 0, any_list2: (Nil)
Model : any1: 4, any2: 3, any3: 3, any4: 2, any5: 3, any6: 5, any7: 3, any8: 0, any_list2: (Nil)
Model : any1: 0, any2: 7, any3: 3, any4: 0, any5: 2, any6: 3, any7: 6, any8: 7, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (1::(Nil))) @ (4::(Nil))) @ (0::(Nil))) @ (8::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (2::(Nil))) @ (0::(Nil)))) = (1::(4::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (8::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (2::(Nil))) @ (0::(Nil))))))
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (4::(Nil))) @ (3::(Nil))) @ (3::(Nil))) @ (2::(Nil))) @ (3::(Nil))) @ (5::(Nil))) @ (3::(Nil))) @ (0::(Nil)))) = (4::(3::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (3::(Nil))) @ (2::(Nil))) @ (3::(Nil))) @ (5::(Nil))) @ (3::(Nil))) @ (0::(Nil))))))
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (7::(Nil))) @ (3::(Nil))) @ (0::(Nil))) @ (2::(Nil))) @ (3::(Nil))) @ (6::(Nil))) @ (7::(Nil)))) = (0::(7::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (3::(Nil))) @ (0::(Nil))) @ (2::(Nil))) @ (3::(Nil))) @ (6::(Nil))) @ (7::(Nil))))))
Simplifying took 0.008195 seconds
Result : true
advanced_generalize done
=================================================
Progress: 380


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any4 : any
any5 : any
any6 : any
---------------------------------------
forall (any2:any) (any3:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any7(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any4 : any
any5 : any
any6 : any
any7 : any
---------------------------------------
forall (any2:any) (any3:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any4
intro any5
intro any6
intro any7
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg797:any list) (arg798:any list) (arg799:any list) (arg800:any list) (arg801:any list) (arg802:any list) (arg803:any list) (arg804:nat), rotate (arg804) (((((((((arg797 @ (any1::(Nil))) @ (any2::(Nil))) @ arg798) @ arg799) @ arg800) @ arg801) @ arg802) @ arg803)) = (any1::(any2::rotate (arg804) (((((((arg797 @ arg798) @ arg799) @ arg800) @ arg801) @ arg802) @ arg803))))
Model : any1: 1, any2: 0, arg797: (4::(Nil)), arg798: (3::(Nil)), arg799: (Nil), arg800: (2::(2::(Nil))), arg801: (Nil), arg802: (Nil), arg803: (Nil), arg804: ZERO
Model : any1: 4, any2: 6, arg797: (Nil), arg798: (Nil), arg799: (8::(Nil)), arg800: (Nil), arg801: (6::(Nil)), arg802: (Nil), arg803: (7::(Nil)), arg804: ZERO
Model : any1: 0, any2: 1, arg797: (Nil), arg798: (Nil), arg799: (4::(Nil)), arg800: (Nil), arg801: (0::(Nil)), arg802: (Nil), arg803: (Nil), arg804: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) ((((((((((4::(Nil)) @ (1::(Nil))) @ (0::(Nil))) @ (3::(Nil))) @ (Nil)) @ (2::(2::(Nil)))) @ (Nil)) @ (Nil)) @ (Nil))) = (1::(0::rotate (ZERO) ((((((((4::(Nil)) @ (3::(Nil))) @ (Nil)) @ (2::(2::(Nil)))) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) ((((((((((Nil) @ (4::(Nil))) @ (6::(Nil))) @ (Nil)) @ (8::(Nil))) @ (Nil)) @ (6::(Nil))) @ (Nil)) @ (7::(Nil)))) = (4::(6::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (8::(Nil))) @ (Nil)) @ (6::(Nil))) @ (Nil)) @ (7::(Nil))))))
rotate (ZERO) ((((((((((Nil) @ (0::(Nil))) @ (1::(Nil))) @ (Nil)) @ (4::(Nil))) @ (Nil)) @ (0::(Nil))) @ (Nil)) @ (Nil))) = (0::(1::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (4::(Nil))) @ (Nil)) @ (0::(Nil))) @ (Nil)) @ (Nil)))))
Simplifying took 0.004939 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list2:any list), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Model : any1: 7, any2: 7, any3: 7, any4: 4, any5: 8, any6: 4, any7: 2, any8: 0, any_list2: (Nil)
Model : any1: 5, any2: 8, any3: 2, any4: 7, any5: 8, any6: 2, any7: 0, any8: 5, any_list2: (Nil)
Model : any1: 7, any2: 5, any3: 6, any4: 1, any5: 4, any6: 8, any7: 1, any8: 7, any_list2: (4::(Nil))
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (7::(Nil))) @ (7::(Nil))) @ (7::(Nil))) @ (4::(Nil))) @ (8::(Nil))) @ (4::(Nil))) @ (2::(Nil))) @ (0::(Nil)))) = (7::(7::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (7::(Nil))) @ (4::(Nil))) @ (8::(Nil))) @ (4::(Nil))) @ (2::(Nil))) @ (0::(Nil))))))
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (5::(Nil))) @ (8::(Nil))) @ (2::(Nil))) @ (7::(Nil))) @ (8::(Nil))) @ (2::(Nil))) @ (0::(Nil))) @ (5::(Nil)))) = (5::(8::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (2::(Nil))) @ (7::(Nil))) @ (8::(Nil))) @ (2::(Nil))) @ (0::(Nil))) @ (5::(Nil))))))
rotate (len ((4::(Nil)))) (((((((((((4::(Nil)) @ (Nil)) @ (7::(Nil))) @ (5::(Nil))) @ (6::(Nil))) @ (1::(Nil))) @ (4::(Nil))) @ (8::(Nil))) @ (1::(Nil))) @ (7::(Nil)))) = (7::(5::rotate (len ((4::(Nil)))) (((((((((4::(Nil)) @ (Nil)) @ (6::(Nil))) @ (1::(Nil))) @ (4::(Nil))) @ (8::(Nil))) @ (1::(Nil))) @ (7::(Nil))))))
Simplifying took 0.013265 seconds
Result : true
advanced_generalize done
=================================================
Progress: 381


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any2 : any
any3 : any
any4 : any
any5 : any
---------------------------------------
forall (any1:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any6(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any2 : any
any3 : any
any4 : any
any5 : any
any6 : any
---------------------------------------
forall (any1:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro any7(rank:17)
=================================================
Progress: 382


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any2 : any
any3 : any
any4 : any
any5 : any
---------------------------------------
forall (any1:any) (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any7(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any2 : any
any3 : any
any4 : any
any5 : any
any7 : any
---------------------------------------
forall (any1:any) (any6:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any4
intro any5
intro any7
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg805:any list) (arg806:any list) (arg807:any list) (arg808:any list) (arg809:any list) (arg810:any list) (arg811:any list) (arg812:nat), rotate (arg812) (((((((((arg805 @ (any1::(Nil))) @ (any2::(Nil))) @ arg806) @ arg807) @ arg808) @ arg809) @ arg810) @ arg811)) = (any1::(any2::rotate (arg812) (((((((arg805 @ arg806) @ arg807) @ arg808) @ arg809) @ arg810) @ arg811))))
Model : any1: 2, any2: 4, arg805: (Nil), arg806: (Nil), arg807: (4::(Nil)), arg808: (Nil), arg809: (Nil), arg810: (Nil), arg811: (Nil), arg812: ZERO
Model : any1: 8, any2: 4, arg805: (Nil), arg806: (Nil), arg807: (Nil), arg808: (Nil), arg809: (Nil), arg810: (7::(Nil)), arg811: (Nil), arg812: SUCC (ZERO)
Model : any1: 5, any2: 2, arg805: (Nil), arg806: (0::(Nil)), arg807: (Nil), arg808: (Nil), arg809: (Nil), arg810: (Nil), arg811: (Nil), arg812: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) ((((((((((Nil) @ (2::(Nil))) @ (4::(Nil))) @ (Nil)) @ (4::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (2::(4::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (4::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (SUCC (ZERO)) ((((((((((Nil) @ (8::(Nil))) @ (4::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (7::(Nil))) @ (Nil))) = (8::(4::rotate (SUCC (ZERO)) ((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (7::(Nil))) @ (Nil)))))
rotate (ZERO) ((((((((((Nil) @ (5::(Nil))) @ (2::(Nil))) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (5::(2::rotate (ZERO) ((((((((Nil) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
Simplifying took 0.002699 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list2:any list), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Model : any1: 4, any2: 7, any3: 8, any4: 5, any5: 8, any6: 0, any7: 4, any8: 0, any_list2: (Nil)
Model : any1: 1, any2: 3, any3: 7, any4: 7, any5: 0, any6: 1, any7: 4, any8: 0, any_list2: (Nil)
Model : any1: 7, any2: 1, any3: 6, any4: 4, any5: 0, any6: 7, any7: 0, any8: 5, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (4::(Nil))) @ (7::(Nil))) @ (8::(Nil))) @ (5::(Nil))) @ (8::(Nil))) @ (0::(Nil))) @ (4::(Nil))) @ (0::(Nil)))) = (4::(7::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (8::(Nil))) @ (5::(Nil))) @ (8::(Nil))) @ (0::(Nil))) @ (4::(Nil))) @ (0::(Nil))))))
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (1::(Nil))) @ (3::(Nil))) @ (7::(Nil))) @ (7::(Nil))) @ (0::(Nil))) @ (1::(Nil))) @ (4::(Nil))) @ (0::(Nil)))) = (1::(3::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (7::(Nil))) @ (7::(Nil))) @ (0::(Nil))) @ (1::(Nil))) @ (4::(Nil))) @ (0::(Nil))))))
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (7::(Nil))) @ (1::(Nil))) @ (6::(Nil))) @ (4::(Nil))) @ (0::(Nil))) @ (7::(Nil))) @ (0::(Nil))) @ (5::(Nil)))) = (7::(1::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (6::(Nil))) @ (4::(Nil))) @ (0::(Nil))) @ (7::(Nil))) @ (0::(Nil))) @ (5::(Nil))))))
Simplifying took 0.009040 seconds
Result : true
advanced_generalize done
=================================================
Progress: 383


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any2 : any
any3 : any
any4 : any
any6 : any
---------------------------------------
forall (any1:any) (any5:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any7(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any2 : any
any3 : any
any4 : any
any6 : any
any7 : any
---------------------------------------
forall (any1:any) (any5:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any4
intro any6
intro any7
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg813:any list) (arg814:any list) (arg815:any list) (arg816:any list) (arg817:any list) (arg818:any list) (arg819:any list) (arg820:nat), rotate (arg820) (((((((((arg813 @ (any1::(Nil))) @ (any2::(Nil))) @ arg814) @ arg815) @ arg816) @ arg817) @ arg818) @ arg819)) = (any1::(any2::rotate (arg820) (((((((arg813 @ arg814) @ arg815) @ arg816) @ arg817) @ arg818) @ arg819))))
Model : any1: 1, any2: 1, arg813: (Nil), arg814: (0::(Nil)), arg815: (Nil), arg816: (Nil), arg817: (Nil), arg818: (8::(Nil)), arg819: (Nil), arg820: ZERO
Model : any1: 8, any2: 0, arg813: (Nil), arg814: (Nil), arg815: (0::(Nil)), arg816: (Nil), arg817: (Nil), arg818: (Nil), arg819: (Nil), arg820: ZERO
Model : any1: 3, any2: 0, arg813: (Nil), arg814: (2::(Nil)), arg815: (Nil), arg816: (Nil), arg817: (Nil), arg818: (Nil), arg819: (Nil), arg820: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) ((((((((((Nil) @ (1::(Nil))) @ (1::(Nil))) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (8::(Nil))) @ (Nil))) = (1::(1::rotate (ZERO) ((((((((Nil) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (8::(Nil))) @ (Nil)))))
rotate (ZERO) ((((((((((Nil) @ (8::(Nil))) @ (0::(Nil))) @ (Nil)) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (8::(0::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) ((((((((((Nil) @ (3::(Nil))) @ (0::(Nil))) @ (2::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (3::(0::rotate (ZERO) ((((((((Nil) @ (2::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
Simplifying took 0.002333 seconds
Result : true
advanced_generalize done


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any2 : any
any3 : any
any4 : any
any6 : any
any7 : any
---------------------------------------
forall (any1:any) (any5:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
=================================================
Progress: 384


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any2 : any
any3 : any
any4 : any
any6 : any
any7 : any
---------------------------------------
forall (any1:any) (any5:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (arg813:any list) (arg814:any list) (arg815:any list) (arg816:any list) (arg817:any list) (arg818:any list) (arg819:any list) (arg820:nat), rotate (arg820) (((((((((arg813 @ (any1::(Nil))) @ (any2::(Nil))) @ arg814) @ arg815) @ arg816) @ arg817) @ arg818) @ arg819)) = (any1::(any2::rotate (arg820) (((((((arg813 @ arg814) @ arg815) @ arg816) @ arg817) @ arg818) @ arg819))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (any_list7:any list) (nat1:nat), rotate (nat1) (((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7)) = (any1::(any2::rotate (nat1) (((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (any_list7:any list) (nat1:nat), rotate (nat1) (((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7)) = (any1::(any2::rotate (nat1) (((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:20)
=================================================
Progress: 385


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any2 : any
any3 : any
any5 : any
any6 : any
---------------------------------------
forall (any1:any) (any4:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any7(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any2 : any
any3 : any
any5 : any
any6 : any
any7 : any
---------------------------------------
forall (any1:any) (any4:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any5
intro any6
intro any7
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg821:any list) (arg822:any list) (arg823:any list) (arg824:any list) (arg825:any list) (arg826:any list) (arg827:any list) (arg828:nat), rotate (arg828) (((((((((arg821 @ (any1::(Nil))) @ (any2::(Nil))) @ arg822) @ arg823) @ arg824) @ arg825) @ arg826) @ arg827)) = (any1::(any2::rotate (arg828) (((((((arg821 @ arg822) @ arg823) @ arg824) @ arg825) @ arg826) @ arg827))))
Model : any1: 3, any2: 4, arg821: (Nil), arg822: (Nil), arg823: (Nil), arg824: (8::(Nil)), arg825: (Nil), arg826: (2::(Nil)), arg827: (Nil), arg828: ZERO
Model : any1: 1, any2: 2, arg821: (0::(6::(Nil))), arg822: (6::(Nil)), arg823: (Nil), arg824: (8::(Nil)), arg825: (0::(Nil)), arg826: (Nil), arg827: (0::(Nil)), arg828: ZERO
Model : any1: 7, any2: 0, arg821: (Nil), arg822: (Nil), arg823: (7::(0::(Nil))), arg824: (Nil), arg825: (Nil), arg826: (0::(0::(Nil))), arg827: (Nil), arg828: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) ((((((((((Nil) @ (3::(Nil))) @ (4::(Nil))) @ (Nil)) @ (Nil)) @ (8::(Nil))) @ (Nil)) @ (2::(Nil))) @ (Nil))) = (3::(4::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (Nil)) @ (8::(Nil))) @ (Nil)) @ (2::(Nil))) @ (Nil)))))
rotate (ZERO) ((((((((((0::(6::(Nil))) @ (1::(Nil))) @ (2::(Nil))) @ (6::(Nil))) @ (Nil)) @ (8::(Nil))) @ (0::(Nil))) @ (Nil)) @ (0::(Nil)))) = (1::(2::rotate (ZERO) ((((((((0::(6::(Nil))) @ (6::(Nil))) @ (Nil)) @ (8::(Nil))) @ (0::(Nil))) @ (Nil)) @ (0::(Nil))))))
rotate (ZERO) ((((((((((Nil) @ (7::(Nil))) @ (0::(Nil))) @ (Nil)) @ (7::(0::(Nil)))) @ (Nil)) @ (Nil)) @ (0::(0::(Nil)))) @ (Nil))) = (7::(0::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (7::(0::(Nil)))) @ (Nil)) @ (Nil)) @ (0::(0::(Nil)))) @ (Nil)))))
Simplifying took 0.006329 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list2:any list), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Model : any1: 6, any2: 6, any3: 2, any4: 4, any5: 0, any6: 2, any7: 8, any8: 5, any_list2: (Nil)
Model : any1: 6, any2: 0, any3: 3, any4: 2, any5: 8, any6: 6, any7: 0, any8: 6, any_list2: (Nil)
Model : any1: 0, any2: 0, any3: 8, any4: 1, any5: 1, any6: 6, any7: 6, any8: 4, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (6::(Nil))) @ (6::(Nil))) @ (2::(Nil))) @ (4::(Nil))) @ (0::(Nil))) @ (2::(Nil))) @ (8::(Nil))) @ (5::(Nil)))) = (6::(6::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (2::(Nil))) @ (4::(Nil))) @ (0::(Nil))) @ (2::(Nil))) @ (8::(Nil))) @ (5::(Nil))))))
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (6::(Nil))) @ (0::(Nil))) @ (3::(Nil))) @ (2::(Nil))) @ (8::(Nil))) @ (6::(Nil))) @ (0::(Nil))) @ (6::(Nil)))) = (6::(0::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (3::(Nil))) @ (2::(Nil))) @ (8::(Nil))) @ (6::(Nil))) @ (0::(Nil))) @ (6::(Nil))))))
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (0::(Nil))) @ (8::(Nil))) @ (1::(Nil))) @ (1::(Nil))) @ (6::(Nil))) @ (6::(Nil))) @ (4::(Nil)))) = (0::(0::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (8::(Nil))) @ (1::(Nil))) @ (1::(Nil))) @ (6::(Nil))) @ (6::(Nil))) @ (4::(Nil))))))
Simplifying took 0.009012 seconds
Result : true
advanced_generalize done
=================================================
Progress: 386


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any2 : any
any4 : any
any5 : any
any6 : any
---------------------------------------
forall (any1:any) (any3:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any7(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any2 : any
any4 : any
any5 : any
any6 : any
any7 : any
---------------------------------------
forall (any1:any) (any3:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any4
intro any5
intro any6
intro any7
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg829:any list) (arg830:any list) (arg831:any list) (arg832:any list) (arg833:any list) (arg834:any list) (arg835:any list) (arg836:nat), rotate (arg836) (((((((((arg829 @ (any1::(Nil))) @ (any2::(Nil))) @ arg830) @ arg831) @ arg832) @ arg833) @ arg834) @ arg835)) = (any1::(any2::rotate (arg836) (((((((arg829 @ arg830) @ arg831) @ arg832) @ arg833) @ arg834) @ arg835))))
Model : any1: 2, any2: 7, arg829: (Nil), arg830: (Nil), arg831: (Nil), arg832: (Nil), arg833: (7::(Nil)), arg834: (Nil), arg835: (Nil), arg836: ZERO
Model : any1: 5, any2: 6, arg829: (Nil), arg830: (Nil), arg831: (Nil), arg832: (Nil), arg833: (Nil), arg834: (Nil), arg835: (7::(0::(4::(6::(4::(Nil)))))), arg836: ZERO
Model : any1: 0, any2: 0, arg829: (Nil), arg830: (Nil), arg831: (Nil), arg832: (Nil), arg833: (Nil), arg834: (Nil), arg835: (Nil), arg836: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) ((((((((((Nil) @ (2::(Nil))) @ (7::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (7::(Nil))) @ (Nil)) @ (Nil))) = (2::(7::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (7::(Nil))) @ (Nil)) @ (Nil)))))
rotate (ZERO) ((((((((((Nil) @ (5::(Nil))) @ (6::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (7::(0::(4::(6::(4::(Nil)))))))) = (5::(6::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (7::(0::(4::(6::(4::(Nil))))))))))
rotate (ZERO) ((((((((((Nil) @ (0::(Nil))) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (0::(0::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
Simplifying took 0.002356 seconds
Result : true
advanced_generalize done


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any2 : any
any4 : any
any5 : any
any6 : any
any7 : any
---------------------------------------
forall (any1:any) (any3:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
=================================================
Progress: 387


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any2 : any
any4 : any
any5 : any
any6 : any
any7 : any
---------------------------------------
forall (any1:any) (any3:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (arg829:any list) (arg830:any list) (arg831:any list) (arg832:any list) (arg833:any list) (arg834:any list) (arg835:any list) (arg836:nat), rotate (arg836) (((((((((arg829 @ (any1::(Nil))) @ (any2::(Nil))) @ arg830) @ arg831) @ arg832) @ arg833) @ arg834) @ arg835)) = (any1::(any2::rotate (arg836) (((((((arg829 @ arg830) @ arg831) @ arg832) @ arg833) @ arg834) @ arg835))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (any_list7:any list) (nat1:nat), rotate (nat1) (((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7)) = (any1::(any2::rotate (nat1) (((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (any_list7:any list) (nat1:nat), rotate (nat1) (((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7)) = (any1::(any2::rotate (nat1) (((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:20)
=================================================
Progress: 388


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any3 : any
any4 : any
any5 : any
any6 : any
---------------------------------------
forall (any1:any) (any2:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any7(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any3 : any
any4 : any
any5 : any
any6 : any
any7 : any
---------------------------------------
forall (any1:any) (any2:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any4
intro any5
intro any6
intro any7
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg837:any list) (arg838:any list) (arg839:any list) (arg840:any list) (arg841:any list) (arg842:any list) (arg843:any list) (arg844:nat), rotate (arg844) (((((((((arg837 @ (any1::(Nil))) @ (any2::(Nil))) @ arg838) @ arg839) @ arg840) @ arg841) @ arg842) @ arg843)) = (any1::(any2::rotate (arg844) (((((((arg837 @ arg838) @ arg839) @ arg840) @ arg841) @ arg842) @ arg843))))
Model : any1: 0, any2: 0, arg837: (Nil), arg838: (Nil), arg839: (Nil), arg840: (5::(Nil)), arg841: (Nil), arg842: (Nil), arg843: (Nil), arg844: SUCC (ZERO)
Model : any1: 7, any2: 0, arg837: (Nil), arg838: (Nil), arg839: (Nil), arg840: (Nil), arg841: (3::(Nil)), arg842: (Nil), arg843: (Nil), arg844: SUCC (ZERO)
Model : any1: 2, any2: 7, arg837: (Nil), arg838: (Nil), arg839: (Nil), arg840: (Nil), arg841: (Nil), arg842: (Nil), arg843: (Nil), arg844: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (SUCC (ZERO)) ((((((((((Nil) @ (0::(Nil))) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (5::(Nil))) @ (Nil)) @ (Nil)) @ (Nil))) = (0::(0::rotate (SUCC (ZERO)) ((((((((Nil) @ (Nil)) @ (Nil)) @ (5::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (SUCC (ZERO)) ((((((((((Nil) @ (7::(Nil))) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (3::(Nil))) @ (Nil)) @ (Nil))) = (7::(0::rotate (SUCC (ZERO)) ((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (3::(Nil))) @ (Nil)) @ (Nil)))))
rotate (ZERO) ((((((((((Nil) @ (2::(Nil))) @ (7::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (2::(7::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
Simplifying took 0.002312 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list2:any list), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Model : any1: 7, any2: 7, any3: 8, any4: 1, any5: 5, any6: 7, any7: 7, any8: 1, any_list2: (Nil)
Model : any1: 3, any2: 7, any3: 4, any4: 5, any5: 0, any6: 1, any7: 6, any8: 1, any_list2: (Nil)
Model : any1: 8, any2: 3, any3: 4, any4: 3, any5: 2, any6: 4, any7: 6, any8: 3, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (7::(Nil))) @ (7::(Nil))) @ (8::(Nil))) @ (1::(Nil))) @ (5::(Nil))) @ (7::(Nil))) @ (7::(Nil))) @ (1::(Nil)))) = (7::(7::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (8::(Nil))) @ (1::(Nil))) @ (5::(Nil))) @ (7::(Nil))) @ (7::(Nil))) @ (1::(Nil))))))
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (3::(Nil))) @ (7::(Nil))) @ (4::(Nil))) @ (5::(Nil))) @ (0::(Nil))) @ (1::(Nil))) @ (6::(Nil))) @ (1::(Nil)))) = (3::(7::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (4::(Nil))) @ (5::(Nil))) @ (0::(Nil))) @ (1::(Nil))) @ (6::(Nil))) @ (1::(Nil))))))
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (8::(Nil))) @ (3::(Nil))) @ (4::(Nil))) @ (3::(Nil))) @ (2::(Nil))) @ (4::(Nil))) @ (6::(Nil))) @ (3::(Nil)))) = (8::(3::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (4::(Nil))) @ (3::(Nil))) @ (2::(Nil))) @ (4::(Nil))) @ (6::(Nil))) @ (3::(Nil))))))
Simplifying took 0.009811 seconds
Result : true
advanced_generalize done
=================================================
Progress: 389


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any2 : any
any3 : any
any4 : any
any5 : any
---------------------------------------
forall (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any6(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any2 : any
any3 : any
any4 : any
any5 : any
any6 : any
---------------------------------------
forall (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
intro any7(rank:17)
=================================================
Progress: 390


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any2 : any
any3 : any
any4 : any
any5 : any
---------------------------------------
forall (any6:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any7(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any2 : any
any3 : any
any4 : any
any5 : any
any7 : any
---------------------------------------
forall (any6:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any4
intro any5
intro any7
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg845:any list) (arg846:any list) (arg847:any list) (arg848:any list) (arg849:any list) (arg850:any list) (arg851:any list) (arg852:nat), rotate (arg852) (((((((((arg845 @ (any1::(Nil))) @ (any2::(Nil))) @ arg846) @ arg847) @ arg848) @ arg849) @ arg850) @ arg851)) = (any1::(any2::rotate (arg852) (((((((arg845 @ arg846) @ arg847) @ arg848) @ arg849) @ arg850) @ arg851))))
Model : any1: 7, any2: 8, arg845: (Nil), arg846: (Nil), arg847: (Nil), arg848: (Nil), arg849: (Nil), arg850: (Nil), arg851: (Nil), arg852: ZERO
Model : any1: 4, any2: 6, arg845: (Nil), arg846: (Nil), arg847: (Nil), arg848: (Nil), arg849: (Nil), arg850: (Nil), arg851: (Nil), arg852: SUCC (ZERO)
Model : any1: 1, any2: 3, arg845: (0::(Nil)), arg846: (Nil), arg847: (6::(Nil)), arg848: (Nil), arg849: (6::(Nil)), arg850: (Nil), arg851: (0::(4::(Nil))), arg852: SUCC (ZERO)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) ((((((((((Nil) @ (7::(Nil))) @ (8::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (7::(8::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (SUCC (ZERO)) ((((((((((Nil) @ (4::(Nil))) @ (6::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (4::(6::rotate (SUCC (ZERO)) ((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (SUCC (ZERO)) ((((((((((0::(Nil)) @ (1::(Nil))) @ (3::(Nil))) @ (Nil)) @ (6::(Nil))) @ (Nil)) @ (6::(Nil))) @ (Nil)) @ (0::(4::(Nil))))) = (1::(3::rotate (SUCC (ZERO)) ((((((((0::(Nil)) @ (Nil)) @ (6::(Nil))) @ (Nil)) @ (6::(Nil))) @ (Nil)) @ (0::(4::(Nil)))))))
Simplifying took 0.004513 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list2:any list), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Model : any1: 0, any2: 8, any3: 1, any4: 5, any5: 3, any6: 5, any7: 0, any8: 4, any_list2: (6::(2::(Nil)))
Model : any1: 0, any2: 4, any3: 7, any4: 0, any5: 1, any6: 6, any7: 8, any8: 3, any_list2: (1::(Nil))
Model : any1: 4, any2: 6, any3: 8, any4: 2, any5: 6, any6: 7, any7: 6, any8: 7, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((6::(2::(Nil))))) (((((((((((6::(2::(Nil))) @ (Nil)) @ (0::(Nil))) @ (8::(Nil))) @ (1::(Nil))) @ (5::(Nil))) @ (3::(Nil))) @ (5::(Nil))) @ (0::(Nil))) @ (4::(Nil)))) = (0::(8::rotate (len ((6::(2::(Nil))))) (((((((((6::(2::(Nil))) @ (Nil)) @ (1::(Nil))) @ (5::(Nil))) @ (3::(Nil))) @ (5::(Nil))) @ (0::(Nil))) @ (4::(Nil))))))
rotate (len ((1::(Nil)))) (((((((((((1::(Nil)) @ (Nil)) @ (0::(Nil))) @ (4::(Nil))) @ (7::(Nil))) @ (0::(Nil))) @ (1::(Nil))) @ (6::(Nil))) @ (8::(Nil))) @ (3::(Nil)))) = (0::(4::rotate (len ((1::(Nil)))) (((((((((1::(Nil)) @ (Nil)) @ (7::(Nil))) @ (0::(Nil))) @ (1::(Nil))) @ (6::(Nil))) @ (8::(Nil))) @ (3::(Nil))))))
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (4::(Nil))) @ (6::(Nil))) @ (8::(Nil))) @ (2::(Nil))) @ (6::(Nil))) @ (7::(Nil))) @ (6::(Nil))) @ (7::(Nil)))) = (4::(6::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (8::(Nil))) @ (2::(Nil))) @ (6::(Nil))) @ (7::(Nil))) @ (6::(Nil))) @ (7::(Nil))))))
Simplifying took 0.018224 seconds
Result : true
advanced_generalize done
=================================================
Progress: 391


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any2 : any
any3 : any
any4 : any
any6 : any
---------------------------------------
forall (any5:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any7(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any2 : any
any3 : any
any4 : any
any6 : any
any7 : any
---------------------------------------
forall (any5:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any4
intro any6
intro any7
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg853:any list) (arg854:any list) (arg855:any list) (arg856:any list) (arg857:any list) (arg858:any list) (arg859:any list) (arg860:nat), rotate (arg860) (((((((((arg853 @ (any1::(Nil))) @ (any2::(Nil))) @ arg854) @ arg855) @ arg856) @ arg857) @ arg858) @ arg859)) = (any1::(any2::rotate (arg860) (((((((arg853 @ arg854) @ arg855) @ arg856) @ arg857) @ arg858) @ arg859))))
Model : any1: 0, any2: 1, arg853: (0::(Nil)), arg854: (Nil), arg855: (4::(Nil)), arg856: (Nil), arg857: (Nil), arg858: (Nil), arg859: (Nil), arg860: SUCC (SUCC (SUCC (ZERO)))
Model : any1: 4, any2: 7, arg853: (7::(Nil)), arg854: (7::(2::(Nil))), arg855: (Nil), arg856: (Nil), arg857: (Nil), arg858: (Nil), arg859: (Nil), arg860: ZERO
Model : any1: 8, any2: 5, arg853: (2::(Nil)), arg854: (0::(Nil)), arg855: (1::(Nil)), arg856: (Nil), arg857: (Nil), arg858: (0::(4::(Nil))), arg859: (Nil), arg860: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (SUCC (SUCC (SUCC (ZERO)))) ((((((((((0::(Nil)) @ (0::(Nil))) @ (1::(Nil))) @ (Nil)) @ (4::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (0::(1::rotate (SUCC (SUCC (SUCC (ZERO)))) ((((((((0::(Nil)) @ (Nil)) @ (4::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) ((((((((((7::(Nil)) @ (4::(Nil))) @ (7::(Nil))) @ (7::(2::(Nil)))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (4::(7::rotate (ZERO) ((((((((7::(Nil)) @ (7::(2::(Nil)))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) ((((((((((2::(Nil)) @ (8::(Nil))) @ (5::(Nil))) @ (0::(Nil))) @ (1::(Nil))) @ (Nil)) @ (Nil)) @ (0::(4::(Nil)))) @ (Nil))) = (8::(5::rotate (ZERO) ((((((((2::(Nil)) @ (0::(Nil))) @ (1::(Nil))) @ (Nil)) @ (Nil)) @ (0::(4::(Nil)))) @ (Nil)))))
Simplifying took 0.007264 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list2:any list), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Model : any1: 4, any2: 0, any3: 5, any4: 7, any5: 2, any6: 0, any7: 4, any8: 1, any_list2: (Nil)
Model : any1: 0, any2: 5, any3: 5, any4: 8, any5: 0, any6: 0, any7: 0, any8: 0, any_list2: (Nil)
Model : any1: 6, any2: 3, any3: 7, any4: 0, any5: 5, any6: 0, any7: 0, any8: 3, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (4::(Nil))) @ (0::(Nil))) @ (5::(Nil))) @ (7::(Nil))) @ (2::(Nil))) @ (0::(Nil))) @ (4::(Nil))) @ (1::(Nil)))) = (4::(0::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (5::(Nil))) @ (7::(Nil))) @ (2::(Nil))) @ (0::(Nil))) @ (4::(Nil))) @ (1::(Nil))))))
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (5::(Nil))) @ (5::(Nil))) @ (8::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (0::(Nil)))) = (0::(5::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (5::(Nil))) @ (8::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (0::(Nil))))))
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (6::(Nil))) @ (3::(Nil))) @ (7::(Nil))) @ (0::(Nil))) @ (5::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (3::(Nil)))) = (6::(3::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (7::(Nil))) @ (0::(Nil))) @ (5::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (3::(Nil))))))
Simplifying took 0.007674 seconds
Result : true
advanced_generalize done
=================================================
Progress: 392


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any2 : any
any3 : any
any5 : any
any6 : any
---------------------------------------
forall (any4:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any7(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any2 : any
any3 : any
any5 : any
any6 : any
any7 : any
---------------------------------------
forall (any4:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any5
intro any6
intro any7
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg861:any list) (arg862:any list) (arg863:any list) (arg864:any list) (arg865:any list) (arg866:any list) (arg867:any list) (arg868:nat), rotate (arg868) (((((((((arg861 @ (any1::(Nil))) @ (any2::(Nil))) @ arg862) @ arg863) @ arg864) @ arg865) @ arg866) @ arg867)) = (any1::(any2::rotate (arg868) (((((((arg861 @ arg862) @ arg863) @ arg864) @ arg865) @ arg866) @ arg867))))
Model : any1: 2, any2: 7, arg861: (Nil), arg862: (Nil), arg863: (Nil), arg864: (5::(Nil)), arg865: (Nil), arg866: (Nil), arg867: (Nil), arg868: ZERO
Model : any1: 6, any2: 8, arg861: (4::(Nil)), arg862: (Nil), arg863: (6::(0::(Nil))), arg864: (Nil), arg865: (1::(0::(Nil))), arg866: (6::(Nil)), arg867: (Nil), arg868: ZERO
Model : any1: 4, any2: 0, arg861: (Nil), arg862: (Nil), arg863: (0::(Nil)), arg864: (Nil), arg865: (Nil), arg866: (Nil), arg867: (Nil), arg868: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) ((((((((((Nil) @ (2::(Nil))) @ (7::(Nil))) @ (Nil)) @ (Nil)) @ (5::(Nil))) @ (Nil)) @ (Nil)) @ (Nil))) = (2::(7::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (Nil)) @ (5::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) ((((((((((4::(Nil)) @ (6::(Nil))) @ (8::(Nil))) @ (Nil)) @ (6::(0::(Nil)))) @ (Nil)) @ (1::(0::(Nil)))) @ (6::(Nil))) @ (Nil))) = (6::(8::rotate (ZERO) ((((((((4::(Nil)) @ (Nil)) @ (6::(0::(Nil)))) @ (Nil)) @ (1::(0::(Nil)))) @ (6::(Nil))) @ (Nil)))))
rotate (ZERO) ((((((((((Nil) @ (4::(Nil))) @ (0::(Nil))) @ (Nil)) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (4::(0::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
Simplifying took 0.004998 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list2:any list), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Model : any1: 4, any2: 6, any3: 0, any4: 8, any5: 3, any6: 5, any7: 7, any8: 0, any_list2: (Nil)
Model : any1: 3, any2: 0, any3: 2, any4: 2, any5: 6, any6: 5, any7: 6, any8: 6, any_list2: (0::(Nil))
Model : any1: 6, any2: 8, any3: 3, any4: 4, any5: 1, any6: 5, any7: 1, any8: 0, any_list2: (0::(6::(Nil)))
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (4::(Nil))) @ (6::(Nil))) @ (0::(Nil))) @ (8::(Nil))) @ (3::(Nil))) @ (5::(Nil))) @ (7::(Nil))) @ (0::(Nil)))) = (4::(6::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (8::(Nil))) @ (3::(Nil))) @ (5::(Nil))) @ (7::(Nil))) @ (0::(Nil))))))
rotate (len ((0::(Nil)))) (((((((((((0::(Nil)) @ (Nil)) @ (3::(Nil))) @ (0::(Nil))) @ (2::(Nil))) @ (2::(Nil))) @ (6::(Nil))) @ (5::(Nil))) @ (6::(Nil))) @ (6::(Nil)))) = (3::(0::rotate (len ((0::(Nil)))) (((((((((0::(Nil)) @ (Nil)) @ (2::(Nil))) @ (2::(Nil))) @ (6::(Nil))) @ (5::(Nil))) @ (6::(Nil))) @ (6::(Nil))))))
rotate (len ((0::(6::(Nil))))) (((((((((((0::(6::(Nil))) @ (Nil)) @ (6::(Nil))) @ (8::(Nil))) @ (3::(Nil))) @ (4::(Nil))) @ (1::(Nil))) @ (5::(Nil))) @ (1::(Nil))) @ (0::(Nil)))) = (6::(8::rotate (len ((0::(6::(Nil))))) (((((((((0::(6::(Nil))) @ (Nil)) @ (3::(Nil))) @ (4::(Nil))) @ (1::(Nil))) @ (5::(Nil))) @ (1::(Nil))) @ (0::(Nil))))))
Simplifying took 0.017239 seconds
Result : true
advanced_generalize done
=================================================
Progress: 393


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any2 : any
any4 : any
any5 : any
any6 : any
---------------------------------------
forall (any3:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any7(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any2 : any
any4 : any
any5 : any
any6 : any
any7 : any
---------------------------------------
forall (any3:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any4
intro any5
intro any6
intro any7
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg869:any list) (arg870:any list) (arg871:any list) (arg872:any list) (arg873:any list) (arg874:any list) (arg875:any list) (arg876:nat), rotate (arg876) (((((((((arg869 @ (any1::(Nil))) @ (any2::(Nil))) @ arg870) @ arg871) @ arg872) @ arg873) @ arg874) @ arg875)) = (any1::(any2::rotate (arg876) (((((((arg869 @ arg870) @ arg871) @ arg872) @ arg873) @ arg874) @ arg875))))
Model : any1: 1, any2: 0, arg869: (Nil), arg870: (Nil), arg871: (Nil), arg872: (Nil), arg873: (Nil), arg874: (Nil), arg875: (0::(6::(Nil))), arg876: ZERO
Model : any1: 6, any2: 0, arg869: (1::(Nil)), arg870: (Nil), arg871: (Nil), arg872: (Nil), arg873: (5::(0::(Nil))), arg874: (Nil), arg875: (Nil), arg876: ZERO
Model : any1: 0, any2: 0, arg869: (8::(Nil)), arg870: (Nil), arg871: (Nil), arg872: (Nil), arg873: (6::(Nil)), arg874: (Nil), arg875: (Nil), arg876: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) ((((((((((Nil) @ (1::(Nil))) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (0::(6::(Nil))))) = (1::(0::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (0::(6::(Nil)))))))
rotate (ZERO) ((((((((((1::(Nil)) @ (6::(Nil))) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (5::(0::(Nil)))) @ (Nil)) @ (Nil))) = (6::(0::rotate (ZERO) ((((((((1::(Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (5::(0::(Nil)))) @ (Nil)) @ (Nil)))))
rotate (ZERO) ((((((((((8::(Nil)) @ (0::(Nil))) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (6::(Nil))) @ (Nil)) @ (Nil))) = (0::(0::rotate (ZERO) ((((((((8::(Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (6::(Nil))) @ (Nil)) @ (Nil)))))
Simplifying took 0.003206 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list2:any list), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Model : any1: 0, any2: 0, any3: 5, any4: 6, any5: 8, any6: 2, any7: 1, any8: 8, any_list2: (Nil)
Model : any1: 5, any2: 0, any3: 2, any4: 0, any5: 3, any6: 6, any7: 8, any8: 5, any_list2: (Nil)
Model : any1: 0, any2: 2, any3: 0, any4: 2, any5: 4, any6: 1, any7: 8, any8: 7, any_list2: (0::(Nil))
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (0::(Nil))) @ (5::(Nil))) @ (6::(Nil))) @ (8::(Nil))) @ (2::(Nil))) @ (1::(Nil))) @ (8::(Nil)))) = (0::(0::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (5::(Nil))) @ (6::(Nil))) @ (8::(Nil))) @ (2::(Nil))) @ (1::(Nil))) @ (8::(Nil))))))
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (5::(Nil))) @ (0::(Nil))) @ (2::(Nil))) @ (0::(Nil))) @ (3::(Nil))) @ (6::(Nil))) @ (8::(Nil))) @ (5::(Nil)))) = (5::(0::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (2::(Nil))) @ (0::(Nil))) @ (3::(Nil))) @ (6::(Nil))) @ (8::(Nil))) @ (5::(Nil))))))
rotate (len ((0::(Nil)))) (((((((((((0::(Nil)) @ (Nil)) @ (0::(Nil))) @ (2::(Nil))) @ (0::(Nil))) @ (2::(Nil))) @ (4::(Nil))) @ (1::(Nil))) @ (8::(Nil))) @ (7::(Nil)))) = (0::(2::rotate (len ((0::(Nil)))) (((((((((0::(Nil)) @ (Nil)) @ (0::(Nil))) @ (2::(Nil))) @ (4::(Nil))) @ (1::(Nil))) @ (8::(Nil))) @ (7::(Nil))))))
Simplifying took 0.010826 seconds
Result : true
advanced_generalize done
=================================================
Progress: 394


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any3 : any
any4 : any
any5 : any
any6 : any
---------------------------------------
forall (any2:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any7(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any3 : any
any4 : any
any5 : any
any6 : any
any7 : any
---------------------------------------
forall (any2:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any4
intro any5
intro any6
intro any7
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg877:any list) (arg878:any list) (arg879:any list) (arg880:any list) (arg881:any list) (arg882:any list) (arg883:any list) (arg884:nat), rotate (arg884) (((((((((arg877 @ (any1::(Nil))) @ (any2::(Nil))) @ arg878) @ arg879) @ arg880) @ arg881) @ arg882) @ arg883)) = (any1::(any2::rotate (arg884) (((((((arg877 @ arg878) @ arg879) @ arg880) @ arg881) @ arg882) @ arg883))))
Model : any1: 6, any2: 0, arg877: (Nil), arg878: (Nil), arg879: (Nil), arg880: (Nil), arg881: (Nil), arg882: (Nil), arg883: (Nil), arg884: ZERO
Model : any1: 2, any2: 3, arg877: (Nil), arg878: (Nil), arg879: (Nil), arg880: (Nil), arg881: (Nil), arg882: (Nil), arg883: (6::(Nil)), arg884: ZERO
Model : any1: 2, any2: 3, arg877: (5::(Nil)), arg878: (Nil), arg879: (Nil), arg880: (1::(Nil)), arg881: (Nil), arg882: (Nil), arg883: (Nil), arg884: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) ((((((((((Nil) @ (6::(Nil))) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (6::(0::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) ((((((((((Nil) @ (2::(Nil))) @ (3::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (6::(Nil)))) = (2::(3::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (6::(Nil))))))
rotate (ZERO) ((((((((((5::(Nil)) @ (2::(Nil))) @ (3::(Nil))) @ (Nil)) @ (Nil)) @ (1::(Nil))) @ (Nil)) @ (Nil)) @ (Nil))) = (2::(3::rotate (ZERO) ((((((((5::(Nil)) @ (Nil)) @ (Nil)) @ (1::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)))))
Simplifying took 0.002360 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list2:any list), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Model : any1: 7, any2: 6, any3: 6, any4: 7, any5: 2, any6: 6, any7: 1, any8: 2, any_list2: (Nil)
Model : any1: 7, any2: 2, any3: 2, any4: 0, any5: 6, any6: 8, any7: 8, any8: 7, any_list2: (Nil)
Model : any1: 5, any2: 1, any3: 4, any4: 5, any5: 3, any6: 2, any7: 5, any8: 7, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (7::(Nil))) @ (6::(Nil))) @ (6::(Nil))) @ (7::(Nil))) @ (2::(Nil))) @ (6::(Nil))) @ (1::(Nil))) @ (2::(Nil)))) = (7::(6::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (6::(Nil))) @ (7::(Nil))) @ (2::(Nil))) @ (6::(Nil))) @ (1::(Nil))) @ (2::(Nil))))))
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (7::(Nil))) @ (2::(Nil))) @ (2::(Nil))) @ (0::(Nil))) @ (6::(Nil))) @ (8::(Nil))) @ (8::(Nil))) @ (7::(Nil)))) = (7::(2::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (2::(Nil))) @ (0::(Nil))) @ (6::(Nil))) @ (8::(Nil))) @ (8::(Nil))) @ (7::(Nil))))))
rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (5::(Nil))) @ (1::(Nil))) @ (4::(Nil))) @ (5::(Nil))) @ (3::(Nil))) @ (2::(Nil))) @ (5::(Nil))) @ (7::(Nil)))) = (5::(1::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (4::(Nil))) @ (5::(Nil))) @ (3::(Nil))) @ (2::(Nil))) @ (5::(Nil))) @ (7::(Nil))))))
Simplifying took 0.010100 seconds
Result : true
advanced_generalize done
=================================================
Progress: 395


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any2 : any
any3 : any
any4 : any
any5 : any
any6 : any
---------------------------------------
forall (any1:any) (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any7(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any2 : any
any3 : any
any4 : any
any5 : any
any6 : any
any7 : any
---------------------------------------
forall (any1:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any4
intro any5
intro any6
intro any7
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg885:any list) (arg886:any list) (arg887:any list) (arg888:any list) (arg889:any list) (arg890:any list) (arg891:any list) (arg892:nat), rotate (arg892) (((((((((arg885 @ (any1::(Nil))) @ (any2::(Nil))) @ arg886) @ arg887) @ arg888) @ arg889) @ arg890) @ arg891)) = (any1::(any2::rotate (arg892) (((((((arg885 @ arg886) @ arg887) @ arg888) @ arg889) @ arg890) @ arg891))))
Model : any1: 1, any2: 1, arg885: (Nil), arg886: (Nil), arg887: (Nil), arg888: (Nil), arg889: (Nil), arg890: (Nil), arg891: (Nil), arg892: ZERO
Model : any1: 0, any2: 0, arg885: (Nil), arg886: (Nil), arg887: (Nil), arg888: (0::(Nil)), arg889: (Nil), arg890: (Nil), arg891: (Nil), arg892: ZERO
Model : any1: 7, any2: 5, arg885: (Nil), arg886: (Nil), arg887: (Nil), arg888: (Nil), arg889: (Nil), arg890: (Nil), arg891: (Nil), arg892: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) ((((((((((Nil) @ (1::(Nil))) @ (1::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (1::(1::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) ((((((((((Nil) @ (0::(Nil))) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil))) = (0::(0::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (Nil)) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) ((((((((((Nil) @ (7::(Nil))) @ (5::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (7::(5::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
Simplifying took 0.001666 seconds
Result : true
advanced_generalize done


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any2 : any
any3 : any
any4 : any
any5 : any
any6 : any
any7 : any
---------------------------------------
forall (any1:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
=================================================
Progress: 396


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any2 : any
any3 : any
any4 : any
any5 : any
any6 : any
any7 : any
---------------------------------------
forall (any1:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (arg885:any list) (arg886:any list) (arg887:any list) (arg888:any list) (arg889:any list) (arg890:any list) (arg891:any list) (arg892:nat), rotate (arg892) (((((((((arg885 @ (any1::(Nil))) @ (any2::(Nil))) @ arg886) @ arg887) @ arg888) @ arg889) @ arg890) @ arg891)) = (any1::(any2::rotate (arg892) (((((((arg885 @ arg886) @ arg887) @ arg888) @ arg889) @ arg890) @ arg891))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (any_list7:any list) (nat1:nat), rotate (nat1) (((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7)) = (any1::(any2::rotate (nat1) (((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (any_list7:any list) (nat1:nat), rotate (nat1) (((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7)) = (any1::(any2::rotate (nat1) (((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:20)
=================================================
Progress: 397


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any2 : any
any3 : any
any4 : any
any5 : any
any6 : any
---------------------------------------
forall (any7:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> intro any7(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any2 : any
any3 : any
any4 : any
any5 : any
any6 : any
any7 : any
---------------------------------------
rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any4
intro any5
intro any6
intro any7
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg893:any list) (arg894:any list) (arg895:any list) (arg896:any list) (arg897:any list) (arg898:any list) (arg899:any list) (arg900:nat), rotate (arg900) (((((((((arg893 @ (any1::(Nil))) @ (any2::(Nil))) @ arg894) @ arg895) @ arg896) @ arg897) @ arg898) @ arg899)) = (any1::(any2::rotate (arg900) (((((((arg893 @ arg894) @ arg895) @ arg896) @ arg897) @ arg898) @ arg899))))
Model : any1: 0, any2: 2, arg893: (Nil), arg894: (Nil), arg895: (Nil), arg896: (0::(Nil)), arg897: (Nil), arg898: (Nil), arg899: (Nil), arg900: ZERO
Model : any1: 2, any2: 5, arg893: (Nil), arg894: (Nil), arg895: (Nil), arg896: (Nil), arg897: (Nil), arg898: (Nil), arg899: (Nil), arg900: ZERO
Model : any1: 8, any2: 5, arg893: (Nil), arg894: (Nil), arg895: (Nil), arg896: (Nil), arg897: (Nil), arg898: (6::(Nil)), arg899: (Nil), arg900: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) ((((((((((Nil) @ (0::(Nil))) @ (2::(Nil))) @ (Nil)) @ (Nil)) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil))) = (0::(2::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (Nil)) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) ((((((((((Nil) @ (2::(Nil))) @ (5::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (2::(5::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) ((((((((((Nil) @ (8::(Nil))) @ (5::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (6::(Nil))) @ (Nil))) = (8::(5::rotate (ZERO) ((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (6::(Nil))) @ (Nil)))))
Simplifying took 0.002054 seconds
Result : true
advanced_generalize done


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any2 : any
any3 : any
any4 : any
any5 : any
any6 : any
any7 : any
---------------------------------------
rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
=================================================
Progress: 398


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any_list1:any list), rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
any_list1 : any list
any8 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))))))
Inductive1 : any_list1 = (any8::any_list2)
any1 : any
any2 : any
any3 : any
any4 : any
any5 : any
any6 : any
any7 : any
---------------------------------------
rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

7 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (arg893:any list) (arg894:any list) (arg895:any list) (arg896:any list) (arg897:any list) (arg898:any list) (arg899:any list) (arg900:nat), rotate (arg900) (((((((((arg893 @ (any1::(Nil))) @ (any2::(Nil))) @ arg894) @ arg895) @ arg896) @ arg897) @ arg898) @ arg899)) = (any1::(any2::rotate (arg900) (((((((arg893 @ arg894) @ arg895) @ arg896) @ arg897) @ arg898) @ arg899))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (any_list7:any list) (nat1:nat), rotate (nat1) (((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7)) = (any1::(any2::rotate (nat1) (((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (any_list7:any list) (nat1:nat), rotate (nat1) (((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7)) = (any1::(any2::rotate (nat1) (((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:20)
=================================================
Progress: 399


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

0 goal(s) more...

7 conjecture(s) more...
>>> induction any_list1(rank : 18)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) (((((((((Nil) @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) (((((((Nil) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

1 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:18)
=================================================
Progress: 400


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

0 goal(s) more...

7 conjecture(s) more...
>>> induction any_list1(rank : 18)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) (((((((((Nil) @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) (((((((Nil) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

1 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:18)
=================================================
Progress: 401


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

0 goal(s) more...

7 conjecture(s) more...
>>> induction any_list1(rank : 18)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) (((((((((Nil) @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) (((((((Nil) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

1 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:18)
=================================================
Progress: 402


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

0 goal(s) more...

7 conjecture(s) more...
>>> induction any_list1(rank : 18)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) (((((((((Nil) @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) (((((((Nil) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

1 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:18)
=================================================
Progress: 403


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

0 goal(s) more...

7 conjecture(s) more...
>>> induction any_list1(rank : 18)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) (((((((((Nil) @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) (((((((Nil) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

1 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:18)
=================================================
Progress: 404


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

0 goal(s) more...

7 conjecture(s) more...
>>> induction any_list1(rank : 18)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) (((((((((Nil) @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) (((((((Nil) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

1 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:18)
=================================================
Progress: 405


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

0 goal(s) more...

7 conjecture(s) more...
>>> induction any_list1(rank : 18)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) (((((((((Nil) @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) (((((((Nil) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

1 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:18)
=================================================
Progress: 406


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

0 goal(s) more...

7 conjecture(s) more...
>>> induction any_list1(rank : 18)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) (((((((((Nil) @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) (((((((Nil) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

1 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:18)
=================================================
Progress: 407


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

0 goal(s) more...

7 conjecture(s) more...
>>> induction any_list1(rank : 18)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) (((((((((Nil) @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) (((((((Nil) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

1 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:18)
=================================================
Progress: 408


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

0 goal(s) more...

7 conjecture(s) more...
>>> induction any_list1(rank : 18)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) (((((((((Nil) @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) (((((((Nil) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

1 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:18)
=================================================
Progress: 409


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

0 goal(s) more...

7 conjecture(s) more...
>>> induction any_list1(rank : 18)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) (((((((((Nil) @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) (((((((Nil) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

1 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:18)
=================================================
Progress: 410


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

0 goal(s) more...

7 conjecture(s) more...
>>> induction any_list1(rank : 18)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) (((((((((Nil) @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) (((((((Nil) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

1 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:18)
=================================================
Progress: 411


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (nat1:nat), rotate (nat1) ((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4)) = (any1::(any2::rotate (nat1) ((((any_list1 @ any_list2) @ any_list3) @ any_list4))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
any_list4 : any list
Base4 : any_list4 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (nat1:nat), rotate (nat1) ((any1::(any2::(Nil)))) = (any1::(any2::rotate (nat1) ((Nil))))

4 goal(s) more...

5 conjecture(s) more...
>>> induction nat1(rank : 18)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (nat1:nat), rotate (nat1) ((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4)) = (any1::(any2::rotate (nat1) ((((any_list1 @ any_list2) @ any_list3) @ any_list4))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
any_list4 : any list
Base4 : any_list4 = (Nil)
nat1 : nat
Base5 : nat1 = ZERO
---------------------------------------
forall (any1:any) (any2:any), rotate (ZERO) ((any1::(any2::(Nil)))) = (any1::(any2::rotate (ZERO) ((Nil))))

5 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:17)
=================================================
Progress: 412


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (nat1:nat), rotate (nat1) ((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4)) = (any1::(any2::rotate (nat1) ((((any_list1 @ any_list2) @ any_list3) @ any_list4))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
any_list4 : any list
Base4 : any_list4 = (Nil)
nat1 : nat
Base5 : nat1 = ZERO
---------------------------------------
forall (any1:any) (any2:any), rotate (ZERO) ((any1::(any2::(Nil)))) = (any1::(any2::rotate (ZERO) ((Nil))))

5 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (nat1:nat), rotate (nat1) ((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4)) = (any1::(any2::rotate (nat1) ((((any_list1 @ any_list2) @ any_list3) @ any_list4))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
any_list4 : any list
Base4 : any_list4 = (Nil)
nat1 : nat
nat2 : nat
IH1 : forall (any1:any) (any2:any), rotate (nat2) ((any1::(any2::(Nil)))) = (any1::(any2::rotate (nat2) ((Nil))))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
forall (any1:any) (any2:any), rotate (SUCC (nat2)) ((any1::(any2::(Nil)))) = (any1::(any2::rotate (SUCC (nat2)) ((Nil))))

4 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:17)
=================================================
Progress: 413


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (nat1:nat), rotate (nat1) ((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4)) = (any1::(any2::rotate (nat1) ((((any_list1 @ any_list2) @ any_list3) @ any_list4))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
any_list4 : any list
Base4 : any_list4 = (Nil)
nat1 : nat
nat2 : nat
IH1 : forall (any1:any) (any2:any), rotate (nat2) ((any1::(any2::(Nil)))) = (any1::(any2::rotate (nat2) ((Nil))))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
forall (any1:any) (any2:any), rotate (SUCC (nat2)) ((any1::(any2::(Nil)))) = (any1::(any2::rotate (SUCC (nat2)) ((Nil))))

4 goal(s) more...

5 conjecture(s) more...
>>> simpl in goal(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (nat1:nat), rotate (nat1) ((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4)) = (any1::(any2::rotate (nat1) ((((any_list1 @ any_list2) @ any_list3) @ any_list4))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
any_list4 : any list
Base4 : any_list4 = (Nil)
nat1 : nat
nat2 : nat
IH1 : forall (any1:any) (any2:any), rotate (nat2) ((any1::(any2::(Nil)))) = (any1::(any2::rotate (nat2) ((Nil))))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
forall (any1:any) (any2:any), rotate (nat2) ((any2::(any1::(Nil)))) = (any1::(any2::(Nil)))

4 goal(s) more...

5 conjecture(s) more...
Tactic List : 3
intro any1(rank:17)
intro any2(rank:17)
rewrite IH1 in goal at 0(rank:33)
=================================================
Progress: 414


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (nat1:nat), rotate (nat1) ((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4)) = (any1::(any2::rotate (nat1) ((((any_list1 @ any_list2) @ any_list3) @ any_list4))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
any_list4 : any list
Base4 : any_list4 = (Nil)
nat1 : nat
nat2 : nat
IH1 : forall (any1:any) (any2:any), rotate (nat2) ((any1::(any2::(Nil)))) = (any1::(any2::rotate (nat2) ((Nil))))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
forall (any1:any) (any2:any), rotate (nat2) ((any2::(any1::(Nil)))) = (any1::(any2::(Nil)))

4 goal(s) more...

5 conjecture(s) more...
>>> intro any1(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (nat1:nat), rotate (nat1) ((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4)) = (any1::(any2::rotate (nat1) ((((any_list1 @ any_list2) @ any_list3) @ any_list4))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
any_list4 : any list
Base4 : any_list4 = (Nil)
nat1 : nat
nat2 : nat
IH1 : forall (any1:any) (any2:any), rotate (nat2) ((any1::(any2::(Nil)))) = (any1::(any2::rotate (nat2) ((Nil))))
Inductive1 : nat1 = SUCC (nat2)
any1 : any
---------------------------------------
forall (any2:any), rotate (nat2) ((any2::(any1::(Nil)))) = (any1::(any2::(Nil)))

4 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro any2(rank:17)
rewrite IH1 in goal at 0(rank:33)
=================================================
Progress: 415


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (nat1:nat), rotate (nat1) ((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4)) = (any1::(any2::rotate (nat1) ((((any_list1 @ any_list2) @ any_list3) @ any_list4))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
any_list4 : any list
Base4 : any_list4 = (Nil)
nat1 : nat
nat2 : nat
IH1 : forall (any1:any) (any2:any), rotate (nat2) ((any1::(any2::(Nil)))) = (any1::(any2::rotate (nat2) ((Nil))))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
forall (any1:any) (any2:any), rotate (nat2) ((any2::(any1::(Nil)))) = (any1::(any2::(Nil)))

4 goal(s) more...

5 conjecture(s) more...
>>> intro any2(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (nat1:nat), rotate (nat1) ((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4)) = (any1::(any2::rotate (nat1) ((((any_list1 @ any_list2) @ any_list3) @ any_list4))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
any_list4 : any list
Base4 : any_list4 = (Nil)
nat1 : nat
nat2 : nat
IH1 : forall (any1:any) (any2:any), rotate (nat2) ((any1::(any2::(Nil)))) = (any1::(any2::rotate (nat2) ((Nil))))
Inductive1 : nat1 = SUCC (nat2)
any2 : any
---------------------------------------
forall (any1:any), rotate (nat2) ((any2::(any1::(Nil)))) = (any1::(any2::(Nil)))

4 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:17)
=================================================
Progress: 416


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (nat1:nat), rotate (nat1) ((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4)) = (any1::(any2::rotate (nat1) ((((any_list1 @ any_list2) @ any_list3) @ any_list4))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
any_list4 : any list
Base4 : any_list4 = (Nil)
nat1 : nat
nat2 : nat
IH1 : forall (any1:any) (any2:any), rotate (nat2) ((any1::(any2::(Nil)))) = (any1::(any2::rotate (nat2) ((Nil))))
Inductive1 : nat1 = SUCC (nat2)
any1 : any
---------------------------------------
forall (any2:any), rotate (nat2) ((any2::(any1::(Nil)))) = (any1::(any2::(Nil)))

4 goal(s) more...

5 conjecture(s) more...
>>> intro any2(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (nat1:nat), rotate (nat1) ((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4)) = (any1::(any2::rotate (nat1) ((((any_list1 @ any_list2) @ any_list3) @ any_list4))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
any_list4 : any list
Base4 : any_list4 = (Nil)
nat1 : nat
nat2 : nat
IH1 : forall (any1:any) (any2:any), rotate (nat2) ((any1::(any2::(Nil)))) = (any1::(any2::rotate (nat2) ((Nil))))
Inductive1 : nat1 = SUCC (nat2)
any1 : any
any2 : any
---------------------------------------
rotate (nat2) ((any2::(any1::(Nil)))) = (any1::(any2::(Nil)))

4 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:17)
=================================================
Progress: 417


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (nat1:nat), rotate (nat1) ((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4)) = (any1::(any2::rotate (nat1) ((((any_list1 @ any_list2) @ any_list3) @ any_list4))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
any_list4 : any list
Base4 : any_list4 = (Nil)
nat1 : nat
nat2 : nat
IH1 : forall (any1:any) (any2:any), rotate (nat2) ((any1::(any2::(Nil)))) = (any1::(any2::rotate (nat2) ((Nil))))
Inductive1 : nat1 = SUCC (nat2)
any2 : any
---------------------------------------
forall (any1:any), rotate (nat2) ((any2::(any1::(Nil)))) = (any1::(any2::(Nil)))

4 goal(s) more...

5 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (nat1:nat), rotate (nat1) ((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4)) = (any1::(any2::rotate (nat1) ((((any_list1 @ any_list2) @ any_list3) @ any_list4))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
any_list4 : any list
Base4 : any_list4 = (Nil)
nat1 : nat
nat2 : nat
IH1 : forall (any1:any) (any2:any), rotate (nat2) ((any1::(any2::(Nil)))) = (any1::(any2::rotate (nat2) ((Nil))))
Inductive1 : nat1 = SUCC (nat2)
any2 : any
---------------------------------------
forall (any1:any), (any2::(any1::rotate (nat2) ((Nil)))) = (any1::(any2::(Nil)))

4 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (nat2:nat), (any2::(any1::rotate (nat2) ((Nil)))) = (any1::(any2::(Nil)))
Model : any1: 1, any2: 7, nat2: ZERO
Model : any1: 6, any2: 2, nat2: SUCC (ZERO)
Model : any1: 3, any2: 7, nat2: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
(7::(1::rotate (ZERO) ((Nil)))) = (1::(7::(Nil)))
(2::(6::rotate (SUCC (ZERO)) ((Nil)))) = (6::(2::(Nil)))
(7::(3::rotate (ZERO) ((Nil)))) = (3::(7::(Nil)))
Simplifying took 0.000145 seconds
Result : false
asdf
advanced_generalize done
=================================================
Progress: 418


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (nat1:nat), rotate (nat1) ((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4)) = (any1::(any2::rotate (nat1) ((((any_list1 @ any_list2) @ any_list3) @ any_list4))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
any_list4 : any list
Base4 : any_list4 = (Nil)
nat1 : nat
nat2 : nat
IH1 : forall (any1:any) (any2:any), rotate (nat2) ((any1::(any2::(Nil)))) = (any1::(any2::rotate (nat2) ((Nil))))
Inductive1 : nat1 = SUCC (nat2)
any1 : any
any2 : any
---------------------------------------
rotate (nat2) ((any2::(any1::(Nil)))) = (any1::(any2::(Nil)))

4 goal(s) more...

5 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (nat1:nat), rotate (nat1) ((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4)) = (any1::(any2::rotate (nat1) ((((any_list1 @ any_list2) @ any_list3) @ any_list4))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
any_list4 : any list
Base4 : any_list4 = (Nil)
nat1 : nat
nat2 : nat
IH1 : forall (any1:any) (any2:any), rotate (nat2) ((any1::(any2::(Nil)))) = (any1::(any2::rotate (nat2) ((Nil))))
Inductive1 : nat1 = SUCC (nat2)
any1 : any
any2 : any
---------------------------------------
(any2::(any1::rotate (nat2) ((Nil)))) = (any1::(any2::(Nil)))

4 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (nat2:nat), (any2::(any1::rotate (nat2) ((Nil)))) = (any1::(any2::(Nil)))
Model : any1: 7, any2: 3, nat2: ZERO
Model : any1: 4, any2: 5, nat2: ZERO
Model : any1: 6, any2: 0, nat2: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
(3::(7::rotate (ZERO) ((Nil)))) = (7::(3::(Nil)))
(5::(4::rotate (ZERO) ((Nil)))) = (4::(5::(Nil)))
(0::(6::rotate (ZERO) ((Nil)))) = (6::(0::(Nil)))
Simplifying took 0.000136 seconds
Result : false
asdf
advanced_generalize done
=================================================
Progress: 419


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (nat1:nat), rotate (nat1) ((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4)) = (any1::(any2::rotate (nat1) ((((any_list1 @ any_list2) @ any_list3) @ any_list4))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
any_list4 : any list
Base4 : any_list4 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (nat1:nat), rotate (nat1) ((any1::(any2::(Nil)))) = (any1::(any2::rotate (nat1) ((Nil))))

4 goal(s) more...

5 conjecture(s) more...
>>> induction nat1(rank : 18)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (nat1:nat), rotate (nat1) ((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4)) = (any1::(any2::rotate (nat1) ((((any_list1 @ any_list2) @ any_list3) @ any_list4))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
any_list4 : any list
Base4 : any_list4 = (Nil)
nat1 : nat
Base5 : nat1 = ZERO
---------------------------------------
forall (any1:any) (any2:any), rotate (ZERO) ((any1::(any2::(Nil)))) = (any1::(any2::rotate (ZERO) ((Nil))))

5 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
reflexivity(rank:17)
=================================================
Progress: 420


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (nat1:nat), rotate (nat1) ((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4)) = (any1::(any2::rotate (nat1) ((((any_list1 @ any_list2) @ any_list3) @ any_list4))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
any_list4 : any list
Base4 : any_list4 = (Nil)
nat1 : nat
Base5 : nat1 = ZERO
---------------------------------------
forall (any1:any) (any2:any), rotate (ZERO) ((any1::(any2::(Nil)))) = (any1::(any2::rotate (ZERO) ((Nil))))

5 goal(s) more...

5 conjecture(s) more...
>>> reflexivity(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (nat1:nat), rotate (nat1) ((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4)) = (any1::(any2::rotate (nat1) ((((any_list1 @ any_list2) @ any_list3) @ any_list4))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
any_list4 : any list
Base4 : any_list4 = (Nil)
nat1 : nat
nat2 : nat
IH1 : forall (any1:any) (any2:any), rotate (nat2) ((any1::(any2::(Nil)))) = (any1::(any2::rotate (nat2) ((Nil))))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
forall (any1:any) (any2:any), rotate (SUCC (nat2)) ((any1::(any2::(Nil)))) = (any1::(any2::rotate (SUCC (nat2)) ((Nil))))

4 goal(s) more...

5 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:17)
=================================================
Progress: 421


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (nat1:nat), rotate (nat1) ((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4)) = (any1::(any2::rotate (nat1) ((((any_list1 @ any_list2) @ any_list3) @ any_list4))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
any_list4 : any list
Base4 : any_list4 = (Nil)
nat1 : nat
nat2 : nat
IH1 : forall (any1:any) (any2:any), rotate (nat2) ((any1::(any2::(Nil)))) = (any1::(any2::rotate (nat2) ((Nil))))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
forall (any1:any) (any2:any), rotate (SUCC (nat2)) ((any1::(any2::(Nil)))) = (any1::(any2::rotate (SUCC (nat2)) ((Nil))))

4 goal(s) more...

5 conjecture(s) more...
>>> simpl in goal(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (nat1:nat), rotate (nat1) ((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4)) = (any1::(any2::rotate (nat1) ((((any_list1 @ any_list2) @ any_list3) @ any_list4))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
any_list4 : any list
Base4 : any_list4 = (Nil)
nat1 : nat
nat2 : nat
IH1 : forall (any1:any) (any2:any), rotate (nat2) ((any1::(any2::(Nil)))) = (any1::(any2::rotate (nat2) ((Nil))))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
forall (any1:any) (any2:any), rotate (nat2) ((any2::(any1::(Nil)))) = (any1::(any2::(Nil)))

4 goal(s) more...

5 conjecture(s) more...
Tactic List : 3
intro any1(rank:17)
intro any2(rank:17)
rewrite IH1 in goal at 0(rank:33)
=================================================
Progress: 422


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (nat1:nat), rotate (nat1) ((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4)) = (any1::(any2::rotate (nat1) ((((any_list1 @ any_list2) @ any_list3) @ any_list4))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
any_list4 : any list
Base4 : any_list4 = (Nil)
nat1 : nat
nat2 : nat
IH1 : forall (any1:any) (any2:any), rotate (nat2) ((any1::(any2::(Nil)))) = (any1::(any2::rotate (nat2) ((Nil))))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
forall (any1:any) (any2:any), rotate (nat2) ((any2::(any1::(Nil)))) = (any1::(any2::(Nil)))

4 goal(s) more...

5 conjecture(s) more...
>>> intro any1(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (nat1:nat), rotate (nat1) ((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4)) = (any1::(any2::rotate (nat1) ((((any_list1 @ any_list2) @ any_list3) @ any_list4))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
any_list4 : any list
Base4 : any_list4 = (Nil)
nat1 : nat
nat2 : nat
IH1 : forall (any1:any) (any2:any), rotate (nat2) ((any1::(any2::(Nil)))) = (any1::(any2::rotate (nat2) ((Nil))))
Inductive1 : nat1 = SUCC (nat2)
any1 : any
---------------------------------------
forall (any2:any), rotate (nat2) ((any2::(any1::(Nil)))) = (any1::(any2::(Nil)))

4 goal(s) more...

5 conjecture(s) more...
Tactic List : 2
intro any2(rank:17)
rewrite IH1 in goal at 0(rank:33)
=================================================
Progress: 423


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (nat1:nat), rotate (nat1) ((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4)) = (any1::(any2::rotate (nat1) ((((any_list1 @ any_list2) @ any_list3) @ any_list4))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
any_list4 : any list
Base4 : any_list4 = (Nil)
nat1 : nat
nat2 : nat
IH1 : forall (any1:any) (any2:any), rotate (nat2) ((any1::(any2::(Nil)))) = (any1::(any2::rotate (nat2) ((Nil))))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
forall (any1:any) (any2:any), rotate (nat2) ((any2::(any1::(Nil)))) = (any1::(any2::(Nil)))

4 goal(s) more...

5 conjecture(s) more...
>>> intro any2(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (nat1:nat), rotate (nat1) ((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4)) = (any1::(any2::rotate (nat1) ((((any_list1 @ any_list2) @ any_list3) @ any_list4))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
any_list4 : any list
Base4 : any_list4 = (Nil)
nat1 : nat
nat2 : nat
IH1 : forall (any1:any) (any2:any), rotate (nat2) ((any1::(any2::(Nil)))) = (any1::(any2::rotate (nat2) ((Nil))))
Inductive1 : nat1 = SUCC (nat2)
any2 : any
---------------------------------------
forall (any1:any), rotate (nat2) ((any2::(any1::(Nil)))) = (any1::(any2::(Nil)))

4 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:17)
=================================================
Progress: 424


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (nat1:nat), rotate (nat1) ((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4)) = (any1::(any2::rotate (nat1) ((((any_list1 @ any_list2) @ any_list3) @ any_list4))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
any_list4 : any list
Base4 : any_list4 = (Nil)
nat1 : nat
nat2 : nat
IH1 : forall (any1:any) (any2:any), rotate (nat2) ((any1::(any2::(Nil)))) = (any1::(any2::rotate (nat2) ((Nil))))
Inductive1 : nat1 = SUCC (nat2)
any1 : any
---------------------------------------
forall (any2:any), rotate (nat2) ((any2::(any1::(Nil)))) = (any1::(any2::(Nil)))

4 goal(s) more...

5 conjecture(s) more...
>>> intro any2(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (nat1:nat), rotate (nat1) ((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4)) = (any1::(any2::rotate (nat1) ((((any_list1 @ any_list2) @ any_list3) @ any_list4))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
any_list4 : any list
Base4 : any_list4 = (Nil)
nat1 : nat
nat2 : nat
IH1 : forall (any1:any) (any2:any), rotate (nat2) ((any1::(any2::(Nil)))) = (any1::(any2::rotate (nat2) ((Nil))))
Inductive1 : nat1 = SUCC (nat2)
any1 : any
any2 : any
---------------------------------------
rotate (nat2) ((any2::(any1::(Nil)))) = (any1::(any2::(Nil)))

4 goal(s) more...

5 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:17)
=================================================
Progress: 425


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (nat1:nat), rotate (nat1) ((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4)) = (any1::(any2::rotate (nat1) ((((any_list1 @ any_list2) @ any_list3) @ any_list4))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
any_list4 : any list
Base4 : any_list4 = (Nil)
nat1 : nat
nat2 : nat
IH1 : forall (any1:any) (any2:any), rotate (nat2) ((any1::(any2::(Nil)))) = (any1::(any2::rotate (nat2) ((Nil))))
Inductive1 : nat1 = SUCC (nat2)
any2 : any
---------------------------------------
forall (any1:any), rotate (nat2) ((any2::(any1::(Nil)))) = (any1::(any2::(Nil)))

4 goal(s) more...

5 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (nat1:nat), rotate (nat1) ((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4)) = (any1::(any2::rotate (nat1) ((((any_list1 @ any_list2) @ any_list3) @ any_list4))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
any_list4 : any list
Base4 : any_list4 = (Nil)
nat1 : nat
nat2 : nat
IH1 : forall (any1:any) (any2:any), rotate (nat2) ((any1::(any2::(Nil)))) = (any1::(any2::rotate (nat2) ((Nil))))
Inductive1 : nat1 = SUCC (nat2)
any2 : any
---------------------------------------
forall (any1:any), (any2::(any1::rotate (nat2) ((Nil)))) = (any1::(any2::(Nil)))

4 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (nat2:nat), (any2::(any1::rotate (nat2) ((Nil)))) = (any1::(any2::(Nil)))
Model : any1: 2, any2: 1, nat2: ZERO
Model : any1: 1, any2: 7, nat2: ZERO
Model : any1: 1, any2: 1, nat2: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
(1::(2::rotate (ZERO) ((Nil)))) = (2::(1::(Nil)))
(7::(1::rotate (ZERO) ((Nil)))) = (1::(7::(Nil)))
(1::(1::rotate (ZERO) ((Nil)))) = (1::(1::(Nil)))
Simplifying took 0.000112 seconds
Result : false
asdf
advanced_generalize done
=================================================
Progress: 426


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (nat1:nat), rotate (nat1) ((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4)) = (any1::(any2::rotate (nat1) ((((any_list1 @ any_list2) @ any_list3) @ any_list4))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
any_list4 : any list
Base4 : any_list4 = (Nil)
nat1 : nat
nat2 : nat
IH1 : forall (any1:any) (any2:any), rotate (nat2) ((any1::(any2::(Nil)))) = (any1::(any2::rotate (nat2) ((Nil))))
Inductive1 : nat1 = SUCC (nat2)
any1 : any
any2 : any
---------------------------------------
rotate (nat2) ((any2::(any1::(Nil)))) = (any1::(any2::(Nil)))

4 goal(s) more...

5 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 17)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (nat1:nat), rotate (nat1) ((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4)) = (any1::(any2::rotate (nat1) ((((any_list1 @ any_list2) @ any_list3) @ any_list4))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
any_list4 : any list
Base4 : any_list4 = (Nil)
nat1 : nat
nat2 : nat
IH1 : forall (any1:any) (any2:any), rotate (nat2) ((any1::(any2::(Nil)))) = (any1::(any2::rotate (nat2) ((Nil))))
Inductive1 : nat1 = SUCC (nat2)
any1 : any
any2 : any
---------------------------------------
(any2::(any1::rotate (nat2) ((Nil)))) = (any1::(any2::(Nil)))

4 goal(s) more...

5 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (nat2:nat), (any2::(any1::rotate (nat2) ((Nil)))) = (any1::(any2::(Nil)))
Model : any1: 1, any2: 7, nat2: ZERO
Model : any1: 0, any2: 0, nat2: ZERO
Model : any1: 4, any2: 7, nat2: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
(7::(1::rotate (ZERO) ((Nil)))) = (1::(7::(Nil)))
(0::(0::rotate (ZERO) ((Nil)))) = (0::(0::(Nil)))
(7::(4::rotate (ZERO) ((Nil)))) = (4::(7::(Nil)))
Simplifying took 0.000130 seconds
Result : false
asdf
advanced_generalize done
=================================================
Progress: 427


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) ((any1::(any2::((any_list3 @ any_list4) @ any_list5)))) = (any1::(any2::rotate (nat1) (((any_list3 @ any_list4) @ any_list5))))

2 goal(s) more...

6 conjecture(s) more...
>>> induction any_list3(rank : 18)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) ((any1::(any2::(((Nil) @ any_list4) @ any_list5)))) = (any1::(any2::rotate (nat1) ((((Nil) @ any_list4) @ any_list5))))

3 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:18)
=================================================
Progress: 428


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) ((any1::(any2::((any_list3 @ any_list4) @ any_list5)))) = (any1::(any2::rotate (nat1) (((any_list3 @ any_list4) @ any_list5))))

2 goal(s) more...

6 conjecture(s) more...
>>> induction any_list3(rank : 18)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) ((any1::(any2::(((Nil) @ any_list4) @ any_list5)))) = (any1::(any2::rotate (nat1) ((((Nil) @ any_list4) @ any_list5))))

3 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:18)
=================================================
Progress: 429


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) ((any1::(any2::((any_list3 @ any_list4) @ any_list5)))) = (any1::(any2::rotate (nat1) (((any_list3 @ any_list4) @ any_list5))))

2 goal(s) more...

6 conjecture(s) more...
>>> induction any_list3(rank : 18)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) ((any1::(any2::(((Nil) @ any_list4) @ any_list5)))) = (any1::(any2::rotate (nat1) ((((Nil) @ any_list4) @ any_list5))))

3 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:18)
=================================================
Progress: 430


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) ((any1::(any2::((any_list3 @ any_list4) @ any_list5)))) = (any1::(any2::rotate (nat1) (((any_list3 @ any_list4) @ any_list5))))

2 goal(s) more...

6 conjecture(s) more...
>>> induction any_list3(rank : 18)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) ((any1::(any2::(((Nil) @ any_list4) @ any_list5)))) = (any1::(any2::rotate (nat1) ((((Nil) @ any_list4) @ any_list5))))

3 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:18)
=================================================
Progress: 431


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) ((any1::(any2::((any_list3 @ any_list4) @ any_list5)))) = (any1::(any2::rotate (nat1) (((any_list3 @ any_list4) @ any_list5))))

2 goal(s) more...

6 conjecture(s) more...
>>> induction any_list3(rank : 18)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) ((any1::(any2::(((Nil) @ any_list4) @ any_list5)))) = (any1::(any2::rotate (nat1) ((((Nil) @ any_list4) @ any_list5))))

3 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:18)
=================================================
Progress: 432


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) (((((((((Nil) @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) (((((((Nil) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

1 goal(s) more...

7 conjecture(s) more...
>>> simpl in goal(rank : 18)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((any1::(any2::((((any_list2 @ any_list3) @ any_list4) @ any_list5) @ any_list6)))) = (any1::(any2::rotate (nat1) (((((any_list2 @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

1 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:19)
=================================================
Progress: 433


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) (((((((((Nil) @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) (((((((Nil) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

1 goal(s) more...

7 conjecture(s) more...
>>> simpl in goal(rank : 18)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((any1::(any2::((((any_list2 @ any_list3) @ any_list4) @ any_list5) @ any_list6)))) = (any1::(any2::rotate (nat1) (((((any_list2 @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

1 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:19)
=================================================
Progress: 434


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) (((((((((Nil) @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) (((((((Nil) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

1 goal(s) more...

7 conjecture(s) more...
>>> simpl in goal(rank : 18)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((any1::(any2::((((any_list2 @ any_list3) @ any_list4) @ any_list5) @ any_list6)))) = (any1::(any2::rotate (nat1) (((((any_list2 @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

1 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:19)
=================================================
Progress: 435


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) (((((((((Nil) @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) (((((((Nil) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

1 goal(s) more...

7 conjecture(s) more...
>>> simpl in goal(rank : 18)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((any1::(any2::((((any_list2 @ any_list3) @ any_list4) @ any_list5) @ any_list6)))) = (any1::(any2::rotate (nat1) (((((any_list2 @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

1 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:19)
=================================================
Progress: 436


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) (((((((((Nil) @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) (((((((Nil) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

1 goal(s) more...

7 conjecture(s) more...
>>> simpl in goal(rank : 18)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((any1::(any2::((((any_list2 @ any_list3) @ any_list4) @ any_list5) @ any_list6)))) = (any1::(any2::rotate (nat1) (((((any_list2 @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

1 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:19)
=================================================
Progress: 437


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) (((((((((Nil) @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) (((((((Nil) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

1 goal(s) more...

7 conjecture(s) more...
>>> simpl in goal(rank : 18)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((any1::(any2::((((any_list2 @ any_list3) @ any_list4) @ any_list5) @ any_list6)))) = (any1::(any2::rotate (nat1) (((((any_list2 @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

1 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:19)
=================================================
Progress: 438


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) (((((((((Nil) @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) (((((((Nil) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

1 goal(s) more...

7 conjecture(s) more...
>>> simpl in goal(rank : 18)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((any1::(any2::((((any_list2 @ any_list3) @ any_list4) @ any_list5) @ any_list6)))) = (any1::(any2::rotate (nat1) (((((any_list2 @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

1 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:19)
=================================================
Progress: 439


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) (((((((((Nil) @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) (((((((Nil) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

1 goal(s) more...

7 conjecture(s) more...
>>> simpl in goal(rank : 18)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((any1::(any2::((((any_list2 @ any_list3) @ any_list4) @ any_list5) @ any_list6)))) = (any1::(any2::rotate (nat1) (((((any_list2 @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

1 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:19)
=================================================
Progress: 440


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) (((((((((Nil) @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) (((((((Nil) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

1 goal(s) more...

7 conjecture(s) more...
>>> simpl in goal(rank : 18)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((any1::(any2::((((any_list2 @ any_list3) @ any_list4) @ any_list5) @ any_list6)))) = (any1::(any2::rotate (nat1) (((((any_list2 @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

1 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:19)
=================================================
Progress: 441


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) (((((((((Nil) @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) (((((((Nil) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

1 goal(s) more...

7 conjecture(s) more...
>>> simpl in goal(rank : 18)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((any1::(any2::((((any_list2 @ any_list3) @ any_list4) @ any_list5) @ any_list6)))) = (any1::(any2::rotate (nat1) (((((any_list2 @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

1 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:19)
=================================================
Progress: 442


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) (((((((((Nil) @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) (((((((Nil) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

1 goal(s) more...

7 conjecture(s) more...
>>> simpl in goal(rank : 18)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((any1::(any2::((((any_list2 @ any_list3) @ any_list4) @ any_list5) @ any_list6)))) = (any1::(any2::rotate (nat1) (((((any_list2 @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

1 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:19)
=================================================
Progress: 443


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) (((((((((Nil) @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) (((((((Nil) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

1 goal(s) more...

7 conjecture(s) more...
>>> simpl in goal(rank : 18)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((any1::(any2::((((any_list2 @ any_list3) @ any_list4) @ any_list5) @ any_list6)))) = (any1::(any2::rotate (nat1) (((((any_list2 @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

1 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:19)
=================================================
Progress: 444


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) ((any1::(any2::(((Nil) @ any_list4) @ any_list5)))) = (any1::(any2::rotate (nat1) ((((Nil) @ any_list4) @ any_list5))))

3 goal(s) more...

6 conjecture(s) more...
>>> simpl in goal(rank : 18)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) ((any1::(any2::(any_list4 @ any_list5)))) = (any1::(any2::rotate (nat1) ((any_list4 @ any_list5))))

3 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:19)
=================================================
Progress: 445


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) ((any1::(any2::(((Nil) @ any_list4) @ any_list5)))) = (any1::(any2::rotate (nat1) ((((Nil) @ any_list4) @ any_list5))))

3 goal(s) more...

6 conjecture(s) more...
>>> simpl in goal(rank : 18)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) ((any1::(any2::(any_list4 @ any_list5)))) = (any1::(any2::rotate (nat1) ((any_list4 @ any_list5))))

3 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:19)
=================================================
Progress: 446


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) ((any1::(any2::(((Nil) @ any_list4) @ any_list5)))) = (any1::(any2::rotate (nat1) ((((Nil) @ any_list4) @ any_list5))))

3 goal(s) more...

6 conjecture(s) more...
>>> simpl in goal(rank : 18)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) ((any1::(any2::(any_list4 @ any_list5)))) = (any1::(any2::rotate (nat1) ((any_list4 @ any_list5))))

3 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:19)
=================================================
Progress: 447


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) ((any1::(any2::(((Nil) @ any_list4) @ any_list5)))) = (any1::(any2::rotate (nat1) ((((Nil) @ any_list4) @ any_list5))))

3 goal(s) more...

6 conjecture(s) more...
>>> simpl in goal(rank : 18)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) ((any1::(any2::(any_list4 @ any_list5)))) = (any1::(any2::rotate (nat1) ((any_list4 @ any_list5))))

3 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:19)
=================================================
Progress: 448


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) ((any1::(any2::(((Nil) @ any_list4) @ any_list5)))) = (any1::(any2::rotate (nat1) ((((Nil) @ any_list4) @ any_list5))))

3 goal(s) more...

6 conjecture(s) more...
>>> simpl in goal(rank : 18)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) ((any1::(any2::(any_list4 @ any_list5)))) = (any1::(any2::rotate (nat1) ((any_list4 @ any_list5))))

3 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list4(rank:19)
=================================================
Progress: 449


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((any1::(any2::((((any_list2 @ any_list3) @ any_list4) @ any_list5) @ any_list6)))) = (any1::(any2::rotate (nat1) (((((any_list2 @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

1 goal(s) more...

7 conjecture(s) more...
>>> induction any_list2(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((any1::(any2::(((((Nil) @ any_list3) @ any_list4) @ any_list5) @ any_list6)))) = (any1::(any2::rotate (nat1) ((((((Nil) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

2 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:19)
=================================================
Progress: 450


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((any1::(any2::((((any_list2 @ any_list3) @ any_list4) @ any_list5) @ any_list6)))) = (any1::(any2::rotate (nat1) (((((any_list2 @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

1 goal(s) more...

7 conjecture(s) more...
>>> induction any_list2(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((any1::(any2::(((((Nil) @ any_list3) @ any_list4) @ any_list5) @ any_list6)))) = (any1::(any2::rotate (nat1) ((((((Nil) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

2 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:19)
=================================================
Progress: 451


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((any1::(any2::((((any_list2 @ any_list3) @ any_list4) @ any_list5) @ any_list6)))) = (any1::(any2::rotate (nat1) (((((any_list2 @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

1 goal(s) more...

7 conjecture(s) more...
>>> induction any_list2(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((any1::(any2::(((((Nil) @ any_list3) @ any_list4) @ any_list5) @ any_list6)))) = (any1::(any2::rotate (nat1) ((((((Nil) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

2 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:19)
=================================================
Progress: 452


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((any1::(any2::((((any_list2 @ any_list3) @ any_list4) @ any_list5) @ any_list6)))) = (any1::(any2::rotate (nat1) (((((any_list2 @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

1 goal(s) more...

7 conjecture(s) more...
>>> induction any_list2(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((any1::(any2::(((((Nil) @ any_list3) @ any_list4) @ any_list5) @ any_list6)))) = (any1::(any2::rotate (nat1) ((((((Nil) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

2 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:19)
=================================================
Progress: 453


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((any1::(any2::((((any_list2 @ any_list3) @ any_list4) @ any_list5) @ any_list6)))) = (any1::(any2::rotate (nat1) (((((any_list2 @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

1 goal(s) more...

7 conjecture(s) more...
>>> induction any_list2(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((any1::(any2::(((((Nil) @ any_list3) @ any_list4) @ any_list5) @ any_list6)))) = (any1::(any2::rotate (nat1) ((((((Nil) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

2 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:19)
=================================================
Progress: 454


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((any1::(any2::((((any_list2 @ any_list3) @ any_list4) @ any_list5) @ any_list6)))) = (any1::(any2::rotate (nat1) (((((any_list2 @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

1 goal(s) more...

7 conjecture(s) more...
>>> induction any_list2(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((any1::(any2::(((((Nil) @ any_list3) @ any_list4) @ any_list5) @ any_list6)))) = (any1::(any2::rotate (nat1) ((((((Nil) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

2 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:19)
=================================================
Progress: 455


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((any1::(any2::((((any_list2 @ any_list3) @ any_list4) @ any_list5) @ any_list6)))) = (any1::(any2::rotate (nat1) (((((any_list2 @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

1 goal(s) more...

7 conjecture(s) more...
>>> induction any_list2(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((any1::(any2::(((((Nil) @ any_list3) @ any_list4) @ any_list5) @ any_list6)))) = (any1::(any2::rotate (nat1) ((((((Nil) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

2 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:19)
=================================================
Progress: 456


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((any1::(any2::((((any_list2 @ any_list3) @ any_list4) @ any_list5) @ any_list6)))) = (any1::(any2::rotate (nat1) (((((any_list2 @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

1 goal(s) more...

7 conjecture(s) more...
>>> induction any_list2(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((any1::(any2::(((((Nil) @ any_list3) @ any_list4) @ any_list5) @ any_list6)))) = (any1::(any2::rotate (nat1) ((((((Nil) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

2 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:19)
=================================================
Progress: 457


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((any1::(any2::((((any_list2 @ any_list3) @ any_list4) @ any_list5) @ any_list6)))) = (any1::(any2::rotate (nat1) (((((any_list2 @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

1 goal(s) more...

7 conjecture(s) more...
>>> induction any_list2(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((any1::(any2::(((((Nil) @ any_list3) @ any_list4) @ any_list5) @ any_list6)))) = (any1::(any2::rotate (nat1) ((((((Nil) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

2 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:19)
=================================================
Progress: 458


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((any1::(any2::((((any_list2 @ any_list3) @ any_list4) @ any_list5) @ any_list6)))) = (any1::(any2::rotate (nat1) (((((any_list2 @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

1 goal(s) more...

7 conjecture(s) more...
>>> induction any_list2(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((any1::(any2::(((((Nil) @ any_list3) @ any_list4) @ any_list5) @ any_list6)))) = (any1::(any2::rotate (nat1) ((((((Nil) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

2 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:19)
=================================================
Progress: 459


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((any1::(any2::((((any_list2 @ any_list3) @ any_list4) @ any_list5) @ any_list6)))) = (any1::(any2::rotate (nat1) (((((any_list2 @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

1 goal(s) more...

7 conjecture(s) more...
>>> induction any_list2(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((any1::(any2::(((((Nil) @ any_list3) @ any_list4) @ any_list5) @ any_list6)))) = (any1::(any2::rotate (nat1) ((((((Nil) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

2 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:19)
=================================================
Progress: 460


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((any1::(any2::((((any_list2 @ any_list3) @ any_list4) @ any_list5) @ any_list6)))) = (any1::(any2::rotate (nat1) (((((any_list2 @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

1 goal(s) more...

7 conjecture(s) more...
>>> induction any_list2(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((any1::(any2::(((((Nil) @ any_list3) @ any_list4) @ any_list5) @ any_list6)))) = (any1::(any2::rotate (nat1) ((((((Nil) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

2 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:19)
=================================================
Progress: 461


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) ((any1::(any2::(any_list4 @ any_list5)))) = (any1::(any2::rotate (nat1) ((any_list4 @ any_list5))))

3 goal(s) more...

6 conjecture(s) more...
>>> induction any_list4(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
any_list4 : any list
Base4 : any_list4 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list5:any list) (nat1:nat), rotate (nat1) ((any1::(any2::((Nil) @ any_list5)))) = (any1::(any2::rotate (nat1) (((Nil) @ any_list5))))

4 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:19)
=================================================
Progress: 462


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) ((any1::(any2::(any_list4 @ any_list5)))) = (any1::(any2::rotate (nat1) ((any_list4 @ any_list5))))

3 goal(s) more...

6 conjecture(s) more...
>>> induction any_list4(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
any_list4 : any list
Base4 : any_list4 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list5:any list) (nat1:nat), rotate (nat1) ((any1::(any2::((Nil) @ any_list5)))) = (any1::(any2::rotate (nat1) (((Nil) @ any_list5))))

4 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:19)
=================================================
Progress: 463


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) ((any1::(any2::(any_list4 @ any_list5)))) = (any1::(any2::rotate (nat1) ((any_list4 @ any_list5))))

3 goal(s) more...

6 conjecture(s) more...
>>> induction any_list4(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
any_list4 : any list
Base4 : any_list4 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list5:any list) (nat1:nat), rotate (nat1) ((any1::(any2::((Nil) @ any_list5)))) = (any1::(any2::rotate (nat1) (((Nil) @ any_list5))))

4 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:19)
=================================================
Progress: 464


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) ((any1::(any2::(any_list4 @ any_list5)))) = (any1::(any2::rotate (nat1) ((any_list4 @ any_list5))))

3 goal(s) more...

6 conjecture(s) more...
>>> induction any_list4(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
any_list4 : any list
Base4 : any_list4 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list5:any list) (nat1:nat), rotate (nat1) ((any1::(any2::((Nil) @ any_list5)))) = (any1::(any2::rotate (nat1) (((Nil) @ any_list5))))

4 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:19)
=================================================
Progress: 465


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) ((any1::(any2::(any_list4 @ any_list5)))) = (any1::(any2::rotate (nat1) ((any_list4 @ any_list5))))

3 goal(s) more...

6 conjecture(s) more...
>>> induction any_list4(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
any_list4 : any list
Base4 : any_list4 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list5:any list) (nat1:nat), rotate (nat1) ((any1::(any2::((Nil) @ any_list5)))) = (any1::(any2::rotate (nat1) (((Nil) @ any_list5))))

4 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:19)
=================================================
Progress: 466


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((any1::(any2::(((((Nil) @ any_list3) @ any_list4) @ any_list5) @ any_list6)))) = (any1::(any2::rotate (nat1) ((((((Nil) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

2 goal(s) more...

7 conjecture(s) more...
>>> simpl in goal(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((any1::(any2::(((any_list3 @ any_list4) @ any_list5) @ any_list6)))) = (any1::(any2::rotate (nat1) ((((any_list3 @ any_list4) @ any_list5) @ any_list6))))

2 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list3(rank:20)
=================================================
Progress: 467


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((any1::(any2::(((((Nil) @ any_list3) @ any_list4) @ any_list5) @ any_list6)))) = (any1::(any2::rotate (nat1) ((((((Nil) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

2 goal(s) more...

7 conjecture(s) more...
>>> simpl in goal(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((any1::(any2::(((any_list3 @ any_list4) @ any_list5) @ any_list6)))) = (any1::(any2::rotate (nat1) ((((any_list3 @ any_list4) @ any_list5) @ any_list6))))

2 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list3(rank:20)
=================================================
Progress: 468


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((any1::(any2::(((((Nil) @ any_list3) @ any_list4) @ any_list5) @ any_list6)))) = (any1::(any2::rotate (nat1) ((((((Nil) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

2 goal(s) more...

7 conjecture(s) more...
>>> simpl in goal(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((any1::(any2::(((any_list3 @ any_list4) @ any_list5) @ any_list6)))) = (any1::(any2::rotate (nat1) ((((any_list3 @ any_list4) @ any_list5) @ any_list6))))

2 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list3(rank:20)
=================================================
Progress: 469


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((any1::(any2::(((((Nil) @ any_list3) @ any_list4) @ any_list5) @ any_list6)))) = (any1::(any2::rotate (nat1) ((((((Nil) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

2 goal(s) more...

7 conjecture(s) more...
>>> simpl in goal(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((any1::(any2::(((any_list3 @ any_list4) @ any_list5) @ any_list6)))) = (any1::(any2::rotate (nat1) ((((any_list3 @ any_list4) @ any_list5) @ any_list6))))

2 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list3(rank:20)
=================================================
Progress: 470


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((any1::(any2::(((((Nil) @ any_list3) @ any_list4) @ any_list5) @ any_list6)))) = (any1::(any2::rotate (nat1) ((((((Nil) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

2 goal(s) more...

7 conjecture(s) more...
>>> simpl in goal(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((any1::(any2::(((any_list3 @ any_list4) @ any_list5) @ any_list6)))) = (any1::(any2::rotate (nat1) ((((any_list3 @ any_list4) @ any_list5) @ any_list6))))

2 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list3(rank:20)
=================================================
Progress: 471


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((any1::(any2::(((((Nil) @ any_list3) @ any_list4) @ any_list5) @ any_list6)))) = (any1::(any2::rotate (nat1) ((((((Nil) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

2 goal(s) more...

7 conjecture(s) more...
>>> simpl in goal(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((any1::(any2::(((any_list3 @ any_list4) @ any_list5) @ any_list6)))) = (any1::(any2::rotate (nat1) ((((any_list3 @ any_list4) @ any_list5) @ any_list6))))

2 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list3(rank:20)
=================================================
Progress: 472


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((any1::(any2::(((((Nil) @ any_list3) @ any_list4) @ any_list5) @ any_list6)))) = (any1::(any2::rotate (nat1) ((((((Nil) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

2 goal(s) more...

7 conjecture(s) more...
>>> simpl in goal(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((any1::(any2::(((any_list3 @ any_list4) @ any_list5) @ any_list6)))) = (any1::(any2::rotate (nat1) ((((any_list3 @ any_list4) @ any_list5) @ any_list6))))

2 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list3(rank:20)
=================================================
Progress: 473


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((any1::(any2::(((((Nil) @ any_list3) @ any_list4) @ any_list5) @ any_list6)))) = (any1::(any2::rotate (nat1) ((((((Nil) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

2 goal(s) more...

7 conjecture(s) more...
>>> simpl in goal(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((any1::(any2::(((any_list3 @ any_list4) @ any_list5) @ any_list6)))) = (any1::(any2::rotate (nat1) ((((any_list3 @ any_list4) @ any_list5) @ any_list6))))

2 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list3(rank:20)
=================================================
Progress: 474


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((any1::(any2::(((((Nil) @ any_list3) @ any_list4) @ any_list5) @ any_list6)))) = (any1::(any2::rotate (nat1) ((((((Nil) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

2 goal(s) more...

7 conjecture(s) more...
>>> simpl in goal(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((any1::(any2::(((any_list3 @ any_list4) @ any_list5) @ any_list6)))) = (any1::(any2::rotate (nat1) ((((any_list3 @ any_list4) @ any_list5) @ any_list6))))

2 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list3(rank:20)
=================================================
Progress: 475


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((any1::(any2::(((((Nil) @ any_list3) @ any_list4) @ any_list5) @ any_list6)))) = (any1::(any2::rotate (nat1) ((((((Nil) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

2 goal(s) more...

7 conjecture(s) more...
>>> simpl in goal(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((any1::(any2::(((any_list3 @ any_list4) @ any_list5) @ any_list6)))) = (any1::(any2::rotate (nat1) ((((any_list3 @ any_list4) @ any_list5) @ any_list6))))

2 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list3(rank:20)
=================================================
Progress: 476


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((any1::(any2::(((((Nil) @ any_list3) @ any_list4) @ any_list5) @ any_list6)))) = (any1::(any2::rotate (nat1) ((((((Nil) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

2 goal(s) more...

7 conjecture(s) more...
>>> simpl in goal(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((any1::(any2::(((any_list3 @ any_list4) @ any_list5) @ any_list6)))) = (any1::(any2::rotate (nat1) ((((any_list3 @ any_list4) @ any_list5) @ any_list6))))

2 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list3(rank:20)
=================================================
Progress: 477


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((any1::(any2::(((((Nil) @ any_list3) @ any_list4) @ any_list5) @ any_list6)))) = (any1::(any2::rotate (nat1) ((((((Nil) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))

2 goal(s) more...

7 conjecture(s) more...
>>> simpl in goal(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6)) = (any1::(any2::rotate (nat1) ((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (nat1:nat), rotate (nat1) ((any1::(any2::(((any_list3 @ any_list4) @ any_list5) @ any_list6)))) = (any1::(any2::rotate (nat1) ((((any_list3 @ any_list4) @ any_list5) @ any_list6))))

2 goal(s) more...

7 conjecture(s) more...
Tactic List : 1
induction any_list3(rank:20)
=================================================
Progress: 478


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
any_list4 : any list
Base4 : any_list4 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list5:any list) (nat1:nat), rotate (nat1) ((any1::(any2::((Nil) @ any_list5)))) = (any1::(any2::rotate (nat1) (((Nil) @ any_list5))))

4 goal(s) more...

6 conjecture(s) more...
>>> simpl in goal(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
any_list4 : any list
Base4 : any_list4 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list5:any list) (nat1:nat), rotate (nat1) ((any1::(any2::any_list5))) = (any1::(any2::rotate (nat1) (any_list5)))

4 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:20)
=================================================
Progress: 479


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
any_list4 : any list
Base4 : any_list4 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list5:any list) (nat1:nat), rotate (nat1) ((any1::(any2::((Nil) @ any_list5)))) = (any1::(any2::rotate (nat1) (((Nil) @ any_list5))))

4 goal(s) more...

6 conjecture(s) more...
>>> simpl in goal(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
any_list4 : any list
Base4 : any_list4 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list5:any list) (nat1:nat), rotate (nat1) ((any1::(any2::any_list5))) = (any1::(any2::rotate (nat1) (any_list5)))

4 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:20)
=================================================
Progress: 480


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
any_list4 : any list
Base4 : any_list4 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list5:any list) (nat1:nat), rotate (nat1) ((any1::(any2::((Nil) @ any_list5)))) = (any1::(any2::rotate (nat1) (((Nil) @ any_list5))))

4 goal(s) more...

6 conjecture(s) more...
>>> simpl in goal(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
any_list4 : any list
Base4 : any_list4 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list5:any list) (nat1:nat), rotate (nat1) ((any1::(any2::any_list5))) = (any1::(any2::rotate (nat1) (any_list5)))

4 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:20)
=================================================
Progress: 481


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
any_list4 : any list
Base4 : any_list4 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list5:any list) (nat1:nat), rotate (nat1) ((any1::(any2::((Nil) @ any_list5)))) = (any1::(any2::rotate (nat1) (((Nil) @ any_list5))))

4 goal(s) more...

6 conjecture(s) more...
>>> simpl in goal(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
any_list4 : any list
Base4 : any_list4 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list5:any list) (nat1:nat), rotate (nat1) ((any1::(any2::any_list5))) = (any1::(any2::rotate (nat1) (any_list5)))

4 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:20)
=================================================
Progress: 482


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
any_list4 : any list
Base4 : any_list4 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list5:any list) (nat1:nat), rotate (nat1) ((any1::(any2::((Nil) @ any_list5)))) = (any1::(any2::rotate (nat1) (((Nil) @ any_list5))))

4 goal(s) more...

6 conjecture(s) more...
>>> simpl in goal(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (nat1:nat), rotate (nat1) (((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5)) = (any1::(any2::rotate (nat1) (((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5))))
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
any_list3 : any list
Base3 : any_list3 = (Nil)
any_list4 : any list
Base4 : any_list4 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list5:any list) (nat1:nat), rotate (nat1) ((any1::(any2::any_list5))) = (any1::(any2::rotate (nat1) (any_list5)))

4 goal(s) more...

6 conjecture(s) more...
Tactic List : 1
induction any_list5(rank:20)
=================================================
Progress: 483


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> induction any_list1(rank : 20)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

1 goal(s) more...

8 conjecture(s) more...
Tactic List : 1
reflexivity(rank:19)
=================================================
Progress: 484


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len ((Nil))) (((((((((((Nil) @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len ((Nil))) (((((((((Nil) @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

1 goal(s) more...

8 conjecture(s) more...
>>> reflexivity(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len ((any9::any_list2))) (((((((((((any9::any_list2) @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len ((any9::any_list2))) (((((((((any9::any_list2) @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:19)
=================================================
Progress: 485


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len ((any9::any_list2))) (((((((((((any9::any_list2) @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len ((any9::any_list2))) (((((((((any9::any_list2) @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> simpl in goal(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 8
intro any1(rank:19)
intro any3(rank:19)
intro any5(rank:19)
intro any6(rank:19)
intro any7(rank:19)
intro any8(rank:19)
intro any4(rank:19)
intro any2(rank:19)
=================================================
Progress: 486


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any1(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 7
intro any2(rank:19)
intro any4(rank:19)
intro any6(rank:19)
intro any7(rank:19)
intro any8(rank:19)
intro any5(rank:19)
intro any3(rank:19)
=================================================
Progress: 487


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any2(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 6
intro any3(rank:19)
intro any5(rank:19)
intro any6(rank:19)
intro any7(rank:19)
intro any8(rank:19)
intro any4(rank:19)
=================================================
Progress: 488


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any3(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 5
intro any4(rank:19)
intro any6(rank:19)
intro any7(rank:19)
intro any8(rank:19)
intro any5(rank:19)
=================================================
Progress: 489


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any4(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 4
intro any5(rank:19)
intro any6(rank:19)
intro any7(rank:19)
intro any8(rank:19)
=================================================
Progress: 490


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any5(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any5 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 3
intro any6(rank:19)
intro any7(rank:19)
intro any8(rank:19)
=================================================
Progress: 491


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any6(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any6 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 2
intro any7(rank:19)
intro any8(rank:19)
=================================================
Progress: 492


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any7(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any7 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 1
intro any8(rank:19)
=================================================
Progress: 493


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any8(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any8 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any8
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg901:any list) (arg902:any list) (arg903:any list) (arg904:any list) (arg905:any list) (arg906:any list) (arg907:any list) (arg908:any list) (arg909:nat), rotate (arg909) ((((((((((arg901 @ (any1::(Nil))) @ (any2::(Nil))) @ arg902) @ arg903) @ arg904) @ arg905) @ arg906) @ arg907) @ arg908)) = (any1::(any2::rotate (arg909) ((((((((arg901 @ arg902) @ arg903) @ arg904) @ arg905) @ arg906) @ arg907) @ arg908))))
Model : any1: 0, any2: 1, arg901: (6::(Nil)), arg902: (Nil), arg903: (Nil), arg904: (Nil), arg905: (Nil), arg906: (3::(Nil)), arg907: (Nil), arg908: (Nil), arg909: ZERO
Model : any1: 8, any2: 8, arg901: (Nil), arg902: (Nil), arg903: (Nil), arg904: (Nil), arg905: (Nil), arg906: (Nil), arg907: (Nil), arg908: (Nil), arg909: ZERO
Model : any1: 0, any2: 6, arg901: (Nil), arg902: (Nil), arg903: (Nil), arg904: (Nil), arg905: (Nil), arg906: (2::(Nil)), arg907: (Nil), arg908: (Nil), arg909: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) (((((((((((6::(Nil)) @ (0::(Nil))) @ (1::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (3::(Nil))) @ (Nil)) @ (Nil))) = (0::(1::rotate (ZERO) (((((((((6::(Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (3::(Nil))) @ (Nil)) @ (Nil)))))
rotate (ZERO) (((((((((((Nil) @ (8::(Nil))) @ (8::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (8::(8::rotate (ZERO) (((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) (((((((((((Nil) @ (0::(Nil))) @ (6::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (2::(Nil))) @ (Nil)) @ (Nil))) = (0::(6::rotate (ZERO) (((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (2::(Nil))) @ (Nil)) @ (Nil)))))
Simplifying took 0.002923 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any9:any) (any_list2:any list), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))
Model : any1: 6, any2: 4, any3: 5, any4: 5, any5: 5, any6: 0, any7: 1, any8: 2, any9: 0, any_list2: (1::(Nil))
Model : any1: 6, any2: 0, any3: 0, any4: 3, any5: 1, any6: 0, any7: 0, any8: 6, any9: 0, any_list2: (Nil)
Model : any1: 7, any2: 6, any3: 2, any4: 5, any5: 0, any6: 3, any7: 1, any8: 6, any9: 0, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((1::(Nil)))) ((((((((((((1::(Nil)) @ (Nil)) @ (6::(Nil))) @ (4::(Nil))) @ (5::(Nil))) @ (5::(Nil))) @ (5::(Nil))) @ (0::(Nil))) @ (1::(Nil))) @ (2::(Nil))) @ (0::(Nil)))) = (6::(4::rotate (len ((1::(Nil)))) ((((((((((1::(Nil)) @ (Nil)) @ (5::(Nil))) @ (5::(Nil))) @ (5::(Nil))) @ (0::(Nil))) @ (1::(Nil))) @ (2::(Nil))) @ (0::(Nil))))))
rotate (len ((Nil))) ((((((((((((Nil) @ (Nil)) @ (6::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (3::(Nil))) @ (1::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (6::(Nil))) @ (0::(Nil)))) = (6::(0::rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (3::(Nil))) @ (1::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (6::(Nil))) @ (0::(Nil))))))
rotate (len ((Nil))) ((((((((((((Nil) @ (Nil)) @ (7::(Nil))) @ (6::(Nil))) @ (2::(Nil))) @ (5::(Nil))) @ (0::(Nil))) @ (3::(Nil))) @ (1::(Nil))) @ (6::(Nil))) @ (0::(Nil)))) = (7::(6::rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (2::(Nil))) @ (5::(Nil))) @ (0::(Nil))) @ (3::(Nil))) @ (1::(Nil))) @ (6::(Nil))) @ (0::(Nil))))))
Simplifying took 0.013398 seconds
Result : true
advanced_generalize done


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any8 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
=================================================
Progress: 494


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any8 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any9:any) (any_list2:any list), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any9:any) (any_list1:any list), rotate (len (any_list1)) (((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any9:any) (any_list1:any list), rotate (len (any_list1)) (((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list1)) (((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

9 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:22)
=================================================
Progress: 495


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any2(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 6
intro any3(rank:19)
intro any5(rank:19)
intro any6(rank:19)
intro any7(rank:19)
intro any8(rank:19)
intro any4(rank:19)
=================================================
Progress: 496


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any3(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 5
intro any4(rank:19)
intro any6(rank:19)
intro any7(rank:19)
intro any8(rank:19)
intro any5(rank:19)
=================================================
Progress: 497


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any4(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 4
intro any5(rank:19)
intro any6(rank:19)
intro any7(rank:19)
intro any8(rank:19)
=================================================
Progress: 498


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any5(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any5 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 3
intro any6(rank:19)
intro any7(rank:19)
intro any8(rank:19)
=================================================
Progress: 499


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any6(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any6 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any5:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 2
intro any7(rank:19)
intro any8(rank:19)
=================================================
Progress: 500


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any7(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any7 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 1
intro any8(rank:19)
=================================================
Progress: 501


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any8(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any8 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any8
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg910:any list) (arg911:any list) (arg912:any list) (arg913:any list) (arg914:any list) (arg915:any list) (arg916:any list) (arg917:any list) (arg918:nat), rotate (arg918) ((((((((((arg910 @ (any1::(Nil))) @ (any2::(Nil))) @ arg911) @ arg912) @ arg913) @ arg914) @ arg915) @ arg916) @ arg917)) = (any1::(any2::rotate (arg918) ((((((((arg910 @ arg911) @ arg912) @ arg913) @ arg914) @ arg915) @ arg916) @ arg917))))
Model : any1: 0, any2: 0, arg910: (Nil), arg911: (8::(1::(Nil))), arg912: (Nil), arg913: (Nil), arg914: (Nil), arg915: (Nil), arg916: (Nil), arg917: (4::(Nil)), arg918: ZERO
Model : any1: 8, any2: 2, arg910: (Nil), arg911: (0::(Nil)), arg912: (Nil), arg913: (Nil), arg914: (Nil), arg915: (Nil), arg916: (Nil), arg917: (Nil), arg918: ZERO
Model : any1: 8, any2: 4, arg910: (Nil), arg911: (Nil), arg912: (Nil), arg913: (Nil), arg914: (Nil), arg915: (Nil), arg916: (8::(Nil)), arg917: (Nil), arg918: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) (((((((((((Nil) @ (0::(Nil))) @ (0::(Nil))) @ (8::(1::(Nil)))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (4::(Nil)))) = (0::(0::rotate (ZERO) (((((((((Nil) @ (8::(1::(Nil)))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (4::(Nil))))))
rotate (ZERO) (((((((((((Nil) @ (8::(Nil))) @ (2::(Nil))) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (8::(2::rotate (ZERO) (((((((((Nil) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) (((((((((((Nil) @ (8::(Nil))) @ (4::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (8::(Nil))) @ (Nil))) = (8::(4::rotate (ZERO) (((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (8::(Nil))) @ (Nil)))))
Simplifying took 0.003654 seconds
Result : true
advanced_generalize done


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any8 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
=================================================
Progress: 502


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any8 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (arg910:any list) (arg911:any list) (arg912:any list) (arg913:any list) (arg914:any list) (arg915:any list) (arg916:any list) (arg917:any list) (arg918:nat), rotate (arg918) ((((((((((arg910 @ (any1::(Nil))) @ (any2::(Nil))) @ arg911) @ arg912) @ arg913) @ arg914) @ arg915) @ arg916) @ arg917)) = (any1::(any2::rotate (arg918) ((((((((arg910 @ arg911) @ arg912) @ arg913) @ arg914) @ arg915) @ arg916) @ arg917))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (any_list7:any list) (any_list8:any list) (nat1:nat), rotate (nat1) ((((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7) @ any_list8)) = (any1::(any2::rotate (nat1) ((((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7) @ any_list8))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (any_list7:any list) (any_list8:any list) (nat1:nat), rotate (nat1) ((((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7) @ any_list8)) = (any1::(any2::rotate (nat1) ((((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7) @ any_list8))))

0 goal(s) more...

9 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:22)
=================================================
Progress: 503


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any3(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 5
intro any4(rank:19)
intro any6(rank:19)
intro any7(rank:19)
intro any8(rank:19)
intro any5(rank:19)
=================================================
Progress: 504


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any4(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 4
intro any5(rank:19)
intro any6(rank:19)
intro any7(rank:19)
intro any8(rank:19)
=================================================
Progress: 505


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any5(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any2 : any
any5 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 3
intro any6(rank:19)
intro any7(rank:19)
intro any8(rank:19)
=================================================
Progress: 506


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any6(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any2 : any
any6 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any5:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 2
intro any7(rank:19)
intro any8(rank:19)
=================================================
Progress: 507


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any7(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any2 : any
any7 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any5:any) (any6:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 1
intro any8(rank:19)
=================================================
Progress: 508


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any2 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any8(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any2 : any
any8 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any8
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg919:any list) (arg920:any list) (arg921:any list) (arg922:any list) (arg923:any list) (arg924:any list) (arg925:any list) (arg926:any list) (arg927:nat), rotate (arg927) ((((((((((arg919 @ (any1::(Nil))) @ (any2::(Nil))) @ arg920) @ arg921) @ arg922) @ arg923) @ arg924) @ arg925) @ arg926)) = (any1::(any2::rotate (arg927) ((((((((arg919 @ arg920) @ arg921) @ arg922) @ arg923) @ arg924) @ arg925) @ arg926))))
Model : any1: 1, any2: 1, arg919: (Nil), arg920: (3::(Nil)), arg921: (0::(Nil)), arg922: (Nil), arg923: (Nil), arg924: (Nil), arg925: (Nil), arg926: (Nil), arg927: SUCC (ZERO)
Model : any1: 0, any2: 8, arg919: (Nil), arg920: (Nil), arg921: (Nil), arg922: (Nil), arg923: (Nil), arg924: (Nil), arg925: (Nil), arg926: (Nil), arg927: ZERO
Model : any1: 5, any2: 7, arg919: (Nil), arg920: (Nil), arg921: (Nil), arg922: (8::(Nil)), arg923: (Nil), arg924: (Nil), arg925: (Nil), arg926: (Nil), arg927: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (SUCC (ZERO)) (((((((((((Nil) @ (1::(Nil))) @ (1::(Nil))) @ (3::(Nil))) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (1::(1::rotate (SUCC (ZERO)) (((((((((Nil) @ (3::(Nil))) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) (((((((((((Nil) @ (0::(Nil))) @ (8::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (0::(8::rotate (ZERO) (((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) (((((((((((Nil) @ (5::(Nil))) @ (7::(Nil))) @ (Nil)) @ (Nil)) @ (8::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (5::(7::rotate (ZERO) (((((((((Nil) @ (Nil)) @ (Nil)) @ (8::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
Simplifying took 0.003297 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any9:any) (any_list2:any list), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))
Model : any1: 1, any2: 6, any3: 1, any4: 5, any5: 7, any6: 7, any7: 1, any8: 1, any9: 0, any_list2: (Nil)
Model : any1: 1, any2: 1, any3: 0, any4: 1, any5: 0, any6: 3, any7: 4, any8: 5, any9: 0, any_list2: (Nil)
Model : any1: 1, any2: 8, any3: 5, any4: 7, any5: 2, any6: 0, any7: 4, any8: 5, any9: 6, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) ((((((((((((Nil) @ (Nil)) @ (1::(Nil))) @ (6::(Nil))) @ (1::(Nil))) @ (5::(Nil))) @ (7::(Nil))) @ (7::(Nil))) @ (1::(Nil))) @ (1::(Nil))) @ (0::(Nil)))) = (1::(6::rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (1::(Nil))) @ (5::(Nil))) @ (7::(Nil))) @ (7::(Nil))) @ (1::(Nil))) @ (1::(Nil))) @ (0::(Nil))))))
rotate (len ((Nil))) ((((((((((((Nil) @ (Nil)) @ (1::(Nil))) @ (1::(Nil))) @ (0::(Nil))) @ (1::(Nil))) @ (0::(Nil))) @ (3::(Nil))) @ (4::(Nil))) @ (5::(Nil))) @ (0::(Nil)))) = (1::(1::rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (1::(Nil))) @ (0::(Nil))) @ (3::(Nil))) @ (4::(Nil))) @ (5::(Nil))) @ (0::(Nil))))))
rotate (len ((Nil))) ((((((((((((Nil) @ (Nil)) @ (1::(Nil))) @ (8::(Nil))) @ (5::(Nil))) @ (7::(Nil))) @ (2::(Nil))) @ (0::(Nil))) @ (4::(Nil))) @ (5::(Nil))) @ (6::(Nil)))) = (1::(8::rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (5::(Nil))) @ (7::(Nil))) @ (2::(Nil))) @ (0::(Nil))) @ (4::(Nil))) @ (5::(Nil))) @ (6::(Nil))))))
Simplifying took 0.011895 seconds
Result : true
advanced_generalize done
=================================================
Progress: 509


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any4(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 4
intro any5(rank:19)
intro any6(rank:19)
intro any7(rank:19)
intro any8(rank:19)
=================================================
Progress: 510


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any5(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any3 : any
any5 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 3
intro any6(rank:19)
intro any7(rank:19)
intro any8(rank:19)
=================================================
Progress: 511


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any6(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any3 : any
any6 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any5:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 2
intro any7(rank:19)
intro any8(rank:19)
=================================================
Progress: 512


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any7(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any3 : any
any7 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any5:any) (any6:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 1
intro any8(rank:19)
=================================================
Progress: 513


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any3 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any8(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any3 : any
any8 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any8
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg928:any list) (arg929:any list) (arg930:any list) (arg931:any list) (arg932:any list) (arg933:any list) (arg934:any list) (arg935:any list) (arg936:nat), rotate (arg936) ((((((((((arg928 @ (any1::(Nil))) @ (any2::(Nil))) @ arg929) @ arg930) @ arg931) @ arg932) @ arg933) @ arg934) @ arg935)) = (any1::(any2::rotate (arg936) ((((((((arg928 @ arg929) @ arg930) @ arg931) @ arg932) @ arg933) @ arg934) @ arg935))))
Model : any1: 4, any2: 2, arg928: (Nil), arg929: (1::(Nil)), arg930: (Nil), arg931: (Nil), arg932: (Nil), arg933: (Nil), arg934: (Nil), arg935: (Nil), arg936: SUCC (ZERO)
Model : any1: 4, any2: 6, arg928: (Nil), arg929: (Nil), arg930: (0::(Nil)), arg931: (Nil), arg932: (Nil), arg933: (Nil), arg934: (Nil), arg935: (Nil), arg936: ZERO
Model : any1: 1, any2: 3, arg928: (Nil), arg929: (6::(Nil)), arg930: (Nil), arg931: (6::(Nil)), arg932: (4::(Nil)), arg933: (Nil), arg934: (Nil), arg935: (Nil), arg936: SUCC (ZERO)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (SUCC (ZERO)) (((((((((((Nil) @ (4::(Nil))) @ (2::(Nil))) @ (1::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (4::(2::rotate (SUCC (ZERO)) (((((((((Nil) @ (1::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) (((((((((((Nil) @ (4::(Nil))) @ (6::(Nil))) @ (Nil)) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (4::(6::rotate (ZERO) (((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (SUCC (ZERO)) (((((((((((Nil) @ (1::(Nil))) @ (3::(Nil))) @ (6::(Nil))) @ (Nil)) @ (6::(Nil))) @ (4::(Nil))) @ (Nil)) @ (Nil)) @ (Nil))) = (1::(3::rotate (SUCC (ZERO)) (((((((((Nil) @ (6::(Nil))) @ (Nil)) @ (6::(Nil))) @ (4::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)))))
Simplifying took 0.004863 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any9:any) (any_list2:any list), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))
Model : any1: 2, any2: 7, any3: 5, any4: 7, any5: 6, any6: 6, any7: 0, any8: 2, any9: 0, any_list2: (Nil)
Model : any1: 8, any2: 1, any3: 2, any4: 7, any5: 4, any6: 7, any7: 8, any8: 2, any9: 7, any_list2: (Nil)
Model : any1: 7, any2: 1, any3: 6, any4: 7, any5: 3, any6: 1, any7: 4, any8: 8, any9: 0, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) ((((((((((((Nil) @ (Nil)) @ (2::(Nil))) @ (7::(Nil))) @ (5::(Nil))) @ (7::(Nil))) @ (6::(Nil))) @ (6::(Nil))) @ (0::(Nil))) @ (2::(Nil))) @ (0::(Nil)))) = (2::(7::rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (5::(Nil))) @ (7::(Nil))) @ (6::(Nil))) @ (6::(Nil))) @ (0::(Nil))) @ (2::(Nil))) @ (0::(Nil))))))
rotate (len ((Nil))) ((((((((((((Nil) @ (Nil)) @ (8::(Nil))) @ (1::(Nil))) @ (2::(Nil))) @ (7::(Nil))) @ (4::(Nil))) @ (7::(Nil))) @ (8::(Nil))) @ (2::(Nil))) @ (7::(Nil)))) = (8::(1::rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (2::(Nil))) @ (7::(Nil))) @ (4::(Nil))) @ (7::(Nil))) @ (8::(Nil))) @ (2::(Nil))) @ (7::(Nil))))))
rotate (len ((Nil))) ((((((((((((Nil) @ (Nil)) @ (7::(Nil))) @ (1::(Nil))) @ (6::(Nil))) @ (7::(Nil))) @ (3::(Nil))) @ (1::(Nil))) @ (4::(Nil))) @ (8::(Nil))) @ (0::(Nil)))) = (7::(1::rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (6::(Nil))) @ (7::(Nil))) @ (3::(Nil))) @ (1::(Nil))) @ (4::(Nil))) @ (8::(Nil))) @ (0::(Nil))))))
Simplifying took 0.013920 seconds
Result : true
advanced_generalize done
=================================================
Progress: 514


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any5(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any4 : any
any5 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 3
intro any6(rank:19)
intro any7(rank:19)
intro any8(rank:19)
=================================================
Progress: 515


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any6(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any4 : any
any6 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any5:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 2
intro any7(rank:19)
intro any8(rank:19)
=================================================
Progress: 516


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any7(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any4 : any
any7 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any5:any) (any6:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 1
intro any8(rank:19)
=================================================
Progress: 517


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any8(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any4 : any
any8 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any4
intro any8
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg937:any list) (arg938:any list) (arg939:any list) (arg940:any list) (arg941:any list) (arg942:any list) (arg943:any list) (arg944:any list) (arg945:nat), rotate (arg945) ((((((((((arg937 @ (any1::(Nil))) @ (any2::(Nil))) @ arg938) @ arg939) @ arg940) @ arg941) @ arg942) @ arg943) @ arg944)) = (any1::(any2::rotate (arg945) ((((((((arg937 @ arg938) @ arg939) @ arg940) @ arg941) @ arg942) @ arg943) @ arg944))))
Model : any1: 1, any2: 7, arg937: (Nil), arg938: (2::(Nil)), arg939: (Nil), arg940: (Nil), arg941: (5::(0::(Nil))), arg942: (0::(Nil)), arg943: (Nil), arg944: (Nil), arg945: ZERO
Model : any1: 1, any2: 0, arg937: (Nil), arg938: (Nil), arg939: (Nil), arg940: (1::(Nil)), arg941: (7::(4::(Nil))), arg942: (6::(Nil)), arg943: (Nil), arg944: (Nil), arg945: ZERO
Model : any1: 5, any2: 2, arg937: (Nil), arg938: (Nil), arg939: (5::(Nil)), arg940: (0::(Nil)), arg941: (0::(2::(3::(Nil)))), arg942: (Nil), arg943: (Nil), arg944: (6::(7::(Nil))), arg945: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) (((((((((((Nil) @ (1::(Nil))) @ (7::(Nil))) @ (2::(Nil))) @ (Nil)) @ (Nil)) @ (5::(0::(Nil)))) @ (0::(Nil))) @ (Nil)) @ (Nil))) = (1::(7::rotate (ZERO) (((((((((Nil) @ (2::(Nil))) @ (Nil)) @ (Nil)) @ (5::(0::(Nil)))) @ (0::(Nil))) @ (Nil)) @ (Nil)))))
rotate (ZERO) (((((((((((Nil) @ (1::(Nil))) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (1::(Nil))) @ (7::(4::(Nil)))) @ (6::(Nil))) @ (Nil)) @ (Nil))) = (1::(0::rotate (ZERO) (((((((((Nil) @ (Nil)) @ (Nil)) @ (1::(Nil))) @ (7::(4::(Nil)))) @ (6::(Nil))) @ (Nil)) @ (Nil)))))
rotate (ZERO) (((((((((((Nil) @ (5::(Nil))) @ (2::(Nil))) @ (Nil)) @ (5::(Nil))) @ (0::(Nil))) @ (0::(2::(3::(Nil))))) @ (Nil)) @ (Nil)) @ (6::(7::(Nil))))) = (5::(2::rotate (ZERO) (((((((((Nil) @ (Nil)) @ (5::(Nil))) @ (0::(Nil))) @ (0::(2::(3::(Nil))))) @ (Nil)) @ (Nil)) @ (6::(7::(Nil)))))))
Simplifying took 0.007784 seconds
Result : true
advanced_generalize done


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any4 : any
any8 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
=================================================
Progress: 518


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any4 : any
any8 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (arg937:any list) (arg938:any list) (arg939:any list) (arg940:any list) (arg941:any list) (arg942:any list) (arg943:any list) (arg944:any list) (arg945:nat), rotate (arg945) ((((((((((arg937 @ (any1::(Nil))) @ (any2::(Nil))) @ arg938) @ arg939) @ arg940) @ arg941) @ arg942) @ arg943) @ arg944)) = (any1::(any2::rotate (arg945) ((((((((arg937 @ arg938) @ arg939) @ arg940) @ arg941) @ arg942) @ arg943) @ arg944))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (any_list7:any list) (any_list8:any list) (nat1:nat), rotate (nat1) ((((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7) @ any_list8)) = (any1::(any2::rotate (nat1) ((((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7) @ any_list8))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (any_list7:any list) (any_list8:any list) (nat1:nat), rotate (nat1) ((((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7) @ any_list8)) = (any1::(any2::rotate (nat1) ((((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7) @ any_list8))))

0 goal(s) more...

9 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:22)
=================================================
Progress: 519


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any5 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any6(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any5 : any
any6 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 2
intro any7(rank:19)
intro any8(rank:19)
=================================================
Progress: 520


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any5 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any7(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any5 : any
any7 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any6:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 1
intro any8(rank:19)
=================================================
Progress: 521


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any5 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any8(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any5 : any
any8 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any5
intro any8
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg946:any list) (arg947:any list) (arg948:any list) (arg949:any list) (arg950:any list) (arg951:any list) (arg952:any list) (arg953:any list) (arg954:nat), rotate (arg954) ((((((((((arg946 @ (any1::(Nil))) @ (any2::(Nil))) @ arg947) @ arg948) @ arg949) @ arg950) @ arg951) @ arg952) @ arg953)) = (any1::(any2::rotate (arg954) ((((((((arg946 @ arg947) @ arg948) @ arg949) @ arg950) @ arg951) @ arg952) @ arg953))))
Model : any1: 2, any2: 2, arg946: (Nil), arg947: (Nil), arg948: (Nil), arg949: (5::(Nil)), arg950: (Nil), arg951: (Nil), arg952: (Nil), arg953: (Nil), arg954: SUCC (ZERO)
Model : any1: 5, any2: 5, arg946: (Nil), arg947: (Nil), arg948: (Nil), arg949: (Nil), arg950: (2::(Nil)), arg951: (Nil), arg952: (Nil), arg953: (Nil), arg954: ZERO
Model : any1: 1, any2: 6, arg946: (Nil), arg947: (Nil), arg948: (Nil), arg949: (Nil), arg950: (Nil), arg951: (Nil), arg952: (Nil), arg953: (Nil), arg954: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (SUCC (ZERO)) (((((((((((Nil) @ (2::(Nil))) @ (2::(Nil))) @ (Nil)) @ (Nil)) @ (5::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (2::(2::rotate (SUCC (ZERO)) (((((((((Nil) @ (Nil)) @ (Nil)) @ (5::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) (((((((((((Nil) @ (5::(Nil))) @ (5::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (2::(Nil))) @ (Nil)) @ (Nil)) @ (Nil))) = (5::(5::rotate (ZERO) (((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (2::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) (((((((((((Nil) @ (1::(Nil))) @ (6::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (1::(6::rotate (ZERO) (((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
Simplifying took 0.002687 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any9:any) (any_list2:any list), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))
Model : any1: 3, any2: 3, any3: 4, any4: 1, any5: 0, any6: 3, any7: 4, any8: 0, any9: 8, any_list2: (2::(Nil))
Model : any1: 0, any2: 8, any3: 3, any4: 7, any5: 7, any6: 2, any7: 4, any8: 3, any9: 1, any_list2: (Nil)
Model : any1: 1, any2: 5, any3: 5, any4: 0, any5: 4, any6: 3, any7: 1, any8: 2, any9: 6, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((2::(Nil)))) ((((((((((((2::(Nil)) @ (Nil)) @ (3::(Nil))) @ (3::(Nil))) @ (4::(Nil))) @ (1::(Nil))) @ (0::(Nil))) @ (3::(Nil))) @ (4::(Nil))) @ (0::(Nil))) @ (8::(Nil)))) = (3::(3::rotate (len ((2::(Nil)))) ((((((((((2::(Nil)) @ (Nil)) @ (4::(Nil))) @ (1::(Nil))) @ (0::(Nil))) @ (3::(Nil))) @ (4::(Nil))) @ (0::(Nil))) @ (8::(Nil))))))
rotate (len ((Nil))) ((((((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (8::(Nil))) @ (3::(Nil))) @ (7::(Nil))) @ (7::(Nil))) @ (2::(Nil))) @ (4::(Nil))) @ (3::(Nil))) @ (1::(Nil)))) = (0::(8::rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (3::(Nil))) @ (7::(Nil))) @ (7::(Nil))) @ (2::(Nil))) @ (4::(Nil))) @ (3::(Nil))) @ (1::(Nil))))))
rotate (len ((Nil))) ((((((((((((Nil) @ (Nil)) @ (1::(Nil))) @ (5::(Nil))) @ (5::(Nil))) @ (0::(Nil))) @ (4::(Nil))) @ (3::(Nil))) @ (1::(Nil))) @ (2::(Nil))) @ (6::(Nil)))) = (1::(5::rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (5::(Nil))) @ (0::(Nil))) @ (4::(Nil))) @ (3::(Nil))) @ (1::(Nil))) @ (2::(Nil))) @ (6::(Nil))))))
Simplifying took 0.014764 seconds
Result : true
advanced_generalize done
=================================================
Progress: 522


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any6 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any7(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any6 : any
any7 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 1
intro any8(rank:19)
=================================================
Progress: 523


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any6 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any8(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any6 : any
any8 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any7:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any6
intro any8
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg955:any list) (arg956:any list) (arg957:any list) (arg958:any list) (arg959:any list) (arg960:any list) (arg961:any list) (arg962:any list) (arg963:nat), rotate (arg963) ((((((((((arg955 @ (any1::(Nil))) @ (any2::(Nil))) @ arg956) @ arg957) @ arg958) @ arg959) @ arg960) @ arg961) @ arg962)) = (any1::(any2::rotate (arg963) ((((((((arg955 @ arg956) @ arg957) @ arg958) @ arg959) @ arg960) @ arg961) @ arg962))))
Model : any1: 4, any2: 7, arg955: (1::(Nil)), arg956: (Nil), arg957: (Nil), arg958: (Nil), arg959: (3::(Nil)), arg960: (Nil), arg961: (0::(Nil)), arg962: (Nil), arg963: ZERO
Model : any1: 7, any2: 5, arg955: (Nil), arg956: (Nil), arg957: (Nil), arg958: (Nil), arg959: (Nil), arg960: (Nil), arg961: (Nil), arg962: (Nil), arg963: ZERO
Model : any1: 0, any2: 6, arg955: (Nil), arg956: (Nil), arg957: (Nil), arg958: (Nil), arg959: (8::(Nil)), arg960: (Nil), arg961: (Nil), arg962: (Nil), arg963: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) (((((((((((1::(Nil)) @ (4::(Nil))) @ (7::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (3::(Nil))) @ (Nil)) @ (0::(Nil))) @ (Nil))) = (4::(7::rotate (ZERO) (((((((((1::(Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (3::(Nil))) @ (Nil)) @ (0::(Nil))) @ (Nil)))))
rotate (ZERO) (((((((((((Nil) @ (7::(Nil))) @ (5::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (7::(5::rotate (ZERO) (((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) (((((((((((Nil) @ (0::(Nil))) @ (6::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (8::(Nil))) @ (Nil)) @ (Nil)) @ (Nil))) = (0::(6::rotate (ZERO) (((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (8::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)))))
Simplifying took 0.003683 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any9:any) (any_list2:any list), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))
Model : any1: 2, any2: 0, any3: 0, any4: 5, any5: 0, any6: 7, any7: 1, any8: 6, any9: 5, any_list2: (Nil)
Model : any1: 0, any2: 6, any3: 0, any4: 7, any5: 1, any6: 3, any7: 0, any8: 2, any9: 4, any_list2: (Nil)
Model : any1: 5, any2: 3, any3: 4, any4: 3, any5: 2, any6: 5, any7: 7, any8: 6, any9: 0, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) ((((((((((((Nil) @ (Nil)) @ (2::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (5::(Nil))) @ (0::(Nil))) @ (7::(Nil))) @ (1::(Nil))) @ (6::(Nil))) @ (5::(Nil)))) = (2::(0::rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (5::(Nil))) @ (0::(Nil))) @ (7::(Nil))) @ (1::(Nil))) @ (6::(Nil))) @ (5::(Nil))))))
rotate (len ((Nil))) ((((((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (6::(Nil))) @ (0::(Nil))) @ (7::(Nil))) @ (1::(Nil))) @ (3::(Nil))) @ (0::(Nil))) @ (2::(Nil))) @ (4::(Nil)))) = (0::(6::rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (7::(Nil))) @ (1::(Nil))) @ (3::(Nil))) @ (0::(Nil))) @ (2::(Nil))) @ (4::(Nil))))))
rotate (len ((Nil))) ((((((((((((Nil) @ (Nil)) @ (5::(Nil))) @ (3::(Nil))) @ (4::(Nil))) @ (3::(Nil))) @ (2::(Nil))) @ (5::(Nil))) @ (7::(Nil))) @ (6::(Nil))) @ (0::(Nil)))) = (5::(3::rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (4::(Nil))) @ (3::(Nil))) @ (2::(Nil))) @ (5::(Nil))) @ (7::(Nil))) @ (6::(Nil))) @ (0::(Nil))))))
Simplifying took 0.011623 seconds
Result : true
advanced_generalize done
=================================================
Progress: 524


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any7 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any8(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any7 : any
any8 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any7
intro any8
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg964:any list) (arg965:any list) (arg966:any list) (arg967:any list) (arg968:any list) (arg969:any list) (arg970:any list) (arg971:any list) (arg972:nat), rotate (arg972) ((((((((((arg964 @ (any1::(Nil))) @ (any2::(Nil))) @ arg965) @ arg966) @ arg967) @ arg968) @ arg969) @ arg970) @ arg971)) = (any1::(any2::rotate (arg972) ((((((((arg964 @ arg965) @ arg966) @ arg967) @ arg968) @ arg969) @ arg970) @ arg971))))
Model : any1: 1, any2: 1, arg964: (Nil), arg965: (Nil), arg966: (Nil), arg967: (Nil), arg968: (Nil), arg969: (Nil), arg970: (Nil), arg971: (Nil), arg972: ZERO
Model : any1: 2, any2: 0, arg964: (3::(Nil)), arg965: (Nil), arg966: (Nil), arg967: (Nil), arg968: (Nil), arg969: (3::(Nil)), arg970: (Nil), arg971: (4::(Nil)), arg972: ZERO
Model : any1: 0, any2: 4, arg964: (Nil), arg965: (Nil), arg966: (Nil), arg967: (Nil), arg968: (Nil), arg969: (Nil), arg970: (Nil), arg971: (Nil), arg972: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) (((((((((((Nil) @ (1::(Nil))) @ (1::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (1::(1::rotate (ZERO) (((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) (((((((((((3::(Nil)) @ (2::(Nil))) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (3::(Nil))) @ (Nil)) @ (4::(Nil)))) = (2::(0::rotate (ZERO) (((((((((3::(Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (3::(Nil))) @ (Nil)) @ (4::(Nil))))))
rotate (ZERO) (((((((((((Nil) @ (0::(Nil))) @ (4::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (0::(4::rotate (ZERO) (((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
Simplifying took 0.002432 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any9:any) (any_list2:any list), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))
Model : any1: 0, any2: 3, any3: 3, any4: 0, any5: 0, any6: 6, any7: 1, any8: 0, any9: 0, any_list2: (Nil)
Model : any1: 4, any2: 0, any3: 0, any4: 5, any5: 3, any6: 0, any7: 0, any8: 5, any9: 2, any_list2: (7::(Nil))
Model : any1: 7, any2: 4, any3: 7, any4: 3, any5: 4, any6: 6, any7: 2, any8: 1, any9: 3, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) ((((((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (3::(Nil))) @ (3::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (6::(Nil))) @ (1::(Nil))) @ (0::(Nil))) @ (0::(Nil)))) = (0::(3::rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (3::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (6::(Nil))) @ (1::(Nil))) @ (0::(Nil))) @ (0::(Nil))))))
rotate (len ((7::(Nil)))) ((((((((((((7::(Nil)) @ (Nil)) @ (4::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (5::(Nil))) @ (3::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (5::(Nil))) @ (2::(Nil)))) = (4::(0::rotate (len ((7::(Nil)))) ((((((((((7::(Nil)) @ (Nil)) @ (0::(Nil))) @ (5::(Nil))) @ (3::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (5::(Nil))) @ (2::(Nil))))))
rotate (len ((Nil))) ((((((((((((Nil) @ (Nil)) @ (7::(Nil))) @ (4::(Nil))) @ (7::(Nil))) @ (3::(Nil))) @ (4::(Nil))) @ (6::(Nil))) @ (2::(Nil))) @ (1::(Nil))) @ (3::(Nil)))) = (7::(4::rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (7::(Nil))) @ (3::(Nil))) @ (4::(Nil))) @ (6::(Nil))) @ (2::(Nil))) @ (1::(Nil))) @ (3::(Nil))))))
Simplifying took 0.013540 seconds
Result : true
advanced_generalize done
=================================================
Progress: 525


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any3(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 5
intro any4(rank:19)
intro any6(rank:19)
intro any7(rank:19)
intro any8(rank:19)
intro any5(rank:19)
=================================================
Progress: 526


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any4(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 4
intro any5(rank:19)
intro any6(rank:19)
intro any7(rank:19)
intro any8(rank:19)
=================================================
Progress: 527


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any5(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any2 : any
any5 : any
---------------------------------------
forall (any3:any) (any4:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 3
intro any6(rank:19)
intro any7(rank:19)
intro any8(rank:19)
=================================================
Progress: 528


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any6(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any2 : any
any6 : any
---------------------------------------
forall (any3:any) (any4:any) (any5:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 2
intro any7(rank:19)
intro any8(rank:19)
=================================================
Progress: 529


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any7(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any2 : any
any7 : any
---------------------------------------
forall (any3:any) (any4:any) (any5:any) (any6:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 1
intro any8(rank:19)
=================================================
Progress: 530


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any2 : any
---------------------------------------
forall (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any8(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any2 : any
any8 : any
---------------------------------------
forall (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any8
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg973:any list) (arg974:any list) (arg975:any list) (arg976:any list) (arg977:any list) (arg978:any list) (arg979:any list) (arg980:any list) (arg981:nat), rotate (arg981) ((((((((((arg973 @ (any1::(Nil))) @ (any2::(Nil))) @ arg974) @ arg975) @ arg976) @ arg977) @ arg978) @ arg979) @ arg980)) = (any1::(any2::rotate (arg981) ((((((((arg973 @ arg974) @ arg975) @ arg976) @ arg977) @ arg978) @ arg979) @ arg980))))
Model : any1: 2, any2: 4, arg973: (Nil), arg974: (Nil), arg975: (Nil), arg976: (Nil), arg977: (Nil), arg978: (Nil), arg979: (Nil), arg980: (Nil), arg981: ZERO
Model : any1: 0, any2: 3, arg973: (Nil), arg974: (Nil), arg975: (5::(Nil)), arg976: (Nil), arg977: (6::(3::(Nil))), arg978: (Nil), arg979: (Nil), arg980: (Nil), arg981: ZERO
Model : any1: 1, any2: 0, arg973: (Nil), arg974: (Nil), arg975: (Nil), arg976: (Nil), arg977: (Nil), arg978: (Nil), arg979: (Nil), arg980: (Nil), arg981: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) (((((((((((Nil) @ (2::(Nil))) @ (4::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (2::(4::rotate (ZERO) (((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) (((((((((((Nil) @ (0::(Nil))) @ (3::(Nil))) @ (Nil)) @ (5::(Nil))) @ (Nil)) @ (6::(3::(Nil)))) @ (Nil)) @ (Nil)) @ (Nil))) = (0::(3::rotate (ZERO) (((((((((Nil) @ (Nil)) @ (5::(Nil))) @ (Nil)) @ (6::(3::(Nil)))) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) (((((((((((Nil) @ (1::(Nil))) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (1::(0::rotate (ZERO) (((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
Simplifying took 0.002980 seconds
Result : true
advanced_generalize done


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any2 : any
any8 : any
---------------------------------------
forall (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
=================================================
Progress: 531


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any2 : any
any8 : any
---------------------------------------
forall (any3:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (arg973:any list) (arg974:any list) (arg975:any list) (arg976:any list) (arg977:any list) (arg978:any list) (arg979:any list) (arg980:any list) (arg981:nat), rotate (arg981) ((((((((((arg973 @ (any1::(Nil))) @ (any2::(Nil))) @ arg974) @ arg975) @ arg976) @ arg977) @ arg978) @ arg979) @ arg980)) = (any1::(any2::rotate (arg981) ((((((((arg973 @ arg974) @ arg975) @ arg976) @ arg977) @ arg978) @ arg979) @ arg980))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (any_list7:any list) (any_list8:any list) (nat1:nat), rotate (nat1) ((((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7) @ any_list8)) = (any1::(any2::rotate (nat1) ((((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7) @ any_list8))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (any_list7:any list) (any_list8:any list) (nat1:nat), rotate (nat1) ((((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7) @ any_list8)) = (any1::(any2::rotate (nat1) ((((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7) @ any_list8))))

0 goal(s) more...

9 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:22)
=================================================
Progress: 532


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any4(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 4
intro any5(rank:19)
intro any6(rank:19)
intro any7(rank:19)
intro any8(rank:19)
=================================================
Progress: 533


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any5(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any3 : any
any5 : any
---------------------------------------
forall (any2:any) (any4:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 3
intro any6(rank:19)
intro any7(rank:19)
intro any8(rank:19)
=================================================
Progress: 534


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any6(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any3 : any
any6 : any
---------------------------------------
forall (any2:any) (any4:any) (any5:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 2
intro any7(rank:19)
intro any8(rank:19)
=================================================
Progress: 535


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any7(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any3 : any
any7 : any
---------------------------------------
forall (any2:any) (any4:any) (any5:any) (any6:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 1
intro any8(rank:19)
=================================================
Progress: 536


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any3 : any
---------------------------------------
forall (any2:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any8(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any3 : any
any8 : any
---------------------------------------
forall (any2:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any3
intro any8
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg982:any list) (arg983:any list) (arg984:any list) (arg985:any list) (arg986:any list) (arg987:any list) (arg988:any list) (arg989:any list) (arg990:nat), rotate (arg990) ((((((((((arg982 @ (any1::(Nil))) @ (any2::(Nil))) @ arg983) @ arg984) @ arg985) @ arg986) @ arg987) @ arg988) @ arg989)) = (any1::(any2::rotate (arg990) ((((((((arg982 @ arg983) @ arg984) @ arg985) @ arg986) @ arg987) @ arg988) @ arg989))))
Model : any1: 2, any2: 7, arg982: (Nil), arg983: (Nil), arg984: (Nil), arg985: (2::(1::(Nil))), arg986: (Nil), arg987: (Nil), arg988: (Nil), arg989: (Nil), arg990: SUCC (ZERO)
Model : any1: 5, any2: 7, arg982: (0::(Nil)), arg983: (Nil), arg984: (Nil), arg985: (0::(8::(Nil))), arg986: (Nil), arg987: (Nil), arg988: (Nil), arg989: (2::(Nil)), arg990: ZERO
Model : any1: 7, any2: 7, arg982: (Nil), arg983: (Nil), arg984: (Nil), arg985: (Nil), arg986: (Nil), arg987: (Nil), arg988: (Nil), arg989: (Nil), arg990: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (SUCC (ZERO)) (((((((((((Nil) @ (2::(Nil))) @ (7::(Nil))) @ (Nil)) @ (Nil)) @ (2::(1::(Nil)))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (2::(7::rotate (SUCC (ZERO)) (((((((((Nil) @ (Nil)) @ (Nil)) @ (2::(1::(Nil)))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) (((((((((((0::(Nil)) @ (5::(Nil))) @ (7::(Nil))) @ (Nil)) @ (Nil)) @ (0::(8::(Nil)))) @ (Nil)) @ (Nil)) @ (Nil)) @ (2::(Nil)))) = (5::(7::rotate (ZERO) (((((((((0::(Nil)) @ (Nil)) @ (Nil)) @ (0::(8::(Nil)))) @ (Nil)) @ (Nil)) @ (Nil)) @ (2::(Nil))))))
rotate (ZERO) (((((((((((Nil) @ (7::(Nil))) @ (7::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (7::(7::rotate (ZERO) (((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
Simplifying took 0.005202 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any9:any) (any_list2:any list), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))
Model : any1: 2, any2: 0, any3: 7, any4: 6, any5: 8, any6: 0, any7: 0, any8: 8, any9: 8, any_list2: (Nil)
Model : any1: 3, any2: 0, any3: 3, any4: 0, any5: 0, any6: 7, any7: 6, any8: 3, any9: 5, any_list2: (6::(Nil))
Model : any1: 7, any2: 0, any3: 7, any4: 3, any5: 0, any6: 2, any7: 4, any8: 0, any9: 5, any_list2: (4::(Nil))
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) ((((((((((((Nil) @ (Nil)) @ (2::(Nil))) @ (0::(Nil))) @ (7::(Nil))) @ (6::(Nil))) @ (8::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (8::(Nil))) @ (8::(Nil)))) = (2::(0::rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (7::(Nil))) @ (6::(Nil))) @ (8::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (8::(Nil))) @ (8::(Nil))))))
rotate (len ((6::(Nil)))) ((((((((((((6::(Nil)) @ (Nil)) @ (3::(Nil))) @ (0::(Nil))) @ (3::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (7::(Nil))) @ (6::(Nil))) @ (3::(Nil))) @ (5::(Nil)))) = (3::(0::rotate (len ((6::(Nil)))) ((((((((((6::(Nil)) @ (Nil)) @ (3::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (7::(Nil))) @ (6::(Nil))) @ (3::(Nil))) @ (5::(Nil))))))
rotate (len ((4::(Nil)))) ((((((((((((4::(Nil)) @ (Nil)) @ (7::(Nil))) @ (0::(Nil))) @ (7::(Nil))) @ (3::(Nil))) @ (0::(Nil))) @ (2::(Nil))) @ (4::(Nil))) @ (0::(Nil))) @ (5::(Nil)))) = (7::(0::rotate (len ((4::(Nil)))) ((((((((((4::(Nil)) @ (Nil)) @ (7::(Nil))) @ (3::(Nil))) @ (0::(Nil))) @ (2::(Nil))) @ (4::(Nil))) @ (0::(Nil))) @ (5::(Nil))))))
Simplifying took 0.017842 seconds
Result : true
advanced_generalize done
=================================================
Progress: 537


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any5(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any4 : any
any5 : any
---------------------------------------
forall (any2:any) (any3:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 3
intro any6(rank:19)
intro any7(rank:19)
intro any8(rank:19)
=================================================
Progress: 538


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any6(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any4 : any
any6 : any
---------------------------------------
forall (any2:any) (any3:any) (any5:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 2
intro any7(rank:19)
intro any8(rank:19)
=================================================
Progress: 539


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any7(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any4 : any
any7 : any
---------------------------------------
forall (any2:any) (any3:any) (any5:any) (any6:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 1
intro any8(rank:19)
=================================================
Progress: 540


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any4 : any
---------------------------------------
forall (any2:any) (any3:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any8(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any4 : any
any8 : any
---------------------------------------
forall (any2:any) (any3:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any4
intro any8
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg991:any list) (arg992:any list) (arg993:any list) (arg994:any list) (arg995:any list) (arg996:any list) (arg997:any list) (arg998:any list) (arg999:nat), rotate (arg999) ((((((((((arg991 @ (any1::(Nil))) @ (any2::(Nil))) @ arg992) @ arg993) @ arg994) @ arg995) @ arg996) @ arg997) @ arg998)) = (any1::(any2::rotate (arg999) ((((((((arg991 @ arg992) @ arg993) @ arg994) @ arg995) @ arg996) @ arg997) @ arg998))))
Model : any1: 8, any2: 6, arg991: (Nil), arg992: (8::(Nil)), arg993: (Nil), arg994: (Nil), arg995: (Nil), arg996: (8::(Nil)), arg997: (Nil), arg998: (0::(8::(Nil))), arg999: ZERO
Model : any1: 0, any2: 3, arg991: (Nil), arg992: (Nil), arg993: (Nil), arg994: (8::(Nil)), arg995: (Nil), arg996: (Nil), arg997: (4::(Nil)), arg998: (Nil), arg999: ZERO
Model : any1: 8, any2: 0, arg991: (Nil), arg992: (Nil), arg993: (Nil), arg994: (Nil), arg995: (Nil), arg996: (Nil), arg997: (8::(Nil)), arg998: (Nil), arg999: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) (((((((((((Nil) @ (8::(Nil))) @ (6::(Nil))) @ (8::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (8::(Nil))) @ (Nil)) @ (0::(8::(Nil))))) = (8::(6::rotate (ZERO) (((((((((Nil) @ (8::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (8::(Nil))) @ (Nil)) @ (0::(8::(Nil)))))))
rotate (ZERO) (((((((((((Nil) @ (0::(Nil))) @ (3::(Nil))) @ (Nil)) @ (Nil)) @ (8::(Nil))) @ (Nil)) @ (Nil)) @ (4::(Nil))) @ (Nil))) = (0::(3::rotate (ZERO) (((((((((Nil) @ (Nil)) @ (Nil)) @ (8::(Nil))) @ (Nil)) @ (Nil)) @ (4::(Nil))) @ (Nil)))))
rotate (ZERO) (((((((((((Nil) @ (8::(Nil))) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (8::(Nil))) @ (Nil))) = (8::(0::rotate (ZERO) (((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (8::(Nil))) @ (Nil)))))
Simplifying took 0.004428 seconds
Result : true
advanced_generalize done


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any4 : any
any8 : any
---------------------------------------
forall (any2:any) (any3:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
=================================================
Progress: 541


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any4 : any
any8 : any
---------------------------------------
forall (any2:any) (any3:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (arg991:any list) (arg992:any list) (arg993:any list) (arg994:any list) (arg995:any list) (arg996:any list) (arg997:any list) (arg998:any list) (arg999:nat), rotate (arg999) ((((((((((arg991 @ (any1::(Nil))) @ (any2::(Nil))) @ arg992) @ arg993) @ arg994) @ arg995) @ arg996) @ arg997) @ arg998)) = (any1::(any2::rotate (arg999) ((((((((arg991 @ arg992) @ arg993) @ arg994) @ arg995) @ arg996) @ arg997) @ arg998))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (any_list7:any list) (any_list8:any list) (nat1:nat), rotate (nat1) ((((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7) @ any_list8)) = (any1::(any2::rotate (nat1) ((((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7) @ any_list8))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (any_list7:any list) (any_list8:any list) (nat1:nat), rotate (nat1) ((((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7) @ any_list8)) = (any1::(any2::rotate (nat1) ((((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7) @ any_list8))))

0 goal(s) more...

9 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:22)
=================================================
Progress: 542


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any5 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any6(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any5 : any
any6 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 2
intro any7(rank:19)
intro any8(rank:19)
=================================================
Progress: 543


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any5 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any7(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any5 : any
any7 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any6:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 1
intro any8(rank:19)
=================================================
Progress: 544


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any5 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any8(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any5 : any
any8 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any5
intro any8
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg1000:any list) (arg1001:any list) (arg1002:any list) (arg1003:any list) (arg1004:any list) (arg1005:any list) (arg1006:any list) (arg1007:any list) (arg1008:nat), rotate (arg1008) ((((((((((arg1000 @ (any1::(Nil))) @ (any2::(Nil))) @ arg1001) @ arg1002) @ arg1003) @ arg1004) @ arg1005) @ arg1006) @ arg1007)) = (any1::(any2::rotate (arg1008) ((((((((arg1000 @ arg1001) @ arg1002) @ arg1003) @ arg1004) @ arg1005) @ arg1006) @ arg1007))))
Model : any1: 4, any2: 4, arg1000: (1::(Nil)), arg1001: (Nil), arg1002: (1::(Nil)), arg1003: (Nil), arg1004: (Nil), arg1005: (Nil), arg1006: (Nil), arg1007: (Nil), arg1008: ZERO
Model : any1: 0, any2: 8, arg1000: (Nil), arg1001: (Nil), arg1002: (7::(Nil)), arg1003: (Nil), arg1004: (Nil), arg1005: (Nil), arg1006: (Nil), arg1007: (Nil), arg1008: ZERO
Model : any1: 0, any2: 7, arg1000: (Nil), arg1001: (Nil), arg1002: (Nil), arg1003: (Nil), arg1004: (4::(0::(Nil))), arg1005: (Nil), arg1006: (3::(Nil)), arg1007: (4::(Nil)), arg1008: SUCC (ZERO)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) (((((((((((1::(Nil)) @ (4::(Nil))) @ (4::(Nil))) @ (Nil)) @ (1::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (4::(4::rotate (ZERO) (((((((((1::(Nil)) @ (Nil)) @ (1::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) (((((((((((Nil) @ (0::(Nil))) @ (8::(Nil))) @ (Nil)) @ (7::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (0::(8::rotate (ZERO) (((((((((Nil) @ (Nil)) @ (7::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (SUCC (ZERO)) (((((((((((Nil) @ (0::(Nil))) @ (7::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (4::(0::(Nil)))) @ (Nil)) @ (3::(Nil))) @ (4::(Nil)))) = (0::(7::rotate (SUCC (ZERO)) (((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (4::(0::(Nil)))) @ (Nil)) @ (3::(Nil))) @ (4::(Nil))))))
Simplifying took 0.005068 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any9:any) (any_list2:any list), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))
Model : any1: 2, any2: 1, any3: 5, any4: 8, any5: 5, any6: 0, any7: 2, any8: 0, any9: 5, any_list2: (Nil)
Model : any1: 2, any2: 0, any3: 8, any4: 0, any5: 7, any6: 7, any7: 6, any8: 4, any9: 0, any_list2: (Nil)
Model : any1: 4, any2: 2, any3: 0, any4: 1, any5: 0, any6: 0, any7: 6, any8: 1, any9: 5, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) ((((((((((((Nil) @ (Nil)) @ (2::(Nil))) @ (1::(Nil))) @ (5::(Nil))) @ (8::(Nil))) @ (5::(Nil))) @ (0::(Nil))) @ (2::(Nil))) @ (0::(Nil))) @ (5::(Nil)))) = (2::(1::rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (5::(Nil))) @ (8::(Nil))) @ (5::(Nil))) @ (0::(Nil))) @ (2::(Nil))) @ (0::(Nil))) @ (5::(Nil))))))
rotate (len ((Nil))) ((((((((((((Nil) @ (Nil)) @ (2::(Nil))) @ (0::(Nil))) @ (8::(Nil))) @ (0::(Nil))) @ (7::(Nil))) @ (7::(Nil))) @ (6::(Nil))) @ (4::(Nil))) @ (0::(Nil)))) = (2::(0::rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (8::(Nil))) @ (0::(Nil))) @ (7::(Nil))) @ (7::(Nil))) @ (6::(Nil))) @ (4::(Nil))) @ (0::(Nil))))))
rotate (len ((Nil))) ((((((((((((Nil) @ (Nil)) @ (4::(Nil))) @ (2::(Nil))) @ (0::(Nil))) @ (1::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (6::(Nil))) @ (1::(Nil))) @ (5::(Nil)))) = (4::(2::rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (1::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (6::(Nil))) @ (1::(Nil))) @ (5::(Nil))))))
Simplifying took 0.012262 seconds
Result : true
advanced_generalize done
=================================================
Progress: 545


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any6 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any5:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any7(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any6 : any
any7 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any5:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 1
intro any8(rank:19)
=================================================
Progress: 546


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any6 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any5:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any8(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any6 : any
any8 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any5:any) (any7:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any6
intro any8
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg1009:any list) (arg1010:any list) (arg1011:any list) (arg1012:any list) (arg1013:any list) (arg1014:any list) (arg1015:any list) (arg1016:any list) (arg1017:nat), rotate (arg1017) ((((((((((arg1009 @ (any1::(Nil))) @ (any2::(Nil))) @ arg1010) @ arg1011) @ arg1012) @ arg1013) @ arg1014) @ arg1015) @ arg1016)) = (any1::(any2::rotate (arg1017) ((((((((arg1009 @ arg1010) @ arg1011) @ arg1012) @ arg1013) @ arg1014) @ arg1015) @ arg1016))))
Model : any1: 7, any2: 6, arg1009: (Nil), arg1010: (3::(5::(Nil))), arg1011: (Nil), arg1012: (Nil), arg1013: (Nil), arg1014: (5::(Nil)), arg1015: (5::(Nil)), arg1016: (Nil), arg1017: SUCC (ZERO)
Model : any1: 0, any2: 0, arg1009: (Nil), arg1010: (Nil), arg1011: (Nil), arg1012: (Nil), arg1013: (Nil), arg1014: (Nil), arg1015: (Nil), arg1016: (Nil), arg1017: ZERO
Model : any1: 4, any2: 2, arg1009: (Nil), arg1010: (5::(Nil)), arg1011: (Nil), arg1012: (Nil), arg1013: (Nil), arg1014: (Nil), arg1015: (Nil), arg1016: (Nil), arg1017: SUCC (ZERO)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (SUCC (ZERO)) (((((((((((Nil) @ (7::(Nil))) @ (6::(Nil))) @ (3::(5::(Nil)))) @ (Nil)) @ (Nil)) @ (Nil)) @ (5::(Nil))) @ (5::(Nil))) @ (Nil))) = (7::(6::rotate (SUCC (ZERO)) (((((((((Nil) @ (3::(5::(Nil)))) @ (Nil)) @ (Nil)) @ (Nil)) @ (5::(Nil))) @ (5::(Nil))) @ (Nil)))))
rotate (ZERO) (((((((((((Nil) @ (0::(Nil))) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (0::(0::rotate (ZERO) (((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (SUCC (ZERO)) (((((((((((Nil) @ (4::(Nil))) @ (2::(Nil))) @ (5::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (4::(2::rotate (SUCC (ZERO)) (((((((((Nil) @ (5::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
Simplifying took 0.005354 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any9:any) (any_list2:any list), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))
Model : any1: 2, any2: 8, any3: 7, any4: 0, any5: 5, any6: 0, any7: 3, any8: 2, any9: 4, any_list2: (Nil)
Model : any1: 0, any2: 5, any3: 2, any4: 1, any5: 8, any6: 5, any7: 2, any8: 7, any9: 8, any_list2: (Nil)
Model : any1: 8, any2: 0, any3: 0, any4: 8, any5: 0, any6: 4, any7: 1, any8: 6, any9: 0, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) ((((((((((((Nil) @ (Nil)) @ (2::(Nil))) @ (8::(Nil))) @ (7::(Nil))) @ (0::(Nil))) @ (5::(Nil))) @ (0::(Nil))) @ (3::(Nil))) @ (2::(Nil))) @ (4::(Nil)))) = (2::(8::rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (7::(Nil))) @ (0::(Nil))) @ (5::(Nil))) @ (0::(Nil))) @ (3::(Nil))) @ (2::(Nil))) @ (4::(Nil))))))
rotate (len ((Nil))) ((((((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (5::(Nil))) @ (2::(Nil))) @ (1::(Nil))) @ (8::(Nil))) @ (5::(Nil))) @ (2::(Nil))) @ (7::(Nil))) @ (8::(Nil)))) = (0::(5::rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (2::(Nil))) @ (1::(Nil))) @ (8::(Nil))) @ (5::(Nil))) @ (2::(Nil))) @ (7::(Nil))) @ (8::(Nil))))))
rotate (len ((Nil))) ((((((((((((Nil) @ (Nil)) @ (8::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (8::(Nil))) @ (0::(Nil))) @ (4::(Nil))) @ (1::(Nil))) @ (6::(Nil))) @ (0::(Nil)))) = (8::(0::rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (8::(Nil))) @ (0::(Nil))) @ (4::(Nil))) @ (1::(Nil))) @ (6::(Nil))) @ (0::(Nil))))))
Simplifying took 0.012167 seconds
Result : true
advanced_generalize done
=================================================
Progress: 547


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any7 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any8(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any7 : any
any8 : any
---------------------------------------
forall (any2:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any7
intro any8
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg1018:any list) (arg1019:any list) (arg1020:any list) (arg1021:any list) (arg1022:any list) (arg1023:any list) (arg1024:any list) (arg1025:any list) (arg1026:nat), rotate (arg1026) ((((((((((arg1018 @ (any1::(Nil))) @ (any2::(Nil))) @ arg1019) @ arg1020) @ arg1021) @ arg1022) @ arg1023) @ arg1024) @ arg1025)) = (any1::(any2::rotate (arg1026) ((((((((arg1018 @ arg1019) @ arg1020) @ arg1021) @ arg1022) @ arg1023) @ arg1024) @ arg1025))))
Model : any1: 8, any2: 5, arg1018: (Nil), arg1019: (Nil), arg1020: (1::(Nil)), arg1021: (7::(0::(Nil))), arg1022: (Nil), arg1023: (Nil), arg1024: (Nil), arg1025: (Nil), arg1026: SUCC (ZERO)
Model : any1: 7, any2: 8, arg1018: (Nil), arg1019: (Nil), arg1020: (Nil), arg1021: (Nil), arg1022: (4::(Nil)), arg1023: (Nil), arg1024: (Nil), arg1025: (Nil), arg1026: ZERO
Model : any1: 0, any2: 0, arg1018: (Nil), arg1019: (Nil), arg1020: (Nil), arg1021: (6::(Nil)), arg1022: (Nil), arg1023: (Nil), arg1024: (Nil), arg1025: (3::(Nil)), arg1026: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (SUCC (ZERO)) (((((((((((Nil) @ (8::(Nil))) @ (5::(Nil))) @ (Nil)) @ (1::(Nil))) @ (7::(0::(Nil)))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (8::(5::rotate (SUCC (ZERO)) (((((((((Nil) @ (Nil)) @ (1::(Nil))) @ (7::(0::(Nil)))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) (((((((((((Nil) @ (7::(Nil))) @ (8::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (4::(Nil))) @ (Nil)) @ (Nil)) @ (Nil))) = (7::(8::rotate (ZERO) (((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (4::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) (((((((((((Nil) @ (0::(Nil))) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (6::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (3::(Nil)))) = (0::(0::rotate (ZERO) (((((((((Nil) @ (Nil)) @ (Nil)) @ (6::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (3::(Nil))))))
Simplifying took 0.004736 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any9:any) (any_list2:any list), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))
Model : any1: 5, any2: 2, any3: 0, any4: 0, any5: 4, any6: 0, any7: 8, any8: 0, any9: 5, any_list2: (Nil)
Model : any1: 5, any2: 6, any3: 4, any4: 6, any5: 0, any6: 8, any7: 0, any8: 3, any9: 1, any_list2: (Nil)
Model : any1: 3, any2: 1, any3: 8, any4: 5, any5: 8, any6: 5, any7: 0, any8: 5, any9: 2, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) ((((((((((((Nil) @ (Nil)) @ (5::(Nil))) @ (2::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (4::(Nil))) @ (0::(Nil))) @ (8::(Nil))) @ (0::(Nil))) @ (5::(Nil)))) = (5::(2::rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (0::(Nil))) @ (4::(Nil))) @ (0::(Nil))) @ (8::(Nil))) @ (0::(Nil))) @ (5::(Nil))))))
rotate (len ((Nil))) ((((((((((((Nil) @ (Nil)) @ (5::(Nil))) @ (6::(Nil))) @ (4::(Nil))) @ (6::(Nil))) @ (0::(Nil))) @ (8::(Nil))) @ (0::(Nil))) @ (3::(Nil))) @ (1::(Nil)))) = (5::(6::rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (4::(Nil))) @ (6::(Nil))) @ (0::(Nil))) @ (8::(Nil))) @ (0::(Nil))) @ (3::(Nil))) @ (1::(Nil))))))
rotate (len ((Nil))) ((((((((((((Nil) @ (Nil)) @ (3::(Nil))) @ (1::(Nil))) @ (8::(Nil))) @ (5::(Nil))) @ (8::(Nil))) @ (5::(Nil))) @ (0::(Nil))) @ (5::(Nil))) @ (2::(Nil)))) = (3::(1::rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (8::(Nil))) @ (5::(Nil))) @ (8::(Nil))) @ (5::(Nil))) @ (0::(Nil))) @ (5::(Nil))) @ (2::(Nil))))))
Simplifying took 0.012139 seconds
Result : true
advanced_generalize done
=================================================
Progress: 548


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any4(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 4
intro any5(rank:19)
intro any6(rank:19)
intro any7(rank:19)
intro any8(rank:19)
=================================================
Progress: 549


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any5(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any2 : any
any3 : any
any5 : any
---------------------------------------
forall (any1:any) (any4:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 3
intro any6(rank:19)
intro any7(rank:19)
intro any8(rank:19)
=================================================
Progress: 550


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any6(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any2 : any
any3 : any
any6 : any
---------------------------------------
forall (any1:any) (any4:any) (any5:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 2
intro any7(rank:19)
intro any8(rank:19)
=================================================
Progress: 551


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any7(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any2 : any
any3 : any
any7 : any
---------------------------------------
forall (any1:any) (any4:any) (any5:any) (any6:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 1
intro any8(rank:19)
=================================================
Progress: 552


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any2 : any
any3 : any
---------------------------------------
forall (any1:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any8(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any2 : any
any3 : any
any8 : any
---------------------------------------
forall (any1:any) (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any3
intro any8
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg1027:any list) (arg1028:any list) (arg1029:any list) (arg1030:any list) (arg1031:any list) (arg1032:any list) (arg1033:any list) (arg1034:any list) (arg1035:nat), rotate (arg1035) ((((((((((arg1027 @ (any1::(Nil))) @ (any2::(Nil))) @ arg1028) @ arg1029) @ arg1030) @ arg1031) @ arg1032) @ arg1033) @ arg1034)) = (any1::(any2::rotate (arg1035) ((((((((arg1027 @ arg1028) @ arg1029) @ arg1030) @ arg1031) @ arg1032) @ arg1033) @ arg1034))))
Model : any1: 7, any2: 0, arg1027: (Nil), arg1028: (Nil), arg1029: (Nil), arg1030: (Nil), arg1031: (3::(Nil)), arg1032: (5::(Nil)), arg1033: (Nil), arg1034: (Nil), arg1035: ZERO
Model : any1: 2, any2: 6, arg1027: (Nil), arg1028: (Nil), arg1029: (Nil), arg1030: (Nil), arg1031: (Nil), arg1032: (0::(Nil)), arg1033: (Nil), arg1034: (Nil), arg1035: ZERO
Model : any1: 1, any2: 1, arg1027: (2::(1::(Nil))), arg1028: (Nil), arg1029: (Nil), arg1030: (8::(Nil)), arg1031: (Nil), arg1032: (Nil), arg1033: (Nil), arg1034: (Nil), arg1035: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) (((((((((((Nil) @ (7::(Nil))) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (3::(Nil))) @ (5::(Nil))) @ (Nil)) @ (Nil))) = (7::(0::rotate (ZERO) (((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (3::(Nil))) @ (5::(Nil))) @ (Nil)) @ (Nil)))))
rotate (ZERO) (((((((((((Nil) @ (2::(Nil))) @ (6::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (0::(Nil))) @ (Nil)) @ (Nil))) = (2::(6::rotate (ZERO) (((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (0::(Nil))) @ (Nil)) @ (Nil)))))
rotate (ZERO) (((((((((((2::(1::(Nil))) @ (1::(Nil))) @ (1::(Nil))) @ (Nil)) @ (Nil)) @ (8::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (1::(1::rotate (ZERO) (((((((((2::(1::(Nil))) @ (Nil)) @ (Nil)) @ (8::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
Simplifying took 0.004472 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any9:any) (any_list2:any list), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))
Model : any1: 2, any2: 5, any3: 0, any4: 1, any5: 4, any6: 4, any7: 0, any8: 0, any9: 5, any_list2: (Nil)
Model : any1: 1, any2: 0, any3: 5, any4: 3, any5: 0, any6: 0, any7: 5, any8: 8, any9: 6, any_list2: (Nil)
Model : any1: 7, any2: 3, any3: 7, any4: 6, any5: 0, any6: 6, any7: 5, any8: 0, any9: 8, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) ((((((((((((Nil) @ (Nil)) @ (2::(Nil))) @ (5::(Nil))) @ (0::(Nil))) @ (1::(Nil))) @ (4::(Nil))) @ (4::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (5::(Nil)))) = (2::(5::rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (1::(Nil))) @ (4::(Nil))) @ (4::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (5::(Nil))))))
rotate (len ((Nil))) ((((((((((((Nil) @ (Nil)) @ (1::(Nil))) @ (0::(Nil))) @ (5::(Nil))) @ (3::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (5::(Nil))) @ (8::(Nil))) @ (6::(Nil)))) = (1::(0::rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (5::(Nil))) @ (3::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (5::(Nil))) @ (8::(Nil))) @ (6::(Nil))))))
rotate (len ((Nil))) ((((((((((((Nil) @ (Nil)) @ (7::(Nil))) @ (3::(Nil))) @ (7::(Nil))) @ (6::(Nil))) @ (0::(Nil))) @ (6::(Nil))) @ (5::(Nil))) @ (0::(Nil))) @ (8::(Nil)))) = (7::(3::rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (7::(Nil))) @ (6::(Nil))) @ (0::(Nil))) @ (6::(Nil))) @ (5::(Nil))) @ (0::(Nil))) @ (8::(Nil))))))
Simplifying took 0.012038 seconds
Result : true
advanced_generalize done
=================================================
Progress: 553


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any5(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any2 : any
any4 : any
any5 : any
---------------------------------------
forall (any1:any) (any3:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 3
intro any6(rank:19)
intro any7(rank:19)
intro any8(rank:19)
=================================================
Progress: 554


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any6(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any2 : any
any4 : any
any6 : any
---------------------------------------
forall (any1:any) (any3:any) (any5:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 2
intro any7(rank:19)
intro any8(rank:19)
=================================================
Progress: 555


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any7(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any2 : any
any4 : any
any7 : any
---------------------------------------
forall (any1:any) (any3:any) (any5:any) (any6:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 1
intro any8(rank:19)
=================================================
Progress: 556


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any2 : any
any4 : any
---------------------------------------
forall (any1:any) (any3:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any8(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any2 : any
any4 : any
any8 : any
---------------------------------------
forall (any1:any) (any3:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any4
intro any8
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg1036:any list) (arg1037:any list) (arg1038:any list) (arg1039:any list) (arg1040:any list) (arg1041:any list) (arg1042:any list) (arg1043:any list) (arg1044:nat), rotate (arg1044) ((((((((((arg1036 @ (any1::(Nil))) @ (any2::(Nil))) @ arg1037) @ arg1038) @ arg1039) @ arg1040) @ arg1041) @ arg1042) @ arg1043)) = (any1::(any2::rotate (arg1044) ((((((((arg1036 @ arg1037) @ arg1038) @ arg1039) @ arg1040) @ arg1041) @ arg1042) @ arg1043))))
Model : any1: 5, any2: 6, arg1036: (Nil), arg1037: (Nil), arg1038: (Nil), arg1039: (4::(Nil)), arg1040: (Nil), arg1041: (Nil), arg1042: (Nil), arg1043: (7::(Nil)), arg1044: ZERO
Model : any1: 1, any2: 2, arg1036: (Nil), arg1037: (Nil), arg1038: (Nil), arg1039: (Nil), arg1040: (Nil), arg1041: (Nil), arg1042: (0::(Nil)), arg1043: (Nil), arg1044: ZERO
Model : any1: 0, any2: 2, arg1036: (Nil), arg1037: (Nil), arg1038: (Nil), arg1039: (Nil), arg1040: (Nil), arg1041: (Nil), arg1042: (Nil), arg1043: (Nil), arg1044: SUCC (ZERO)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) (((((((((((Nil) @ (5::(Nil))) @ (6::(Nil))) @ (Nil)) @ (Nil)) @ (4::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (7::(Nil)))) = (5::(6::rotate (ZERO) (((((((((Nil) @ (Nil)) @ (Nil)) @ (4::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (7::(Nil))))))
rotate (ZERO) (((((((((((Nil) @ (1::(Nil))) @ (2::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (0::(Nil))) @ (Nil))) = (1::(2::rotate (ZERO) (((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (0::(Nil))) @ (Nil)))))
rotate (SUCC (ZERO)) (((((((((((Nil) @ (0::(Nil))) @ (2::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (0::(2::rotate (SUCC (ZERO)) (((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
Simplifying took 0.002339 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any9:any) (any_list2:any list), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))
Model : any1: 0, any2: 8, any3: 3, any4: 4, any5: 7, any6: 4, any7: 6, any8: 1, any9: 5, any_list2: (8::(Nil))
Model : any1: 3, any2: 6, any3: 1, any4: 6, any5: 4, any6: 1, any7: 5, any8: 4, any9: 7, any_list2: (Nil)
Model : any1: 5, any2: 7, any3: 3, any4: 0, any5: 0, any6: 3, any7: 3, any8: 1, any9: 7, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((8::(Nil)))) ((((((((((((8::(Nil)) @ (Nil)) @ (0::(Nil))) @ (8::(Nil))) @ (3::(Nil))) @ (4::(Nil))) @ (7::(Nil))) @ (4::(Nil))) @ (6::(Nil))) @ (1::(Nil))) @ (5::(Nil)))) = (0::(8::rotate (len ((8::(Nil)))) ((((((((((8::(Nil)) @ (Nil)) @ (3::(Nil))) @ (4::(Nil))) @ (7::(Nil))) @ (4::(Nil))) @ (6::(Nil))) @ (1::(Nil))) @ (5::(Nil))))))
rotate (len ((Nil))) ((((((((((((Nil) @ (Nil)) @ (3::(Nil))) @ (6::(Nil))) @ (1::(Nil))) @ (6::(Nil))) @ (4::(Nil))) @ (1::(Nil))) @ (5::(Nil))) @ (4::(Nil))) @ (7::(Nil)))) = (3::(6::rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (1::(Nil))) @ (6::(Nil))) @ (4::(Nil))) @ (1::(Nil))) @ (5::(Nil))) @ (4::(Nil))) @ (7::(Nil))))))
rotate (len ((Nil))) ((((((((((((Nil) @ (Nil)) @ (5::(Nil))) @ (7::(Nil))) @ (3::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (3::(Nil))) @ (3::(Nil))) @ (1::(Nil))) @ (7::(Nil)))) = (5::(7::rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (3::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (3::(Nil))) @ (3::(Nil))) @ (1::(Nil))) @ (7::(Nil))))))
Simplifying took 0.016349 seconds
Result : true
advanced_generalize done
=================================================
Progress: 557


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any2 : any
any5 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any6(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any2 : any
any5 : any
any6 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 2
intro any7(rank:19)
intro any8(rank:19)
=================================================
Progress: 558


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any2 : any
any5 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any7(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any2 : any
any5 : any
any7 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any6:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 1
intro any8(rank:19)
=================================================
Progress: 559


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any2 : any
any5 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any8(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any2 : any
any5 : any
any8 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any5
intro any8
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg1045:any list) (arg1046:any list) (arg1047:any list) (arg1048:any list) (arg1049:any list) (arg1050:any list) (arg1051:any list) (arg1052:any list) (arg1053:nat), rotate (arg1053) ((((((((((arg1045 @ (any1::(Nil))) @ (any2::(Nil))) @ arg1046) @ arg1047) @ arg1048) @ arg1049) @ arg1050) @ arg1051) @ arg1052)) = (any1::(any2::rotate (arg1053) ((((((((arg1045 @ arg1046) @ arg1047) @ arg1048) @ arg1049) @ arg1050) @ arg1051) @ arg1052))))
Model : any1: 8, any2: 3, arg1045: (Nil), arg1046: (Nil), arg1047: (Nil), arg1048: (Nil), arg1049: (Nil), arg1050: (Nil), arg1051: (Nil), arg1052: (0::(5::(Nil))), arg1053: ZERO
Model : any1: 5, any2: 2, arg1045: (Nil), arg1046: (Nil), arg1047: (Nil), arg1048: (4::(2::(Nil))), arg1049: (Nil), arg1050: (Nil), arg1051: (Nil), arg1052: (Nil), arg1053: SUCC (ZERO)
Model : any1: 3, any2: 0, arg1045: (Nil), arg1046: (Nil), arg1047: (Nil), arg1048: (1::(Nil)), arg1049: (Nil), arg1050: (Nil), arg1051: (Nil), arg1052: (Nil), arg1053: SUCC (ZERO)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) (((((((((((Nil) @ (8::(Nil))) @ (3::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (0::(5::(Nil))))) = (8::(3::rotate (ZERO) (((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (0::(5::(Nil)))))))
rotate (SUCC (ZERO)) (((((((((((Nil) @ (5::(Nil))) @ (2::(Nil))) @ (Nil)) @ (Nil)) @ (4::(2::(Nil)))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (5::(2::rotate (SUCC (ZERO)) (((((((((Nil) @ (Nil)) @ (Nil)) @ (4::(2::(Nil)))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (SUCC (ZERO)) (((((((((((Nil) @ (3::(Nil))) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (1::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (3::(0::rotate (SUCC (ZERO)) (((((((((Nil) @ (Nil)) @ (Nil)) @ (1::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
Simplifying took 0.003315 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any9:any) (any_list2:any list), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))
Model : any1: 0, any2: 0, any3: 3, any4: 1, any5: 1, any6: 5, any7: 7, any8: 1, any9: 8, any_list2: (Nil)
Model : any1: 8, any2: 0, any3: 5, any4: 3, any5: 0, any6: 6, any7: 4, any8: 4, any9: 3, any_list2: (Nil)
Model : any1: 0, any2: 0, any3: 0, any4: 1, any5: 2, any6: 0, any7: 3, any8: 6, any9: 1, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) ((((((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (0::(Nil))) @ (3::(Nil))) @ (1::(Nil))) @ (1::(Nil))) @ (5::(Nil))) @ (7::(Nil))) @ (1::(Nil))) @ (8::(Nil)))) = (0::(0::rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (3::(Nil))) @ (1::(Nil))) @ (1::(Nil))) @ (5::(Nil))) @ (7::(Nil))) @ (1::(Nil))) @ (8::(Nil))))))
rotate (len ((Nil))) ((((((((((((Nil) @ (Nil)) @ (8::(Nil))) @ (0::(Nil))) @ (5::(Nil))) @ (3::(Nil))) @ (0::(Nil))) @ (6::(Nil))) @ (4::(Nil))) @ (4::(Nil))) @ (3::(Nil)))) = (8::(0::rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (5::(Nil))) @ (3::(Nil))) @ (0::(Nil))) @ (6::(Nil))) @ (4::(Nil))) @ (4::(Nil))) @ (3::(Nil))))))
rotate (len ((Nil))) ((((((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (1::(Nil))) @ (2::(Nil))) @ (0::(Nil))) @ (3::(Nil))) @ (6::(Nil))) @ (1::(Nil)))) = (0::(0::rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (1::(Nil))) @ (2::(Nil))) @ (0::(Nil))) @ (3::(Nil))) @ (6::(Nil))) @ (1::(Nil))))))
Simplifying took 0.012138 seconds
Result : true
advanced_generalize done
=================================================
Progress: 560


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any2 : any
any6 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any5:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any7(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any2 : any
any6 : any
any7 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any5:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 1
intro any8(rank:19)
=================================================
Progress: 561


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any2 : any
any6 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any5:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any8(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any2 : any
any6 : any
any8 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any5:any) (any7:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any6
intro any8
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg1054:any list) (arg1055:any list) (arg1056:any list) (arg1057:any list) (arg1058:any list) (arg1059:any list) (arg1060:any list) (arg1061:any list) (arg1062:nat), rotate (arg1062) ((((((((((arg1054 @ (any1::(Nil))) @ (any2::(Nil))) @ arg1055) @ arg1056) @ arg1057) @ arg1058) @ arg1059) @ arg1060) @ arg1061)) = (any1::(any2::rotate (arg1062) ((((((((arg1054 @ arg1055) @ arg1056) @ arg1057) @ arg1058) @ arg1059) @ arg1060) @ arg1061))))
Model : any1: 2, any2: 5, arg1054: (Nil), arg1055: (Nil), arg1056: (Nil), arg1057: (Nil), arg1058: (Nil), arg1059: (Nil), arg1060: (Nil), arg1061: (Nil), arg1062: ZERO
Model : any1: 7, any2: 0, arg1054: (Nil), arg1055: (Nil), arg1056: (Nil), arg1057: (Nil), arg1058: (Nil), arg1059: (Nil), arg1060: (Nil), arg1061: (Nil), arg1062: ZERO
Model : any1: 1, any2: 3, arg1054: (Nil), arg1055: (Nil), arg1056: (Nil), arg1057: (Nil), arg1058: (Nil), arg1059: (Nil), arg1060: (Nil), arg1061: (Nil), arg1062: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) (((((((((((Nil) @ (2::(Nil))) @ (5::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (2::(5::rotate (ZERO) (((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) (((((((((((Nil) @ (7::(Nil))) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (7::(0::rotate (ZERO) (((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) (((((((((((Nil) @ (1::(Nil))) @ (3::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (1::(3::rotate (ZERO) (((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
Simplifying took 0.001723 seconds
Result : true
advanced_generalize done


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any2 : any
any6 : any
any8 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any5:any) (any7:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
=================================================
Progress: 562


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any2 : any
any6 : any
any8 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any5:any) (any7:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (arg1054:any list) (arg1055:any list) (arg1056:any list) (arg1057:any list) (arg1058:any list) (arg1059:any list) (arg1060:any list) (arg1061:any list) (arg1062:nat), rotate (arg1062) ((((((((((arg1054 @ (any1::(Nil))) @ (any2::(Nil))) @ arg1055) @ arg1056) @ arg1057) @ arg1058) @ arg1059) @ arg1060) @ arg1061)) = (any1::(any2::rotate (arg1062) ((((((((arg1054 @ arg1055) @ arg1056) @ arg1057) @ arg1058) @ arg1059) @ arg1060) @ arg1061))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (any_list7:any list) (any_list8:any list) (nat1:nat), rotate (nat1) ((((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7) @ any_list8)) = (any1::(any2::rotate (nat1) ((((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7) @ any_list8))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (any_list7:any list) (any_list8:any list) (nat1:nat), rotate (nat1) ((((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7) @ any_list8)) = (any1::(any2::rotate (nat1) ((((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7) @ any_list8))))

0 goal(s) more...

9 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:22)
=================================================
Progress: 563


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any2 : any
any7 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any5:any) (any6:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any8(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any2 : any
any7 : any
any8 : any
---------------------------------------
forall (any1:any) (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
intro any7
intro any8
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg1063:any list) (arg1064:any list) (arg1065:any list) (arg1066:any list) (arg1067:any list) (arg1068:any list) (arg1069:any list) (arg1070:any list) (arg1071:nat), rotate (arg1071) ((((((((((arg1063 @ (any1::(Nil))) @ (any2::(Nil))) @ arg1064) @ arg1065) @ arg1066) @ arg1067) @ arg1068) @ arg1069) @ arg1070)) = (any1::(any2::rotate (arg1071) ((((((((arg1063 @ arg1064) @ arg1065) @ arg1066) @ arg1067) @ arg1068) @ arg1069) @ arg1070))))
Model : any1: 6, any2: 4, arg1063: (Nil), arg1064: (Nil), arg1065: (0::(Nil)), arg1066: (Nil), arg1067: (8::(8::(Nil))), arg1068: (Nil), arg1069: (Nil), arg1070: (Nil), arg1071: ZERO
Model : any1: 4, any2: 3, arg1063: (Nil), arg1064: (Nil), arg1065: (Nil), arg1066: (7::(Nil)), arg1067: (Nil), arg1068: (Nil), arg1069: (Nil), arg1070: (2::(Nil)), arg1071: SUCC (SUCC (SUCC (ZERO)))
Model : any1: 1, any2: 3, arg1063: (Nil), arg1064: (1::(Nil)), arg1065: (8::(1::(Nil))), arg1066: (Nil), arg1067: (Nil), arg1068: (4::(Nil)), arg1069: (Nil), arg1070: (Nil), arg1071: SUCC (ZERO)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) (((((((((((Nil) @ (6::(Nil))) @ (4::(Nil))) @ (Nil)) @ (0::(Nil))) @ (Nil)) @ (8::(8::(Nil)))) @ (Nil)) @ (Nil)) @ (Nil))) = (6::(4::rotate (ZERO) (((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (Nil)) @ (8::(8::(Nil)))) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (SUCC (SUCC (SUCC (ZERO)))) (((((((((((Nil) @ (4::(Nil))) @ (3::(Nil))) @ (Nil)) @ (Nil)) @ (7::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (2::(Nil)))) = (4::(3::rotate (SUCC (SUCC (SUCC (ZERO)))) (((((((((Nil) @ (Nil)) @ (Nil)) @ (7::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (2::(Nil))))))
rotate (SUCC (ZERO)) (((((((((((Nil) @ (1::(Nil))) @ (3::(Nil))) @ (1::(Nil))) @ (8::(1::(Nil)))) @ (Nil)) @ (Nil)) @ (4::(Nil))) @ (Nil)) @ (Nil))) = (1::(3::rotate (SUCC (ZERO)) (((((((((Nil) @ (1::(Nil))) @ (8::(1::(Nil)))) @ (Nil)) @ (Nil)) @ (4::(Nil))) @ (Nil)) @ (Nil)))))
Simplifying took 0.008857 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any9:any) (any_list2:any list), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))
Model : any1: 7, any2: 3, any3: 5, any4: 3, any5: 1, any6: 4, any7: 1, any8: 6, any9: 2, any_list2: (Nil)
Model : any1: 7, any2: 5, any3: 8, any4: 7, any5: 3, any6: 8, any7: 1, any8: 6, any9: 0, any_list2: (0::(8::(Nil)))
Model : any1: 2, any2: 7, any3: 1, any4: 5, any5: 7, any6: 5, any7: 8, any8: 6, any9: 5, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) ((((((((((((Nil) @ (Nil)) @ (7::(Nil))) @ (3::(Nil))) @ (5::(Nil))) @ (3::(Nil))) @ (1::(Nil))) @ (4::(Nil))) @ (1::(Nil))) @ (6::(Nil))) @ (2::(Nil)))) = (7::(3::rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (5::(Nil))) @ (3::(Nil))) @ (1::(Nil))) @ (4::(Nil))) @ (1::(Nil))) @ (6::(Nil))) @ (2::(Nil))))))
rotate (len ((0::(8::(Nil))))) ((((((((((((0::(8::(Nil))) @ (Nil)) @ (7::(Nil))) @ (5::(Nil))) @ (8::(Nil))) @ (7::(Nil))) @ (3::(Nil))) @ (8::(Nil))) @ (1::(Nil))) @ (6::(Nil))) @ (0::(Nil)))) = (7::(5::rotate (len ((0::(8::(Nil))))) ((((((((((0::(8::(Nil))) @ (Nil)) @ (8::(Nil))) @ (7::(Nil))) @ (3::(Nil))) @ (8::(Nil))) @ (1::(Nil))) @ (6::(Nil))) @ (0::(Nil))))))
rotate (len ((Nil))) ((((((((((((Nil) @ (Nil)) @ (2::(Nil))) @ (7::(Nil))) @ (1::(Nil))) @ (5::(Nil))) @ (7::(Nil))) @ (5::(Nil))) @ (8::(Nil))) @ (6::(Nil))) @ (5::(Nil)))) = (2::(7::rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (1::(Nil))) @ (5::(Nil))) @ (7::(Nil))) @ (5::(Nil))) @ (8::(Nil))) @ (6::(Nil))) @ (5::(Nil))))))
Simplifying took 0.024944 seconds
Result : true
advanced_generalize done
=================================================
Progress: 564


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any5(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any3 : any
any4 : any
any5 : any
---------------------------------------
forall (any1:any) (any2:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 3
intro any6(rank:19)
intro any7(rank:19)
intro any8(rank:19)
=================================================
Progress: 565


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any6(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any3 : any
any4 : any
any6 : any
---------------------------------------
forall (any1:any) (any2:any) (any5:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 2
intro any7(rank:19)
intro any8(rank:19)
=================================================
Progress: 566


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any7(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any3 : any
any4 : any
any7 : any
---------------------------------------
forall (any1:any) (any2:any) (any5:any) (any6:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 1
intro any8(rank:19)
=================================================
Progress: 567


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any3 : any
any4 : any
---------------------------------------
forall (any1:any) (any2:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any8(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any3 : any
any4 : any
any8 : any
---------------------------------------
forall (any1:any) (any2:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any4
intro any8
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg1072:any list) (arg1073:any list) (arg1074:any list) (arg1075:any list) (arg1076:any list) (arg1077:any list) (arg1078:any list) (arg1079:any list) (arg1080:nat), rotate (arg1080) ((((((((((arg1072 @ (any1::(Nil))) @ (any2::(Nil))) @ arg1073) @ arg1074) @ arg1075) @ arg1076) @ arg1077) @ arg1078) @ arg1079)) = (any1::(any2::rotate (arg1080) ((((((((arg1072 @ arg1073) @ arg1074) @ arg1075) @ arg1076) @ arg1077) @ arg1078) @ arg1079))))
Model : any1: 1, any2: 6, arg1072: (Nil), arg1073: (Nil), arg1074: (Nil), arg1075: (Nil), arg1076: (Nil), arg1077: (Nil), arg1078: (Nil), arg1079: (Nil), arg1080: ZERO
Model : any1: 7, any2: 3, arg1072: (7::(Nil)), arg1073: (Nil), arg1074: (Nil), arg1075: (Nil), arg1076: (Nil), arg1077: (Nil), arg1078: (3::(Nil)), arg1079: (Nil), arg1080: ZERO
Model : any1: 5, any2: 7, arg1072: (Nil), arg1073: (7::(3::(Nil))), arg1074: (Nil), arg1075: (2::(Nil)), arg1076: (Nil), arg1077: (Nil), arg1078: (Nil), arg1079: (Nil), arg1080: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) (((((((((((Nil) @ (1::(Nil))) @ (6::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (1::(6::rotate (ZERO) (((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) (((((((((((7::(Nil)) @ (7::(Nil))) @ (3::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (3::(Nil))) @ (Nil))) = (7::(3::rotate (ZERO) (((((((((7::(Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (3::(Nil))) @ (Nil)))))
rotate (ZERO) (((((((((((Nil) @ (5::(Nil))) @ (7::(Nil))) @ (7::(3::(Nil)))) @ (Nil)) @ (2::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (5::(7::rotate (ZERO) (((((((((Nil) @ (7::(3::(Nil)))) @ (Nil)) @ (2::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
Simplifying took 0.005027 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any9:any) (any_list2:any list), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))
Model : any1: 0, any2: 0, any3: 2, any4: 4, any5: 1, any6: 8, any7: 5, any8: 1, any9: 3, any_list2: (5::(Nil))
Model : any1: 8, any2: 1, any3: 0, any4: 6, any5: 0, any6: 5, any7: 1, any8: 7, any9: 0, any_list2: (Nil)
Model : any1: 0, any2: 7, any3: 2, any4: 4, any5: 5, any6: 7, any7: 3, any8: 4, any9: 7, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((5::(Nil)))) ((((((((((((5::(Nil)) @ (Nil)) @ (0::(Nil))) @ (0::(Nil))) @ (2::(Nil))) @ (4::(Nil))) @ (1::(Nil))) @ (8::(Nil))) @ (5::(Nil))) @ (1::(Nil))) @ (3::(Nil)))) = (0::(0::rotate (len ((5::(Nil)))) ((((((((((5::(Nil)) @ (Nil)) @ (2::(Nil))) @ (4::(Nil))) @ (1::(Nil))) @ (8::(Nil))) @ (5::(Nil))) @ (1::(Nil))) @ (3::(Nil))))))
rotate (len ((Nil))) ((((((((((((Nil) @ (Nil)) @ (8::(Nil))) @ (1::(Nil))) @ (0::(Nil))) @ (6::(Nil))) @ (0::(Nil))) @ (5::(Nil))) @ (1::(Nil))) @ (7::(Nil))) @ (0::(Nil)))) = (8::(1::rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (6::(Nil))) @ (0::(Nil))) @ (5::(Nil))) @ (1::(Nil))) @ (7::(Nil))) @ (0::(Nil))))))
rotate (len ((Nil))) ((((((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (7::(Nil))) @ (2::(Nil))) @ (4::(Nil))) @ (5::(Nil))) @ (7::(Nil))) @ (3::(Nil))) @ (4::(Nil))) @ (7::(Nil)))) = (0::(7::rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (2::(Nil))) @ (4::(Nil))) @ (5::(Nil))) @ (7::(Nil))) @ (3::(Nil))) @ (4::(Nil))) @ (7::(Nil))))))
Simplifying took 0.015948 seconds
Result : true
advanced_generalize done
=================================================
Progress: 568


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any3 : any
any5 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any6(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any3 : any
any5 : any
any6 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 2
intro any7(rank:19)
intro any8(rank:19)
=================================================
Progress: 569


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any3 : any
any5 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any7(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any3 : any
any5 : any
any7 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any6:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 1
intro any8(rank:19)
=================================================
Progress: 570


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any3 : any
any5 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any8(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any3 : any
any5 : any
any8 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any5
intro any8
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg1081:any list) (arg1082:any list) (arg1083:any list) (arg1084:any list) (arg1085:any list) (arg1086:any list) (arg1087:any list) (arg1088:any list) (arg1089:nat), rotate (arg1089) ((((((((((arg1081 @ (any1::(Nil))) @ (any2::(Nil))) @ arg1082) @ arg1083) @ arg1084) @ arg1085) @ arg1086) @ arg1087) @ arg1088)) = (any1::(any2::rotate (arg1089) ((((((((arg1081 @ arg1082) @ arg1083) @ arg1084) @ arg1085) @ arg1086) @ arg1087) @ arg1088))))
Model : any1: 1, any2: 0, arg1081: (Nil), arg1082: (Nil), arg1083: (Nil), arg1084: (2::(Nil)), arg1085: (Nil), arg1086: (Nil), arg1087: (Nil), arg1088: (Nil), arg1089: ZERO
Model : any1: 2, any2: 5, arg1081: (Nil), arg1082: (Nil), arg1083: (Nil), arg1084: (Nil), arg1085: (0::(Nil)), arg1086: (Nil), arg1087: (Nil), arg1088: (3::(Nil)), arg1089: ZERO
Model : any1: 2, any2: 2, arg1081: (Nil), arg1082: (Nil), arg1083: (Nil), arg1084: (Nil), arg1085: (Nil), arg1086: (Nil), arg1087: (Nil), arg1088: (Nil), arg1089: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) (((((((((((Nil) @ (1::(Nil))) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (2::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (1::(0::rotate (ZERO) (((((((((Nil) @ (Nil)) @ (Nil)) @ (2::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) (((((((((((Nil) @ (2::(Nil))) @ (5::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (3::(Nil)))) = (2::(5::rotate (ZERO) (((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (3::(Nil))))))
rotate (ZERO) (((((((((((Nil) @ (2::(Nil))) @ (2::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (2::(2::rotate (ZERO) (((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
Simplifying took 0.002199 seconds
Result : true
advanced_generalize done


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any3 : any
any5 : any
any8 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
=================================================
Progress: 571


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any3 : any
any5 : any
any8 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (arg1081:any list) (arg1082:any list) (arg1083:any list) (arg1084:any list) (arg1085:any list) (arg1086:any list) (arg1087:any list) (arg1088:any list) (arg1089:nat), rotate (arg1089) ((((((((((arg1081 @ (any1::(Nil))) @ (any2::(Nil))) @ arg1082) @ arg1083) @ arg1084) @ arg1085) @ arg1086) @ arg1087) @ arg1088)) = (any1::(any2::rotate (arg1089) ((((((((arg1081 @ arg1082) @ arg1083) @ arg1084) @ arg1085) @ arg1086) @ arg1087) @ arg1088))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (any_list7:any list) (any_list8:any list) (nat1:nat), rotate (nat1) ((((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7) @ any_list8)) = (any1::(any2::rotate (nat1) ((((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7) @ any_list8))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (any_list7:any list) (any_list8:any list) (nat1:nat), rotate (nat1) ((((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7) @ any_list8)) = (any1::(any2::rotate (nat1) ((((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7) @ any_list8))))

0 goal(s) more...

9 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:22)
=================================================
Progress: 572


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any3 : any
any6 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any5:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any7(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any3 : any
any6 : any
any7 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any5:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 1
intro any8(rank:19)
=================================================
Progress: 573


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any3 : any
any6 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any5:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any8(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any3 : any
any6 : any
any8 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any5:any) (any7:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any6
intro any8
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg1090:any list) (arg1091:any list) (arg1092:any list) (arg1093:any list) (arg1094:any list) (arg1095:any list) (arg1096:any list) (arg1097:any list) (arg1098:nat), rotate (arg1098) ((((((((((arg1090 @ (any1::(Nil))) @ (any2::(Nil))) @ arg1091) @ arg1092) @ arg1093) @ arg1094) @ arg1095) @ arg1096) @ arg1097)) = (any1::(any2::rotate (arg1098) ((((((((arg1090 @ arg1091) @ arg1092) @ arg1093) @ arg1094) @ arg1095) @ arg1096) @ arg1097))))
Model : any1: 1, any2: 2, arg1090: (Nil), arg1091: (Nil), arg1092: (0::(0::(Nil))), arg1093: (Nil), arg1094: (2::(Nil)), arg1095: (0::(Nil)), arg1096: (Nil), arg1097: (Nil), arg1098: ZERO
Model : any1: 2, any2: 8, arg1090: (Nil), arg1091: (Nil), arg1092: (1::(Nil)), arg1093: (Nil), arg1094: (Nil), arg1095: (Nil), arg1096: (7::(Nil)), arg1097: (Nil), arg1098: ZERO
Model : any1: 8, any2: 7, arg1090: (Nil), arg1091: (Nil), arg1092: (Nil), arg1093: (Nil), arg1094: (Nil), arg1095: (Nil), arg1096: (3::(Nil)), arg1097: (Nil), arg1098: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) (((((((((((Nil) @ (1::(Nil))) @ (2::(Nil))) @ (Nil)) @ (0::(0::(Nil)))) @ (Nil)) @ (2::(Nil))) @ (0::(Nil))) @ (Nil)) @ (Nil))) = (1::(2::rotate (ZERO) (((((((((Nil) @ (Nil)) @ (0::(0::(Nil)))) @ (Nil)) @ (2::(Nil))) @ (0::(Nil))) @ (Nil)) @ (Nil)))))
rotate (ZERO) (((((((((((Nil) @ (2::(Nil))) @ (8::(Nil))) @ (Nil)) @ (1::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (7::(Nil))) @ (Nil))) = (2::(8::rotate (ZERO) (((((((((Nil) @ (Nil)) @ (1::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (7::(Nil))) @ (Nil)))))
rotate (ZERO) (((((((((((Nil) @ (8::(Nil))) @ (7::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (3::(Nil))) @ (Nil))) = (8::(7::rotate (ZERO) (((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (3::(Nil))) @ (Nil)))))
Simplifying took 0.003939 seconds
Result : true
advanced_generalize done


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any3 : any
any6 : any
any8 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any5:any) (any7:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
=================================================
Progress: 574


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any3 : any
any6 : any
any8 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any5:any) (any7:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (arg1090:any list) (arg1091:any list) (arg1092:any list) (arg1093:any list) (arg1094:any list) (arg1095:any list) (arg1096:any list) (arg1097:any list) (arg1098:nat), rotate (arg1098) ((((((((((arg1090 @ (any1::(Nil))) @ (any2::(Nil))) @ arg1091) @ arg1092) @ arg1093) @ arg1094) @ arg1095) @ arg1096) @ arg1097)) = (any1::(any2::rotate (arg1098) ((((((((arg1090 @ arg1091) @ arg1092) @ arg1093) @ arg1094) @ arg1095) @ arg1096) @ arg1097))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (any_list7:any list) (any_list8:any list) (nat1:nat), rotate (nat1) ((((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7) @ any_list8)) = (any1::(any2::rotate (nat1) ((((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7) @ any_list8))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (any_list7:any list) (any_list8:any list) (nat1:nat), rotate (nat1) ((((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7) @ any_list8)) = (any1::(any2::rotate (nat1) ((((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7) @ any_list8))))

0 goal(s) more...

9 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:22)
=================================================
Progress: 575


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any3 : any
any7 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any5:any) (any6:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any8(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any3 : any
any7 : any
any8 : any
---------------------------------------
forall (any1:any) (any2:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any3
intro any7
intro any8
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg1099:any list) (arg1100:any list) (arg1101:any list) (arg1102:any list) (arg1103:any list) (arg1104:any list) (arg1105:any list) (arg1106:any list) (arg1107:nat), rotate (arg1107) ((((((((((arg1099 @ (any1::(Nil))) @ (any2::(Nil))) @ arg1100) @ arg1101) @ arg1102) @ arg1103) @ arg1104) @ arg1105) @ arg1106)) = (any1::(any2::rotate (arg1107) ((((((((arg1099 @ arg1100) @ arg1101) @ arg1102) @ arg1103) @ arg1104) @ arg1105) @ arg1106))))
Model : any1: 1, any2: 5, arg1099: (Nil), arg1100: (Nil), arg1101: (3::(Nil)), arg1102: (Nil), arg1103: (Nil), arg1104: (Nil), arg1105: (Nil), arg1106: (5::(Nil)), arg1107: ZERO
Model : any1: 2, any2: 7, arg1099: (Nil), arg1100: (Nil), arg1101: (Nil), arg1102: (2::(0::(Nil))), arg1103: (Nil), arg1104: (Nil), arg1105: (8::(Nil)), arg1106: (Nil), arg1107: ZERO
Model : any1: 0, any2: 2, arg1099: (5::(Nil)), arg1100: (Nil), arg1101: (Nil), arg1102: (Nil), arg1103: (5::(Nil)), arg1104: (Nil), arg1105: (Nil), arg1106: (Nil), arg1107: SUCC (SUCC (ZERO))
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) (((((((((((Nil) @ (1::(Nil))) @ (5::(Nil))) @ (Nil)) @ (3::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (5::(Nil)))) = (1::(5::rotate (ZERO) (((((((((Nil) @ (Nil)) @ (3::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (5::(Nil))))))
rotate (ZERO) (((((((((((Nil) @ (2::(Nil))) @ (7::(Nil))) @ (Nil)) @ (Nil)) @ (2::(0::(Nil)))) @ (Nil)) @ (Nil)) @ (8::(Nil))) @ (Nil))) = (2::(7::rotate (ZERO) (((((((((Nil) @ (Nil)) @ (Nil)) @ (2::(0::(Nil)))) @ (Nil)) @ (Nil)) @ (8::(Nil))) @ (Nil)))))
rotate (SUCC (SUCC (ZERO))) (((((((((((5::(Nil)) @ (0::(Nil))) @ (2::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (5::(Nil))) @ (Nil)) @ (Nil)) @ (Nil))) = (0::(2::rotate (SUCC (SUCC (ZERO))) (((((((((5::(Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (5::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)))))
Simplifying took 0.004852 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any9:any) (any_list2:any list), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))
Model : any1: 5, any2: 3, any3: 0, any4: 5, any5: 8, any6: 1, any7: 5, any8: 7, any9: 1, any_list2: (Nil)
Model : any1: 0, any2: 8, any3: 3, any4: 0, any5: 2, any6: 6, any7: 7, any8: 8, any9: 1, any_list2: (Nil)
Model : any1: 8, any2: 1, any3: 6, any4: 1, any5: 3, any6: 5, any7: 4, any8: 6, any9: 7, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) ((((((((((((Nil) @ (Nil)) @ (5::(Nil))) @ (3::(Nil))) @ (0::(Nil))) @ (5::(Nil))) @ (8::(Nil))) @ (1::(Nil))) @ (5::(Nil))) @ (7::(Nil))) @ (1::(Nil)))) = (5::(3::rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (5::(Nil))) @ (8::(Nil))) @ (1::(Nil))) @ (5::(Nil))) @ (7::(Nil))) @ (1::(Nil))))))
rotate (len ((Nil))) ((((((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (8::(Nil))) @ (3::(Nil))) @ (0::(Nil))) @ (2::(Nil))) @ (6::(Nil))) @ (7::(Nil))) @ (8::(Nil))) @ (1::(Nil)))) = (0::(8::rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (3::(Nil))) @ (0::(Nil))) @ (2::(Nil))) @ (6::(Nil))) @ (7::(Nil))) @ (8::(Nil))) @ (1::(Nil))))))
rotate (len ((Nil))) ((((((((((((Nil) @ (Nil)) @ (8::(Nil))) @ (1::(Nil))) @ (6::(Nil))) @ (1::(Nil))) @ (3::(Nil))) @ (5::(Nil))) @ (4::(Nil))) @ (6::(Nil))) @ (7::(Nil)))) = (8::(1::rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (6::(Nil))) @ (1::(Nil))) @ (3::(Nil))) @ (5::(Nil))) @ (4::(Nil))) @ (6::(Nil))) @ (7::(Nil))))))
Simplifying took 0.013384 seconds
Result : true
advanced_generalize done
=================================================
Progress: 576


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any4 : any
any5 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any6(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any4 : any
any5 : any
any6 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 2
intro any7(rank:19)
intro any8(rank:19)
=================================================
Progress: 577


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any4 : any
any5 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any7(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any4 : any
any5 : any
any7 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any6:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 1
intro any8(rank:19)
=================================================
Progress: 578


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any4 : any
any5 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any8(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any4 : any
any5 : any
any8 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any4
intro any5
intro any8
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg1108:any list) (arg1109:any list) (arg1110:any list) (arg1111:any list) (arg1112:any list) (arg1113:any list) (arg1114:any list) (arg1115:any list) (arg1116:nat), rotate (arg1116) ((((((((((arg1108 @ (any1::(Nil))) @ (any2::(Nil))) @ arg1109) @ arg1110) @ arg1111) @ arg1112) @ arg1113) @ arg1114) @ arg1115)) = (any1::(any2::rotate (arg1116) ((((((((arg1108 @ arg1109) @ arg1110) @ arg1111) @ arg1112) @ arg1113) @ arg1114) @ arg1115))))
Model : any1: 3, any2: 5, arg1108: (Nil), arg1109: (Nil), arg1110: (Nil), arg1111: (Nil), arg1112: (5::(5::(Nil))), arg1113: (Nil), arg1114: (Nil), arg1115: (Nil), arg1116: ZERO
Model : any1: 3, any2: 5, arg1108: (0::(Nil)), arg1109: (Nil), arg1110: (5::(Nil)), arg1111: (Nil), arg1112: (Nil), arg1113: (Nil), arg1114: (Nil), arg1115: (Nil), arg1116: SUCC (ZERO)
Model : any1: 4, any2: 3, arg1108: (Nil), arg1109: (Nil), arg1110: (Nil), arg1111: (Nil), arg1112: (Nil), arg1113: (Nil), arg1114: (Nil), arg1115: (Nil), arg1116: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) (((((((((((Nil) @ (3::(Nil))) @ (5::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (5::(5::(Nil)))) @ (Nil)) @ (Nil)) @ (Nil))) = (3::(5::rotate (ZERO) (((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (5::(5::(Nil)))) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (SUCC (ZERO)) (((((((((((0::(Nil)) @ (3::(Nil))) @ (5::(Nil))) @ (Nil)) @ (5::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (3::(5::rotate (SUCC (ZERO)) (((((((((0::(Nil)) @ (Nil)) @ (5::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) (((((((((((Nil) @ (4::(Nil))) @ (3::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (4::(3::rotate (ZERO) (((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
Simplifying took 0.004115 seconds
Result : true
advanced_generalize done


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any4 : any
any5 : any
any8 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
=================================================
Progress: 579


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any4 : any
any5 : any
any8 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (arg1108:any list) (arg1109:any list) (arg1110:any list) (arg1111:any list) (arg1112:any list) (arg1113:any list) (arg1114:any list) (arg1115:any list) (arg1116:nat), rotate (arg1116) ((((((((((arg1108 @ (any1::(Nil))) @ (any2::(Nil))) @ arg1109) @ arg1110) @ arg1111) @ arg1112) @ arg1113) @ arg1114) @ arg1115)) = (any1::(any2::rotate (arg1116) ((((((((arg1108 @ arg1109) @ arg1110) @ arg1111) @ arg1112) @ arg1113) @ arg1114) @ arg1115))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (any_list7:any list) (any_list8:any list) (nat1:nat), rotate (nat1) ((((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7) @ any_list8)) = (any1::(any2::rotate (nat1) ((((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7) @ any_list8))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (any_list7:any list) (any_list8:any list) (nat1:nat), rotate (nat1) ((((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7) @ any_list8)) = (any1::(any2::rotate (nat1) ((((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7) @ any_list8))))

0 goal(s) more...

9 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:22)
=================================================
Progress: 580


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any4 : any
any6 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any5:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any7(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any4 : any
any6 : any
any7 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any5:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 1
intro any8(rank:19)
=================================================
Progress: 581


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any4 : any
any6 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any5:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any8(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any4 : any
any6 : any
any8 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any5:any) (any7:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any4
intro any6
intro any8
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg1117:any list) (arg1118:any list) (arg1119:any list) (arg1120:any list) (arg1121:any list) (arg1122:any list) (arg1123:any list) (arg1124:any list) (arg1125:nat), rotate (arg1125) ((((((((((arg1117 @ (any1::(Nil))) @ (any2::(Nil))) @ arg1118) @ arg1119) @ arg1120) @ arg1121) @ arg1122) @ arg1123) @ arg1124)) = (any1::(any2::rotate (arg1125) ((((((((arg1117 @ arg1118) @ arg1119) @ arg1120) @ arg1121) @ arg1122) @ arg1123) @ arg1124))))
Model : any1: 3, any2: 0, arg1117: (Nil), arg1118: (Nil), arg1119: (0::(Nil)), arg1120: (Nil), arg1121: (Nil), arg1122: (3::(1::(Nil))), arg1123: (Nil), arg1124: (3::(Nil)), arg1125: ZERO
Model : any1: 0, any2: 4, arg1117: (0::(Nil)), arg1118: (Nil), arg1119: (Nil), arg1120: (Nil), arg1121: (Nil), arg1122: (Nil), arg1123: (Nil), arg1124: (Nil), arg1125: ZERO
Model : any1: 3, any2: 0, arg1117: (5::(0::(Nil))), arg1118: (Nil), arg1119: (3::(Nil)), arg1120: (Nil), arg1121: (5::(Nil)), arg1122: (Nil), arg1123: (Nil), arg1124: (Nil), arg1125: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) (((((((((((Nil) @ (3::(Nil))) @ (0::(Nil))) @ (Nil)) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (3::(1::(Nil)))) @ (Nil)) @ (3::(Nil)))) = (3::(0::rotate (ZERO) (((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (3::(1::(Nil)))) @ (Nil)) @ (3::(Nil))))))
rotate (ZERO) (((((((((((0::(Nil)) @ (0::(Nil))) @ (4::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (0::(4::rotate (ZERO) (((((((((0::(Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) (((((((((((5::(0::(Nil))) @ (3::(Nil))) @ (0::(Nil))) @ (Nil)) @ (3::(Nil))) @ (Nil)) @ (5::(Nil))) @ (Nil)) @ (Nil)) @ (Nil))) = (3::(0::rotate (ZERO) (((((((((5::(0::(Nil))) @ (Nil)) @ (3::(Nil))) @ (Nil)) @ (5::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)))))
Simplifying took 0.005339 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any9:any) (any_list2:any list), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))
Model : any1: 6, any2: 4, any3: 5, any4: 5, any5: 4, any6: 4, any7: 3, any8: 7, any9: 3, any_list2: (2::(0::(Nil)))
Model : any1: 2, any2: 4, any3: 1, any4: 7, any5: 3, any6: 6, any7: 0, any8: 3, any9: 2, any_list2: (Nil)
Model : any1: 2, any2: 6, any3: 4, any4: 2, any5: 3, any6: 7, any7: 8, any8: 4, any9: 5, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((2::(0::(Nil))))) ((((((((((((2::(0::(Nil))) @ (Nil)) @ (6::(Nil))) @ (4::(Nil))) @ (5::(Nil))) @ (5::(Nil))) @ (4::(Nil))) @ (4::(Nil))) @ (3::(Nil))) @ (7::(Nil))) @ (3::(Nil)))) = (6::(4::rotate (len ((2::(0::(Nil))))) ((((((((((2::(0::(Nil))) @ (Nil)) @ (5::(Nil))) @ (5::(Nil))) @ (4::(Nil))) @ (4::(Nil))) @ (3::(Nil))) @ (7::(Nil))) @ (3::(Nil))))))
rotate (len ((Nil))) ((((((((((((Nil) @ (Nil)) @ (2::(Nil))) @ (4::(Nil))) @ (1::(Nil))) @ (7::(Nil))) @ (3::(Nil))) @ (6::(Nil))) @ (0::(Nil))) @ (3::(Nil))) @ (2::(Nil)))) = (2::(4::rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (1::(Nil))) @ (7::(Nil))) @ (3::(Nil))) @ (6::(Nil))) @ (0::(Nil))) @ (3::(Nil))) @ (2::(Nil))))))
rotate (len ((Nil))) ((((((((((((Nil) @ (Nil)) @ (2::(Nil))) @ (6::(Nil))) @ (4::(Nil))) @ (2::(Nil))) @ (3::(Nil))) @ (7::(Nil))) @ (8::(Nil))) @ (4::(Nil))) @ (5::(Nil)))) = (2::(6::rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (4::(Nil))) @ (2::(Nil))) @ (3::(Nil))) @ (7::(Nil))) @ (8::(Nil))) @ (4::(Nil))) @ (5::(Nil))))))
Simplifying took 0.020523 seconds
Result : true
advanced_generalize done
=================================================
Progress: 582


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any4 : any
any7 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any5:any) (any6:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any8(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any4 : any
any7 : any
any8 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any5:any) (any6:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any4
intro any7
intro any8
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg1126:any list) (arg1127:any list) (arg1128:any list) (arg1129:any list) (arg1130:any list) (arg1131:any list) (arg1132:any list) (arg1133:any list) (arg1134:nat), rotate (arg1134) ((((((((((arg1126 @ (any1::(Nil))) @ (any2::(Nil))) @ arg1127) @ arg1128) @ arg1129) @ arg1130) @ arg1131) @ arg1132) @ arg1133)) = (any1::(any2::rotate (arg1134) ((((((((arg1126 @ arg1127) @ arg1128) @ arg1129) @ arg1130) @ arg1131) @ arg1132) @ arg1133))))
Model : any1: 3, any2: 7, arg1126: (Nil), arg1127: (Nil), arg1128: (4::(Nil)), arg1129: (1::(Nil)), arg1130: (Nil), arg1131: (Nil), arg1132: (2::(0::(Nil))), arg1133: (Nil), arg1134: SUCC (ZERO)
Model : any1: 5, any2: 1, arg1126: (Nil), arg1127: (Nil), arg1128: (Nil), arg1129: (Nil), arg1130: (Nil), arg1131: (Nil), arg1132: (Nil), arg1133: (2::(Nil)), arg1134: ZERO
Model : any1: 1, any2: 8, arg1126: (Nil), arg1127: (3::(Nil)), arg1128: (Nil), arg1129: (Nil), arg1130: (Nil), arg1131: (Nil), arg1132: (Nil), arg1133: (Nil), arg1134: SUCC (ZERO)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (SUCC (ZERO)) (((((((((((Nil) @ (3::(Nil))) @ (7::(Nil))) @ (Nil)) @ (4::(Nil))) @ (1::(Nil))) @ (Nil)) @ (Nil)) @ (2::(0::(Nil)))) @ (Nil))) = (3::(7::rotate (SUCC (ZERO)) (((((((((Nil) @ (Nil)) @ (4::(Nil))) @ (1::(Nil))) @ (Nil)) @ (Nil)) @ (2::(0::(Nil)))) @ (Nil)))))
rotate (ZERO) (((((((((((Nil) @ (5::(Nil))) @ (1::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (2::(Nil)))) = (5::(1::rotate (ZERO) (((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (2::(Nil))))))
rotate (SUCC (ZERO)) (((((((((((Nil) @ (1::(Nil))) @ (8::(Nil))) @ (3::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (1::(8::rotate (SUCC (ZERO)) (((((((((Nil) @ (3::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
Simplifying took 0.004357 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any9:any) (any_list2:any list), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))
Model : any1: 3, any2: 0, any3: 6, any4: 5, any5: 2, any6: 6, any7: 6, any8: 0, any9: 2, any_list2: (Nil)
Model : any1: 0, any2: 2, any3: 8, any4: 0, any5: 3, any6: 0, any7: 5, any8: 3, any9: 5, any_list2: (1::(Nil))
Model : any1: 0, any2: 3, any3: 0, any4: 3, any5: 0, any6: 5, any7: 7, any8: 5, any9: 4, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) ((((((((((((Nil) @ (Nil)) @ (3::(Nil))) @ (0::(Nil))) @ (6::(Nil))) @ (5::(Nil))) @ (2::(Nil))) @ (6::(Nil))) @ (6::(Nil))) @ (0::(Nil))) @ (2::(Nil)))) = (3::(0::rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (6::(Nil))) @ (5::(Nil))) @ (2::(Nil))) @ (6::(Nil))) @ (6::(Nil))) @ (0::(Nil))) @ (2::(Nil))))))
rotate (len ((1::(Nil)))) ((((((((((((1::(Nil)) @ (Nil)) @ (0::(Nil))) @ (2::(Nil))) @ (8::(Nil))) @ (0::(Nil))) @ (3::(Nil))) @ (0::(Nil))) @ (5::(Nil))) @ (3::(Nil))) @ (5::(Nil)))) = (0::(2::rotate (len ((1::(Nil)))) ((((((((((1::(Nil)) @ (Nil)) @ (8::(Nil))) @ (0::(Nil))) @ (3::(Nil))) @ (0::(Nil))) @ (5::(Nil))) @ (3::(Nil))) @ (5::(Nil))))))
rotate (len ((Nil))) ((((((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (3::(Nil))) @ (0::(Nil))) @ (3::(Nil))) @ (0::(Nil))) @ (5::(Nil))) @ (7::(Nil))) @ (5::(Nil))) @ (4::(Nil)))) = (0::(3::rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (3::(Nil))) @ (0::(Nil))) @ (5::(Nil))) @ (7::(Nil))) @ (5::(Nil))) @ (4::(Nil))))))
Simplifying took 0.014180 seconds
Result : true
advanced_generalize done
=================================================
Progress: 583


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any5 : any
any6 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any7(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any5 : any
any6 : any
any7 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 1
intro any8(rank:19)
=================================================
Progress: 584


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any5 : any
any6 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any8(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any5 : any
any6 : any
any8 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any7:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any5
intro any6
intro any8
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg1135:any list) (arg1136:any list) (arg1137:any list) (arg1138:any list) (arg1139:any list) (arg1140:any list) (arg1141:any list) (arg1142:any list) (arg1143:nat), rotate (arg1143) ((((((((((arg1135 @ (any1::(Nil))) @ (any2::(Nil))) @ arg1136) @ arg1137) @ arg1138) @ arg1139) @ arg1140) @ arg1141) @ arg1142)) = (any1::(any2::rotate (arg1143) ((((((((arg1135 @ arg1136) @ arg1137) @ arg1138) @ arg1139) @ arg1140) @ arg1141) @ arg1142))))
Model : any1: 3, any2: 5, arg1135: (Nil), arg1136: (8::(Nil)), arg1137: (Nil), arg1138: (Nil), arg1139: (Nil), arg1140: (Nil), arg1141: (Nil), arg1142: (Nil), arg1143: ZERO
Model : any1: 8, any2: 0, arg1135: (3::(Nil)), arg1136: (Nil), arg1137: (Nil), arg1138: (8::(Nil)), arg1139: (3::(Nil)), arg1140: (3::(Nil)), arg1141: (Nil), arg1142: (Nil), arg1143: ZERO
Model : any1: 3, any2: 4, arg1135: (Nil), arg1136: (Nil), arg1137: (Nil), arg1138: (Nil), arg1139: (Nil), arg1140: (Nil), arg1141: (Nil), arg1142: (Nil), arg1143: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) (((((((((((Nil) @ (3::(Nil))) @ (5::(Nil))) @ (8::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (3::(5::rotate (ZERO) (((((((((Nil) @ (8::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) (((((((((((3::(Nil)) @ (8::(Nil))) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (8::(Nil))) @ (3::(Nil))) @ (3::(Nil))) @ (Nil)) @ (Nil))) = (8::(0::rotate (ZERO) (((((((((3::(Nil)) @ (Nil)) @ (Nil)) @ (8::(Nil))) @ (3::(Nil))) @ (3::(Nil))) @ (Nil)) @ (Nil)))))
rotate (ZERO) (((((((((((Nil) @ (3::(Nil))) @ (4::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (3::(4::rotate (ZERO) (((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
Simplifying took 0.004991 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any9:any) (any_list2:any list), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))
Model : any1: 7, any2: 1, any3: 4, any4: 4, any5: 0, any6: 6, any7: 5, any8: 5, any9: 6, any_list2: (Nil)
Model : any1: 8, any2: 5, any3: 6, any4: 0, any5: 5, any6: 8, any7: 0, any8: 8, any9: 6, any_list2: (Nil)
Model : any1: 1, any2: 6, any3: 3, any4: 0, any5: 4, any6: 0, any7: 2, any8: 2, any9: 6, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) ((((((((((((Nil) @ (Nil)) @ (7::(Nil))) @ (1::(Nil))) @ (4::(Nil))) @ (4::(Nil))) @ (0::(Nil))) @ (6::(Nil))) @ (5::(Nil))) @ (5::(Nil))) @ (6::(Nil)))) = (7::(1::rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (4::(Nil))) @ (4::(Nil))) @ (0::(Nil))) @ (6::(Nil))) @ (5::(Nil))) @ (5::(Nil))) @ (6::(Nil))))))
rotate (len ((Nil))) ((((((((((((Nil) @ (Nil)) @ (8::(Nil))) @ (5::(Nil))) @ (6::(Nil))) @ (0::(Nil))) @ (5::(Nil))) @ (8::(Nil))) @ (0::(Nil))) @ (8::(Nil))) @ (6::(Nil)))) = (8::(5::rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (6::(Nil))) @ (0::(Nil))) @ (5::(Nil))) @ (8::(Nil))) @ (0::(Nil))) @ (8::(Nil))) @ (6::(Nil))))))
rotate (len ((Nil))) ((((((((((((Nil) @ (Nil)) @ (1::(Nil))) @ (6::(Nil))) @ (3::(Nil))) @ (0::(Nil))) @ (4::(Nil))) @ (0::(Nil))) @ (2::(Nil))) @ (2::(Nil))) @ (6::(Nil)))) = (1::(6::rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (3::(Nil))) @ (0::(Nil))) @ (4::(Nil))) @ (0::(Nil))) @ (2::(Nil))) @ (2::(Nil))) @ (6::(Nil))))))
Simplifying took 0.012175 seconds
Result : true
advanced_generalize done
=================================================
Progress: 585


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any5 : any
any7 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any6:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any8(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any5 : any
any7 : any
any8 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any6:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any5
intro any7
intro any8
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg1144:any list) (arg1145:any list) (arg1146:any list) (arg1147:any list) (arg1148:any list) (arg1149:any list) (arg1150:any list) (arg1151:any list) (arg1152:nat), rotate (arg1152) ((((((((((arg1144 @ (any1::(Nil))) @ (any2::(Nil))) @ arg1145) @ arg1146) @ arg1147) @ arg1148) @ arg1149) @ arg1150) @ arg1151)) = (any1::(any2::rotate (arg1152) ((((((((arg1144 @ arg1145) @ arg1146) @ arg1147) @ arg1148) @ arg1149) @ arg1150) @ arg1151))))
Model : any1: 2, any2: 0, arg1144: (Nil), arg1145: (Nil), arg1146: (Nil), arg1147: (1::(Nil)), arg1148: (Nil), arg1149: (Nil), arg1150: (Nil), arg1151: (Nil), arg1152: SUCC (ZERO)
Model : any1: 2, any2: 5, arg1144: (Nil), arg1145: (8::(Nil)), arg1146: (4::(Nil)), arg1147: (Nil), arg1148: (Nil), arg1149: (Nil), arg1150: (Nil), arg1151: (Nil), arg1152: ZERO
Model : any1: 0, any2: 7, arg1144: (Nil), arg1145: (Nil), arg1146: (Nil), arg1147: (Nil), arg1148: (Nil), arg1149: (Nil), arg1150: (Nil), arg1151: (Nil), arg1152: SUCC (ZERO)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (SUCC (ZERO)) (((((((((((Nil) @ (2::(Nil))) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (1::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (2::(0::rotate (SUCC (ZERO)) (((((((((Nil) @ (Nil)) @ (Nil)) @ (1::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) (((((((((((Nil) @ (2::(Nil))) @ (5::(Nil))) @ (8::(Nil))) @ (4::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (2::(5::rotate (ZERO) (((((((((Nil) @ (8::(Nil))) @ (4::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (SUCC (ZERO)) (((((((((((Nil) @ (0::(Nil))) @ (7::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (0::(7::rotate (SUCC (ZERO)) (((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
Simplifying took 0.003551 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any9:any) (any_list2:any list), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))
Model : any1: 4, any2: 1, any3: 0, any4: 7, any5: 5, any6: 6, any7: 4, any8: 1, any9: 2, any_list2: (Nil)
Model : any1: 5, any2: 3, any3: 0, any4: 4, any5: 0, any6: 3, any7: 7, any8: 8, any9: 7, any_list2: (Nil)
Model : any1: 0, any2: 4, any3: 6, any4: 4, any5: 7, any6: 0, any7: 7, any8: 6, any9: 7, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) ((((((((((((Nil) @ (Nil)) @ (4::(Nil))) @ (1::(Nil))) @ (0::(Nil))) @ (7::(Nil))) @ (5::(Nil))) @ (6::(Nil))) @ (4::(Nil))) @ (1::(Nil))) @ (2::(Nil)))) = (4::(1::rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (7::(Nil))) @ (5::(Nil))) @ (6::(Nil))) @ (4::(Nil))) @ (1::(Nil))) @ (2::(Nil))))))
rotate (len ((Nil))) ((((((((((((Nil) @ (Nil)) @ (5::(Nil))) @ (3::(Nil))) @ (0::(Nil))) @ (4::(Nil))) @ (0::(Nil))) @ (3::(Nil))) @ (7::(Nil))) @ (8::(Nil))) @ (7::(Nil)))) = (5::(3::rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (4::(Nil))) @ (0::(Nil))) @ (3::(Nil))) @ (7::(Nil))) @ (8::(Nil))) @ (7::(Nil))))))
rotate (len ((Nil))) ((((((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (4::(Nil))) @ (6::(Nil))) @ (4::(Nil))) @ (7::(Nil))) @ (0::(Nil))) @ (7::(Nil))) @ (6::(Nil))) @ (7::(Nil)))) = (0::(4::rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (6::(Nil))) @ (4::(Nil))) @ (7::(Nil))) @ (0::(Nil))) @ (7::(Nil))) @ (6::(Nil))) @ (7::(Nil))))))
Simplifying took 0.013001 seconds
Result : true
advanced_generalize done
=================================================
Progress: 586


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any6 : any
any7 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any8(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any6 : any
any7 : any
any8 : any
---------------------------------------
forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any6
intro any7
intro any8
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg1153:any list) (arg1154:any list) (arg1155:any list) (arg1156:any list) (arg1157:any list) (arg1158:any list) (arg1159:any list) (arg1160:any list) (arg1161:nat), rotate (arg1161) ((((((((((arg1153 @ (any1::(Nil))) @ (any2::(Nil))) @ arg1154) @ arg1155) @ arg1156) @ arg1157) @ arg1158) @ arg1159) @ arg1160)) = (any1::(any2::rotate (arg1161) ((((((((arg1153 @ arg1154) @ arg1155) @ arg1156) @ arg1157) @ arg1158) @ arg1159) @ arg1160))))
Model : any1: 7, any2: 0, arg1153: (Nil), arg1154: (Nil), arg1155: (Nil), arg1156: (8::(Nil)), arg1157: (Nil), arg1158: (Nil), arg1159: (Nil), arg1160: (Nil), arg1161: ZERO
Model : any1: 7, any2: 5, arg1153: (6::(Nil)), arg1154: (8::(Nil)), arg1155: (Nil), arg1156: (Nil), arg1157: (6::(Nil)), arg1158: (Nil), arg1159: (Nil), arg1160: (Nil), arg1161: ZERO
Model : any1: 5, any2: 0, arg1153: (Nil), arg1154: (Nil), arg1155: (Nil), arg1156: (0::(0::(2::(Nil)))), arg1157: (Nil), arg1158: (Nil), arg1159: (Nil), arg1160: (7::(Nil)), arg1161: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) (((((((((((Nil) @ (7::(Nil))) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (8::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (7::(0::rotate (ZERO) (((((((((Nil) @ (Nil)) @ (Nil)) @ (8::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) (((((((((((6::(Nil)) @ (7::(Nil))) @ (5::(Nil))) @ (8::(Nil))) @ (Nil)) @ (Nil)) @ (6::(Nil))) @ (Nil)) @ (Nil)) @ (Nil))) = (7::(5::rotate (ZERO) (((((((((6::(Nil)) @ (8::(Nil))) @ (Nil)) @ (Nil)) @ (6::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) (((((((((((Nil) @ (5::(Nil))) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (0::(0::(2::(Nil))))) @ (Nil)) @ (Nil)) @ (Nil)) @ (7::(Nil)))) = (5::(0::rotate (ZERO) (((((((((Nil) @ (Nil)) @ (Nil)) @ (0::(0::(2::(Nil))))) @ (Nil)) @ (Nil)) @ (Nil)) @ (7::(Nil))))))
Simplifying took 0.005849 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any9:any) (any_list2:any list), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))
Model : any1: 8, any2: 3, any3: 1, any4: 5, any5: 5, any6: 7, any7: 0, any8: 6, any9: 8, any_list2: (Nil)
Model : any1: 5, any2: 8, any3: 2, any4: 5, any5: 6, any6: 0, any7: 6, any8: 4, any9: 7, any_list2: (Nil)
Model : any1: 8, any2: 7, any3: 0, any4: 4, any5: 2, any6: 5, any7: 4, any8: 0, any9: 8, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) ((((((((((((Nil) @ (Nil)) @ (8::(Nil))) @ (3::(Nil))) @ (1::(Nil))) @ (5::(Nil))) @ (5::(Nil))) @ (7::(Nil))) @ (0::(Nil))) @ (6::(Nil))) @ (8::(Nil)))) = (8::(3::rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (1::(Nil))) @ (5::(Nil))) @ (5::(Nil))) @ (7::(Nil))) @ (0::(Nil))) @ (6::(Nil))) @ (8::(Nil))))))
rotate (len ((Nil))) ((((((((((((Nil) @ (Nil)) @ (5::(Nil))) @ (8::(Nil))) @ (2::(Nil))) @ (5::(Nil))) @ (6::(Nil))) @ (0::(Nil))) @ (6::(Nil))) @ (4::(Nil))) @ (7::(Nil)))) = (5::(8::rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (2::(Nil))) @ (5::(Nil))) @ (6::(Nil))) @ (0::(Nil))) @ (6::(Nil))) @ (4::(Nil))) @ (7::(Nil))))))
rotate (len ((Nil))) ((((((((((((Nil) @ (Nil)) @ (8::(Nil))) @ (7::(Nil))) @ (0::(Nil))) @ (4::(Nil))) @ (2::(Nil))) @ (5::(Nil))) @ (4::(Nil))) @ (0::(Nil))) @ (8::(Nil)))) = (8::(7::rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (4::(Nil))) @ (2::(Nil))) @ (5::(Nil))) @ (4::(Nil))) @ (0::(Nil))) @ (8::(Nil))))))
Simplifying took 0.013097 seconds
Result : true
advanced_generalize done
=================================================
Progress: 587


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any4(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any2 : any
any3 : any
any4 : any
---------------------------------------
forall (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 4
intro any5(rank:19)
intro any6(rank:19)
intro any7(rank:19)
intro any8(rank:19)
=================================================
Progress: 588


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any5(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any2 : any
any3 : any
any5 : any
---------------------------------------
forall (any4:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 3
intro any6(rank:19)
intro any7(rank:19)
intro any8(rank:19)
=================================================
Progress: 589


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any6(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any2 : any
any3 : any
any6 : any
---------------------------------------
forall (any4:any) (any5:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 2
intro any7(rank:19)
intro any8(rank:19)
=================================================
Progress: 590


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any7(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any2 : any
any3 : any
any7 : any
---------------------------------------
forall (any4:any) (any5:any) (any6:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 1
intro any8(rank:19)
=================================================
Progress: 591


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any2 : any
any3 : any
---------------------------------------
forall (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any8(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any2 : any
any3 : any
any8 : any
---------------------------------------
forall (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any3
intro any8
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg1162:any list) (arg1163:any list) (arg1164:any list) (arg1165:any list) (arg1166:any list) (arg1167:any list) (arg1168:any list) (arg1169:any list) (arg1170:nat), rotate (arg1170) ((((((((((arg1162 @ (any1::(Nil))) @ (any2::(Nil))) @ arg1163) @ arg1164) @ arg1165) @ arg1166) @ arg1167) @ arg1168) @ arg1169)) = (any1::(any2::rotate (arg1170) ((((((((arg1162 @ arg1163) @ arg1164) @ arg1165) @ arg1166) @ arg1167) @ arg1168) @ arg1169))))
Model : any1: 2, any2: 7, arg1162: (Nil), arg1163: (Nil), arg1164: (6::(Nil)), arg1165: (Nil), arg1166: (Nil), arg1167: (Nil), arg1168: (Nil), arg1169: (Nil), arg1170: ZERO
Model : any1: 2, any2: 6, arg1162: (Nil), arg1163: (8::(1::(Nil))), arg1164: (Nil), arg1165: (2::(Nil)), arg1166: (Nil), arg1167: (Nil), arg1168: (Nil), arg1169: (Nil), arg1170: ZERO
Model : any1: 1, any2: 4, arg1162: (Nil), arg1163: (Nil), arg1164: (Nil), arg1165: (Nil), arg1166: (Nil), arg1167: (Nil), arg1168: (Nil), arg1169: (1::(Nil)), arg1170: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) (((((((((((Nil) @ (2::(Nil))) @ (7::(Nil))) @ (Nil)) @ (6::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (2::(7::rotate (ZERO) (((((((((Nil) @ (Nil)) @ (6::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) (((((((((((Nil) @ (2::(Nil))) @ (6::(Nil))) @ (8::(1::(Nil)))) @ (Nil)) @ (2::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (2::(6::rotate (ZERO) (((((((((Nil) @ (8::(1::(Nil)))) @ (Nil)) @ (2::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) (((((((((((Nil) @ (1::(Nil))) @ (4::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (1::(Nil)))) = (1::(4::rotate (ZERO) (((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (1::(Nil))))))
Simplifying took 0.004348 seconds
Result : true
advanced_generalize done


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any2 : any
any3 : any
any8 : any
---------------------------------------
forall (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
=================================================
Progress: 592


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any2 : any
any3 : any
any8 : any
---------------------------------------
forall (any4:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (arg1162:any list) (arg1163:any list) (arg1164:any list) (arg1165:any list) (arg1166:any list) (arg1167:any list) (arg1168:any list) (arg1169:any list) (arg1170:nat), rotate (arg1170) ((((((((((arg1162 @ (any1::(Nil))) @ (any2::(Nil))) @ arg1163) @ arg1164) @ arg1165) @ arg1166) @ arg1167) @ arg1168) @ arg1169)) = (any1::(any2::rotate (arg1170) ((((((((arg1162 @ arg1163) @ arg1164) @ arg1165) @ arg1166) @ arg1167) @ arg1168) @ arg1169))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (any_list7:any list) (any_list8:any list) (nat1:nat), rotate (nat1) ((((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7) @ any_list8)) = (any1::(any2::rotate (nat1) ((((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7) @ any_list8))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (any_list7:any list) (any_list8:any list) (nat1:nat), rotate (nat1) ((((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7) @ any_list8)) = (any1::(any2::rotate (nat1) ((((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7) @ any_list8))))

0 goal(s) more...

9 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:22)
=================================================
Progress: 593


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any5(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any2 : any
any4 : any
any5 : any
---------------------------------------
forall (any3:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 3
intro any6(rank:19)
intro any7(rank:19)
intro any8(rank:19)
=================================================
Progress: 594


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any6(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any2 : any
any4 : any
any6 : any
---------------------------------------
forall (any3:any) (any5:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 2
intro any7(rank:19)
intro any8(rank:19)
=================================================
Progress: 595


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any7(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any2 : any
any4 : any
any7 : any
---------------------------------------
forall (any3:any) (any5:any) (any6:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 1
intro any8(rank:19)
=================================================
Progress: 596


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any2 : any
any4 : any
---------------------------------------
forall (any3:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any8(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any2 : any
any4 : any
any8 : any
---------------------------------------
forall (any3:any) (any5:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any4
intro any8
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg1171:any list) (arg1172:any list) (arg1173:any list) (arg1174:any list) (arg1175:any list) (arg1176:any list) (arg1177:any list) (arg1178:any list) (arg1179:nat), rotate (arg1179) ((((((((((arg1171 @ (any1::(Nil))) @ (any2::(Nil))) @ arg1172) @ arg1173) @ arg1174) @ arg1175) @ arg1176) @ arg1177) @ arg1178)) = (any1::(any2::rotate (arg1179) ((((((((arg1171 @ arg1172) @ arg1173) @ arg1174) @ arg1175) @ arg1176) @ arg1177) @ arg1178))))
Model : any1: 2, any2: 1, arg1171: (Nil), arg1172: (Nil), arg1173: (8::(Nil)), arg1174: (Nil), arg1175: (1::(3::(Nil))), arg1176: (2::(Nil)), arg1177: (Nil), arg1178: (3::(5::(Nil))), arg1179: SUCC (ZERO)
Model : any1: 6, any2: 5, arg1171: (Nil), arg1172: (3::(Nil)), arg1173: (1::(Nil)), arg1174: (Nil), arg1175: (3::(Nil)), arg1176: (Nil), arg1177: (Nil), arg1178: (0::(Nil)), arg1179: ZERO
Model : any1: 4, any2: 0, arg1171: (Nil), arg1172: (Nil), arg1173: (3::(Nil)), arg1174: (Nil), arg1175: (1::(1::(Nil))), arg1176: (0::(Nil)), arg1177: (6::(2::(1::(Nil)))), arg1178: (Nil), arg1179: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (SUCC (ZERO)) (((((((((((Nil) @ (2::(Nil))) @ (1::(Nil))) @ (Nil)) @ (8::(Nil))) @ (Nil)) @ (1::(3::(Nil)))) @ (2::(Nil))) @ (Nil)) @ (3::(5::(Nil))))) = (2::(1::rotate (SUCC (ZERO)) (((((((((Nil) @ (Nil)) @ (8::(Nil))) @ (Nil)) @ (1::(3::(Nil)))) @ (2::(Nil))) @ (Nil)) @ (3::(5::(Nil)))))))
rotate (ZERO) (((((((((((Nil) @ (6::(Nil))) @ (5::(Nil))) @ (3::(Nil))) @ (1::(Nil))) @ (Nil)) @ (3::(Nil))) @ (Nil)) @ (Nil)) @ (0::(Nil)))) = (6::(5::rotate (ZERO) (((((((((Nil) @ (3::(Nil))) @ (1::(Nil))) @ (Nil)) @ (3::(Nil))) @ (Nil)) @ (Nil)) @ (0::(Nil))))))
rotate (ZERO) (((((((((((Nil) @ (4::(Nil))) @ (0::(Nil))) @ (Nil)) @ (3::(Nil))) @ (Nil)) @ (1::(1::(Nil)))) @ (0::(Nil))) @ (6::(2::(1::(Nil))))) @ (Nil))) = (4::(0::rotate (ZERO) (((((((((Nil) @ (Nil)) @ (3::(Nil))) @ (Nil)) @ (1::(1::(Nil)))) @ (0::(Nil))) @ (6::(2::(1::(Nil))))) @ (Nil)))))
Simplifying took 0.008543 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any9:any) (any_list2:any list), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))
Model : any1: 2, any2: 8, any3: 3, any4: 4, any5: 3, any6: 0, any7: 8, any8: 3, any9: 2, any_list2: (Nil)
Model : any1: 4, any2: 7, any3: 3, any4: 2, any5: 0, any6: 7, any7: 0, any8: 8, any9: 0, any_list2: (Nil)
Model : any1: 2, any2: 7, any3: 1, any4: 0, any5: 3, any6: 2, any7: 7, any8: 4, any9: 8, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) ((((((((((((Nil) @ (Nil)) @ (2::(Nil))) @ (8::(Nil))) @ (3::(Nil))) @ (4::(Nil))) @ (3::(Nil))) @ (0::(Nil))) @ (8::(Nil))) @ (3::(Nil))) @ (2::(Nil)))) = (2::(8::rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (3::(Nil))) @ (4::(Nil))) @ (3::(Nil))) @ (0::(Nil))) @ (8::(Nil))) @ (3::(Nil))) @ (2::(Nil))))))
rotate (len ((Nil))) ((((((((((((Nil) @ (Nil)) @ (4::(Nil))) @ (7::(Nil))) @ (3::(Nil))) @ (2::(Nil))) @ (0::(Nil))) @ (7::(Nil))) @ (0::(Nil))) @ (8::(Nil))) @ (0::(Nil)))) = (4::(7::rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (3::(Nil))) @ (2::(Nil))) @ (0::(Nil))) @ (7::(Nil))) @ (0::(Nil))) @ (8::(Nil))) @ (0::(Nil))))))
rotate (len ((Nil))) ((((((((((((Nil) @ (Nil)) @ (2::(Nil))) @ (7::(Nil))) @ (1::(Nil))) @ (0::(Nil))) @ (3::(Nil))) @ (2::(Nil))) @ (7::(Nil))) @ (4::(Nil))) @ (8::(Nil)))) = (2::(7::rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (1::(Nil))) @ (0::(Nil))) @ (3::(Nil))) @ (2::(Nil))) @ (7::(Nil))) @ (4::(Nil))) @ (8::(Nil))))))
Simplifying took 0.011854 seconds
Result : true
advanced_generalize done
=================================================
Progress: 597


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any2 : any
any5 : any
---------------------------------------
forall (any3:any) (any4:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any6(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any2 : any
any5 : any
any6 : any
---------------------------------------
forall (any3:any) (any4:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 2
intro any7(rank:19)
intro any8(rank:19)
=================================================
Progress: 598


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any2 : any
any5 : any
---------------------------------------
forall (any3:any) (any4:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any7(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any2 : any
any5 : any
any7 : any
---------------------------------------
forall (any3:any) (any4:any) (any6:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 1
intro any8(rank:19)
=================================================
Progress: 599


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any2 : any
any5 : any
---------------------------------------
forall (any3:any) (any4:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any8(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any2 : any
any5 : any
any8 : any
---------------------------------------
forall (any3:any) (any4:any) (any6:any) (any7:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any5
intro any8
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg1180:any list) (arg1181:any list) (arg1182:any list) (arg1183:any list) (arg1184:any list) (arg1185:any list) (arg1186:any list) (arg1187:any list) (arg1188:nat), rotate (arg1188) ((((((((((arg1180 @ (any1::(Nil))) @ (any2::(Nil))) @ arg1181) @ arg1182) @ arg1183) @ arg1184) @ arg1185) @ arg1186) @ arg1187)) = (any1::(any2::rotate (arg1188) ((((((((arg1180 @ arg1181) @ arg1182) @ arg1183) @ arg1184) @ arg1185) @ arg1186) @ arg1187))))
Model : any1: 1, any2: 5, arg1180: (0::(Nil)), arg1181: (6::(Nil)), arg1182: (Nil), arg1183: (Nil), arg1184: (8::(Nil)), arg1185: (Nil), arg1186: (Nil), arg1187: (Nil), arg1188: ZERO
Model : any1: 7, any2: 0, arg1180: (Nil), arg1181: (Nil), arg1182: (Nil), arg1183: (Nil), arg1184: (Nil), arg1185: (Nil), arg1186: (Nil), arg1187: (Nil), arg1188: ZERO
Model : any1: 8, any2: 6, arg1180: (Nil), arg1181: (Nil), arg1182: (Nil), arg1183: (Nil), arg1184: (Nil), arg1185: (Nil), arg1186: (Nil), arg1187: (Nil), arg1188: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) (((((((((((0::(Nil)) @ (1::(Nil))) @ (5::(Nil))) @ (6::(Nil))) @ (Nil)) @ (Nil)) @ (8::(Nil))) @ (Nil)) @ (Nil)) @ (Nil))) = (1::(5::rotate (ZERO) (((((((((0::(Nil)) @ (6::(Nil))) @ (Nil)) @ (Nil)) @ (8::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) (((((((((((Nil) @ (7::(Nil))) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (7::(0::rotate (ZERO) (((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (ZERO) (((((((((((Nil) @ (8::(Nil))) @ (6::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (8::(6::rotate (ZERO) (((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
Simplifying took 0.004104 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any9:any) (any_list2:any list), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))
Model : any1: 0, any2: 0, any3: 7, any4: 3, any5: 1, any6: 6, any7: 0, any8: 3, any9: 0, any_list2: (Nil)
Model : any1: 2, any2: 5, any3: 0, any4: 8, any5: 7, any6: 3, any7: 6, any8: 2, any9: 5, any_list2: (Nil)
Model : any1: 2, any2: 3, any3: 2, any4: 7, any5: 7, any6: 8, any7: 1, any8: 2, any9: 6, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) ((((((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (0::(Nil))) @ (7::(Nil))) @ (3::(Nil))) @ (1::(Nil))) @ (6::(Nil))) @ (0::(Nil))) @ (3::(Nil))) @ (0::(Nil)))) = (0::(0::rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (7::(Nil))) @ (3::(Nil))) @ (1::(Nil))) @ (6::(Nil))) @ (0::(Nil))) @ (3::(Nil))) @ (0::(Nil))))))
rotate (len ((Nil))) ((((((((((((Nil) @ (Nil)) @ (2::(Nil))) @ (5::(Nil))) @ (0::(Nil))) @ (8::(Nil))) @ (7::(Nil))) @ (3::(Nil))) @ (6::(Nil))) @ (2::(Nil))) @ (5::(Nil)))) = (2::(5::rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (8::(Nil))) @ (7::(Nil))) @ (3::(Nil))) @ (6::(Nil))) @ (2::(Nil))) @ (5::(Nil))))))
rotate (len ((Nil))) ((((((((((((Nil) @ (Nil)) @ (2::(Nil))) @ (3::(Nil))) @ (2::(Nil))) @ (7::(Nil))) @ (7::(Nil))) @ (8::(Nil))) @ (1::(Nil))) @ (2::(Nil))) @ (6::(Nil)))) = (2::(3::rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (2::(Nil))) @ (7::(Nil))) @ (7::(Nil))) @ (8::(Nil))) @ (1::(Nil))) @ (2::(Nil))) @ (6::(Nil))))))
Simplifying took 0.012955 seconds
Result : true
advanced_generalize done
=================================================
Progress: 600


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any2 : any
any6 : any
---------------------------------------
forall (any3:any) (any4:any) (any5:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any7(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any2 : any
any6 : any
any7 : any
---------------------------------------
forall (any3:any) (any4:any) (any5:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 1
intro any8(rank:19)
=================================================
Progress: 601


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any2 : any
any6 : any
---------------------------------------
forall (any3:any) (any4:any) (any5:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any8(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any2 : any
any6 : any
any8 : any
---------------------------------------
forall (any3:any) (any4:any) (any5:any) (any7:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any6
intro any8
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg1189:any list) (arg1190:any list) (arg1191:any list) (arg1192:any list) (arg1193:any list) (arg1194:any list) (arg1195:any list) (arg1196:any list) (arg1197:nat), rotate (arg1197) ((((((((((arg1189 @ (any1::(Nil))) @ (any2::(Nil))) @ arg1190) @ arg1191) @ arg1192) @ arg1193) @ arg1194) @ arg1195) @ arg1196)) = (any1::(any2::rotate (arg1197) ((((((((arg1189 @ arg1190) @ arg1191) @ arg1192) @ arg1193) @ arg1194) @ arg1195) @ arg1196))))
Model : any1: 0, any2: 6, arg1189: (Nil), arg1190: (Nil), arg1191: (Nil), arg1192: (2::(3::(Nil))), arg1193: (Nil), arg1194: (Nil), arg1195: (Nil), arg1196: (Nil), arg1197: ZERO
Model : any1: 6, any2: 8, arg1189: (Nil), arg1190: (Nil), arg1191: (Nil), arg1192: (Nil), arg1193: (0::(3::(Nil))), arg1194: (8::(Nil)), arg1195: (8::(Nil)), arg1196: (Nil), arg1197: SUCC (ZERO)
Model : any1: 5, any2: 5, arg1189: (Nil), arg1190: (Nil), arg1191: (Nil), arg1192: (Nil), arg1193: (Nil), arg1194: (Nil), arg1195: (Nil), arg1196: (Nil), arg1197: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) (((((((((((Nil) @ (0::(Nil))) @ (6::(Nil))) @ (Nil)) @ (Nil)) @ (2::(3::(Nil)))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (0::(6::rotate (ZERO) (((((((((Nil) @ (Nil)) @ (Nil)) @ (2::(3::(Nil)))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
rotate (SUCC (ZERO)) (((((((((((Nil) @ (6::(Nil))) @ (8::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (0::(3::(Nil)))) @ (8::(Nil))) @ (8::(Nil))) @ (Nil))) = (6::(8::rotate (SUCC (ZERO)) (((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (0::(3::(Nil)))) @ (8::(Nil))) @ (8::(Nil))) @ (Nil)))))
rotate (ZERO) (((((((((((Nil) @ (5::(Nil))) @ (5::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (5::(5::rotate (ZERO) (((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
Simplifying took 0.005250 seconds
Result : false
Lemma : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any9:any) (any_list2:any list), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))
Model : any1: 0, any2: 5, any3: 7, any4: 5, any5: 2, any6: 0, any7: 0, any8: 7, any9: 6, any_list2: (Nil)
Model : any1: 1, any2: 0, any3: 4, any4: 4, any5: 7, any6: 3, any7: 1, any8: 0, any9: 6, any_list2: (Nil)
Model : any1: 7, any2: 0, any3: 1, any4: 3, any5: 2, any6: 7, any7: 0, any8: 1, any9: 7, any_list2: (7::(Nil))
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (len ((Nil))) ((((((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (5::(Nil))) @ (7::(Nil))) @ (5::(Nil))) @ (2::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (7::(Nil))) @ (6::(Nil)))) = (0::(5::rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (7::(Nil))) @ (5::(Nil))) @ (2::(Nil))) @ (0::(Nil))) @ (0::(Nil))) @ (7::(Nil))) @ (6::(Nil))))))
rotate (len ((Nil))) ((((((((((((Nil) @ (Nil)) @ (1::(Nil))) @ (0::(Nil))) @ (4::(Nil))) @ (4::(Nil))) @ (7::(Nil))) @ (3::(Nil))) @ (1::(Nil))) @ (0::(Nil))) @ (6::(Nil)))) = (1::(0::rotate (len ((Nil))) ((((((((((Nil) @ (Nil)) @ (4::(Nil))) @ (4::(Nil))) @ (7::(Nil))) @ (3::(Nil))) @ (1::(Nil))) @ (0::(Nil))) @ (6::(Nil))))))
rotate (len ((7::(Nil)))) ((((((((((((7::(Nil)) @ (Nil)) @ (7::(Nil))) @ (0::(Nil))) @ (1::(Nil))) @ (3::(Nil))) @ (2::(Nil))) @ (7::(Nil))) @ (0::(Nil))) @ (1::(Nil))) @ (7::(Nil)))) = (7::(0::rotate (len ((7::(Nil)))) ((((((((((7::(Nil)) @ (Nil)) @ (1::(Nil))) @ (3::(Nil))) @ (2::(Nil))) @ (7::(Nil))) @ (0::(Nil))) @ (1::(Nil))) @ (7::(Nil))))))
Simplifying took 0.014572 seconds
Result : true
advanced_generalize done
=================================================
Progress: 602


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any2 : any
any7 : any
---------------------------------------
forall (any3:any) (any4:any) (any5:any) (any6:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any8(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any2 : any
any7 : any
any8 : any
---------------------------------------
forall (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
intro any7
intro any8
validate generalize_common_subterm_goal
Lemma : forall (any1:any) (any2:any) (arg1198:any list) (arg1199:any list) (arg1200:any list) (arg1201:any list) (arg1202:any list) (arg1203:any list) (arg1204:any list) (arg1205:any list) (arg1206:nat), rotate (arg1206) ((((((((((arg1198 @ (any1::(Nil))) @ (any2::(Nil))) @ arg1199) @ arg1200) @ arg1201) @ arg1202) @ arg1203) @ arg1204) @ arg1205)) = (any1::(any2::rotate (arg1206) ((((((((arg1198 @ arg1199) @ arg1200) @ arg1201) @ arg1202) @ arg1203) @ arg1204) @ arg1205))))
Model : any1: 8, any2: 0, arg1198: (Nil), arg1199: (Nil), arg1200: (Nil), arg1201: (Nil), arg1202: (Nil), arg1203: (Nil), arg1204: (Nil), arg1205: (4::(0::(Nil))), arg1206: ZERO
Model : any1: 0, any2: 5, arg1198: (Nil), arg1199: (Nil), arg1200: (Nil), arg1201: (Nil), arg1202: (Nil), arg1203: (7::(Nil)), arg1204: (Nil), arg1205: (Nil), arg1206: ZERO
Model : any1: 4, any2: 0, arg1198: (Nil), arg1199: (Nil), arg1200: (0::(Nil)), arg1201: (1::(Nil)), arg1202: (Nil), arg1203: (Nil), arg1204: (Nil), arg1205: (Nil), arg1206: ZERO
Substituting variables...
Simplifying conditions and property...
let rec lst_subset lst1 lst2 =
match (lst1) with
| Nil -> true
| Cons x xs -> && (lst_subset (xs) (lst2)) (mem (x) (lst2))
let lst_eq lst1 lst2 =
&& (lst_subset (lst1) (lst2)) (lst_subset (lst2) (lst1))
prop list:
rotate (ZERO) (((((((((((Nil) @ (8::(Nil))) @ (0::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (4::(0::(Nil))))) = (8::(0::rotate (ZERO) (((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (4::(0::(Nil)))))))
rotate (ZERO) (((((((((((Nil) @ (0::(Nil))) @ (5::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (7::(Nil))) @ (Nil)) @ (Nil))) = (0::(5::rotate (ZERO) (((((((((Nil) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)) @ (7::(Nil))) @ (Nil)) @ (Nil)))))
rotate (ZERO) (((((((((((Nil) @ (4::(Nil))) @ (0::(Nil))) @ (Nil)) @ (0::(Nil))) @ (1::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil))) = (4::(0::rotate (ZERO) (((((((((Nil) @ (Nil)) @ (0::(Nil))) @ (1::(Nil))) @ (Nil)) @ (Nil)) @ (Nil)) @ (Nil)))))
Simplifying took 0.002626 seconds
Result : true
advanced_generalize done


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any2 : any
any7 : any
any8 : any
---------------------------------------
forall (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
=================================================
Progress: 603


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any2 : any
any7 : any
any8 : any
---------------------------------------
forall (any3:any) (any4:any) (any5:any) (any6:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (arg1198:any list) (arg1199:any list) (arg1200:any list) (arg1201:any list) (arg1202:any list) (arg1203:any list) (arg1204:any list) (arg1205:any list) (arg1206:nat), rotate (arg1206) ((((((((((arg1198 @ (any1::(Nil))) @ (any2::(Nil))) @ arg1199) @ arg1200) @ arg1201) @ arg1202) @ arg1203) @ arg1204) @ arg1205)) = (any1::(any2::rotate (arg1206) ((((((((arg1198 @ arg1199) @ arg1200) @ arg1201) @ arg1202) @ arg1203) @ arg1204) @ arg1205))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (any_list7:any list) (any_list8:any list) (nat1:nat), rotate (nat1) ((((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7) @ any_list8)) = (any1::(any2::rotate (nat1) ((((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7) @ any_list8))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list) (any_list3:any list) (any_list4:any list) (any_list5:any list) (any_list6:any list) (any_list7:any list) (any_list8:any list) (nat1:nat), rotate (nat1) ((((((((((any_list1 @ (any1::(Nil))) @ (any2::(Nil))) @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7) @ any_list8)) = (any1::(any2::rotate (nat1) ((((((((any_list1 @ any_list2) @ any_list3) @ any_list4) @ any_list5) @ any_list6) @ any_list7) @ any_list8))))

0 goal(s) more...

9 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:22)
=================================================
Progress: 604


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any5(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any3 : any
any4 : any
any5 : any
---------------------------------------
forall (any2:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Tactic List : 3
intro any6(rank:19)
intro any7(rank:19)
intro any8(rank:19)
=================================================
Progress: 605


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any3 : any
any4 : any
---------------------------------------
forall (any2:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
>>> intro any6(rank : 19)


1st goal of : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any) (any_list1:any list), rotate (len (any_list1)) ((((((((((any_list1 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list1)) ((((((((any_list1 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
any_list1 : any list
any9 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any) (any3:any) (any4:any) (any5:any) (any6:any) (any7:any) (any8:any), rotate (len (any_list2)) ((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil)))) = (any1::(any2::rotate (len (any_list2)) ((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))))))
Inductive1 : any_list1 = (any9::any_list2)
any1 : any
any3 : any
any4 : any
any6 : any
---------------------------------------
forall (any2:any) (any5:any) (any7:any) (any8:any), rotate (len (any_list2)) (((((((((((any_list2 @ (Nil)) @ (any1::(Nil))) @ (any2::(Nil))) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil)))) = (any1::(any2::rotate (len (any_list2)) (((((((((any_list2 @ (Nil)) @ (any3::(Nil))) @ (any4::(Nil))) @ (any5::(Nil))) @ (any6::(Nil))) @ (any7::(Nil))) @ (any8::(Nil))) @ (any9::(Nil))))))

0 goal(s) more...

8 conjecture(s) more...
Dilemma timed out for benchmark clam with problem 21.File "_none_", lines 88-90, characters 2-22:
Warning 8 [partial-match]: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
[]

File "_none_", lines 88-90, characters 2-22:
Warning 8 [partial-match]: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
[]
