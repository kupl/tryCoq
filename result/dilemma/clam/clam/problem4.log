Enter the definition file path (1/2) : 
> Enter the definition file path (2/2) : 
> Choose the proof type :
1) Interactive Mode 	 2) Auto Mode
Enter the goal : =================================================
Progress: 1


No conjecture
>>> assert forall (x:any list), len ((x @ x)) = double (len (x))(rank : 0)


1st goal of : forall (any_list1:any list), len ((any_list1 @ any_list1)) = double (len (any_list1))

---------------------------------------
forall (any_list1:any list), len ((any_list1 @ any_list1)) = double (len (any_list1))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:4)
=================================================
Progress: 2


1st goal of : forall (any_list1:any list), len ((any_list1 @ any_list1)) = double (len (any_list1))

---------------------------------------
forall (any_list1:any list), len ((any_list1 @ any_list1)) = double (len (any_list1))

0 goal(s) more...

0 conjecture(s) more...
>>> induction any_list1(rank : 4)


1st goal of : forall (any_list1:any list), len ((any_list1 @ any_list1)) = double (len (any_list1))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
len (((Nil) @ (Nil))) = double (len ((Nil)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3)
=================================================
Progress: 3


1st goal of : forall (any_list1:any list), len ((any_list1 @ any_list1)) = double (len (any_list1))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
len (((Nil) @ (Nil))) = double (len ((Nil)))

1 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 3)


1st goal of : forall (any_list1:any list), len ((any_list1 @ any_list1)) = double (len (any_list1))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : len ((any_list2 @ any_list2)) = double (len (any_list2))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
len (((any1::any_list2) @ (any1::any_list2))) = double (len ((any1::any_list2)))

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:3)
=================================================
Progress: 4


1st goal of : forall (any_list1:any list), len ((any_list1 @ any_list1)) = double (len (any_list1))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : len ((any_list2 @ any_list2)) = double (len (any_list2))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
len (((any1::any_list2) @ (any1::any_list2))) = double (len ((any1::any_list2)))

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3)


1st goal of : forall (any_list1:any list), len ((any_list1 @ any_list1)) = double (len (any_list1))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : len ((any_list2 @ any_list2)) = double (len (any_list2))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
SUCC (len ((any_list2 @ (any1::any_list2)))) = SUCC (SUCC (double (len (any_list2))))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:3)
=================================================
Progress: 5


1st goal of : forall (any_list1:any list), len ((any_list1 @ any_list1)) = double (len (any_list1))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : len ((any_list2 @ any_list2)) = double (len (any_list2))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
SUCC (len ((any_list2 @ (any1::any_list2)))) = SUCC (SUCC (double (len (any_list2))))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 3)


1st goal of : forall (any_list1:any list), len ((any_list1 @ any_list1)) = double (len (any_list1))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : len ((any_list2 @ any_list2)) = double (len (any_list2))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
SUCC (len ((any_list2 @ (any1::any_list2)))) = SUCC (SUCC (len ((any_list2 @ any_list2))))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any_list2:any list), SUCC (len ((any_list2 @ (any1::any_list2)))) = SUCC (SUCC (len ((any_list2 @ any_list2))))
Model : any1: 1, any_list2: (Nil)
Model : any1: 4, any_list2: (Nil)
Model : any1: 8, any_list2: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000161 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any_list2:any list), SUCC (len ((any_list2 @ (any1::any_list2)))) = SUCC (SUCC (len ((any_list2 @ any_list2))))
End of Lemma List


1st goal of : forall (any_list1:any list), len ((any_list1 @ any_list1)) = double (len (any_list1))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : len ((any_list2 @ any_list2)) = double (len (any_list2))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
SUCC (len ((any_list2 @ (any1::any_list2)))) = SUCC (SUCC (len ((any_list2 @ any_list2))))

0 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 6


1st goal of : forall (any_list1:any list), len ((any_list1 @ any_list1)) = double (len (any_list1))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : len ((any_list2 @ any_list2)) = double (len (any_list2))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
SUCC (len ((any_list2 @ (any1::any_list2)))) = SUCC (SUCC (len ((any_list2 @ any_list2))))

0 goal(s) more...

0 conjecture(s) more...
>>> assert forall (any1:any) (any_list2:any list), SUCC (len ((any_list2 @ (any1::any_list2)))) = SUCC (SUCC (len ((any_list2 @ any_list2))))(rank : 0)


1st goal of : forall (any1:any) (any_list1:any list), SUCC (len ((any_list1 @ (any1::any_list1)))) = SUCC (SUCC (len ((any_list1 @ any_list1))))

---------------------------------------
forall (any1:any) (any_list1:any list), SUCC (len ((any_list1 @ (any1::any_list1)))) = SUCC (SUCC (len ((any_list1 @ any_list1))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:6)
=================================================
Progress: 7


1st goal of : forall (any1:any) (any_list1:any list), SUCC (len ((any_list1 @ (any1::any_list1)))) = SUCC (SUCC (len ((any_list1 @ any_list1))))

---------------------------------------
forall (any1:any) (any_list1:any list), SUCC (len ((any_list1 @ (any1::any_list1)))) = SUCC (SUCC (len ((any_list1 @ any_list1))))

0 goal(s) more...

1 conjecture(s) more...
>>> induction any_list1(rank : 6)


1st goal of : forall (any1:any) (any_list1:any list), SUCC (len ((any_list1 @ (any1::any_list1)))) = SUCC (SUCC (len ((any_list1 @ any_list1))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any), SUCC (len (((Nil) @ (any1::(Nil))))) = SUCC (SUCC (len (((Nil) @ (Nil)))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5)
=================================================
Progress: 8


1st goal of : forall (any1:any) (any_list1:any list), SUCC (len ((any_list1 @ (any1::any_list1)))) = SUCC (SUCC (len ((any_list1 @ any_list1))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any), SUCC (len (((Nil) @ (any1::(Nil))))) = SUCC (SUCC (len (((Nil) @ (Nil)))))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list), SUCC (len ((any_list1 @ (any1::any_list1)))) = SUCC (SUCC (len ((any_list1 @ any_list1))))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), SUCC (len ((any_list2 @ (any1::any_list2)))) = SUCC (SUCC (len ((any_list2 @ any_list2))))
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), SUCC (len (((any2::any_list2) @ (any1::(any2::any_list2))))) = SUCC (SUCC (len (((any2::any_list2) @ (any2::any_list2)))))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5)
=================================================
Progress: 9


1st goal of : forall (any1:any) (any_list1:any list), SUCC (len ((any_list1 @ (any1::any_list1)))) = SUCC (SUCC (len ((any_list1 @ any_list1))))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), SUCC (len ((any_list2 @ (any1::any_list2)))) = SUCC (SUCC (len ((any_list2 @ any_list2))))
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), SUCC (len (((any2::any_list2) @ (any1::(any2::any_list2))))) = SUCC (SUCC (len (((any2::any_list2) @ (any2::any_list2)))))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list), SUCC (len ((any_list1 @ (any1::any_list1)))) = SUCC (SUCC (len ((any_list1 @ any_list1))))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), SUCC (len ((any_list2 @ (any1::any_list2)))) = SUCC (SUCC (len ((any_list2 @ any_list2))))
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), SUCC (SUCC (len ((any_list2 @ (any1::(any2::any_list2)))))) = SUCC (SUCC (SUCC (len ((any_list2 @ (any2::any_list2))))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
intro any1(rank:5)
rewrite IH1 in goal at 0(rank:21)
=================================================
Progress: 10


1st goal of : forall (any1:any) (any_list1:any list), SUCC (len ((any_list1 @ (any1::any_list1)))) = SUCC (SUCC (len ((any_list1 @ any_list1))))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), SUCC (len ((any_list2 @ (any1::any_list2)))) = SUCC (SUCC (len ((any_list2 @ any_list2))))
Inductive1 : any_list1 = (any2::any_list2)
---------------------------------------
forall (any1:any), SUCC (SUCC (len ((any_list2 @ (any1::(any2::any_list2)))))) = SUCC (SUCC (SUCC (len ((any_list2 @ (any2::any_list2))))))

0 goal(s) more...

1 conjecture(s) more...
>>> intro any1(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list), SUCC (len ((any_list1 @ (any1::any_list1)))) = SUCC (SUCC (len ((any_list1 @ any_list1))))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), SUCC (len ((any_list2 @ (any1::any_list2)))) = SUCC (SUCC (len ((any_list2 @ any_list2))))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
SUCC (SUCC (len ((any_list2 @ (any1::(any2::any_list2)))))) = SUCC (SUCC (SUCC (len ((any_list2 @ (any2::any_list2))))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:5)
=================================================
Progress: 11


1st goal of : forall (any1:any) (any_list1:any list), SUCC (len ((any_list1 @ (any1::any_list1)))) = SUCC (SUCC (len ((any_list1 @ any_list1))))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), SUCC (len ((any_list2 @ (any1::any_list2)))) = SUCC (SUCC (len ((any_list2 @ any_list2))))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
SUCC (SUCC (len ((any_list2 @ (any1::(any2::any_list2)))))) = SUCC (SUCC (SUCC (len ((any_list2 @ (any2::any_list2))))))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list), SUCC (len ((any_list1 @ (any1::any_list1)))) = SUCC (SUCC (len ((any_list1 @ any_list1))))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), SUCC (len ((any_list2 @ (any1::any_list2)))) = SUCC (SUCC (len ((any_list2 @ any_list2))))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
SUCC (SUCC (len ((any_list2 @ (any1::(any2::any_list2)))))) = SUCC (SUCC (SUCC (SUCC (len ((any_list2 @ any_list2))))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
rewrite IH1 in goal at 0
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any_list2:any list), SUCC (SUCC (len ((any_list2 @ (any1::(any2::any_list2)))))) = SUCC (SUCC (SUCC (SUCC (len ((any_list2 @ any_list2))))))
Model : any1: 6, any2: 1, any_list2: (Nil)
Model : any1: 6, any2: 5, any_list2: (Nil)
Model : any1: 4, any2: 3, any_list2: (5::(Nil))
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000628 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any_list2:any list), SUCC (SUCC (len ((any_list2 @ (any1::(any2::any_list2)))))) = SUCC (SUCC (SUCC (SUCC (len ((any_list2 @ any_list2))))))
End of Lemma List


1st goal of : forall (any1:any) (any_list1:any list), SUCC (len ((any_list1 @ (any1::any_list1)))) = SUCC (SUCC (len ((any_list1 @ any_list1))))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), SUCC (len ((any_list2 @ (any1::any_list2)))) = SUCC (SUCC (len ((any_list2 @ any_list2))))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
SUCC (SUCC (len ((any_list2 @ (any1::(any2::any_list2)))))) = SUCC (SUCC (SUCC (SUCC (len ((any_list2 @ any_list2))))))

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 12


1st goal of : forall (any1:any) (any_list1:any list), SUCC (len ((any_list1 @ (any1::any_list1)))) = SUCC (SUCC (len ((any_list1 @ any_list1))))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), SUCC (len ((any_list2 @ (any1::any_list2)))) = SUCC (SUCC (len ((any_list2 @ any_list2))))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
SUCC (SUCC (len ((any_list2 @ (any1::(any2::any_list2)))))) = SUCC (SUCC (SUCC (SUCC (len ((any_list2 @ any_list2))))))

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any_list2:any list), SUCC (SUCC (len ((any_list2 @ (any1::(any2::any_list2)))))) = SUCC (SUCC (SUCC (SUCC (len ((any_list2 @ any_list2))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list), SUCC (SUCC (len ((any_list1 @ (any1::(any2::any_list1)))))) = SUCC (SUCC (SUCC (SUCC (len ((any_list1 @ any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), SUCC (SUCC (len ((any_list1 @ (any1::(any2::any_list1)))))) = SUCC (SUCC (SUCC (SUCC (len ((any_list1 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:8)
=================================================
Progress: 13


1st goal of : forall (any1:any) (any2:any) (any_list1:any list), SUCC (SUCC (len ((any_list1 @ (any1::(any2::any_list1)))))) = SUCC (SUCC (SUCC (SUCC (len ((any_list1 @ any_list1))))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list), SUCC (SUCC (len ((any_list1 @ (any1::(any2::any_list1)))))) = SUCC (SUCC (SUCC (SUCC (len ((any_list1 @ any_list1))))))

0 goal(s) more...

2 conjecture(s) more...
>>> induction any_list1(rank : 8)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list), SUCC (SUCC (len ((any_list1 @ (any1::(any2::any_list1)))))) = SUCC (SUCC (SUCC (SUCC (len ((any_list1 @ any_list1))))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any), SUCC (SUCC (len (((Nil) @ (any1::(any2::(Nil))))))) = SUCC (SUCC (SUCC (SUCC (len (((Nil) @ (Nil)))))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7)
=================================================
Progress: 14


1st goal of : forall (any1:any) (any2:any) (any_list1:any list), SUCC (SUCC (len ((any_list1 @ (any1::(any2::any_list1)))))) = SUCC (SUCC (SUCC (SUCC (len ((any_list1 @ any_list1))))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any), SUCC (SUCC (len (((Nil) @ (any1::(any2::(Nil))))))) = SUCC (SUCC (SUCC (SUCC (len (((Nil) @ (Nil)))))))

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list), SUCC (SUCC (len ((any_list1 @ (any1::(any2::any_list1)))))) = SUCC (SUCC (SUCC (SUCC (len ((any_list1 @ any_list1))))))
any_list1 : any list
any3 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any), SUCC (SUCC (len ((any_list2 @ (any1::(any2::any_list2)))))) = SUCC (SUCC (SUCC (SUCC (len ((any_list2 @ any_list2))))))
Inductive1 : any_list1 = (any3::any_list2)
---------------------------------------
forall (any1:any) (any2:any), SUCC (SUCC (len (((any3::any_list2) @ (any1::(any2::(any3::any_list2))))))) = SUCC (SUCC (SUCC (SUCC (len (((any3::any_list2) @ (any3::any_list2)))))))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7)
=================================================
Progress: 15


1st goal of : forall (any1:any) (any2:any) (any_list1:any list), SUCC (SUCC (len ((any_list1 @ (any1::(any2::any_list1)))))) = SUCC (SUCC (SUCC (SUCC (len ((any_list1 @ any_list1))))))
any_list1 : any list
any3 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any), SUCC (SUCC (len ((any_list2 @ (any1::(any2::any_list2)))))) = SUCC (SUCC (SUCC (SUCC (len ((any_list2 @ any_list2))))))
Inductive1 : any_list1 = (any3::any_list2)
---------------------------------------
forall (any1:any) (any2:any), SUCC (SUCC (len (((any3::any_list2) @ (any1::(any2::(any3::any_list2))))))) = SUCC (SUCC (SUCC (SUCC (len (((any3::any_list2) @ (any3::any_list2)))))))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list), SUCC (SUCC (len ((any_list1 @ (any1::(any2::any_list1)))))) = SUCC (SUCC (SUCC (SUCC (len ((any_list1 @ any_list1))))))
any_list1 : any list
any3 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any), SUCC (SUCC (len ((any_list2 @ (any1::(any2::any_list2)))))) = SUCC (SUCC (SUCC (SUCC (len ((any_list2 @ any_list2))))))
Inductive1 : any_list1 = (any3::any_list2)
---------------------------------------
forall (any1:any) (any2:any), SUCC (SUCC (SUCC (len ((any_list2 @ (any1::(any2::(any3::any_list2)))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (len ((any_list2 @ (any3::any_list2))))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro any1(rank:7)
intro any2(rank:7)
=================================================
Progress: 16


1st goal of : forall (any1:any) (any2:any) (any_list1:any list), SUCC (SUCC (len ((any_list1 @ (any1::(any2::any_list1)))))) = SUCC (SUCC (SUCC (SUCC (len ((any_list1 @ any_list1))))))
any_list1 : any list
any3 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any), SUCC (SUCC (len ((any_list2 @ (any1::(any2::any_list2)))))) = SUCC (SUCC (SUCC (SUCC (len ((any_list2 @ any_list2))))))
Inductive1 : any_list1 = (any3::any_list2)
---------------------------------------
forall (any1:any) (any2:any), SUCC (SUCC (SUCC (len ((any_list2 @ (any1::(any2::(any3::any_list2)))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (len ((any_list2 @ (any3::any_list2))))))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any1(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list), SUCC (SUCC (len ((any_list1 @ (any1::(any2::any_list1)))))) = SUCC (SUCC (SUCC (SUCC (len ((any_list1 @ any_list1))))))
any_list1 : any list
any3 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any), SUCC (SUCC (len ((any_list2 @ (any1::(any2::any_list2)))))) = SUCC (SUCC (SUCC (SUCC (len ((any_list2 @ any_list2))))))
Inductive1 : any_list1 = (any3::any_list2)
any1 : any
---------------------------------------
forall (any2:any), SUCC (SUCC (SUCC (len ((any_list2 @ (any1::(any2::(any3::any_list2)))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (len ((any_list2 @ (any3::any_list2))))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro any2(rank:7)
=================================================
Progress: 17


1st goal of : forall (any1:any) (any2:any) (any_list1:any list), SUCC (SUCC (len ((any_list1 @ (any1::(any2::any_list1)))))) = SUCC (SUCC (SUCC (SUCC (len ((any_list1 @ any_list1))))))
any_list1 : any list
any3 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any), SUCC (SUCC (len ((any_list2 @ (any1::(any2::any_list2)))))) = SUCC (SUCC (SUCC (SUCC (len ((any_list2 @ any_list2))))))
Inductive1 : any_list1 = (any3::any_list2)
---------------------------------------
forall (any1:any) (any2:any), SUCC (SUCC (SUCC (len ((any_list2 @ (any1::(any2::(any3::any_list2)))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (len ((any_list2 @ (any3::any_list2))))))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any2(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list), SUCC (SUCC (len ((any_list1 @ (any1::(any2::any_list1)))))) = SUCC (SUCC (SUCC (SUCC (len ((any_list1 @ any_list1))))))
any_list1 : any list
any3 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any), SUCC (SUCC (len ((any_list2 @ (any1::(any2::any_list2)))))) = SUCC (SUCC (SUCC (SUCC (len ((any_list2 @ any_list2))))))
Inductive1 : any_list1 = (any3::any_list2)
any2 : any
---------------------------------------
forall (any1:any), SUCC (SUCC (SUCC (len ((any_list2 @ (any1::(any2::(any3::any_list2)))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (len ((any_list2 @ (any3::any_list2))))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any2
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any_list2:any list) (arg1:any list), SUCC (SUCC (SUCC (len ((any_list2 @ (any1::(any2::arg1))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (len ((any_list2 @ arg1)))))))
Model : any1: 0, any2: 6, any_list2: (Nil), arg1: (Nil)
Model : any1: 0, any2: 0, any_list2: (Nil), arg1: (Nil)
Model : any1: 8, any2: 5, any_list2: (Nil), arg1: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000296 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any_list2:any list) (arg1:any list), SUCC (SUCC (SUCC (len ((any_list2 @ (any1::(any2::arg1))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (len ((any_list2 @ arg1)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any_list1:any list), SUCC (SUCC (len ((any_list1 @ (any1::(any2::any_list1)))))) = SUCC (SUCC (SUCC (SUCC (len ((any_list1 @ any_list1))))))
any_list1 : any list
any3 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any), SUCC (SUCC (len ((any_list2 @ (any1::(any2::any_list2)))))) = SUCC (SUCC (SUCC (SUCC (len ((any_list2 @ any_list2))))))
Inductive1 : any_list1 = (any3::any_list2)
any2 : any
---------------------------------------
forall (any1:any), SUCC (SUCC (SUCC (len ((any_list2 @ (any1::(any2::(any3::any_list2)))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (len ((any_list2 @ (any3::any_list2))))))))

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 18


1st goal of : forall (any1:any) (any2:any) (any_list1:any list), SUCC (SUCC (len ((any_list1 @ (any1::(any2::any_list1)))))) = SUCC (SUCC (SUCC (SUCC (len ((any_list1 @ any_list1))))))
any_list1 : any list
any3 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any), SUCC (SUCC (len ((any_list2 @ (any1::(any2::any_list2)))))) = SUCC (SUCC (SUCC (SUCC (len ((any_list2 @ any_list2))))))
Inductive1 : any_list1 = (any3::any_list2)
any2 : any
---------------------------------------
forall (any1:any), SUCC (SUCC (SUCC (len ((any_list2 @ (any1::(any2::(any3::any_list2)))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (len ((any_list2 @ (any3::any_list2))))))))

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any_list2:any list) (arg1:any list), SUCC (SUCC (SUCC (len ((any_list2 @ (any1::(any2::arg1))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (len ((any_list2 @ arg1)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), SUCC (SUCC (SUCC (len ((any_list1 @ (any1::(any2::any_list2))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (len ((any_list1 @ any_list2)))))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), SUCC (SUCC (SUCC (len ((any_list1 @ (any1::(any2::any_list2))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (len ((any_list1 @ any_list2)))))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:10)
=================================================
Progress: 19


1st goal of : forall (any1:any) (any2:any) (any_list1:any list), SUCC (SUCC (len ((any_list1 @ (any1::(any2::any_list1)))))) = SUCC (SUCC (SUCC (SUCC (len ((any_list1 @ any_list1))))))
any_list1 : any list
any3 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any), SUCC (SUCC (len ((any_list2 @ (any1::(any2::any_list2)))))) = SUCC (SUCC (SUCC (SUCC (len ((any_list2 @ any_list2))))))
Inductive1 : any_list1 = (any3::any_list2)
any1 : any
---------------------------------------
forall (any2:any), SUCC (SUCC (SUCC (len ((any_list2 @ (any1::(any2::(any3::any_list2)))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (len ((any_list2 @ (any3::any_list2))))))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any2(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list), SUCC (SUCC (len ((any_list1 @ (any1::(any2::any_list1)))))) = SUCC (SUCC (SUCC (SUCC (len ((any_list1 @ any_list1))))))
any_list1 : any list
any3 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any), SUCC (SUCC (len ((any_list2 @ (any1::(any2::any_list2)))))) = SUCC (SUCC (SUCC (SUCC (len ((any_list2 @ any_list2))))))
Inductive1 : any_list1 = (any3::any_list2)
any1 : any
any2 : any
---------------------------------------
SUCC (SUCC (SUCC (len ((any_list2 @ (any1::(any2::(any3::any_list2)))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (len ((any_list2 @ (any3::any_list2))))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
intro any2
advanced_generalize done
Lemma : forall (any1:any) (any2:any) (any_list2:any list) (arg2:any list), SUCC (SUCC (SUCC (len ((any_list2 @ (any1::(any2::arg2))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (len ((any_list2 @ arg2)))))))
Model : any1: 0, any2: 4, any_list2: (Nil), arg2: (Nil)
Model : any1: 2, any2: 0, any_list2: (0::(Nil)), arg2: (Nil)
Model : any1: 3, any2: 0, any_list2: (Nil), arg2: (Nil)
Substituting variables...
Simplifying conditions and property...
Simplifying took 0.000377 seconds
Result : true
New Env

;;
Lemma List
forall (any1:any) (any2:any) (any_list2:any list) (arg2:any list), SUCC (SUCC (SUCC (len ((any_list2 @ (any1::(any2::arg2))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (len ((any_list2 @ arg2)))))))
End of Lemma List


1st goal of : forall (any1:any) (any2:any) (any_list1:any list), SUCC (SUCC (len ((any_list1 @ (any1::(any2::any_list1)))))) = SUCC (SUCC (SUCC (SUCC (len ((any_list1 @ any_list1))))))
any_list1 : any list
any3 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any), SUCC (SUCC (len ((any_list2 @ (any1::(any2::any_list2)))))) = SUCC (SUCC (SUCC (SUCC (len ((any_list2 @ any_list2))))))
Inductive1 : any_list1 = (any3::any_list2)
any1 : any
any2 : any
---------------------------------------
SUCC (SUCC (SUCC (len ((any_list2 @ (any1::(any2::(any3::any_list2)))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (len ((any_list2 @ (any3::any_list2))))))))

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 20


1st goal of : forall (any1:any) (any2:any) (any_list1:any list), SUCC (SUCC (len ((any_list1 @ (any1::(any2::any_list1)))))) = SUCC (SUCC (SUCC (SUCC (len ((any_list1 @ any_list1))))))
any_list1 : any list
any3 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any), SUCC (SUCC (len ((any_list2 @ (any1::(any2::any_list2)))))) = SUCC (SUCC (SUCC (SUCC (len ((any_list2 @ any_list2))))))
Inductive1 : any_list1 = (any3::any_list2)
any1 : any
any2 : any
---------------------------------------
SUCC (SUCC (SUCC (len ((any_list2 @ (any1::(any2::(any3::any_list2)))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (len ((any_list2 @ (any3::any_list2))))))))

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (any1:any) (any2:any) (any_list2:any list) (arg2:any list), SUCC (SUCC (SUCC (len ((any_list2 @ (any1::(any2::arg2))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (len ((any_list2 @ arg2)))))))(rank : 0)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), SUCC (SUCC (SUCC (len ((any_list1 @ (any1::(any2::any_list2))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (len ((any_list1 @ any_list2)))))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), SUCC (SUCC (SUCC (len ((any_list1 @ (any1::(any2::any_list2))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (len ((any_list1 @ any_list2)))))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:10)
=================================================
Progress: 21


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), SUCC (SUCC (SUCC (len ((any_list1 @ (any1::(any2::any_list2))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (len ((any_list1 @ any_list2)))))))

---------------------------------------
forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), SUCC (SUCC (SUCC (len ((any_list1 @ (any1::(any2::any_list2))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (len ((any_list1 @ any_list2)))))))

0 goal(s) more...

3 conjecture(s) more...
>>> induction any_list1(rank : 10)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), SUCC (SUCC (SUCC (len ((any_list1 @ (any1::(any2::any_list2))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (len ((any_list1 @ any_list2)))))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list), SUCC (SUCC (SUCC (len (((Nil) @ (any1::(any2::any_list2))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (len (((Nil) @ any_list2)))))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9)
=================================================
Progress: 22


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), SUCC (SUCC (SUCC (len ((any_list1 @ (any1::(any2::any_list2))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (len ((any_list1 @ any_list2)))))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list), SUCC (SUCC (SUCC (len (((Nil) @ (any1::(any2::any_list2))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (len (((Nil) @ any_list2)))))))

1 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), SUCC (SUCC (SUCC (len ((any_list1 @ (any1::(any2::any_list2))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (len ((any_list1 @ any_list2)))))))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), SUCC (SUCC (SUCC (len ((any_list3 @ (any1::(any2::any_list2))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (len ((any_list3 @ any_list2)))))))
Inductive1 : any_list1 = (any3::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list), SUCC (SUCC (SUCC (len (((any3::any_list3) @ (any1::(any2::any_list2))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (len (((any3::any_list3) @ any_list2)))))))

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 23


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), SUCC (SUCC (SUCC (len ((any_list1 @ (any1::(any2::any_list2))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (len ((any_list1 @ any_list2)))))))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), SUCC (SUCC (SUCC (len ((any_list3 @ (any1::(any2::any_list2))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (len ((any_list3 @ any_list2)))))))
Inductive1 : any_list1 = (any3::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list), SUCC (SUCC (SUCC (len (((any3::any_list3) @ (any1::(any2::any_list2))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (len (((any3::any_list3) @ any_list2)))))))

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), SUCC (SUCC (SUCC (len ((any_list1 @ (any1::(any2::any_list2))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (len ((any_list1 @ any_list2)))))))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), SUCC (SUCC (SUCC (len ((any_list3 @ (any1::(any2::any_list2))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (len ((any_list3 @ any_list2)))))))
Inductive1 : any_list1 = (any3::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list), SUCC (SUCC (SUCC (SUCC (len ((any_list3 @ (any1::(any2::any_list2)))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (SUCC (len ((any_list3 @ any_list2))))))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
intro any1(rank:9)
intro any2(rank:9)
intro any_list2(rank:9)
rewrite IH1 in goal at 0(rank:17)
=================================================
Progress: 24


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), SUCC (SUCC (SUCC (len ((any_list1 @ (any1::(any2::any_list2))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (len ((any_list1 @ any_list2)))))))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), SUCC (SUCC (SUCC (len ((any_list3 @ (any1::(any2::any_list2))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (len ((any_list3 @ any_list2)))))))
Inductive1 : any_list1 = (any3::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list), SUCC (SUCC (SUCC (SUCC (len ((any_list3 @ (any1::(any2::any_list2)))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (SUCC (len ((any_list3 @ any_list2))))))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any1(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), SUCC (SUCC (SUCC (len ((any_list1 @ (any1::(any2::any_list2))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (len ((any_list1 @ any_list2)))))))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), SUCC (SUCC (SUCC (len ((any_list3 @ (any1::(any2::any_list2))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (len ((any_list3 @ any_list2)))))))
Inductive1 : any_list1 = (any3::any_list3)
any1 : any
---------------------------------------
forall (any2:any) (any_list2:any list), SUCC (SUCC (SUCC (SUCC (len ((any_list3 @ (any1::(any2::any_list2)))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (SUCC (len ((any_list3 @ any_list2))))))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro any2(rank:9)
intro any_list2(rank:9)
rewrite IH1 in goal at 0(rank:17)
=================================================
Progress: 25


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), SUCC (SUCC (SUCC (len ((any_list1 @ (any1::(any2::any_list2))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (len ((any_list1 @ any_list2)))))))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), SUCC (SUCC (SUCC (len ((any_list3 @ (any1::(any2::any_list2))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (len ((any_list3 @ any_list2)))))))
Inductive1 : any_list1 = (any3::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list), SUCC (SUCC (SUCC (SUCC (len ((any_list3 @ (any1::(any2::any_list2)))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (SUCC (len ((any_list3 @ any_list2))))))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any2(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), SUCC (SUCC (SUCC (len ((any_list1 @ (any1::(any2::any_list2))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (len ((any_list1 @ any_list2)))))))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), SUCC (SUCC (SUCC (len ((any_list3 @ (any1::(any2::any_list2))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (len ((any_list3 @ any_list2)))))))
Inductive1 : any_list1 = (any3::any_list3)
any2 : any
---------------------------------------
forall (any1:any) (any_list2:any list), SUCC (SUCC (SUCC (SUCC (len ((any_list3 @ (any1::(any2::any_list2)))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (SUCC (len ((any_list3 @ any_list2))))))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro any_list2(rank:9)
rewrite IH1 in goal at 0(rank:17)
=================================================
Progress: 26


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), SUCC (SUCC (SUCC (len ((any_list1 @ (any1::(any2::any_list2))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (len ((any_list1 @ any_list2)))))))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), SUCC (SUCC (SUCC (len ((any_list3 @ (any1::(any2::any_list2))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (len ((any_list3 @ any_list2)))))))
Inductive1 : any_list1 = (any3::any_list3)
---------------------------------------
forall (any1:any) (any2:any) (any_list2:any list), SUCC (SUCC (SUCC (SUCC (len ((any_list3 @ (any1::(any2::any_list2)))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (SUCC (len ((any_list3 @ any_list2))))))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any_list2(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), SUCC (SUCC (SUCC (len ((any_list1 @ (any1::(any2::any_list2))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (len ((any_list1 @ any_list2)))))))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), SUCC (SUCC (SUCC (len ((any_list3 @ (any1::(any2::any_list2))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (len ((any_list3 @ any_list2)))))))
Inductive1 : any_list1 = (any3::any_list3)
any_list2 : any list
---------------------------------------
forall (any1:any) (any2:any), SUCC (SUCC (SUCC (SUCC (len ((any_list3 @ (any1::(any2::any_list2)))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (SUCC (len ((any_list3 @ any_list2))))))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:9)
=================================================
Progress: 27


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), SUCC (SUCC (SUCC (len ((any_list1 @ (any1::(any2::any_list2))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (len ((any_list1 @ any_list2)))))))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), SUCC (SUCC (SUCC (len ((any_list3 @ (any1::(any2::any_list2))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (len ((any_list3 @ any_list2)))))))
Inductive1 : any_list1 = (any3::any_list3)
any1 : any
---------------------------------------
forall (any2:any) (any_list2:any list), SUCC (SUCC (SUCC (SUCC (len ((any_list3 @ (any1::(any2::any_list2)))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (SUCC (len ((any_list3 @ any_list2))))))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any2(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), SUCC (SUCC (SUCC (len ((any_list1 @ (any1::(any2::any_list2))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (len ((any_list1 @ any_list2)))))))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), SUCC (SUCC (SUCC (len ((any_list3 @ (any1::(any2::any_list2))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (len ((any_list3 @ any_list2)))))))
Inductive1 : any_list1 = (any3::any_list3)
any1 : any
any2 : any
---------------------------------------
forall (any_list2:any list), SUCC (SUCC (SUCC (SUCC (len ((any_list3 @ (any1::(any2::any_list2)))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (SUCC (len ((any_list3 @ any_list2))))))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro any_list2(rank:9)
rewrite IH1 in goal at 0(rank:17)
=================================================
Progress: 28


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), SUCC (SUCC (SUCC (len ((any_list1 @ (any1::(any2::any_list2))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (len ((any_list1 @ any_list2)))))))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), SUCC (SUCC (SUCC (len ((any_list3 @ (any1::(any2::any_list2))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (len ((any_list3 @ any_list2)))))))
Inductive1 : any_list1 = (any3::any_list3)
any1 : any
---------------------------------------
forall (any2:any) (any_list2:any list), SUCC (SUCC (SUCC (SUCC (len ((any_list3 @ (any1::(any2::any_list2)))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (SUCC (len ((any_list3 @ any_list2))))))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any_list2(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), SUCC (SUCC (SUCC (len ((any_list1 @ (any1::(any2::any_list2))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (len ((any_list1 @ any_list2)))))))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), SUCC (SUCC (SUCC (len ((any_list3 @ (any1::(any2::any_list2))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (len ((any_list3 @ any_list2)))))))
Inductive1 : any_list1 = (any3::any_list3)
any1 : any
any_list2 : any list
---------------------------------------
forall (any2:any), SUCC (SUCC (SUCC (SUCC (len ((any_list3 @ (any1::(any2::any_list2)))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (SUCC (len ((any_list3 @ any_list2))))))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:9)
=================================================
Progress: 29


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), SUCC (SUCC (SUCC (len ((any_list1 @ (any1::(any2::any_list2))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (len ((any_list1 @ any_list2)))))))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), SUCC (SUCC (SUCC (len ((any_list3 @ (any1::(any2::any_list2))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (len ((any_list3 @ any_list2)))))))
Inductive1 : any_list1 = (any3::any_list3)
any2 : any
---------------------------------------
forall (any1:any) (any_list2:any list), SUCC (SUCC (SUCC (SUCC (len ((any_list3 @ (any1::(any2::any_list2)))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (SUCC (len ((any_list3 @ any_list2))))))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro any_list2(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), SUCC (SUCC (SUCC (len ((any_list1 @ (any1::(any2::any_list2))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (len ((any_list1 @ any_list2)))))))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), SUCC (SUCC (SUCC (len ((any_list3 @ (any1::(any2::any_list2))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (len ((any_list3 @ any_list2)))))))
Inductive1 : any_list1 = (any3::any_list3)
any2 : any
any_list2 : any list
---------------------------------------
forall (any1:any), SUCC (SUCC (SUCC (SUCC (len ((any_list3 @ (any1::(any2::any_list2)))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (SUCC (len ((any_list3 @ any_list2))))))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:9)
=================================================
Progress: 30


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), SUCC (SUCC (SUCC (len ((any_list1 @ (any1::(any2::any_list2))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (len ((any_list1 @ any_list2)))))))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), SUCC (SUCC (SUCC (len ((any_list3 @ (any1::(any2::any_list2))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (len ((any_list3 @ any_list2)))))))
Inductive1 : any_list1 = (any3::any_list3)
any_list2 : any list
---------------------------------------
forall (any1:any) (any2:any), SUCC (SUCC (SUCC (SUCC (len ((any_list3 @ (any1::(any2::any_list2)))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (SUCC (len ((any_list3 @ any_list2))))))))

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 9)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), SUCC (SUCC (SUCC (len ((any_list1 @ (any1::(any2::any_list2))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (len ((any_list1 @ any_list2)))))))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), SUCC (SUCC (SUCC (len ((any_list3 @ (any1::(any2::any_list2))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (len ((any_list3 @ any_list2)))))))
Inductive1 : any_list1 = (any3::any_list3)
any_list2 : any list
---------------------------------------
forall (any1:any) (any2:any), SUCC (SUCC (SUCC (SUCC (SUCC (SUCC (len ((any_list3 @ any_list2)))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (SUCC (len ((any_list3 @ any_list2))))))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7)
=================================================
Progress: 31


1st goal of : forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), SUCC (SUCC (SUCC (len ((any_list1 @ (any1::(any2::any_list2))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (len ((any_list1 @ any_list2)))))))
any_list1 : any list
any3 : any
any_list3 : any list
IH1 : forall (any1:any) (any2:any) (any_list2:any list), SUCC (SUCC (SUCC (len ((any_list3 @ (any1::(any2::any_list2))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (len ((any_list3 @ any_list2)))))))
Inductive1 : any_list1 = (any3::any_list3)
any_list2 : any list
---------------------------------------
forall (any1:any) (any2:any), SUCC (SUCC (SUCC (SUCC (SUCC (SUCC (len ((any_list3 @ any_list2)))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (SUCC (len ((any_list3 @ any_list2))))))))

0 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list), SUCC (SUCC (len ((any_list1 @ (any1::(any2::any_list1)))))) = SUCC (SUCC (SUCC (SUCC (len ((any_list1 @ any_list1))))))
any_list1 : any list
any3 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any), SUCC (SUCC (len ((any_list2 @ (any1::(any2::any_list2)))))) = SUCC (SUCC (SUCC (SUCC (len ((any_list2 @ any_list2))))))
Inductive1 : any_list1 = (any3::any_list2)
any2 : any
---------------------------------------
forall (any1:any), SUCC (SUCC (SUCC (len ((any_list2 @ (any1::(any2::(any3::any_list2)))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (len ((any_list2 @ (any3::any_list2))))))))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 7
Tactic List : 2
intro any1(rank:7)
rewrite lemma3 in goal at 0(rank:15)
=================================================
Progress: 32


1st goal of : forall (any1:any) (any2:any) (any_list1:any list), SUCC (SUCC (len ((any_list1 @ (any1::(any2::any_list1)))))) = SUCC (SUCC (SUCC (SUCC (len ((any_list1 @ any_list1))))))
any_list1 : any list
any3 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any), SUCC (SUCC (len ((any_list2 @ (any1::(any2::any_list2)))))) = SUCC (SUCC (SUCC (SUCC (len ((any_list2 @ any_list2))))))
Inductive1 : any_list1 = (any3::any_list2)
any2 : any
---------------------------------------
forall (any1:any), SUCC (SUCC (SUCC (len ((any_list2 @ (any1::(any2::(any3::any_list2)))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (len ((any_list2 @ (any3::any_list2))))))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro any1(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list), SUCC (SUCC (len ((any_list1 @ (any1::(any2::any_list1)))))) = SUCC (SUCC (SUCC (SUCC (len ((any_list1 @ any_list1))))))
any_list1 : any list
any3 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any), SUCC (SUCC (len ((any_list2 @ (any1::(any2::any_list2)))))) = SUCC (SUCC (SUCC (SUCC (len ((any_list2 @ any_list2))))))
Inductive1 : any_list1 = (any3::any_list2)
any2 : any
any1 : any
---------------------------------------
SUCC (SUCC (SUCC (len ((any_list2 @ (any1::(any2::(any3::any_list2)))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (len ((any_list2 @ (any3::any_list2))))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite lemma3 in goal at 0(rank:7)
=================================================
Progress: 33


1st goal of : forall (any1:any) (any2:any) (any_list1:any list), SUCC (SUCC (len ((any_list1 @ (any1::(any2::any_list1)))))) = SUCC (SUCC (SUCC (SUCC (len ((any_list1 @ any_list1))))))
any_list1 : any list
any3 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any), SUCC (SUCC (len ((any_list2 @ (any1::(any2::any_list2)))))) = SUCC (SUCC (SUCC (SUCC (len ((any_list2 @ any_list2))))))
Inductive1 : any_list1 = (any3::any_list2)
any2 : any
any1 : any
---------------------------------------
SUCC (SUCC (SUCC (len ((any_list2 @ (any1::(any2::(any3::any_list2)))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (len ((any_list2 @ (any3::any_list2))))))))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 7)


1st goal of : forall (any1:any) (any2:any) (any_list1:any list), SUCC (SUCC (len ((any_list1 @ (any1::(any2::any_list1)))))) = SUCC (SUCC (SUCC (SUCC (len ((any_list1 @ any_list1))))))
any_list1 : any list
any3 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any), SUCC (SUCC (len ((any_list2 @ (any1::(any2::any_list2)))))) = SUCC (SUCC (SUCC (SUCC (len ((any_list2 @ any_list2))))))
Inductive1 : any_list1 = (any3::any_list2)
any2 : any
any1 : any
---------------------------------------
SUCC (SUCC (SUCC (SUCC (SUCC (len ((any_list2 @ (any3::any_list2)))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (len ((any_list2 @ (any3::any_list2))))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5)
=================================================
Progress: 34


1st goal of : forall (any1:any) (any2:any) (any_list1:any list), SUCC (SUCC (len ((any_list1 @ (any1::(any2::any_list1)))))) = SUCC (SUCC (SUCC (SUCC (len ((any_list1 @ any_list1))))))
any_list1 : any list
any3 : any
any_list2 : any list
IH1 : forall (any1:any) (any2:any), SUCC (SUCC (len ((any_list2 @ (any1::(any2::any_list2)))))) = SUCC (SUCC (SUCC (SUCC (len ((any_list2 @ any_list2))))))
Inductive1 : any_list1 = (any3::any_list2)
any2 : any
any1 : any
---------------------------------------
SUCC (SUCC (SUCC (SUCC (SUCC (len ((any_list2 @ (any3::any_list2)))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (len ((any_list2 @ (any3::any_list2))))))))

0 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list), SUCC (len ((any_list1 @ (any1::any_list1)))) = SUCC (SUCC (len ((any_list1 @ any_list1))))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), SUCC (len ((any_list2 @ (any1::any_list2)))) = SUCC (SUCC (len ((any_list2 @ any_list2))))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
SUCC (SUCC (len ((any_list2 @ (any1::(any2::any_list2)))))) = SUCC (SUCC (SUCC (SUCC (len ((any_list2 @ any_list2))))))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 2
Tactic List : 1
rewrite lemma4 in goal at 0(rank:5)
=================================================
Progress: 35


1st goal of : forall (any1:any) (any_list1:any list), SUCC (len ((any_list1 @ (any1::any_list1)))) = SUCC (SUCC (len ((any_list1 @ any_list1))))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), SUCC (len ((any_list2 @ (any1::any_list2)))) = SUCC (SUCC (len ((any_list2 @ any_list2))))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
SUCC (SUCC (len ((any_list2 @ (any1::(any2::any_list2)))))) = SUCC (SUCC (SUCC (SUCC (len ((any_list2 @ any_list2))))))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma4 in goal at 0(rank : 5)


1st goal of : forall (any1:any) (any_list1:any list), SUCC (len ((any_list1 @ (any1::any_list1)))) = SUCC (SUCC (len ((any_list1 @ any_list1))))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), SUCC (len ((any_list2 @ (any1::any_list2)))) = SUCC (SUCC (len ((any_list2 @ any_list2))))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
SUCC (SUCC (SUCC (SUCC (len ((any_list2 @ any_list2)))))) = SUCC (SUCC (SUCC (SUCC (len ((any_list2 @ any_list2))))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3)
=================================================
Progress: 36


1st goal of : forall (any1:any) (any_list1:any list), SUCC (len ((any_list1 @ (any1::any_list1)))) = SUCC (SUCC (len ((any_list1 @ any_list1))))
any_list1 : any list
any2 : any
any_list2 : any list
IH1 : forall (any1:any), SUCC (len ((any_list2 @ (any1::any_list2)))) = SUCC (SUCC (len ((any_list2 @ any_list2))))
Inductive1 : any_list1 = (any2::any_list2)
any1 : any
---------------------------------------
SUCC (SUCC (SUCC (SUCC (len ((any_list2 @ any_list2)))))) = SUCC (SUCC (SUCC (SUCC (len ((any_list2 @ any_list2))))))

0 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 3)


1st goal of : forall (any_list1:any list), len ((any_list1 @ any_list1)) = double (len (any_list1))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : len ((any_list2 @ any_list2)) = double (len (any_list2))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
SUCC (len ((any_list2 @ (any1::any_list2)))) = SUCC (SUCC (len ((any_list2 @ any_list2))))

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 1
Tactic List : 1
rewrite lemma5 in goal at 0(rank:3)
=================================================
Progress: 37


1st goal of : forall (any_list1:any list), len ((any_list1 @ any_list1)) = double (len (any_list1))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : len ((any_list2 @ any_list2)) = double (len (any_list2))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
SUCC (len ((any_list2 @ (any1::any_list2)))) = SUCC (SUCC (len ((any_list2 @ any_list2))))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma5 in goal at 0(rank : 3)


1st goal of : forall (any_list1:any list), len ((any_list1 @ any_list1)) = double (len (any_list1))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : len ((any_list2 @ any_list2)) = double (len (any_list2))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
SUCC (SUCC (len ((any_list2 @ any_list2)))) = SUCC (SUCC (len ((any_list2 @ any_list2))))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:0)
=================================================
Progress: 38


1st goal of : forall (any_list1:any list), len ((any_list1 @ any_list1)) = double (len (any_list1))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : len ((any_list2 @ any_list2)) = double (len (any_list2))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
SUCC (SUCC (len ((any_list2 @ any_list2)))) = SUCC (SUCC (len ((any_list2 @ any_list2))))

0 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 0)


No conjecture
Proof Success
Proof
assert forall (any_list1:any list), len ((any_list1 @ any_list1)) = double (len (any_list1))
induction any_list1
reflexivity
simpl in goal
rewrite <- IH1 in goal at 0
assert forall (any1:any) (any_list1:any list), SUCC (len ((any_list1 @ (any1::any_list1)))) = SUCC (SUCC (len ((any_list1 @ any_list1))))
induction any_list1
reflexivity
simpl in goal
intro any1
rewrite IH1 in goal at 0
assert forall (any1:any) (any2:any) (any_list1:any list), SUCC (SUCC (len ((any_list1 @ (any1::(any2::any_list1)))))) = SUCC (SUCC (SUCC (SUCC (len ((any_list1 @ any_list1))))))
induction any_list1
reflexivity
simpl in goal
intro any2
assert forall (any1:any) (any2:any) (any_list1:any list) (any_list2:any list), SUCC (SUCC (SUCC (len ((any_list1 @ (any1::(any2::any_list2))))))) = SUCC (SUCC (SUCC (SUCC (SUCC (len ((any_list1 @ any_list2)))))))
induction any_list1
reflexivity
simpl in goal
intro any_list2
rewrite IH1 in goal at 0
reflexivity
intro any1
rewrite lemma3 in goal at 0
reflexivity
rewrite lemma4 in goal at 0
reflexivity
rewrite lemma5 in goal at 0
reflexivity
Qed
File "_none_", lines 88-90, characters 2-22:
Warning 8 [partial-match]: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
[]

File "_none_", lines 88-90, characters 2-22:
Warning 8 [partial-match]: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
[]
