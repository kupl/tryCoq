Enter the definition file path (1/2) : 
> Enter the definition file path (2/2) : 
> Choose the proof type :
1) Interactive Mode 	 2) Auto Mode
Enter the goal : =================================================
Progress: 1


No conjecture
>>> assert forall (x:nat list) (y:nat list), reverse ((reverse (x) @ y)) = (reverse (y) @ x)(rank : 0)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)

---------------------------------------
forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
induction nat_list1(rank:12)
induction nat_list2(rank:12)
=================================================
Progress: 2


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)

---------------------------------------
forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> induction nat_list1(rank : 12)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat_list2:nat list), reverse ((reverse ((Nil)) @ nat_list2)) = (reverse (nat_list2) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4)
=================================================
Progress: 3


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat_list2:nat list), reverse ((reverse ((Nil)) @ nat_list2)) = (reverse (nat_list2) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat_list2:nat list), reverse (nat_list2) = (reverse (nat_list2) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction nat_list2(rank:5)
=================================================
Progress: 4


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat_list2:nat list), reverse (nat_list2) = (reverse (nat_list2) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> induction nat_list2(rank : 5)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
Base2 : nat_list2 = (Nil)
---------------------------------------
reverse ((Nil)) = (reverse ((Nil)) @ (Nil))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:4)
=================================================
Progress: 5


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
Base2 : nat_list2 = (Nil)
---------------------------------------
reverse ((Nil)) = (reverse ((Nil)) @ (Nil))

2 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 4)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : reverse (nat_list3) = (reverse (nat_list3) @ (Nil))
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
reverse ((nat1::nat_list3)) = (reverse ((nat1::nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:4)
=================================================
Progress: 6


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : reverse (nat_list3) = (reverse (nat_list3) @ (Nil))
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
reverse ((nat1::nat_list3)) = (reverse ((nat1::nat_list3)) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : reverse (nat_list3) = (reverse (nat_list3) @ (Nil))
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
(reverse (nat_list3) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
expr list
reverse (nat_list3)
(reverse (nat_list3) @ (nat1::(Nil)))
((reverse (nat_list4) @ (nat2::(Nil))) @ (nat1::(Nil)))
(((reverse (nat_list5) @ (nat3::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil)))
expr list
(reverse (nat_list3) @ (Nil))
((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))
(((reverse (nat_list4) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (Nil))
((((reverse (nat_list5) @ (nat3::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (Nil))
New Env

;;
Lemma List
forall (arg1:any list), arg1 = (arg1 @ (Nil))
End of Lemma List


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : reverse (nat_list3) = (reverse (nat_list3) @ (Nil))
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
(reverse (nat_list3) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 7


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : reverse (nat_list3) = (reverse (nat_list3) @ (Nil))
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
(reverse (nat_list3) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (arg1:any list), arg1 = (arg1 @ (Nil))(rank : 0)


1st goal of : forall (any_list1:any list), any_list1 = (any_list1 @ (Nil))

---------------------------------------
forall (any_list1:any list), any_list1 = (any_list1 @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:6)
=================================================
Progress: 8


1st goal of : forall (any_list1:any list), any_list1 = (any_list1 @ (Nil))

---------------------------------------
forall (any_list1:any list), any_list1 = (any_list1 @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> induction any_list1(rank : 6)


1st goal of : forall (any_list1:any list), any_list1 = (any_list1 @ (Nil))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
(Nil) = ((Nil) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5)
=================================================
Progress: 9


1st goal of : forall (any_list1:any list), any_list1 = (any_list1 @ (Nil))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
(Nil) = ((Nil) @ (Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5)


1st goal of : forall (any_list1:any list), any_list1 = (any_list1 @ (Nil))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : any_list2 = (any_list2 @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
(any1::any_list2) = ((any1::any_list2) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5)
=================================================
Progress: 10


1st goal of : forall (any_list1:any list), any_list1 = (any_list1 @ (Nil))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : any_list2 = (any_list2 @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
(any1::any_list2) = ((any1::any_list2) @ (Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5)


1st goal of : forall (any_list1:any list), any_list1 = (any_list1 @ (Nil))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : any_list2 = (any_list2 @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
(any1::any_list2) = (any1::(any_list2 @ (Nil)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:5)
=================================================
Progress: 11


1st goal of : forall (any_list1:any list), any_list1 = (any_list1 @ (Nil))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : any_list2 = (any_list2 @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
(any1::any_list2) = (any1::(any_list2 @ (Nil)))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 5)


1st goal of : forall (any_list1:any list), any_list1 = (any_list1 @ (Nil))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : any_list2 = (any_list2 @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
(any1::any_list2) = (any1::any_list2)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:4)
=================================================
Progress: 12


1st goal of : forall (any_list1:any list), any_list1 = (any_list1 @ (Nil))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : any_list2 = (any_list2 @ (Nil))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
(any1::any_list2) = (any1::any_list2)

0 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 4)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : reverse (nat_list3) = (reverse (nat_list3) @ (Nil))
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
(reverse (nat_list3) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
rewrite <- lemma3 in goal at 0(rank:4)
=================================================
Progress: 13


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : reverse (nat_list3) = (reverse (nat_list3) @ (Nil))
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
(reverse (nat_list3) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 4)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : reverse (nat_list3) = (reverse (nat_list3) @ (Nil))
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
(reverse (nat_list3) @ (nat1::(Nil))) = (reverse (nat_list3) @ (nat1::(Nil)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3)
=================================================
Progress: 14


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : reverse (nat_list3) = (reverse (nat_list3) @ (Nil))
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
(reverse (nat_list3) @ (nat1::(Nil))) = (reverse (nat_list3) @ (nat1::(Nil)))

1 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 3)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list2:nat list), reverse ((reverse (nat_list3) @ nat_list2)) = (reverse (nat_list2) @ nat_list3)
Inductive1 : nat_list1 = (nat1::nat_list3)
---------------------------------------
forall (nat_list2:nat list), reverse ((reverse ((nat1::nat_list3)) @ nat_list2)) = (reverse (nat_list2) @ (nat1::nat_list3))

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:3)
=================================================
Progress: 15


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list2:nat list), reverse ((reverse (nat_list3) @ nat_list2)) = (reverse (nat_list2) @ nat_list3)
Inductive1 : nat_list1 = (nat1::nat_list3)
---------------------------------------
forall (nat_list2:nat list), reverse ((reverse ((nat1::nat_list3)) @ nat_list2)) = (reverse (nat_list2) @ (nat1::nat_list3))

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list2:nat list), reverse ((reverse (nat_list3) @ nat_list2)) = (reverse (nat_list2) @ nat_list3)
Inductive1 : nat_list1 = (nat1::nat_list3)
---------------------------------------
forall (nat_list2:nat list), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ nat_list2)) = (reverse (nat_list2) @ (nat1::nat_list3))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction nat_list2(rank:4)
=================================================
Progress: 16


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list2:nat list), reverse ((reverse (nat_list3) @ nat_list2)) = (reverse (nat_list2) @ nat_list3)
Inductive1 : nat_list1 = (nat1::nat_list3)
---------------------------------------
forall (nat_list2:nat list), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ nat_list2)) = (reverse (nat_list2) @ (nat1::nat_list3))

0 goal(s) more...

0 conjecture(s) more...
>>> induction nat_list2(rank : 4)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list2:nat list), reverse ((reverse (nat_list3) @ nat_list2)) = (reverse (nat_list2) @ nat_list3)
Inductive1 : nat_list1 = (nat1::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))) = (reverse ((Nil)) @ (nat1::nat_list3))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4)
=================================================
Progress: 17


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list2:nat list), reverse ((reverse (nat_list3) @ nat_list2)) = (reverse (nat_list2) @ nat_list3)
Inductive1 : nat_list1 = (nat1::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))) = (reverse ((Nil)) @ (nat1::nat_list3))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list2:nat list), reverse ((reverse (nat_list3) @ nat_list2)) = (reverse (nat_list2) @ nat_list3)
Inductive1 : nat_list1 = (nat1::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list3)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- lemma3 in goal at 0(rank:4)
=================================================
Progress: 18


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list2:nat list), reverse ((reverse (nat_list3) @ nat_list2)) = (reverse (nat_list2) @ nat_list3)
Inductive1 : nat_list1 = (nat1::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list3)

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 4)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list2:nat list), reverse ((reverse (nat_list3) @ nat_list2)) = (reverse (nat_list2) @ nat_list3)
Inductive1 : nat_list1 = (nat1::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
reverse ((reverse (nat_list3) @ (nat1::(Nil)))) = (nat1::nat_list3)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:4)
=================================================
Progress: 19


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list2:nat list), reverse ((reverse (nat_list3) @ nat_list2)) = (reverse (nat_list2) @ nat_list3)
Inductive1 : nat_list1 = (nat1::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
reverse ((reverse (nat_list3) @ (nat1::(Nil)))) = (nat1::nat_list3)

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 4)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list2:nat list), reverse ((reverse (nat_list3) @ nat_list2)) = (reverse (nat_list2) @ nat_list3)
Inductive1 : nat_list1 = (nat1::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
(reverse ((nat1::(Nil))) @ nat_list3) = (nat1::nat_list3)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3)
=================================================
Progress: 20


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list2:nat list), reverse ((reverse (nat_list3) @ nat_list2)) = (reverse (nat_list2) @ nat_list3)
Inductive1 : nat_list1 = (nat1::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
(reverse ((nat1::(Nil))) @ nat_list3) = (nat1::nat_list3)

1 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 3)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list2:nat list), reverse ((reverse (nat_list3) @ nat_list2)) = (reverse (nat_list2) @ nat_list3)
Inductive1 : nat_list1 = (nat1::nat_list3)
nat_list2 : nat list
nat2 : nat
nat_list4 : nat list
IH2 : reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ nat_list4)) = (reverse (nat_list4) @ (nat1::nat_list3))
Inductive2 : nat_list2 = (nat2::nat_list4)
---------------------------------------
reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (nat2::nat_list4))) = (reverse ((nat2::nat_list4)) @ (nat1::nat_list3))

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:3)
=================================================
Progress: 21


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list2:nat list), reverse ((reverse (nat_list3) @ nat_list2)) = (reverse (nat_list2) @ nat_list3)
Inductive1 : nat_list1 = (nat1::nat_list3)
nat_list2 : nat list
nat2 : nat
nat_list4 : nat list
IH2 : reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ nat_list4)) = (reverse (nat_list4) @ (nat1::nat_list3))
Inductive2 : nat_list2 = (nat2::nat_list4)
---------------------------------------
reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (nat2::nat_list4))) = (reverse ((nat2::nat_list4)) @ (nat1::nat_list3))

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list2:nat list), reverse ((reverse (nat_list3) @ nat_list2)) = (reverse (nat_list2) @ nat_list3)
Inductive1 : nat_list1 = (nat1::nat_list3)
nat_list2 : nat list
nat2 : nat
nat_list4 : nat list
IH2 : reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ nat_list4)) = (reverse (nat_list4) @ (nat1::nat_list3))
Inductive2 : nat_list2 = (nat2::nat_list4)
---------------------------------------
reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (nat2::nat_list4))) = ((reverse (nat_list4) @ (nat2::(Nil))) @ (nat1::nat_list3))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
expr list
reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ nat_list4))
reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (nat2::nat_list4)))
reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (nat2::(nat3::nat_list5))))
reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (nat2::(nat3::(nat4::nat_list6)))))
expr list
(reverse (nat_list4) @ (nat1::nat_list3))
((reverse (nat_list4) @ (nat2::(Nil))) @ (nat1::nat_list3))
(((reverse (nat_list5) @ (nat3::(Nil))) @ (nat2::(Nil))) @ (nat1::nat_list3))
((((reverse (nat_list6) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat2::(Nil))) @ (nat1::nat_list3))
New Env

;;
Lemma List
forall (nat1:nat) (nat2:nat) (nat_list3:nat list) (nat_list4:nat list), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (nat2::nat_list4))) = ((reverse (nat_list4) @ (nat2::(Nil))) @ (nat1::nat_list3))
End of Lemma List


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list2:nat list), reverse ((reverse (nat_list3) @ nat_list2)) = (reverse (nat_list2) @ nat_list3)
Inductive1 : nat_list1 = (nat1::nat_list3)
nat_list2 : nat list
nat2 : nat
nat_list4 : nat list
IH2 : reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ nat_list4)) = (reverse (nat_list4) @ (nat1::nat_list3))
Inductive2 : nat_list2 = (nat2::nat_list4)
---------------------------------------
reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (nat2::nat_list4))) = ((reverse (nat_list4) @ (nat2::(Nil))) @ (nat1::nat_list3))

0 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 22


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list2:nat list), reverse ((reverse (nat_list3) @ nat_list2)) = (reverse (nat_list2) @ nat_list3)
Inductive1 : nat_list1 = (nat1::nat_list3)
nat_list2 : nat list
nat2 : nat
nat_list4 : nat list
IH2 : reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ nat_list4)) = (reverse (nat_list4) @ (nat1::nat_list3))
Inductive2 : nat_list2 = (nat2::nat_list4)
---------------------------------------
reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (nat2::nat_list4))) = ((reverse (nat_list4) @ (nat2::(Nil))) @ (nat1::nat_list3))

0 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (nat_list3:nat list) (nat_list4:nat list), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (nat2::nat_list4))) = ((reverse (nat_list4) @ (nat2::(Nil))) @ (nat1::nat_list3))(rank : 0)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list) (nat_list2:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list1))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list) (nat_list2:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:6)
=================================================
Progress: 23


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list) (nat_list2:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list1))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list) (nat_list2:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 6)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list) (nat_list2:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list1))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list2:nat list), reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5)
=================================================
Progress: 24


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list) (nat_list2:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list1))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list2:nat list), reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::(Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list) (nat_list2:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list1))
nat_list1 : nat list
nat3 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat_list2:nat list), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list3))
Inductive1 : nat_list1 = (nat3::nat_list3)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list2:nat list), reverse (((reverse ((nat3::nat_list3)) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5)
=================================================
Progress: 25


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list) (nat_list2:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list1))
nat_list1 : nat list
nat3 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat_list2:nat list), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list3))
Inductive1 : nat_list1 = (nat3::nat_list3)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list2:nat list), reverse (((reverse ((nat3::nat_list3)) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list) (nat_list2:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list1))
nat_list1 : nat list
nat3 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat_list2:nat list), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list3))
Inductive1 : nat_list1 = (nat3::nat_list3)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list2(rank:6)
=================================================
Progress: 26


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list) (nat_list2:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list1))
nat_list1 : nat list
nat3 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat_list2:nat list), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list3))
Inductive1 : nat_list1 = (nat3::nat_list3)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list2(rank : 6)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list) (nat_list2:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list1))
nat_list1 : nat list
nat3 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat_list2:nat list), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list3))
Inductive1 : nat_list1 = (nat3::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = ((reverse ((Nil)) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6)
=================================================
Progress: 27


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list) (nat_list2:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list1))
nat_list1 : nat list
nat3 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat_list2:nat list), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list3))
Inductive1 : nat_list1 = (nat3::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = ((reverse ((Nil)) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list) (nat_list2:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list1))
nat_list1 : nat list
nat3 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat_list2:nat list), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list3))
Inductive1 : nat_list1 = (nat3::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list3)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
intro nat1(rank:6)
intro nat2(rank:6)
=================================================
Progress: 28


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list) (nat_list2:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list1))
nat_list1 : nat list
nat3 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat_list2:nat list), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list3))
Inductive1 : nat_list1 = (nat3::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list3)))

1 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 6)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list) (nat_list2:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list1))
nat_list1 : nat list
nat3 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat_list2:nat list), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list3))
Inductive1 : nat_list1 = (nat3::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
---------------------------------------
forall (nat2:nat), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list3)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat2(rank:6)
=================================================
Progress: 29


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list) (nat_list2:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list1))
nat_list1 : nat list
nat3 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat_list2:nat list), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list3))
Inductive1 : nat_list1 = (nat3::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list3)))

1 goal(s) more...

1 conjecture(s) more...
>>> intro nat2(rank : 6)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list) (nat_list2:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list1))
nat_list1 : nat list
nat3 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat_list2:nat list), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list3))
Inductive1 : nat_list1 = (nat3::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
---------------------------------------
forall (nat1:nat), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list3)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro nat2
New Env

;;
Lemma List
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list3:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list3)))
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list) (nat_list2:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list1))
nat_list1 : nat list
nat3 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat_list2:nat list), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list3))
Inductive1 : nat_list1 = (nat3::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
---------------------------------------
forall (nat1:nat), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list3)))

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 30


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list) (nat_list2:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list1))
nat_list1 : nat list
nat3 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat_list2:nat list), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list3))
Inductive1 : nat_list1 = (nat3::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
---------------------------------------
forall (nat1:nat), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list3)))

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list3:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list3)))(rank : 0)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:8)
=================================================
Progress: 31


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list) (nat_list2:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list1))
nat_list1 : nat list
nat3 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat_list2:nat list), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list3))
Inductive1 : nat_list1 = (nat3::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
---------------------------------------
forall (nat2:nat), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list3)))

1 goal(s) more...

1 conjecture(s) more...
>>> intro nat2(rank : 6)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list) (nat_list2:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list1))
nat_list1 : nat list
nat3 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat_list2:nat list), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list3))
Inductive1 : nat_list1 = (nat3::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
---------------------------------------
reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list3)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro nat1
intro nat2
=================================================
Progress: 32


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat_list1(rank : 8)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse ((Nil)) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7)
=================================================
Progress: 33


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse ((Nil)) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse ((nat4::nat_list2)) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::(nat4::nat_list2))))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7)
=================================================
Progress: 34


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse ((nat4::nat_list2)) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::(nat4::nat_list2))))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::(nat4::nat_list2))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
intro nat1(rank:7)
intro nat2(rank:7)
intro nat3(rank:7)
rewrite <- IH1 in goal at 0(rank:15)
=================================================
Progress: 35


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::(nat4::nat_list2))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::(nat4::nat_list2))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro nat2(rank:7)
intro nat3(rank:7)
rewrite <- IH1 in goal at 0(rank:15)
=================================================
Progress: 36


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::(nat4::nat_list2))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 7)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::(nat4::nat_list2))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro nat3(rank:7)
rewrite <- IH1 in goal at 0(rank:15)
=================================================
Progress: 37


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::(nat4::nat_list2))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat3(rank : 7)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::(nat4::nat_list2))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:7)
=================================================
Progress: 38


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::(nat4::nat_list2))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 7)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::(nat4::nat_list2))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro nat3(rank:7)
rewrite <- IH1 in goal at 0(rank:15)
=================================================
Progress: 39


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::(nat4::nat_list2))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat3(rank : 7)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat1 : nat
nat3 : nat
---------------------------------------
forall (nat2:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::(nat4::nat_list2))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:7)
=================================================
Progress: 40


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::(nat4::nat_list2))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat3(rank : 7)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::(nat4::nat_list2))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:7)
=================================================
Progress: 41


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::(nat4::nat_list2))))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 7)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro nat3
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (arg2:any list) (nat1:nat) (nat2:nat), reverse (((arg2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((arg2 @ (nat1::(Nil)))))
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 42


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (arg2:any list) (nat1:nat) (nat2:nat), reverse (((arg2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((arg2 @ (nat1::(Nil)))))(rank : 0)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))

---------------------------------------
forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:10)
=================================================
Progress: 43


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::(nat4::nat_list2))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat3(rank : 7)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat1 : nat
nat2 : nat
nat3 : nat
---------------------------------------
reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::(nat4::nat_list2))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:7)
=================================================
Progress: 44


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat1 : nat
nat3 : nat
---------------------------------------
forall (nat2:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::(nat4::nat_list2))))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 7)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat1 : nat
nat3 : nat
---------------------------------------
forall (nat2:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro nat1
intro nat3
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (arg3:any list) (nat1:nat) (nat2:nat), reverse (((arg3 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((arg3 @ (nat1::(Nil)))))
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat1 : nat
nat3 : nat
---------------------------------------
forall (nat2:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 45


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat1 : nat
nat3 : nat
---------------------------------------
forall (nat2:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (arg3:any list) (nat1:nat) (nat2:nat), reverse (((arg3 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((arg3 @ (nat1::(Nil)))))(rank : 0)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))

---------------------------------------
forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:10)
=================================================
Progress: 46


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::(nat4::nat_list2))))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 7)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro nat2
intro nat3
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (arg4:any list) (nat1:nat) (nat2:nat), reverse (((arg4 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((arg4 @ (nat1::(Nil)))))
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 47


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (arg4:any list) (nat1:nat) (nat2:nat), reverse (((arg4 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((arg4 @ (nat1::(Nil)))))(rank : 0)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))

---------------------------------------
forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:10)
=================================================
Progress: 48


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat1 : nat
nat2 : nat
nat3 : nat
---------------------------------------
reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::(nat4::nat_list2))))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 7)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat1 : nat
nat2 : nat
nat3 : nat
---------------------------------------
reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro nat1
intro nat2
intro nat3
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (arg5:any list) (nat1:nat) (nat2:nat), reverse (((arg5 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((arg5 @ (nat1::(Nil)))))
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat1 : nat
nat2 : nat
nat3 : nat
---------------------------------------
reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 49


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat1 : nat
nat2 : nat
nat3 : nat
---------------------------------------
reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (arg5:any list) (nat1:nat) (nat2:nat), reverse (((arg5 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((arg5 @ (nat1::(Nil)))))(rank : 0)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))

---------------------------------------
forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:10)
=================================================
Progress: 50


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))

---------------------------------------
forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> induction any_list1(rank : 10)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse ((((Nil) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse (((Nil) @ (nat1::(Nil)))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9)
=================================================
Progress: 51


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse ((((Nil) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse (((Nil) @ (nat1::(Nil)))))

1 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse ((((any1::any_list2) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse (((any1::any_list2) @ (nat1::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 52


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse ((((any1::any_list2) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse (((any1::any_list2) @ (nat1::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat), (reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro nat1(rank:9)
intro nat2(rank:9)
rewrite IH1 in goal at 0(rank:17)
=================================================
Progress: 53


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat), (reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
---------------------------------------
forall (nat2:nat), (reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro nat2(rank:9)
rewrite IH1 in goal at 0(rank:17)
=================================================
Progress: 54


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat), (reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat2 : nat
---------------------------------------
forall (nat1:nat), (reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:9)
=================================================
Progress: 55


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
---------------------------------------
forall (nat2:nat), (reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
nat2 : nat
---------------------------------------
(reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:9)
=================================================
Progress: 56


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat2 : nat
---------------------------------------
forall (nat1:nat), (reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat2 : nat
---------------------------------------
forall (nat1:nat), ((nat2::reverse ((any_list2 @ (nat1::(Nil))))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7)
=================================================
Progress: 57


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat2 : nat
---------------------------------------
forall (nat1:nat), ((nat2::reverse ((any_list2 @ (nat1::(Nil))))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 7)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 3
Tactic List : 6
intro nat1(rank:7)
rewrite lemma4 in goal at 1(rank:15)
rewrite lemma4 in goal at 0(rank:23)
rewrite <- lemma4 in goal at 0(rank:15)
rewrite lemma4 in goal at 2(rank:23)
intro nat2(rank:7)
=================================================
Progress: 58


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat3 : nat
nat1 : nat
---------------------------------------
forall (nat2:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
intro nat2(rank:7)
rewrite lemma4 in goal at 1(rank:15)
rewrite lemma4 in goal at 2(rank:23)
rewrite <- lemma4 in goal at 0(rank:15)
rewrite lemma4 in goal at 0(rank:23)
=================================================
Progress: 59


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 7)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat3 : nat
nat2 : nat
---------------------------------------
forall (nat1:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite lemma4 in goal at 1(rank:15)
rewrite lemma4 in goal at 0(rank:23)
rewrite <- lemma4 in goal at 0(rank:15)
rewrite lemma4 in goal at 2(rank:23)
=================================================
Progress: 60


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat3 : nat
nat1 : nat
---------------------------------------
forall (nat2:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 7)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat3 : nat
nat1 : nat
nat2 : nat
---------------------------------------
reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite lemma4 in goal at 1(rank:15)
rewrite lemma4 in goal at 0(rank:23)
rewrite <- lemma4 in goal at 0(rank:15)
rewrite lemma4 in goal at 2(rank:23)
=================================================
Progress: 61


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))

---------------------------------------
forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> induction any_list1(rank : 10)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse ((((Nil) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse (((Nil) @ (nat1::(Nil)))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9)
=================================================
Progress: 62


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse ((((Nil) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse (((Nil) @ (nat1::(Nil)))))

1 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse ((((any1::any_list2) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse (((any1::any_list2) @ (nat1::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 63


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse ((((any1::any_list2) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse (((any1::any_list2) @ (nat1::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat), (reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro nat1(rank:9)
intro nat2(rank:9)
rewrite IH1 in goal at 0(rank:17)
=================================================
Progress: 64


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat), (reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
---------------------------------------
forall (nat2:nat), (reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro nat2(rank:9)
rewrite IH1 in goal at 0(rank:17)
=================================================
Progress: 65


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat), (reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat2 : nat
---------------------------------------
forall (nat1:nat), (reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:9)
=================================================
Progress: 66


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
---------------------------------------
forall (nat2:nat), (reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
nat2 : nat
---------------------------------------
(reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:9)
=================================================
Progress: 67


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat2 : nat
---------------------------------------
forall (nat1:nat), (reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat2 : nat
---------------------------------------
forall (nat1:nat), ((nat2::reverse ((any_list2 @ (nat1::(Nil))))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 68


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
nat2 : nat
---------------------------------------
(reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
nat2 : nat
---------------------------------------
((nat2::reverse ((any_list2 @ (nat1::(Nil))))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 69


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat2 : nat
---------------------------------------
forall (nat1:nat), ((nat2::reverse ((any_list2 @ (nat1::(Nil))))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat2 : nat
---------------------------------------
forall (nat1:nat), (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil)))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
=================================================
Progress: 70


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
nat2 : nat
---------------------------------------
((nat2::reverse ((any_list2 @ (nat1::(Nil))))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
nat2 : nat
---------------------------------------
(nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil)))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
=================================================
Progress: 71


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))

---------------------------------------
forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> induction any_list1(rank : 10)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse ((((Nil) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse (((Nil) @ (nat1::(Nil)))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9)
=================================================
Progress: 72


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse ((((Nil) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse (((Nil) @ (nat1::(Nil)))))

1 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse ((((any1::any_list2) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse (((any1::any_list2) @ (nat1::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 73


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse ((((any1::any_list2) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse (((any1::any_list2) @ (nat1::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat), (reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro nat1(rank:9)
intro nat2(rank:9)
rewrite IH1 in goal at 0(rank:17)
=================================================
Progress: 74


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat), (reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
---------------------------------------
forall (nat2:nat), (reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro nat2(rank:9)
rewrite IH1 in goal at 0(rank:17)
=================================================
Progress: 75


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat), (reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat2 : nat
---------------------------------------
forall (nat1:nat), (reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:9)
=================================================
Progress: 76


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
---------------------------------------
forall (nat2:nat), (reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
nat2 : nat
---------------------------------------
(reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:9)
=================================================
Progress: 77


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat2 : nat
---------------------------------------
forall (nat1:nat), (reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat2 : nat
---------------------------------------
forall (nat1:nat), ((nat2::reverse ((any_list2 @ (nat1::(Nil))))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 78


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
nat2 : nat
---------------------------------------
(reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
nat2 : nat
---------------------------------------
((nat2::reverse ((any_list2 @ (nat1::(Nil))))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 79


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat2 : nat
---------------------------------------
forall (nat1:nat), ((nat2::reverse ((any_list2 @ (nat1::(Nil))))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat2 : nat
---------------------------------------
forall (nat1:nat), (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil)))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
=================================================
Progress: 80


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
nat2 : nat
---------------------------------------
((nat2::reverse ((any_list2 @ (nat1::(Nil))))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
nat2 : nat
---------------------------------------
(nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil)))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
=================================================
Progress: 81


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))

---------------------------------------
forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> induction any_list1(rank : 10)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse ((((Nil) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse (((Nil) @ (nat1::(Nil)))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9)
=================================================
Progress: 82


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse ((((Nil) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse (((Nil) @ (nat1::(Nil)))))

1 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse ((((any1::any_list2) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse (((any1::any_list2) @ (nat1::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 83


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse ((((any1::any_list2) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse (((any1::any_list2) @ (nat1::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat), (reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro nat1(rank:9)
intro nat2(rank:9)
rewrite IH1 in goal at 0(rank:17)
=================================================
Progress: 84


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat), (reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
---------------------------------------
forall (nat2:nat), (reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro nat2(rank:9)
rewrite IH1 in goal at 0(rank:17)
=================================================
Progress: 85


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat), (reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat2 : nat
---------------------------------------
forall (nat1:nat), (reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:9)
=================================================
Progress: 86


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
---------------------------------------
forall (nat2:nat), (reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
nat2 : nat
---------------------------------------
(reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:9)
=================================================
Progress: 87


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat2 : nat
---------------------------------------
forall (nat1:nat), (reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat2 : nat
---------------------------------------
forall (nat1:nat), ((nat2::reverse ((any_list2 @ (nat1::(Nil))))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 88


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
nat2 : nat
---------------------------------------
(reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
nat2 : nat
---------------------------------------
((nat2::reverse ((any_list2 @ (nat1::(Nil))))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 89


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat2 : nat
---------------------------------------
forall (nat1:nat), ((nat2::reverse ((any_list2 @ (nat1::(Nil))))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat2 : nat
---------------------------------------
forall (nat1:nat), (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil)))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
=================================================
Progress: 90


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
nat2 : nat
---------------------------------------
((nat2::reverse ((any_list2 @ (nat1::(Nil))))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
nat2 : nat
---------------------------------------
(nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil)))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
=================================================
Progress: 91


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)

---------------------------------------
forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> induction nat_list2(rank : 12)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (Nil))) = (reverse ((Nil)) @ nat_list1)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4)
=================================================
Progress: 92


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (Nil))) = (reverse ((Nil)) @ nat_list1)

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (Nil))) = nat_list1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:5)
=================================================
Progress: 93


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (Nil))) = nat_list1

1 goal(s) more...

0 conjecture(s) more...
>>> induction nat_list1(rank : 5)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ (Nil))) = (Nil)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:4)
=================================================
Progress: 94


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ (Nil))) = (Nil)

2 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 4)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : reverse ((reverse (nat_list3) @ (Nil))) = nat_list3
Inductive1 : nat_list1 = (nat1::nat_list3)
---------------------------------------
reverse ((reverse ((nat1::nat_list3)) @ (Nil))) = (nat1::nat_list3)

1 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:4)
=================================================
Progress: 95


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : reverse ((reverse (nat_list3) @ (Nil))) = nat_list3
Inductive1 : nat_list1 = (nat1::nat_list3)
---------------------------------------
reverse ((reverse ((nat1::nat_list3)) @ (Nil))) = (nat1::nat_list3)

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : reverse ((reverse (nat_list3) @ (Nil))) = nat_list3
Inductive1 : nat_list1 = (nat1::nat_list3)
---------------------------------------
reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list3)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
expr list
reverse ((reverse (nat_list3) @ (Nil)))
reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil)))
reverse ((((reverse (nat_list4) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (Nil)))
reverse (((((reverse (nat_list5) @ (nat3::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (Nil)))
expr list
nat_list3
(nat1::nat_list3)
(nat1::(nat2::nat_list4))
(nat1::(nat2::(nat3::nat_list5)))
New Env

;;
Lemma List
forall (nat1:nat) (nat_list3:nat list), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list3)
End of Lemma List


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : reverse ((reverse (nat_list3) @ (Nil))) = nat_list3
Inductive1 : nat_list1 = (nat1::nat_list3)
---------------------------------------
reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list3)

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 96


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : reverse ((reverse (nat_list3) @ (Nil))) = nat_list3
Inductive1 : nat_list1 = (nat1::nat_list3)
---------------------------------------
reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list3)

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list3:nat list), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list3)(rank : 0)


1st goal of : forall (nat1:nat) (nat_list1:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list1)

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:6)
=================================================
Progress: 97


1st goal of : forall (nat1:nat) (nat_list1:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list1)

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list1)

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 6)


1st goal of : forall (nat1:nat) (nat_list1:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat1:nat), reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil))) = (nat1::(Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5)
=================================================
Progress: 98


1st goal of : forall (nat1:nat) (nat_list1:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat1:nat), reverse (((reverse ((Nil)) @ (nat1::(Nil))) @ (Nil))) = (nat1::(Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5)


1st goal of : forall (nat1:nat) (nat_list1:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list1)
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list2)
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
forall (nat1:nat), reverse (((reverse ((nat2::nat_list2)) @ (nat1::(Nil))) @ (Nil))) = (nat1::(nat2::nat_list2))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5)
=================================================
Progress: 99


1st goal of : forall (nat1:nat) (nat_list1:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list1)
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list2)
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
forall (nat1:nat), reverse (((reverse ((nat2::nat_list2)) @ (nat1::(Nil))) @ (Nil))) = (nat1::(nat2::nat_list2))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5)


1st goal of : forall (nat1:nat) (nat_list1:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list1)
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list2)
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
forall (nat1:nat), reverse ((((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (Nil))) = (nat1::(nat2::nat_list2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
intro nat1(rank:5)
rewrite <- IH1 in goal at 0(rank:13)
=================================================
Progress: 100


1st goal of : forall (nat1:nat) (nat_list1:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list1)
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list2)
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
forall (nat1:nat), reverse ((((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (Nil))) = (nat1::(nat2::nat_list2))

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 5)


1st goal of : forall (nat1:nat) (nat_list1:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list1)
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list2)
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
---------------------------------------
reverse ((((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (Nil))) = (nat1::(nat2::nat_list2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:5)
=================================================
Progress: 101


1st goal of : forall (nat1:nat) (nat_list1:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list1)
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list2)
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
---------------------------------------
reverse ((((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (Nil))) = (nat1::(nat2::nat_list2))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 5)


1st goal of : forall (nat1:nat) (nat_list1:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list1)
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list2)
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
---------------------------------------
reverse ((((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse (((reverse (nat_list2) @ (nat2::(Nil))) @ (Nil))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro nat1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (arg6:any list) (nat1:nat), reverse (((arg6 @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse ((arg6 @ (Nil))))
End of Lemma List


1st goal of : forall (nat1:nat) (nat_list1:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list1)
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list2)
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
---------------------------------------
reverse ((((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse (((reverse (nat_list2) @ (nat2::(Nil))) @ (Nil))))

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 102


1st goal of : forall (nat1:nat) (nat_list1:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list1)
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list2)
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
---------------------------------------
reverse ((((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse (((reverse (nat_list2) @ (nat2::(Nil))) @ (Nil))))

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (arg6:any list) (nat1:nat), reverse (((arg6 @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse ((arg6 @ (Nil))))(rank : 0)


1st goal of : forall (any_list1:any list) (nat1:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse ((any_list1 @ (Nil))))

---------------------------------------
forall (any_list1:any list) (nat1:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse ((any_list1 @ (Nil))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:8)
=================================================
Progress: 103


1st goal of : forall (any_list1:any list) (nat1:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse ((any_list1 @ (Nil))))

---------------------------------------
forall (any_list1:any list) (nat1:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse ((any_list1 @ (Nil))))

0 goal(s) more...

2 conjecture(s) more...
>>> induction any_list1(rank : 8)


1st goal of : forall (any_list1:any list) (nat1:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse ((any_list1 @ (Nil))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (nat1:nat), reverse ((((Nil) @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse (((Nil) @ (Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7)
=================================================
Progress: 104


1st goal of : forall (any_list1:any list) (nat1:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse ((any_list1 @ (Nil))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (nat1:nat), reverse ((((Nil) @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse (((Nil) @ (Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7)


1st goal of : forall (any_list1:any list) (nat1:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse ((any_list1 @ (Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse ((any_list2 @ (Nil))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat), reverse ((((any1::any_list2) @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse (((any1::any_list2) @ (Nil))))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7)
=================================================
Progress: 105


1st goal of : forall (any_list1:any list) (nat1:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse ((any_list1 @ (Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse ((any_list2 @ (Nil))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat), reverse ((((any1::any_list2) @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse (((any1::any_list2) @ (Nil))))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7)


1st goal of : forall (any_list1:any list) (nat1:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse ((any_list1 @ (Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse ((any_list2 @ (Nil))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat), (reverse (((any_list2 @ (nat1::(Nil))) @ (Nil))) @ (any1::(Nil))) = (nat1::(reverse ((any_list2 @ (Nil))) @ (any1::(Nil))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro nat1(rank:7)
rewrite IH1 in goal at 0(rank:15)
=================================================
Progress: 106


1st goal of : forall (any_list1:any list) (nat1:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse ((any_list1 @ (Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse ((any_list2 @ (Nil))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat), (reverse (((any_list2 @ (nat1::(Nil))) @ (Nil))) @ (any1::(Nil))) = (nat1::(reverse ((any_list2 @ (Nil))) @ (any1::(Nil))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7)


1st goal of : forall (any_list1:any list) (nat1:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse ((any_list1 @ (Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse ((any_list2 @ (Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
---------------------------------------
(reverse (((any_list2 @ (nat1::(Nil))) @ (Nil))) @ (any1::(Nil))) = (nat1::(reverse ((any_list2 @ (Nil))) @ (any1::(Nil))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:7)
=================================================
Progress: 107


1st goal of : forall (any_list1:any list) (nat1:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse ((any_list1 @ (Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse ((any_list2 @ (Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
---------------------------------------
(reverse (((any_list2 @ (nat1::(Nil))) @ (Nil))) @ (any1::(Nil))) = (nat1::(reverse ((any_list2 @ (Nil))) @ (any1::(Nil))))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 7)


1st goal of : forall (any_list1:any list) (nat1:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse ((any_list1 @ (Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse ((any_list2 @ (Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
---------------------------------------
((nat1::reverse ((any_list2 @ (Nil)))) @ (any1::(Nil))) = (nat1::(reverse ((any_list2 @ (Nil))) @ (any1::(Nil))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5)
=================================================
Progress: 108


1st goal of : forall (any_list1:any list) (nat1:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse ((any_list1 @ (Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse ((any_list2 @ (Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
---------------------------------------
((nat1::reverse ((any_list2 @ (Nil)))) @ (any1::(Nil))) = (nat1::(reverse ((any_list2 @ (Nil))) @ (any1::(Nil))))

0 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 5)


1st goal of : forall (nat1:nat) (nat_list1:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list1)
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list2)
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
---------------------------------------
reverse ((((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse (((reverse (nat_list2) @ (nat2::(Nil))) @ (Nil))))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 1
Tactic List : 4
rewrite lemma3 in goal at 1(rank:13)
rewrite lemma3 in goal at 0(rank:21)
rewrite <- lemma3 in goal at 0(rank:13)
rewrite lemma3 in goal at 2(rank:21)
=================================================
Progress: 109


1st goal of : forall (nat1:nat) (nat_list1:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list1)
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list2)
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
forall (nat1:nat), reverse ((((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (Nil))) = (nat1::(nat2::nat_list2))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13)


1st goal of : forall (nat1:nat) (nat_list1:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list1)
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list2)
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
forall (nat1:nat), reverse ((((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse (((reverse (nat_list2) @ (nat2::(Nil))) @ (Nil))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (arg7:any list) (nat1:nat), reverse (((arg7 @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse ((arg7 @ (Nil))))
End of Lemma List


1st goal of : forall (nat1:nat) (nat_list1:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list1)
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list2)
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
forall (nat1:nat), reverse ((((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse (((reverse (nat_list2) @ (nat2::(Nil))) @ (Nil))))

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 110


1st goal of : forall (nat1:nat) (nat_list1:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list1)
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list2)
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
forall (nat1:nat), reverse ((((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse (((reverse (nat_list2) @ (nat2::(Nil))) @ (Nil))))

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (arg7:any list) (nat1:nat), reverse (((arg7 @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse ((arg7 @ (Nil))))(rank : 0)


1st goal of : forall (any_list1:any list) (nat1:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse ((any_list1 @ (Nil))))

---------------------------------------
forall (any_list1:any list) (nat1:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse ((any_list1 @ (Nil))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:8)
=================================================
Progress: 111


1st goal of : forall (any_list1:any list) (nat1:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse ((any_list1 @ (Nil))))

---------------------------------------
forall (any_list1:any list) (nat1:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse ((any_list1 @ (Nil))))

0 goal(s) more...

2 conjecture(s) more...
>>> induction any_list1(rank : 8)


1st goal of : forall (any_list1:any list) (nat1:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse ((any_list1 @ (Nil))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (nat1:nat), reverse ((((Nil) @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse (((Nil) @ (Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7)
=================================================
Progress: 112


1st goal of : forall (any_list1:any list) (nat1:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse ((any_list1 @ (Nil))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (nat1:nat), reverse ((((Nil) @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse (((Nil) @ (Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7)


1st goal of : forall (any_list1:any list) (nat1:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse ((any_list1 @ (Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse ((any_list2 @ (Nil))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat), reverse ((((any1::any_list2) @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse (((any1::any_list2) @ (Nil))))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7)
=================================================
Progress: 113


1st goal of : forall (any_list1:any list) (nat1:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse ((any_list1 @ (Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse ((any_list2 @ (Nil))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat), reverse ((((any1::any_list2) @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse (((any1::any_list2) @ (Nil))))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7)


1st goal of : forall (any_list1:any list) (nat1:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse ((any_list1 @ (Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse ((any_list2 @ (Nil))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat), (reverse (((any_list2 @ (nat1::(Nil))) @ (Nil))) @ (any1::(Nil))) = (nat1::(reverse ((any_list2 @ (Nil))) @ (any1::(Nil))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro nat1(rank:7)
rewrite IH1 in goal at 0(rank:15)
=================================================
Progress: 114


1st goal of : forall (any_list1:any list) (nat1:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse ((any_list1 @ (Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse ((any_list2 @ (Nil))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat), (reverse (((any_list2 @ (nat1::(Nil))) @ (Nil))) @ (any1::(Nil))) = (nat1::(reverse ((any_list2 @ (Nil))) @ (any1::(Nil))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7)


1st goal of : forall (any_list1:any list) (nat1:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse ((any_list1 @ (Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse ((any_list2 @ (Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
---------------------------------------
(reverse (((any_list2 @ (nat1::(Nil))) @ (Nil))) @ (any1::(Nil))) = (nat1::(reverse ((any_list2 @ (Nil))) @ (any1::(Nil))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:7)
=================================================
Progress: 115


1st goal of : forall (any_list1:any list) (nat1:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse ((any_list1 @ (Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse ((any_list2 @ (Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
---------------------------------------
(reverse (((any_list2 @ (nat1::(Nil))) @ (Nil))) @ (any1::(Nil))) = (nat1::(reverse ((any_list2 @ (Nil))) @ (any1::(Nil))))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 7)


1st goal of : forall (any_list1:any list) (nat1:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse ((any_list1 @ (Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse ((any_list2 @ (Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
---------------------------------------
((nat1::reverse ((any_list2 @ (Nil)))) @ (any1::(Nil))) = (nat1::(reverse ((any_list2 @ (Nil))) @ (any1::(Nil))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5)
=================================================
Progress: 116


1st goal of : forall (any_list1:any list) (nat1:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse ((any_list1 @ (Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse ((any_list2 @ (Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
---------------------------------------
((nat1::reverse ((any_list2 @ (Nil)))) @ (any1::(Nil))) = (nat1::(reverse ((any_list2 @ (Nil))) @ (any1::(Nil))))

0 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 5)


1st goal of : forall (nat1:nat) (nat_list1:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list1)
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list2)
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
forall (nat1:nat), reverse ((((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse (((reverse (nat_list2) @ (nat2::(Nil))) @ (Nil))))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 1
Tactic List : 4
rewrite lemma3 in goal at 1(rank:13)
rewrite lemma3 in goal at 0(rank:21)
rewrite <- lemma3 in goal at 0(rank:13)
rewrite lemma3 in goal at 2(rank:21)
=================================================
Progress: 117


1st goal of : forall (nat1:nat) (nat_list1:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list1)
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list2)
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
---------------------------------------
reverse ((((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (Nil))) = (nat1::reverse (((reverse (nat_list2) @ (nat2::(Nil))) @ (Nil))))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 1(rank : 13)


1st goal of : forall (nat1:nat) (nat_list1:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list1)
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list2)
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
---------------------------------------
(nat1::reverse (((reverse (nat_list2) @ (nat2::(Nil))) @ (Nil)))) = (nat1::reverse (((reverse (nat_list2) @ (nat2::(Nil))) @ (Nil))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:4)
=================================================
Progress: 118


1st goal of : forall (nat1:nat) (nat_list1:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list1)
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), reverse (((reverse (nat_list2) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list2)
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
---------------------------------------
(nat1::reverse (((reverse (nat_list2) @ (nat2::(Nil))) @ (Nil)))) = (nat1::reverse (((reverse (nat_list2) @ (nat2::(Nil))) @ (Nil))))

0 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 4)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : reverse ((reverse (nat_list3) @ (Nil))) = nat_list3
Inductive1 : nat_list1 = (nat1::nat_list3)
---------------------------------------
reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list3)

1 goal(s) more...

0 conjecture(s) more...
Deduplication: 7
Tactic List : 5
rewrite lemma3 in goal at 0(rank:12)
rewrite <- lemma4 in goal at 0(rank:12)
rewrite <- lemma4 in goal at 1(rank:20)
rewrite <- lemma4 in goal at 2(rank:12)
rewrite lemma4 in goal at 0(rank:12)
=================================================
Progress: 119


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : reverse ((reverse (nat_list3) @ (Nil))) = nat_list3
Inductive1 : nat_list1 = (nat1::nat_list3)
---------------------------------------
reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list3)

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 12)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : reverse ((reverse (nat_list3) @ (Nil))) = nat_list3
Inductive1 : nat_list1 = (nat1::nat_list3)
---------------------------------------
(nat1::reverse ((reverse (nat_list3) @ (Nil)))) = (nat1::nat_list3)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- lemma4 in goal at 2(rank:12)
rewrite <- lemma4 in goal at 0(rank:20)
=================================================
Progress: 120


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : reverse ((reverse (nat_list3) @ (Nil))) = nat_list3
Inductive1 : nat_list1 = (nat1::nat_list3)
---------------------------------------
reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))) = (nat1::nat_list3)

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma4 in goal at 0(rank : 12)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : reverse ((reverse (nat_list3) @ (Nil))) = nat_list3
Inductive1 : nat_list1 = (nat1::nat_list3)
---------------------------------------
(nat1::nat_list3) = (nat1::nat_list3)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3)
=================================================
Progress: 121


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : reverse ((reverse (nat_list3) @ (Nil))) = nat_list3
Inductive1 : nat_list1 = (nat1::nat_list3)
---------------------------------------
(nat1::nat_list3) = (nat1::nat_list3)

1 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 3)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list3))) = (reverse ((nat1::nat_list3)) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 5
Tactic List : 1
simpl in goal(rank:3)
=================================================
Progress: 122


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list3))) = (reverse ((nat1::nat_list3)) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list3))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
induction nat_list1(rank:12)
rewrite <- lemma4 in goal at 0(rank:19)
rewrite <- lemma4 in goal at 1(rank:19)
rewrite <- lemma4 in goal at 2(rank:19)
rewrite <- IH1 in goal at 0(rank:19)
=================================================
Progress: 123


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ (nat1::nat_list3))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ nat_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> induction nat_list1(rank : 12)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ (nat1::nat_list3))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4)
=================================================
Progress: 124


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
reverse ((reverse ((Nil)) @ (nat1::nat_list3))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), reverse ((reverse (nat_list1) @ nat_list2)) = (reverse (nat_list2) @ nat_list1)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), reverse ((reverse (nat_list1) @ nat_list3)) = (reverse (nat_list3) @ nat_list1)
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
(reverse (nat_list3) @ (nat1::(Nil))) = ((reverse (nat_list3) @ (nat1::(Nil))) @ (Nil))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
rewrite <- IH1 in goal at 0(rank:20)
rewrite <- IH1 in goal at 2(rank:20)
rewrite <- lemma4 in goal at 0(rank:20)
rewrite <- lemma4 in goal at 1(rank:20)
rewrite <- lemma4 in goal at 2(rank:20)
rewrite <- IH1 in goal at 1(rank:20)
=================================================
Progress: 125


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::(nat4::nat_list2))))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 15)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (arg8:any list) (nat1:nat) (nat2:nat), reverse (((arg8 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((arg8 @ (nat1::(Nil)))))
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 126


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (arg8:any list) (nat1:nat) (nat2:nat), reverse (((arg8 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((arg8 @ (nat1::(Nil)))))(rank : 0)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))

---------------------------------------
forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:10)
=================================================
Progress: 127


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))

---------------------------------------
forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> induction any_list1(rank : 10)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse ((((Nil) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse (((Nil) @ (nat1::(Nil)))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9)
=================================================
Progress: 128


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse ((((Nil) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse (((Nil) @ (nat1::(Nil)))))

1 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse ((((any1::any_list2) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse (((any1::any_list2) @ (nat1::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 129


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse ((((any1::any_list2) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse (((any1::any_list2) @ (nat1::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat), (reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro nat1(rank:9)
intro nat2(rank:9)
rewrite IH1 in goal at 0(rank:17)
=================================================
Progress: 130


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat), (reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
---------------------------------------
forall (nat2:nat), (reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro nat2(rank:9)
rewrite IH1 in goal at 0(rank:17)
=================================================
Progress: 131


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat), (reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat2 : nat
---------------------------------------
forall (nat1:nat), (reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:9)
=================================================
Progress: 132


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
---------------------------------------
forall (nat2:nat), (reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
nat2 : nat
---------------------------------------
(reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:9)
=================================================
Progress: 133


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat2 : nat
---------------------------------------
forall (nat1:nat), (reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat2 : nat
---------------------------------------
forall (nat1:nat), ((nat2::reverse ((any_list2 @ (nat1::(Nil))))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7)
=================================================
Progress: 134


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat2 : nat
---------------------------------------
forall (nat1:nat), ((nat2::reverse ((any_list2 @ (nat1::(Nil))))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 7)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 3
Tactic List : 6
intro nat1(rank:7)
rewrite lemma4 in goal at 1(rank:15)
rewrite lemma4 in goal at 0(rank:23)
rewrite <- lemma4 in goal at 0(rank:15)
rewrite lemma4 in goal at 2(rank:23)
intro nat2(rank:7)
=================================================
Progress: 135


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
intro nat2(rank:7)
rewrite lemma4 in goal at 1(rank:15)
rewrite lemma4 in goal at 2(rank:23)
rewrite <- lemma4 in goal at 0(rank:15)
rewrite lemma4 in goal at 0(rank:23)
=================================================
Progress: 136


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 7)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite lemma4 in goal at 1(rank:15)
rewrite lemma4 in goal at 0(rank:23)
rewrite <- lemma4 in goal at 0(rank:15)
rewrite lemma4 in goal at 2(rank:23)
=================================================
Progress: 137


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 7)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite lemma4 in goal at 1(rank:15)
rewrite lemma4 in goal at 0(rank:23)
rewrite <- lemma4 in goal at 0(rank:15)
rewrite lemma4 in goal at 2(rank:23)
=================================================
Progress: 138


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::(nat4::nat_list2))))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 15)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro nat1
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (arg9:any list) (nat1:nat) (nat2:nat), reverse (((arg9 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((arg9 @ (nat1::(Nil)))))
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 139


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (arg9:any list) (nat1:nat) (nat2:nat), reverse (((arg9 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((arg9 @ (nat1::(Nil)))))(rank : 0)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))

---------------------------------------
forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:10)
=================================================
Progress: 140


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))

---------------------------------------
forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> induction any_list1(rank : 10)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse ((((Nil) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse (((Nil) @ (nat1::(Nil)))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9)
=================================================
Progress: 141


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse ((((Nil) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse (((Nil) @ (nat1::(Nil)))))

1 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse ((((any1::any_list2) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse (((any1::any_list2) @ (nat1::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 142


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse ((((any1::any_list2) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse (((any1::any_list2) @ (nat1::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat), (reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro nat1(rank:9)
intro nat2(rank:9)
rewrite IH1 in goal at 0(rank:17)
=================================================
Progress: 143


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat), (reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
---------------------------------------
forall (nat2:nat), (reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro nat2(rank:9)
rewrite IH1 in goal at 0(rank:17)
=================================================
Progress: 144


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat), (reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat2 : nat
---------------------------------------
forall (nat1:nat), (reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:9)
=================================================
Progress: 145


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
---------------------------------------
forall (nat2:nat), (reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
nat2 : nat
---------------------------------------
(reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:9)
=================================================
Progress: 146


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat2 : nat
---------------------------------------
forall (nat1:nat), (reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat2 : nat
---------------------------------------
forall (nat1:nat), ((nat2::reverse ((any_list2 @ (nat1::(Nil))))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 147


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
nat2 : nat
---------------------------------------
(reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
nat2 : nat
---------------------------------------
((nat2::reverse ((any_list2 @ (nat1::(Nil))))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 148


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat2 : nat
---------------------------------------
forall (nat1:nat), ((nat2::reverse ((any_list2 @ (nat1::(Nil))))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat2 : nat
---------------------------------------
forall (nat1:nat), (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil)))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
=================================================
Progress: 149


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
nat2 : nat
---------------------------------------
((nat2::reverse ((any_list2 @ (nat1::(Nil))))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
nat2 : nat
---------------------------------------
(nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil)))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
=================================================
Progress: 150


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::(nat4::nat_list2))))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 15)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro nat2
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (arg10:any list) (nat1:nat) (nat2:nat), reverse (((arg10 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((arg10 @ (nat1::(Nil)))))
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 151


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (arg10:any list) (nat1:nat) (nat2:nat), reverse (((arg10 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((arg10 @ (nat1::(Nil)))))(rank : 0)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))

---------------------------------------
forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:10)
=================================================
Progress: 152


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))

---------------------------------------
forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> induction any_list1(rank : 10)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse ((((Nil) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse (((Nil) @ (nat1::(Nil)))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9)
=================================================
Progress: 153


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse ((((Nil) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse (((Nil) @ (nat1::(Nil)))))

1 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse ((((any1::any_list2) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse (((any1::any_list2) @ (nat1::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 154


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse ((((any1::any_list2) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse (((any1::any_list2) @ (nat1::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat), (reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro nat1(rank:9)
intro nat2(rank:9)
rewrite IH1 in goal at 0(rank:17)
=================================================
Progress: 155


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat), (reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
---------------------------------------
forall (nat2:nat), (reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro nat2(rank:9)
rewrite IH1 in goal at 0(rank:17)
=================================================
Progress: 156


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat), (reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat2 : nat
---------------------------------------
forall (nat1:nat), (reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:9)
=================================================
Progress: 157


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
---------------------------------------
forall (nat2:nat), (reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
nat2 : nat
---------------------------------------
(reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:9)
=================================================
Progress: 158


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat2 : nat
---------------------------------------
forall (nat1:nat), (reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat2 : nat
---------------------------------------
forall (nat1:nat), ((nat2::reverse ((any_list2 @ (nat1::(Nil))))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 159


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
nat2 : nat
---------------------------------------
(reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
nat2 : nat
---------------------------------------
((nat2::reverse ((any_list2 @ (nat1::(Nil))))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 160


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat2 : nat
---------------------------------------
forall (nat1:nat), ((nat2::reverse ((any_list2 @ (nat1::(Nil))))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat2 : nat
---------------------------------------
forall (nat1:nat), (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil)))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
=================================================
Progress: 161


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
nat2 : nat
---------------------------------------
((nat2::reverse ((any_list2 @ (nat1::(Nil))))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
nat2 : nat
---------------------------------------
(nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil)))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
=================================================
Progress: 162


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::(nat4::nat_list2))))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 15)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro nat1
intro nat2
rewrite <- IH1 in goal at 0
New Env

;;
Lemma List
forall (arg11:any list) (nat1:nat) (nat2:nat), reverse (((arg11 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((arg11 @ (nat1::(Nil)))))
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 163


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (arg11:any list) (nat1:nat) (nat2:nat), reverse (((arg11 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((arg11 @ (nat1::(Nil)))))(rank : 0)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))

---------------------------------------
forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:10)
=================================================
Progress: 164


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))

---------------------------------------
forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> induction any_list1(rank : 10)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse ((((Nil) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse (((Nil) @ (nat1::(Nil)))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9)
=================================================
Progress: 165


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse ((((Nil) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse (((Nil) @ (nat1::(Nil)))))

1 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse ((((any1::any_list2) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse (((any1::any_list2) @ (nat1::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 166


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse ((((any1::any_list2) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse (((any1::any_list2) @ (nat1::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat), (reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro nat1(rank:9)
intro nat2(rank:9)
rewrite IH1 in goal at 0(rank:17)
=================================================
Progress: 167


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat), (reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
---------------------------------------
forall (nat2:nat), (reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro nat2(rank:9)
rewrite IH1 in goal at 0(rank:17)
=================================================
Progress: 168


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat), (reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat2 : nat
---------------------------------------
forall (nat1:nat), (reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:9)
=================================================
Progress: 169


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
---------------------------------------
forall (nat2:nat), (reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
nat2 : nat
---------------------------------------
(reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:9)
=================================================
Progress: 170


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat2 : nat
---------------------------------------
forall (nat1:nat), (reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat2 : nat
---------------------------------------
forall (nat1:nat), ((nat2::reverse ((any_list2 @ (nat1::(Nil))))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 171


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
nat2 : nat
---------------------------------------
(reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
nat2 : nat
---------------------------------------
((nat2::reverse ((any_list2 @ (nat1::(Nil))))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 172


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat2 : nat
---------------------------------------
forall (nat1:nat), ((nat2::reverse ((any_list2 @ (nat1::(Nil))))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat2 : nat
---------------------------------------
forall (nat1:nat), (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil)))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
=================================================
Progress: 173


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
nat2 : nat
---------------------------------------
((nat2::reverse ((any_list2 @ (nat1::(Nil))))) @ (any1::(Nil))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat), reverse (((any_list1 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list1 @ (nat1::(Nil)))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat), reverse (((any_list2 @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((any_list2 @ (nat1::(Nil)))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
nat2 : nat
---------------------------------------
(nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil)))) = (nat2::(reverse ((any_list2 @ (nat1::(Nil)))) @ (any1::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
=================================================
Progress: 174


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse (((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::reverse ((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma4 in goal at 1(rank : 15)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat), (nat2::reverse ((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))))) = (nat2::reverse ((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6)
=================================================
Progress: 175


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat_list1:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat4 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), reverse ((((reverse (nat_list2) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list2)))
Inductive1 : nat_list1 = (nat4::nat_list2)
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat), (nat2::reverse ((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))))) = (nat2::reverse ((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil)))))

0 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 6)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list) (nat_list2:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list1))
nat_list1 : nat list
nat3 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat_list2:nat list), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list3))
Inductive1 : nat_list1 = (nat3::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
---------------------------------------
forall (nat1:nat), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list3)))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 43
Tactic List : 4
intro nat1(rank:6)
rewrite lemma4 in goal at 0(rank:14)
rewrite lemma5 in goal at 0(rank:14)
rewrite <- lemma5 in goal at 0(rank:14)
=================================================
Progress: 176


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list) (nat_list2:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list1))
nat_list1 : nat list
nat3 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat_list2:nat list), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list3))
Inductive1 : nat_list1 = (nat3::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
---------------------------------------
forall (nat1:nat), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list3)))

1 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 6)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list) (nat_list2:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list1))
nat_list1 : nat list
nat3 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat_list2:nat list), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list3))
Inductive1 : nat_list1 = (nat3::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
nat1 : nat
---------------------------------------
reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list3)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite lemma4 in goal at 0(rank:14)
rewrite lemma5 in goal at 0(rank:14)
rewrite <- lemma5 in goal at 0(rank:14)
=================================================
Progress: 177


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list) (nat_list2:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list1))
nat_list1 : nat list
nat3 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat_list2:nat list), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list3))
Inductive1 : nat_list1 = (nat3::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
---------------------------------------
forall (nat1:nat), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list3)))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma4 in goal at 0(rank : 14)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list) (nat_list2:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list1))
nat_list1 : nat list
nat3 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat_list2:nat list), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list3))
Inductive1 : nat_list1 = (nat3::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
---------------------------------------
forall (nat1:nat), (nat2::reverse (((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))))) = (nat2::(nat1::(nat3::nat_list3)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite IH1 in goal at 0(rank:14)
rewrite lemma4 in goal at 0(rank:14)
rewrite <- lemma5 in goal at 0(rank:14)
=================================================
Progress: 178


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list) (nat_list2:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list1))
nat_list1 : nat list
nat3 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat_list2:nat list), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list3))
Inductive1 : nat_list1 = (nat3::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
---------------------------------------
forall (nat1:nat), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))) = (nat2::(nat1::(nat3::nat_list3)))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma5 in goal at 0(rank : 14)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list) (nat_list2:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list1))
nat_list1 : nat list
nat3 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat_list2:nat list), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list3))
Inductive1 : nat_list1 = (nat3::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
---------------------------------------
forall (nat1:nat), (nat2::(nat1::(nat3::nat_list3))) = (nat2::(nat1::(nat3::nat_list3)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5)
=================================================
Progress: 179


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list) (nat_list2:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list1))
nat_list1 : nat list
nat3 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat_list2:nat list), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list3))
Inductive1 : nat_list1 = (nat3::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
---------------------------------------
forall (nat1:nat), (nat2::(nat1::(nat3::nat_list3))) = (nat2::(nat1::(nat3::nat_list3)))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list) (nat_list2:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list1))
nat_list1 : nat list
nat3 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat_list2:nat list), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list3))
Inductive1 : nat_list1 = (nat3::nat_list3)
nat_list2 : nat list
nat4 : nat
nat_list4 : nat list
IH2 : forall (nat1:nat) (nat2:nat), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::nat_list4))) = ((reverse (nat_list4) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive2 : nat_list2 = (nat4::nat_list4)
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list4)))) = ((reverse ((nat4::nat_list4)) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 7
Tactic List : 1
simpl in goal(rank:5)
=================================================
Progress: 180


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list) (nat_list2:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list1))
nat_list1 : nat list
nat3 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat_list2:nat list), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list3))
Inductive1 : nat_list1 = (nat3::nat_list3)
nat_list2 : nat list
nat4 : nat
nat_list4 : nat list
IH2 : forall (nat1:nat) (nat2:nat), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::nat_list4))) = ((reverse (nat_list4) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive2 : nat_list2 = (nat4::nat_list4)
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list4)))) = ((reverse ((nat4::nat_list4)) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list) (nat_list2:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list1))
nat_list1 : nat list
nat3 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat_list2:nat list), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list3))
Inductive1 : nat_list1 = (nat3::nat_list3)
nat_list2 : nat list
nat4 : nat
nat_list4 : nat list
IH2 : forall (nat1:nat) (nat2:nat), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::nat_list4))) = ((reverse (nat_list4) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive2 : nat_list2 = (nat4::nat_list4)
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list4)))) = (((reverse (nat_list4) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
intro nat1(rank:5)
intro nat2(rank:5)
=================================================
Progress: 181


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list) (nat_list2:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list1))
nat_list1 : nat list
nat3 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat_list2:nat list), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list3))
Inductive1 : nat_list1 = (nat3::nat_list3)
nat_list2 : nat list
nat4 : nat
nat_list4 : nat list
IH2 : forall (nat1:nat) (nat2:nat), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::nat_list4))) = ((reverse (nat_list4) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive2 : nat_list2 = (nat4::nat_list4)
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list4)))) = (((reverse (nat_list4) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 5)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list) (nat_list2:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list1))
nat_list1 : nat list
nat3 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat_list2:nat list), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list3))
Inductive1 : nat_list1 = (nat3::nat_list3)
nat_list2 : nat list
nat4 : nat
nat_list4 : nat list
IH2 : forall (nat1:nat) (nat2:nat), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::nat_list4))) = ((reverse (nat_list4) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive2 : nat_list2 = (nat4::nat_list4)
nat1 : nat
---------------------------------------
forall (nat2:nat), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list4)))) = (((reverse (nat_list4) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat2(rank:5)
=================================================
Progress: 182


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list) (nat_list2:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list1))
nat_list1 : nat list
nat3 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat_list2:nat list), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list3))
Inductive1 : nat_list1 = (nat3::nat_list3)
nat_list2 : nat list
nat4 : nat
nat_list4 : nat list
IH2 : forall (nat1:nat) (nat2:nat), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::nat_list4))) = ((reverse (nat_list4) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive2 : nat_list2 = (nat4::nat_list4)
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list4)))) = (((reverse (nat_list4) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat2(rank : 5)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list) (nat_list2:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list1))
nat_list1 : nat list
nat3 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat_list2:nat list), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list3))
Inductive1 : nat_list1 = (nat3::nat_list3)
nat_list2 : nat list
nat4 : nat
nat_list4 : nat list
IH2 : forall (nat1:nat) (nat2:nat), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::nat_list4))) = ((reverse (nat_list4) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive2 : nat_list2 = (nat4::nat_list4)
nat2 : nat
---------------------------------------
forall (nat1:nat), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list4)))) = (((reverse (nat_list4) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro nat2
rewrite IH1 in goal at 0
reflexivity
rewrite lemma4 in goal at 1
reflexivity
rewrite lemma5 in goal at 0
reflexivity
simpl in goal
intro nat2
New Env

;;
Lemma List
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list3:nat list) (nat_list4:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list4)))) = (((reverse (nat_list4) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list) (nat_list2:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list1))
nat_list1 : nat list
nat3 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat_list2:nat list), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list3))
Inductive1 : nat_list1 = (nat3::nat_list3)
nat_list2 : nat list
nat4 : nat
nat_list4 : nat list
IH2 : forall (nat1:nat) (nat2:nat), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::nat_list4))) = ((reverse (nat_list4) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive2 : nat_list2 = (nat4::nat_list4)
nat2 : nat
---------------------------------------
forall (nat1:nat), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list4)))) = (((reverse (nat_list4) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 183


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list) (nat_list2:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list1))
nat_list1 : nat list
nat3 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat_list2:nat list), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list3))
Inductive1 : nat_list1 = (nat3::nat_list3)
nat_list2 : nat list
nat4 : nat
nat_list4 : nat list
IH2 : forall (nat1:nat) (nat2:nat), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::nat_list4))) = ((reverse (nat_list4) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive2 : nat_list2 = (nat4::nat_list4)
nat2 : nat
---------------------------------------
forall (nat1:nat), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list4)))) = (((reverse (nat_list4) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list3:nat list) (nat_list4:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list4)))) = (((reverse (nat_list4) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))(rank : 0)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:8)
=================================================
Progress: 184


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list) (nat_list2:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list1))
nat_list1 : nat list
nat3 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat_list2:nat list), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list3))
Inductive1 : nat_list1 = (nat3::nat_list3)
nat_list2 : nat list
nat4 : nat
nat_list4 : nat list
IH2 : forall (nat1:nat) (nat2:nat), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::nat_list4))) = ((reverse (nat_list4) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive2 : nat_list2 = (nat4::nat_list4)
nat1 : nat
---------------------------------------
forall (nat2:nat), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list4)))) = (((reverse (nat_list4) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat2(rank : 5)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list) (nat_list2:nat list), reverse (((reverse (nat_list1) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list1))
nat_list1 : nat list
nat3 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat_list2:nat list), reverse (((reverse (nat_list3) @ (nat1::(Nil))) @ (nat2::nat_list2))) = ((reverse (nat_list2) @ (nat2::(Nil))) @ (nat1::nat_list3))
Inductive1 : nat_list1 = (nat3::nat_list3)
nat_list2 : nat list
nat4 : nat
nat_list4 : nat list
IH2 : forall (nat1:nat) (nat2:nat), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::nat_list4))) = ((reverse (nat_list4) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive2 : nat_list2 = (nat4::nat_list4)
nat1 : nat
nat2 : nat
---------------------------------------
reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list4)))) = (((reverse (nat_list4) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro nat2
rewrite IH1 in goal at 0
reflexivity
rewrite lemma4 in goal at 1
reflexivity
rewrite lemma5 in goal at 0
reflexivity
simpl in goal
intro nat1
intro nat2
=================================================
Progress: 185


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat_list1(rank : 8)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse ((Nil)) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8)
=================================================
Progress: 186


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse ((Nil)) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), ((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat_list2(rank:9)
=================================================
Progress: 187


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), ((((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> induction nat_list2(rank : 9)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
Base2 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse ((Nil)) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse ((Nil)) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8)
=================================================
Progress: 188


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
Base2 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse ((Nil)) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse ((Nil)) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse ((nat5::nat_list3)) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse ((nat5::nat_list3)) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:8)
=================================================
Progress: 189


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse ((nat5::nat_list3)) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse ((nat5::nat_list3)) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
intro nat1(rank:8)
intro nat3(rank:8)
intro nat4(rank:8)
rewrite IH1 in goal at 0(rank:24)
intro nat2(rank:8)
=================================================
Progress: 190


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 8)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat) (nat4:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
intro nat2(rank:8)
intro nat3(rank:8)
intro nat4(rank:8)
rewrite IH1 in goal at 0(rank:24)
=================================================
Progress: 191


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 8)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat) (nat4:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro nat3(rank:8)
intro nat4(rank:8)
rewrite IH1 in goal at 0(rank:24)
=================================================
Progress: 192


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat3(rank : 8)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat4:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro nat4(rank:8)
rewrite IH1 in goal at 0(rank:24)
=================================================
Progress: 193


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat4(rank : 8)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:8)
=================================================
Progress: 194


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat) (nat4:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 8)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat) (nat4:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro nat3(rank:8)
intro nat4(rank:8)
rewrite IH1 in goal at 0(rank:24)
=================================================
Progress: 195


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat) (nat4:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat3(rank : 8)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat1 : nat
nat3 : nat
---------------------------------------
forall (nat2:nat) (nat4:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro nat4(rank:8)
rewrite IH1 in goal at 0(rank:24)
=================================================
Progress: 196


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat) (nat4:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat4(rank : 8)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat1 : nat
nat4 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:8)
=================================================
Progress: 197


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat) (nat4:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat3(rank : 8)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat4:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro nat4(rank:8)
rewrite IH1 in goal at 0(rank:24)
=================================================
Progress: 198


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat) (nat4:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat4(rank : 8)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat2 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:8)
=================================================
Progress: 199


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat4:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat4(rank : 8)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:8)
=================================================
Progress: 200


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 8)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro nat4
rewrite IH1 in goal at 0
New Env

;;
Lemma List
forall (arg12:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((arg12 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((arg12 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 201


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> assert forall (arg12:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((arg12 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((arg12 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))(rank : 0)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

---------------------------------------
forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:10)
=================================================
Progress: 202


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat) (nat4:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat3(rank : 8)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat1 : nat
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat4:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro nat4(rank:8)
rewrite IH1 in goal at 0(rank:24)
=================================================
Progress: 203


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat) (nat4:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat4(rank : 8)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat1 : nat
nat2 : nat
nat4 : nat
---------------------------------------
forall (nat3:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:8)
=================================================
Progress: 204


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat1 : nat
nat3 : nat
---------------------------------------
forall (nat2:nat) (nat4:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat4(rank : 8)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat1 : nat
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat2:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:8)
=================================================
Progress: 205


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat1 : nat
nat4 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 8)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat1 : nat
nat4 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro nat1
intro nat4
rewrite IH1 in goal at 0
New Env

;;
Lemma List
forall (arg13:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((arg13 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((arg13 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat1 : nat
nat4 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 206


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat1 : nat
nat4 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> assert forall (arg13:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((arg13 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((arg13 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))(rank : 0)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

---------------------------------------
forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:10)
=================================================
Progress: 207


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat4:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat4(rank : 8)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat2 : nat
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:8)
=================================================
Progress: 208


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat2 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 8)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat2 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat), ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro nat2
intro nat4
rewrite IH1 in goal at 0
New Env

;;
Lemma List
forall (arg14:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((arg14 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((arg14 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat2 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat), ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 209


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat2 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat), ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> assert forall (arg14:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((arg14 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((arg14 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))(rank : 0)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

---------------------------------------
forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:10)
=================================================
Progress: 210


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 8)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat), ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro nat3
intro nat4
rewrite IH1 in goal at 0
New Env

;;
Lemma List
forall (arg15:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((arg15 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((arg15 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat), ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 211


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat), ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> assert forall (arg15:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((arg15 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((arg15 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))(rank : 0)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

---------------------------------------
forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:10)
=================================================
Progress: 212


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat1 : nat
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat4:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat4(rank : 8)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat1 : nat
nat2 : nat
nat3 : nat
nat4 : nat
---------------------------------------
(((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:8)
=================================================
Progress: 213


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat1 : nat
nat2 : nat
nat4 : nat
---------------------------------------
forall (nat3:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 8)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat1 : nat
nat2 : nat
nat4 : nat
---------------------------------------
forall (nat3:nat), ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro nat1
intro nat2
intro nat4
rewrite IH1 in goal at 0
New Env

;;
Lemma List
forall (arg16:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((arg16 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((arg16 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat1 : nat
nat2 : nat
nat4 : nat
---------------------------------------
forall (nat3:nat), ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 214


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat1 : nat
nat2 : nat
nat4 : nat
---------------------------------------
forall (nat3:nat), ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> assert forall (arg16:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((arg16 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((arg16 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))(rank : 0)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

---------------------------------------
forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:10)
=================================================
Progress: 215


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat1 : nat
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat2:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 8)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat1 : nat
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat2:nat), ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro nat1
intro nat3
intro nat4
rewrite IH1 in goal at 0
New Env

;;
Lemma List
forall (arg17:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((arg17 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((arg17 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat1 : nat
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat2:nat), ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 216


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat1 : nat
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat2:nat), ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> assert forall (arg17:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((arg17 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((arg17 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))(rank : 0)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

---------------------------------------
forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:10)
=================================================
Progress: 217


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat2 : nat
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat), (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 8)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat2 : nat
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat), ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro nat2
intro nat3
intro nat4
rewrite IH1 in goal at 0
New Env

;;
Lemma List
forall (arg18:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((arg18 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((arg18 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat2 : nat
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat), ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 218


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat2 : nat
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat), ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> assert forall (arg18:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((arg18 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((arg18 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))(rank : 0)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

---------------------------------------
forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:10)
=================================================
Progress: 219


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat1 : nat
nat2 : nat
nat3 : nat
nat4 : nat
---------------------------------------
(((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 8)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat1 : nat
nat2 : nat
nat3 : nat
nat4 : nat
---------------------------------------
((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro nat1
intro nat2
intro nat3
intro nat4
rewrite IH1 in goal at 0
New Env

;;
Lemma List
forall (arg19:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((arg19 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((arg19 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat1 : nat
nat2 : nat
nat3 : nat
nat4 : nat
---------------------------------------
((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 220


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat1 : nat
nat2 : nat
nat3 : nat
nat4 : nat
---------------------------------------
((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> assert forall (arg19:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((arg19 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((arg19 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))(rank : 0)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

---------------------------------------
forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:10)
=================================================
Progress: 221


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

---------------------------------------
forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> induction any_list1(rank : 10)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), (((Nil) @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = (((Nil) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9)
=================================================
Progress: 222


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), (((Nil) @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = (((Nil) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), (((any1::any_list2) @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = (((any1::any_list2) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 223


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), (((any1::any_list2) @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = (((any1::any_list2) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
intro nat1(rank:9)
intro nat3(rank:9)
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
intro nat2(rank:9)
=================================================
Progress: 224


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
intro nat2(rank:9)
intro nat3(rank:9)
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 225


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro nat3(rank:9)
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 226


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat3(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 227


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro nat3(rank:9)
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 228


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat3(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
nat3 : nat
---------------------------------------
forall (nat2:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 229


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat3(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 230


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat3(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
nat2 : nat
nat3 : nat
---------------------------------------
(any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 231


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

---------------------------------------
forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> induction any_list1(rank : 10)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), (((Nil) @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = (((Nil) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9)
=================================================
Progress: 232


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), (((Nil) @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = (((Nil) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), (((any1::any_list2) @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = (((any1::any_list2) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 233


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), (((any1::any_list2) @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = (((any1::any_list2) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
intro nat1(rank:9)
intro nat3(rank:9)
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
intro nat2(rank:9)
=================================================
Progress: 234


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
intro nat2(rank:9)
intro nat3(rank:9)
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 235


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro nat3(rank:9)
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 236


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat3(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 237


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro nat3(rank:9)
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 238


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat3(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
nat3 : nat
---------------------------------------
forall (nat2:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 239


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat3(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 240


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat3(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
nat2 : nat
nat3 : nat
---------------------------------------
(any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 241


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

---------------------------------------
forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> induction any_list1(rank : 10)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), (((Nil) @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = (((Nil) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9)
=================================================
Progress: 242


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), (((Nil) @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = (((Nil) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), (((any1::any_list2) @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = (((any1::any_list2) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 243


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), (((any1::any_list2) @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = (((any1::any_list2) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
intro nat1(rank:9)
intro nat3(rank:9)
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
intro nat2(rank:9)
=================================================
Progress: 244


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
intro nat2(rank:9)
intro nat3(rank:9)
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 245


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro nat3(rank:9)
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 246


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat3(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 247


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro nat3(rank:9)
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 248


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat3(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
nat3 : nat
---------------------------------------
forall (nat2:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 249


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat3(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 250


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat3(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
nat2 : nat
nat3 : nat
---------------------------------------
(any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 251


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

---------------------------------------
forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> induction any_list1(rank : 10)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), (((Nil) @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = (((Nil) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9)
=================================================
Progress: 252


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), (((Nil) @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = (((Nil) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), (((any1::any_list2) @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = (((any1::any_list2) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 253


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), (((any1::any_list2) @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = (((any1::any_list2) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
intro nat1(rank:9)
intro nat3(rank:9)
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
intro nat2(rank:9)
=================================================
Progress: 254


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
intro nat2(rank:9)
intro nat3(rank:9)
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 255


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro nat3(rank:9)
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 256


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat3(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 257


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro nat3(rank:9)
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 258


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat3(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
nat3 : nat
---------------------------------------
forall (nat2:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 259


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat3(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 260


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat3(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
nat2 : nat
nat3 : nat
---------------------------------------
(any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 261


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

---------------------------------------
forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> induction any_list1(rank : 10)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), (((Nil) @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = (((Nil) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9)
=================================================
Progress: 262


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), (((Nil) @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = (((Nil) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), (((any1::any_list2) @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = (((any1::any_list2) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 263


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), (((any1::any_list2) @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = (((any1::any_list2) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
intro nat1(rank:9)
intro nat3(rank:9)
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
intro nat2(rank:9)
=================================================
Progress: 264


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
intro nat2(rank:9)
intro nat3(rank:9)
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 265


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro nat3(rank:9)
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 266


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat3(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 267


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro nat3(rank:9)
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 268


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat3(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
nat3 : nat
---------------------------------------
forall (nat2:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 269


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat3(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 270


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat3(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
nat2 : nat
nat3 : nat
---------------------------------------
(any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 271


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

---------------------------------------
forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> induction any_list1(rank : 10)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), (((Nil) @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = (((Nil) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9)
=================================================
Progress: 272


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), (((Nil) @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = (((Nil) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), (((any1::any_list2) @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = (((any1::any_list2) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 273


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), (((any1::any_list2) @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = (((any1::any_list2) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
intro nat1(rank:9)
intro nat3(rank:9)
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
intro nat2(rank:9)
=================================================
Progress: 274


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
intro nat2(rank:9)
intro nat3(rank:9)
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 275


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro nat3(rank:9)
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 276


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat3(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 277


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro nat3(rank:9)
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 278


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat3(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
nat3 : nat
---------------------------------------
forall (nat2:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 279


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat3(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 280


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat3(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
nat2 : nat
nat3 : nat
---------------------------------------
(any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 281


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

---------------------------------------
forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> induction any_list1(rank : 10)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), (((Nil) @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = (((Nil) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9)
=================================================
Progress: 282


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), (((Nil) @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = (((Nil) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), (((any1::any_list2) @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = (((any1::any_list2) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 283


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), (((any1::any_list2) @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = (((any1::any_list2) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
intro nat1(rank:9)
intro nat3(rank:9)
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
intro nat2(rank:9)
=================================================
Progress: 284


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
intro nat2(rank:9)
intro nat3(rank:9)
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 285


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro nat3(rank:9)
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 286


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat3(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 287


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro nat3(rank:9)
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 288


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat3(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
nat3 : nat
---------------------------------------
forall (nat2:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 289


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat3(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 290


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat3(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
nat2 : nat
nat3 : nat
---------------------------------------
(any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 291


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

---------------------------------------
forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> induction any_list1(rank : 10)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), (((Nil) @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = (((Nil) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9)
=================================================
Progress: 292


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), (((Nil) @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = (((Nil) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), (((any1::any_list2) @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = (((any1::any_list2) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:9)
=================================================
Progress: 293


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), (((any1::any_list2) @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = (((any1::any_list2) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 5
intro nat1(rank:9)
intro nat3(rank:9)
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
intro nat2(rank:9)
=================================================
Progress: 294


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
intro nat2(rank:9)
intro nat3(rank:9)
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 295


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro nat3(rank:9)
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 296


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat3(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 297


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro nat3(rank:9)
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 298


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat3(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
nat3 : nat
---------------------------------------
forall (nat2:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 299


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat3(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 300


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat3(rank : 9)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
nat1 : nat
nat2 : nat
nat3 : nat
---------------------------------------
(any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:17)
rewrite <- IH1 in goal at 0(rank:17)
=================================================
Progress: 301


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), (any1::((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil)))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 17)


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8)
=================================================
Progress: 302


1st goal of : forall (any_list1:any list) (nat1:nat) (nat2:nat) (nat3:nat), ((any_list1 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list1 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat), ((any_list2 @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))) = (any1::((any_list2 @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))))

0 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 8)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 15
Tactic List : 7
intro nat1(rank:8)
intro nat3(rank:8)
rewrite lemma6 in goal at 0(rank:16)
rewrite <- lemma6 in goal at 2(rank:16)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
intro nat2(rank:8)
=================================================
Progress: 303


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 8)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat4 : nat
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
intro nat2(rank:8)
rewrite lemma6 in goal at 0(rank:16)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 2(rank:16)
rewrite <- lemma6 in goal at 1(rank:24)
intro nat3(rank:8)
=================================================
Progress: 304


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 8)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat4 : nat
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat), ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
intro nat3(rank:8)
rewrite lemma6 in goal at 0(rank:16)
rewrite <- lemma6 in goal at 2(rank:16)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
=================================================
Progress: 305


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat3(rank : 8)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat4 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat), ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite lemma6 in goal at 0(rank:16)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 2(rank:16)
rewrite <- lemma6 in goal at 1(rank:24)
=================================================
Progress: 306


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat4 : nat
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 8)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat4 : nat
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat), ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
intro nat3(rank:8)
rewrite lemma6 in goal at 0(rank:16)
rewrite <- lemma6 in goal at 2(rank:16)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 1(rank:24)
=================================================
Progress: 307


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat4 : nat
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat3(rank : 8)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat4 : nat
nat1 : nat
nat3 : nat
---------------------------------------
forall (nat2:nat), ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite lemma6 in goal at 0(rank:16)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 2(rank:16)
rewrite <- lemma6 in goal at 1(rank:24)
=================================================
Progress: 308


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat4 : nat
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat), ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat3(rank : 8)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat4 : nat
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat), ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite lemma6 in goal at 0(rank:16)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 2(rank:16)
rewrite <- lemma6 in goal at 1(rank:24)
=================================================
Progress: 309


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat4 : nat
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat), ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat3(rank : 8)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat4 : nat
nat1 : nat
nat2 : nat
nat3 : nat
---------------------------------------
((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite lemma6 in goal at 0(rank:16)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 2(rank:16)
rewrite <- lemma6 in goal at 1(rank:24)
=================================================
Progress: 310


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(nat1::(Nil)))) @ (nat3::(Nil))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma6 in goal at 0(rank : 16)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7)
=================================================
Progress: 311


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), ((((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(Nil))) @ (nat3::(Nil))) = (((reverse (nat_list3) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))
Inductive1 : nat_list2 = (nat5::nat_list3)
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil)))) = ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse ((nat5::nat_list3)) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(nat5::nat_list3))))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 151
Tactic List : 1
simpl in goal(rank:7)
=================================================
Progress: 312


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse ((nat5::nat_list3)) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(nat5::nat_list3))))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(nat5::nat_list3))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat_list2(rank:8)
=================================================
Progress: 313


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(nat5::nat_list3))))

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat_list2(rank : 8)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (((reverse ((Nil)) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(nat5::nat_list3))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8)
=================================================
Progress: 314


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (((reverse ((Nil)) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::(nat5::nat_list3))))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 8
intro nat1(rank:8)
intro nat3(rank:8)
rewrite <- lemma5 in goal at 0(rank:16)
rewrite <- lemma5 in goal at 2(rank:16)
rewrite <- lemma5 in goal at 3(rank:16)
rewrite <- lemma6 in goal at 0(rank:24)
intro nat4(rank:8)
intro nat2(rank:8)
=================================================
Progress: 315


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 8)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 7
intro nat2(rank:8)
intro nat4(rank:8)
rewrite <- lemma5 in goal at 2(rank:16)
rewrite <- lemma5 in goal at 3(rank:16)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma5 in goal at 0(rank:16)
intro nat3(rank:8)
=================================================
Progress: 316


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 8)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
intro nat3(rank:8)
rewrite <- lemma5 in goal at 0(rank:16)
rewrite <- lemma5 in goal at 2(rank:16)
rewrite <- lemma5 in goal at 3(rank:16)
rewrite <- lemma6 in goal at 0(rank:24)
intro nat4(rank:8)
=================================================
Progress: 317


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat3(rank : 8)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
intro nat4(rank:8)
rewrite <- lemma5 in goal at 2(rank:16)
rewrite <- lemma5 in goal at 3(rank:16)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma5 in goal at 0(rank:16)
=================================================
Progress: 318


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat4(rank : 8)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma5 in goal at 0(rank:16)
rewrite <- lemma5 in goal at 2(rank:16)
rewrite <- lemma5 in goal at 3(rank:16)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 319


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 8)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
intro nat3(rank:8)
rewrite <- lemma5 in goal at 0(rank:16)
rewrite <- lemma5 in goal at 2(rank:16)
rewrite <- lemma5 in goal at 3(rank:16)
rewrite <- lemma6 in goal at 0(rank:24)
intro nat4(rank:8)
=================================================
Progress: 320


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat3(rank : 8)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat3 : nat
---------------------------------------
forall (nat2:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
intro nat4(rank:8)
rewrite <- lemma5 in goal at 2(rank:16)
rewrite <- lemma5 in goal at 3(rank:16)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma5 in goal at 0(rank:16)
=================================================
Progress: 321


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat4(rank : 8)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat4 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma5 in goal at 0(rank:16)
rewrite <- lemma5 in goal at 2(rank:16)
rewrite <- lemma5 in goal at 3(rank:16)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 322


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat3(rank : 8)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
intro nat4(rank:8)
rewrite <- lemma5 in goal at 2(rank:16)
rewrite <- lemma5 in goal at 3(rank:16)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma5 in goal at 0(rank:16)
=================================================
Progress: 323


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat4(rank : 8)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma5 in goal at 0(rank:16)
rewrite <- lemma5 in goal at 2(rank:16)
rewrite <- lemma5 in goal at 3(rank:16)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 324


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat4(rank : 8)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma5 in goal at 0(rank:16)
rewrite <- lemma5 in goal at 2(rank:16)
rewrite <- lemma5 in goal at 3(rank:16)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 325


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat3(rank : 8)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
intro nat4(rank:8)
rewrite <- lemma5 in goal at 2(rank:16)
rewrite <- lemma5 in goal at 3(rank:16)
rewrite <- lemma6 in goal at 0(rank:24)
rewrite <- lemma5 in goal at 0(rank:16)
=================================================
Progress: 326


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat4(rank : 8)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
nat4 : nat
---------------------------------------
forall (nat3:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma5 in goal at 0(rank:16)
rewrite <- lemma5 in goal at 2(rank:16)
rewrite <- lemma5 in goal at 3(rank:16)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 327


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat3 : nat
---------------------------------------
forall (nat2:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat4(rank : 8)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat2:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma5 in goal at 0(rank:16)
rewrite <- lemma5 in goal at 2(rank:16)
rewrite <- lemma5 in goal at 3(rank:16)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 328


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat4(rank : 8)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma5 in goal at 0(rank:16)
rewrite <- lemma5 in goal at 2(rank:16)
rewrite <- lemma5 in goal at 3(rank:16)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 329


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat4(rank : 8)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
nat3 : nat
nat4 : nat
---------------------------------------
reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma5 in goal at 0(rank:16)
rewrite <- lemma5 in goal at 2(rank:16)
rewrite <- lemma5 in goal at 3(rank:16)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 330


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 0(rank : 16)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((reverse ((nat3::(nat5::nat_list3))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8)
=================================================
Progress: 331


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((reverse ((nat3::(nat5::nat_list3))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
intro nat1(rank:8)
intro nat3(rank:8)
intro nat4(rank:8)
rewrite lemma4 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
intro nat2(rank:8)
=================================================
Progress: 332


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 8)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
intro nat2(rank:8)
intro nat4(rank:8)
rewrite lemma4 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
intro nat3(rank:8)
=================================================
Progress: 333


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 8)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
intro nat3(rank:8)
intro nat4(rank:8)
rewrite lemma4 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 334


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat3(rank : 8)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro nat4(rank:8)
rewrite lemma4 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 335


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat4(rank : 8)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite lemma4 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 336


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 8)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
intro nat3(rank:8)
intro nat4(rank:8)
rewrite lemma4 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 337


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat3(rank : 8)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat3 : nat
---------------------------------------
forall (nat2:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro nat4(rank:8)
rewrite lemma4 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 338


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat4(rank : 8)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat4 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite lemma4 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 339


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat3(rank : 8)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro nat4(rank:8)
rewrite lemma4 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 340


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat4(rank : 8)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite lemma4 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 341


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat4(rank : 8)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite lemma4 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 342


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat3(rank : 8)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro nat4(rank:8)
rewrite lemma4 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 343


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat4(rank : 8)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
nat4 : nat
---------------------------------------
forall (nat3:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite lemma4 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 344


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat3 : nat
---------------------------------------
forall (nat2:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat4(rank : 8)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat2:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite lemma4 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 345


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat4(rank : 8)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite lemma4 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 346


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat4(rank : 8)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
nat3 : nat
nat4 : nat
---------------------------------------
reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite lemma4 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 347


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 2(rank : 16)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse ((((reverse ((nat5::nat_list3)) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite <- lemma4 in goal at 0(rank:16)
rewrite lemma4 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 348


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 3(rank : 16)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::reverse ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite lemma4 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 349


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 0(rank : 16)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((reverse ((nat3::(nat5::nat_list3))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite <- lemma6 in goal at 0(rank:16)
rewrite lemma4 in goal at 0(rank:24)
=================================================
Progress: 350


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 2(rank : 16)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse ((((reverse ((nat5::nat_list3)) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite <- lemma4 in goal at 0(rank:16)
rewrite lemma4 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 351


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 3(rank : 16)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::reverse ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite lemma4 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 352


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 0(rank : 16)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((reverse ((nat3::(nat5::nat_list3))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite <- lemma6 in goal at 0(rank:16)
rewrite lemma4 in goal at 0(rank:24)
=================================================
Progress: 353


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 2(rank : 16)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse ((((reverse ((nat5::nat_list3)) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite <- lemma4 in goal at 0(rank:16)
rewrite lemma4 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 354


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 3(rank : 16)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::reverse ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite lemma4 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 355


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 0(rank : 16)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((reverse ((nat3::(nat5::nat_list3))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite <- lemma6 in goal at 0(rank:16)
rewrite lemma4 in goal at 0(rank:24)
=================================================
Progress: 356


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 2(rank : 16)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse ((((reverse ((nat5::nat_list3)) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite <- lemma4 in goal at 0(rank:16)
rewrite lemma4 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 357


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 3(rank : 16)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::reverse ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite lemma4 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 358


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 0(rank : 16)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((reverse ((nat3::(nat5::nat_list3))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite <- lemma6 in goal at 0(rank:16)
rewrite lemma4 in goal at 0(rank:24)
=================================================
Progress: 359


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 2(rank : 16)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse ((((reverse ((nat5::nat_list3)) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite <- lemma4 in goal at 0(rank:16)
rewrite lemma4 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 360


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 3(rank : 16)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::reverse ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite lemma4 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 361


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 0(rank : 16)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((reverse ((nat3::(nat5::nat_list3))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite <- lemma6 in goal at 0(rank:16)
rewrite lemma4 in goal at 0(rank:24)
=================================================
Progress: 362


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 2(rank : 16)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse ((((reverse ((nat5::nat_list3)) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite <- lemma4 in goal at 0(rank:16)
rewrite lemma4 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 363


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 3(rank : 16)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat3:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::reverse ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite lemma4 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 364


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat3 : nat
---------------------------------------
forall (nat2:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 0(rank : 16)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat3 : nat
---------------------------------------
forall (nat2:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((reverse ((nat3::(nat5::nat_list3))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite <- lemma6 in goal at 0(rank:16)
rewrite lemma4 in goal at 0(rank:24)
=================================================
Progress: 365


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat3 : nat
---------------------------------------
forall (nat2:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 2(rank : 16)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat3 : nat
---------------------------------------
forall (nat2:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse ((((reverse ((nat5::nat_list3)) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite <- lemma4 in goal at 0(rank:16)
rewrite lemma4 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 366


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat3 : nat
---------------------------------------
forall (nat2:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 3(rank : 16)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat3 : nat
---------------------------------------
forall (nat2:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::reverse ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite lemma4 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 367


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat4 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 0(rank : 16)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat4 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((reverse ((nat3::(nat5::nat_list3))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite <- lemma6 in goal at 0(rank:16)
rewrite lemma4 in goal at 0(rank:24)
=================================================
Progress: 368


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat4 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 2(rank : 16)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat4 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse ((((reverse ((nat5::nat_list3)) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite <- lemma4 in goal at 0(rank:16)
rewrite lemma4 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 369


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat4 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 3(rank : 16)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat4 : nat
---------------------------------------
forall (nat2:nat) (nat3:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::reverse ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite lemma4 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 370


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 0(rank : 16)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((reverse ((nat3::(nat5::nat_list3))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite <- lemma6 in goal at 0(rank:16)
rewrite lemma4 in goal at 0(rank:24)
=================================================
Progress: 371


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 2(rank : 16)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse ((((reverse ((nat5::nat_list3)) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite <- lemma4 in goal at 0(rank:16)
rewrite lemma4 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 372


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 3(rank : 16)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat1:nat) (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::reverse ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite lemma4 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 373


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 0(rank : 16)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((reverse ((nat3::(nat5::nat_list3))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite <- lemma6 in goal at 0(rank:16)
rewrite lemma4 in goal at 0(rank:24)
=================================================
Progress: 374


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 2(rank : 16)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse ((((reverse ((nat5::nat_list3)) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite <- lemma4 in goal at 0(rank:16)
rewrite lemma4 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 375


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 3(rank : 16)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat3:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::reverse ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite lemma4 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 376


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 0(rank : 16)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((reverse ((nat3::(nat5::nat_list3))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite <- lemma6 in goal at 0(rank:16)
rewrite lemma4 in goal at 0(rank:24)
=================================================
Progress: 377


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 2(rank : 16)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse ((((reverse ((nat5::nat_list3)) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite <- lemma4 in goal at 0(rank:16)
rewrite lemma4 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 378


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 3(rank : 16)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat) (nat2:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::reverse ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite lemma4 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 379


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 0(rank : 16)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((reverse ((nat3::(nat5::nat_list3))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite <- lemma6 in goal at 0(rank:16)
rewrite lemma4 in goal at 0(rank:24)
=================================================
Progress: 380


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 2(rank : 16)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse ((((reverse ((nat5::nat_list3)) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite <- lemma4 in goal at 0(rank:16)
rewrite lemma4 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 381


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 3(rank : 16)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
nat3 : nat
---------------------------------------
forall (nat4:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::reverse ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite lemma4 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 382


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
nat4 : nat
---------------------------------------
forall (nat3:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 0(rank : 16)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
nat4 : nat
---------------------------------------
forall (nat3:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((reverse ((nat3::(nat5::nat_list3))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite <- lemma6 in goal at 0(rank:16)
rewrite lemma4 in goal at 0(rank:24)
=================================================
Progress: 383


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
nat4 : nat
---------------------------------------
forall (nat3:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 2(rank : 16)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
nat4 : nat
---------------------------------------
forall (nat3:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse ((((reverse ((nat5::nat_list3)) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite <- lemma4 in goal at 0(rank:16)
rewrite lemma4 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 384


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
nat4 : nat
---------------------------------------
forall (nat3:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 3(rank : 16)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat2 : nat
nat4 : nat
---------------------------------------
forall (nat3:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::reverse ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite lemma4 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 385


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat2:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 0(rank : 16)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat2:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((reverse ((nat3::(nat5::nat_list3))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite <- lemma6 in goal at 0(rank:16)
rewrite lemma4 in goal at 0(rank:24)
=================================================
Progress: 386


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat2:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 2(rank : 16)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat2:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse ((((reverse ((nat5::nat_list3)) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite <- lemma4 in goal at 0(rank:16)
rewrite lemma4 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 387


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat2:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 3(rank : 16)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat1 : nat
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat2:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::reverse ((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite lemma4 in goal at 0(rank:24)
rewrite <- lemma6 in goal at 0(rank:24)
=================================================
Progress: 388


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 0(rank : 16)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = reverse ((((reverse ((nat3::(nat5::nat_list3))) @ (nat1::(Nil))) @ (nat2::(Nil))) @ (nat4::(Nil))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite <- lemma6 in goal at 0(rank:16)
rewrite lemma4 in goal at 0(rank:24)
=================================================
Progress: 389


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::(nat2::(nat1::(nat3::(nat5::nat_list3)))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma5 in goal at 2(rank : 16)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list1:nat list) (nat_list2:nat list), reverse ((((reverse (nat_list1) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list1)))
nat_list1 : nat list
nat5 : nat
nat_list3 : nat list
IH1 : forall (nat1:nat) (nat2:nat) (nat3:nat) (nat4:nat) (nat_list2:nat list), reverse ((((reverse (nat_list3) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::nat_list2)))) = (((reverse (nat_list2) @ (nat4::(Nil))) @ (nat2::(Nil))) @ (nat1::(nat3::nat_list3)))
Inductive1 : nat_list1 = (nat5::nat_list3)
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
nat2 : nat
nat3 : nat
nat4 : nat
---------------------------------------
forall (nat1:nat), reverse (((((reverse (nat_list3) @ (nat5::(Nil))) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(nat4::(Nil))))) = (nat4::reverse ((((reverse ((nat5::nat_list3)) @ (nat3::(Nil))) @ (nat1::(Nil))) @ (nat2::(Nil)))))

1 goal(s) more...

2 conjecture(s) more...
