Enter the definition file path (1/2) : 
> Enter the definition file path (2/2) : 
> Choose the proof type :
1) Interactive Mode 	 2) Auto Mode
Enter the goal : =================================================
Progress: 1


No conjecture
>>> assert forall (x:any list), reverse (qreva (x) ((Nil))) = x(rank : 0)


1st goal of : forall (any_list1:any list), reverse (qreva (any_list1) ((Nil))) = any_list1

---------------------------------------
forall (any_list1:any list), reverse (qreva (any_list1) ((Nil))) = any_list1

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:4)
=================================================
Progress: 2


1st goal of : forall (any_list1:any list), reverse (qreva (any_list1) ((Nil))) = any_list1

---------------------------------------
forall (any_list1:any list), reverse (qreva (any_list1) ((Nil))) = any_list1

0 goal(s) more...

0 conjecture(s) more...
>>> induction any_list1(rank : 4)


1st goal of : forall (any_list1:any list), reverse (qreva (any_list1) ((Nil))) = any_list1
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
reverse (qreva ((Nil)) ((Nil))) = (Nil)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3)
=================================================
Progress: 3


1st goal of : forall (any_list1:any list), reverse (qreva (any_list1) ((Nil))) = any_list1
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
reverse (qreva ((Nil)) ((Nil))) = (Nil)

1 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 3)


1st goal of : forall (any_list1:any list), reverse (qreva (any_list1) ((Nil))) = any_list1
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : reverse (qreva (any_list2) ((Nil))) = any_list2
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
reverse (qreva ((any1::any_list2)) ((Nil))) = (any1::any_list2)

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:3)
=================================================
Progress: 4


1st goal of : forall (any_list1:any list), reverse (qreva (any_list1) ((Nil))) = any_list1
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : reverse (qreva (any_list2) ((Nil))) = any_list2
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
reverse (qreva ((any1::any_list2)) ((Nil))) = (any1::any_list2)

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3)


1st goal of : forall (any_list1:any list), reverse (qreva (any_list1) ((Nil))) = any_list1
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : reverse (qreva (any_list2) ((Nil))) = any_list2
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
reverse (qreva (any_list2) ((any1::(Nil)))) = (any1::any_list2)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
expr list
reverse (qreva (any_list2) ((Nil)))
reverse (qreva (any_list2) ((any1::(Nil))))
reverse (qreva (any_list3) ((any2::(any1::(Nil)))))
reverse (qreva (any_list4) ((any3::(any2::(any1::(Nil))))))
lhs common subtree
Nil()
Cons(any1, Nil())
Cons(any2, Cons(any1, Nil()))
Cons(any3, Cons(any2, Cons(any1, Nil())))
expr list
any_list2
(any1::any_list2)
(any1::(any2::any_list3))
(any1::(any2::(any3::any_list4)))
rhs common subtree
_
Cons(any1, _)
Cons(any1, Cons(any2, _))
Cons(any1, Cons(any2, Cons(any3, _)))
lhs increase subtree
Cons(any1, _)
Cons(any2, _)
Cons(any3, _)
rhs increase subtree
none(Cons(any1, _))
none(Cons(any2, _))
none(Cons(any3, _))
New Env
let rec mk_rhs1 arg_1 arg_2 =
match (arg_1) with
| Nil  -> arg_2
| Cons hd tl -> none ((hd::mk_rhs1 (tl) (arg_2)))
;;
Lemma List
forall (any_list2:any list), mk_rhs1 ((Nil)) (any_list2) = any_list2
forall (hd:any) (tl:any list) (any_list2:any list), mk_rhs1 ((hd::tl)) (any_list2) = none ((hd::mk_rhs1 (tl) (any_list2)))
forall (any_list2:any list) (lst:any list), reverse (qreva (any_list2) (lst)) = none (any_list2)
End of Lemma List


1st goal of : forall (any_list1:any list), reverse (qreva (any_list1) ((Nil))) = any_list1
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : reverse (qreva (any_list2) ((Nil))) = any_list2
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
reverse (qreva (any_list2) ((any1::(Nil)))) = (any1::any_list2)

0 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 5


1st goal of : forall (any_list1:any list), reverse (qreva (any_list1) ((Nil))) = any_list1
any_list1 : any list
any1 : any
any_list2 : any list
IH1 : reverse (qreva (any_list2) ((Nil))) = any_list2
Inductive1 : any_list1 = (any1::any_list2)
---------------------------------------
reverse (qreva (any_list2) ((any1::(Nil)))) = (any1::any_list2)

0 goal(s) more...

0 conjecture(s) more...
>>> assert forall (any_list2:any list) (lst:any list), reverse (qreva (any_list2) (lst)) = none (any_list2)(rank : 0)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = none (any_list1)

---------------------------------------
forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = none (any_list1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_list1(rank:6)
=================================================
Progress: 6


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = none (any_list1)

---------------------------------------
forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = none (any_list1)

0 goal(s) more...

1 conjecture(s) more...
>>> induction any_list1(rank : 6)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = none (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), reverse (qreva ((Nil)) (any_list2)) = none ((Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6)
=================================================
Progress: 7


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = none (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), reverse (qreva ((Nil)) (any_list2)) = none ((Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = none (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), reverse (any_list2) = none ((Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction any_list2(rank:7)
=================================================
Progress: 8


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = none (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
---------------------------------------
forall (any_list2:any list), reverse (any_list2) = none ((Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> induction any_list2(rank : 7)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = none (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
reverse ((Nil)) = none ((Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7)
=================================================
Progress: 9


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = none (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
reverse ((Nil)) = none ((Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7)


1st goal of : forall (any_list1:any list) (any_list2:any list), reverse (qreva (any_list1) (any_list2)) = none (any_list1)
any_list1 : any list
Base1 : any_list1 = (Nil)
any_list2 : any list
Base2 : any_list2 = (Nil)
---------------------------------------
(Nil) = none ((Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
