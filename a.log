Choose the proof type :
1) Interactive Mode 	 2) Auto Mode
Enter the goal : =================================================
Progress: 1


No conjecture
>>> assert forall (l:lambda), check_ta1 (l) = check (l)(rank : 0)


1st goal of : forall (l:lambda), check_ta1 (l) = check (l)

---------------------------------------
forall (l:lambda), check_ta1 (l) = check (l)

0 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 2


1st goal of : forall (l:lambda), check_ta1 (l) = check (l)

---------------------------------------
forall (l:lambda), check_ta1 (l) = check (l)

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 0)


1st goal of : forall (l:lambda), check_ta1 (l) = check (l)

---------------------------------------
forall (l:lambda), sub_check_ta1 (l) (Nil) = match (l) with
| V x -> false
| P x e -> sub_check (e) (Cons (x) (Nil))
| C e1 e2 -> && (sub_check (e1) (Nil)) (sub_check (e2) (Nil))

0 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 3


1st goal of : forall (l:lambda), check_ta1 (l) = check (l)

---------------------------------------
forall (l:lambda), sub_check_ta1 (l) (Nil) = match (l) with
| V x -> false
| P x e -> sub_check (e) (Cons (x) (Nil))
| C e1 e2 -> && (sub_check (e1) (Nil)) (sub_check (e2) (Nil))

0 goal(s) more...

0 conjecture(s) more...
>>> induction l(rank : 0)


1st goal of : forall (l:lambda), check_ta1 (l) = check (l)
string1 : string
---------------------------------------
sub_check_ta1 (V (string1)) (Nil) = match (V (string1)) with
| V x -> false
| P x e -> sub_check (e) (Cons (x) (Nil))
| C e1 e2 -> && (sub_check (e1) (Nil)) (sub_check (e2) (Nil))

2 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 4


1st goal of : forall (l:lambda), check_ta1 (l) = check (l)
string1 : string
---------------------------------------
sub_check_ta1 (V (string1)) (Nil) = match (V (string1)) with
| V x -> false
| P x e -> sub_check (e) (Cons (x) (Nil))
| C e1 e2 -> && (sub_check (e1) (Nil)) (sub_check (e2) (Nil))

2 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 0)


1st goal of : forall (l:lambda), check_ta1 (l) = check (l)
string1 : string
---------------------------------------
false = false

2 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 5


1st goal of : forall (l:lambda), check_ta1 (l) = check (l)
string1 : string
---------------------------------------
false = false

2 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 0)


1st goal of : forall (l:lambda), check_ta1 (l) = check (l)
string4 : string
lambda5 : lambda
IH6 : sub_check_ta1 (lambda5) (Nil) = match (lambda5) with
| V x -> false
| P x e -> sub_check (e) (Cons (x) (Nil))
| C e1 e2 -> && (sub_check (e1) (Nil)) (sub_check (e2) (Nil))
Inductive7 : l = P (string4) (lambda5)
---------------------------------------
sub_check_ta1 (P (string4) (lambda5)) (Nil) = match (P (string4) (lambda5)) with
| V x -> false
| P x e -> sub_check (e) (Cons (x) (Nil))
| C e1 e2 -> && (sub_check (e1) (Nil)) (sub_check (e2) (Nil))

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 6


1st goal of : forall (l:lambda), check_ta1 (l) = check (l)
string4 : string
lambda5 : lambda
IH6 : sub_check_ta1 (lambda5) (Nil) = match (lambda5) with
| V x -> false
| P x e -> sub_check (e) (Cons (x) (Nil))
| C e1 e2 -> && (sub_check (e1) (Nil)) (sub_check (e2) (Nil))
Inductive7 : l = P (string4) (lambda5)
---------------------------------------
sub_check_ta1 (P (string4) (lambda5)) (Nil) = match (P (string4) (lambda5)) with
| V x -> false
| P x e -> sub_check (e) (Cons (x) (Nil))
| C e1 e2 -> && (sub_check (e1) (Nil)) (sub_check (e2) (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 0)


1st goal of : forall (l:lambda), check_ta1 (l) = check (l)
string4 : string
lambda5 : lambda
IH6 : sub_check_ta1 (lambda5) (Nil) = match (lambda5) with
| V x -> false
| P x e -> sub_check (e) (Cons (x) (Nil))
| C e1 e2 -> && (sub_check (e1) (Nil)) (sub_check (e2) (Nil))
Inductive7 : l = P (string4) (lambda5)
---------------------------------------
sub_check_ta1 (lambda5) (Cons (string4) (Nil)) = sub_check (lambda5) (Cons (string4) (Nil))

1 goal(s) more...

0 conjecture(s) more...
sub_check_ta1 (lambda5) (Cons (string4) (Nil)) = sub_check (lambda5) (Cons (string4) (Nil))
symbolic execution -------------------
sub_check (lambda24) (Cons (string4) (Nil)) = false
sub_check_ta1 (lambda24) (Cons (string4) (Nil)) = true
==============
sub_check_ta1 (lambda25) (Cons (string4) (Nil)) = sub_check (lambda24) (Cons (string4) (Nil))
sub_check (lambda24) (Cons (string4) (Nil)) = false
sub_check_ta1 (lambda24) (Cons (string4) (Nil)) = true
sub_check_ta1 (lambda42) (Cons (string4) (Nil)) = false
==============
sub_check_ta1 (lambda42) (Cons (string4) (Nil)) = sub_check (lambda24) (Cons (string4) (Nil))
-------------------
sub_check (lambda24) (Cons (string4) (Nil)) = false
sub_check_ta1 (lambda24) (Cons (string4) (Nil)) = true
==============
sub_check_ta1 (lambda25) (Cons (string4) (Nil)) = sub_check (lambda24) (Cons (string4) (Nil))
sub_check (lambda24) (Cons (string4) (Nil)) = false
sub_check_ta1 (lambda24) (Cons (string4) (Nil)) = true
==============
sub_check_ta1 (lambda43) (Cons (string4) (Nil)) = sub_check (lambda24) (Cons (string4) (Nil))
-------------------
sub_check (lambda24) (Cons (string4) (Nil)) = false
sub_check_ta1 (lambda24) (Cons (string4) (Nil)) = true
==============
sub_check_ta1 (lambda25) (Cons (string4) (Nil)) = sub_check (lambda24) (Cons (string4) (Nil))
sub_check (lambda24) (Cons (string4) (Nil)) = false
sub_check_ta1 (lambda24) (Cons (string4) (Nil)) = true
==============
sub_check_ta1 (lambda38) (Cons (string37) (Cons (string4) (Nil))) = sub_check (lambda24) (Cons (string4) (Nil))
-------------------
sub_check (lambda24) (Cons (string4) (Nil)) = false
sub_check_ta1 (lambda24) (Cons (string4) (Nil)) = true
==============
sub_check_ta1 (lambda25) (Cons (string4) (Nil)) = sub_check (lambda24) (Cons (string4) (Nil))
sub_check (lambda24) (Cons (string4) (Nil)) = false
sub_check_ta1 (lambda24) (Cons (string4) (Nil)) = true
==============
sub_check_ta1 (lambda24) (Cons (string4) (Nil)) = sub_check (lambda24) (Cons (string4) (Nil))
-------------------
sub_check (lambda24) (Cons (string4) (Nil)) = true
sub_check_ta1 (lambda24) (Cons (string4) (Nil)) = false
==============
sub_check_ta1 (lambda24) (Cons (string4) (Nil)) = sub_check (lambda25) (Cons (string4) (Nil))
sub_check_ta1 (lambda40) (Cons (string4) (Nil)) = false
==============
sub_check_ta1 (lambda40) (Cons (string4) (Nil)) = sub_check (lambda25) (Cons (string4) (Nil))
-------------------
sub_check (lambda24) (Cons (string4) (Nil)) = true
sub_check_ta1 (lambda24) (Cons (string4) (Nil)) = false
==============
sub_check_ta1 (lambda24) (Cons (string4) (Nil)) = sub_check (lambda25) (Cons (string4) (Nil))
==============
sub_check_ta1 (lambda41) (Cons (string4) (Nil)) = sub_check (lambda25) (Cons (string4) (Nil))
-------------------
sub_check (lambda24) (Cons (string4) (Nil)) = true
sub_check_ta1 (lambda24) (Cons (string4) (Nil)) = false
==============
sub_check_ta1 (lambda24) (Cons (string4) (Nil)) = sub_check (lambda25) (Cons (string4) (Nil))
==============
sub_check_ta1 (lambda36) (Cons (string35) (Cons (string4) (Nil))) = sub_check (lambda25) (Cons (string4) (Nil))
-------------------
sub_check (lambda24) (Cons (string4) (Nil)) = true
sub_check_ta1 (lambda24) (Cons (string4) (Nil)) = false
==============
sub_check_ta1 (lambda24) (Cons (string4) (Nil)) = sub_check (lambda25) (Cons (string4) (Nil))
sub_check (lambda24) (Cons (string4) (Nil)) = true
sub_check_ta1 (lambda24) (Cons (string4) (Nil)) = false
==============
sub_check_ta1 (lambda24) (Cons (string4) (Nil)) = sub_check (lambda25) (Cons (string4) (Nil))
-------------------
sub_check (lambda24) (Cons (string4) (Nil)) = true
sub_check_ta1 (lambda24) (Cons (string4) (Nil)) = false
==============
sub_check_ta1 (lambda24) (Cons (string4) (Nil)) = sub_check (lambda25) (Cons (string4) (Nil))
sub_check (lambda24) (Cons (string4) (Nil)) = true
sub_check_ta1 (lambda24) (Cons (string4) (Nil)) = false
==============
sub_check (lambda24) (Cons (string4) (Nil)) = sub_check (lambda25) (Cons (string4) (Nil))
-------------------
==============
sub_check_ta1 (lambda25) (Cons (string4) (Nil)) = sub_check (lambda25) (Cons (string4) (Nil))
sub_check (lambda40) (Cons (string4) (Nil)) = false
sub_check_ta1 (lambda40) (Cons (string4) (Nil)) = true
==============
sub_check_ta1 (lambda41) (Cons (string4) (Nil)) = sub_check (lambda40) (Cons (string4) (Nil))
-------------------
==============
sub_check_ta1 (lambda25) (Cons (string4) (Nil)) = sub_check (lambda25) (Cons (string4) (Nil))
sub_check (lambda40) (Cons (string4) (Nil)) = true
sub_check_ta1 (lambda40) (Cons (string4) (Nil)) = false
==============
sub_check_ta1 (lambda40) (Cons (string4) (Nil)) = sub_check (lambda41) (Cons (string4) (Nil))
-------------------
==============
sub_check_ta1 (lambda25) (Cons (string4) (Nil)) = sub_check (lambda25) (Cons (string4) (Nil))
==============
sub_check_ta1 (lambda41) (Cons (string4) (Nil)) = sub_check (lambda41) (Cons (string4) (Nil))
-------------------
==============
sub_check_ta1 (lambda25) (Cons (string4) (Nil)) = sub_check (lambda25) (Cons (string4) (Nil))
==============
sub_check_ta1 (lambda36) (Cons (string35) (Cons (string4) (Nil))) = sub_check (lambda36) (Cons (string35) (Cons (string4) (Nil)))
-------------------
==============
sub_check_ta1 (lambda20) (Cons (string19) (Cons (string4) (Nil))) = sub_check (lambda20) (Cons (string19) (Cons (string4) (Nil)))
sub_check (lambda36) (Cons (string19) (Cons (string4) (Nil))) = false
sub_check_ta1 (lambda36) (Cons (string19) (Cons (string4) (Nil))) = true
==============
sub_check_ta1 (lambda37) (Cons (string19) (Cons (string4) (Nil))) = sub_check (lambda36) (Cons (string19) (Cons (string4) (Nil)))
-------------------
==============
sub_check_ta1 (lambda20) (Cons (string19) (Cons (string4) (Nil))) = sub_check (lambda20) (Cons (string19) (Cons (string4) (Nil)))
sub_check (lambda36) (Cons (string19) (Cons (string4) (Nil))) = true
sub_check_ta1 (lambda36) (Cons (string19) (Cons (string4) (Nil))) = false
==============
sub_check_ta1 (lambda36) (Cons (string19) (Cons (string4) (Nil))) = sub_check (lambda37) (Cons (string19) (Cons (string4) (Nil)))
-------------------
==============
sub_check_ta1 (lambda20) (Cons (string19) (Cons (string4) (Nil))) = sub_check (lambda20) (Cons (string19) (Cons (string4) (Nil)))
==============
sub_check_ta1 (lambda37) (Cons (string19) (Cons (string4) (Nil))) = sub_check (lambda37) (Cons (string19) (Cons (string4) (Nil)))
-------------------
==============
sub_check_ta1 (lambda20) (Cons (string19) (Cons (string4) (Nil))) = sub_check (lambda20) (Cons (string19) (Cons (string4) (Nil)))
==============
sub_check_ta1 (lambda32) (Cons (string31) (Cons (string19) (Cons (string4) (Nil)))) = sub_check (lambda32) (Cons (string31) (Cons (string19) (Cons (string4) (Nil))))
-------------------
forall (lambda5:lambda) (string_list15:string list), sub_check_ta1 (lambda5) (string_list15) = sub_check (lambda5) (string_list15)
forall (lambda5:lambda) (string4:string) (string_list16:string list), sub_check_ta1 (lambda5) (Cons (string4) (string_list16)) = sub_check (lambda5) (Cons (string4) (string_list16))
forall (lambda5:lambda) (string4:string), sub_check_ta1 (lambda5) (Cons (string4) (Nil)) = sub_check (lambda5) (Cons (string4) (Nil))
Lemma List : 3
Goal and Lemma
sub_check_ta1 (lambda5) (Cons (string4) (Nil)) = sub_check (lambda5) (Cons (string4) (Nil))
forall (lambda5:lambda) (string_list15:string list), sub_check_ta1 (lambda5) (string_list15) = sub_check (lambda5) (string_list15)
Goal and Lemma
sub_check_ta1 (lambda5) (Cons (string4) (Nil)) = sub_check (lambda5) (Cons (string4) (Nil))
forall (lambda5:lambda) (string4:string) (string_list16:string list), sub_check_ta1 (lambda5) (Cons (string4) (string_list16)) = sub_check (lambda5) (Cons (string4) (string_list16))
Goal and Lemma
sub_check_ta1 (lambda5) (Cons (string4) (Nil)) = sub_check (lambda5) (Cons (string4) (Nil))
forall (lambda5:lambda) (string4:string), sub_check_ta1 (lambda5) (Cons (string4) (Nil)) = sub_check (lambda5) (Cons (string4) (Nil))
=================================================
Progress: 7


1st goal of : forall (l:lambda), check_ta1 (l) = check (l)
string4 : string
lambda5 : lambda
IH6 : sub_check_ta1 (lambda5) (Nil) = match (lambda5) with
| V x -> false
| P x e -> sub_check (e) (Cons (x) (Nil))
| C e1 e2 -> && (sub_check (e1) (Nil)) (sub_check (e2) (Nil))
Inductive7 : l = P (string4) (lambda5)
---------------------------------------
sub_check_ta1 (lambda5) (Cons (string4) (Nil)) = sub_check (lambda5) (Cons (string4) (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (lambda5:lambda) (string4:string), sub_check_ta1 (lambda5) (Cons (string4) (Nil)) = sub_check (lambda5) (Cons (string4) (Nil))(rank : 0)


1st goal of : forall (lambda5:lambda) (string4:string), sub_check_ta1 (lambda5) (Cons (string4) (Nil)) = sub_check (lambda5) (Cons (string4) (Nil))

---------------------------------------
forall (lambda5:lambda) (string4:string), sub_check_ta1 (lambda5) (Cons (string4) (Nil)) = sub_check (lambda5) (Cons (string4) (Nil))

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 8


1st goal of : forall (l:lambda), check_ta1 (l) = check (l)
string4 : string
lambda5 : lambda
IH6 : sub_check_ta1 (lambda5) (Nil) = match (lambda5) with
| V x -> false
| P x e -> sub_check (e) (Cons (x) (Nil))
| C e1 e2 -> && (sub_check (e1) (Nil)) (sub_check (e2) (Nil))
Inductive7 : l = P (string4) (lambda5)
---------------------------------------
sub_check_ta1 (lambda5) (Cons (string4) (Nil)) = sub_check (lambda5) (Cons (string4) (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (lambda5:lambda) (string4:string) (string_list16:string list), sub_check_ta1 (lambda5) (Cons (string4) (string_list16)) = sub_check (lambda5) (Cons (string4) (string_list16))(rank : 0)


1st goal of : forall (lambda5:lambda) (string4:string) (string_list16:string list), sub_check_ta1 (lambda5) (Cons (string4) (string_list16)) = sub_check (lambda5) (Cons (string4) (string_list16))

---------------------------------------
forall (lambda5:lambda) (string4:string) (string_list16:string list), sub_check_ta1 (lambda5) (Cons (string4) (string_list16)) = sub_check (lambda5) (Cons (string4) (string_list16))

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 9


1st goal of : forall (l:lambda), check_ta1 (l) = check (l)
string4 : string
lambda5 : lambda
IH6 : sub_check_ta1 (lambda5) (Nil) = match (lambda5) with
| V x -> false
| P x e -> sub_check (e) (Cons (x) (Nil))
| C e1 e2 -> && (sub_check (e1) (Nil)) (sub_check (e2) (Nil))
Inductive7 : l = P (string4) (lambda5)
---------------------------------------
sub_check_ta1 (lambda5) (Cons (string4) (Nil)) = sub_check (lambda5) (Cons (string4) (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (lambda5:lambda) (string_list15:string list), sub_check_ta1 (lambda5) (string_list15) = sub_check (lambda5) (string_list15)(rank : 0)


1st goal of : forall (lambda5:lambda) (string_list15:string list), sub_check_ta1 (lambda5) (string_list15) = sub_check (lambda5) (string_list15)

---------------------------------------
forall (lambda5:lambda) (string_list15:string list), sub_check_ta1 (lambda5) (string_list15) = sub_check (lambda5) (string_list15)

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 10


1st goal of : forall (lambda5:lambda) (string4:string), sub_check_ta1 (lambda5) (Cons (string4) (Nil)) = sub_check (lambda5) (Cons (string4) (Nil))

---------------------------------------
forall (lambda5:lambda) (string4:string), sub_check_ta1 (lambda5) (Cons (string4) (Nil)) = sub_check (lambda5) (Cons (string4) (Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> induction lambda5(rank : 0)


1st goal of : forall (lambda5:lambda) (string4:string), sub_check_ta1 (lambda5) (Cons (string4) (Nil)) = sub_check (lambda5) (Cons (string4) (Nil))
string15 : string
---------------------------------------
forall (string4:string), sub_check_ta1 (V (string15)) (Cons (string4) (Nil)) = sub_check (V (string15)) (Cons (string4) (Nil))

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 11


1st goal of : forall (lambda5:lambda) (string4:string), sub_check_ta1 (lambda5) (Cons (string4) (Nil)) = sub_check (lambda5) (Cons (string4) (Nil))
string15 : string
---------------------------------------
forall (string4:string), sub_check_ta1 (V (string15)) (Cons (string4) (Nil)) = sub_check (V (string15)) (Cons (string4) (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 0)


1st goal of : forall (lambda5:lambda) (string4:string), sub_check_ta1 (lambda5) (Cons (string4) (Nil)) = sub_check (lambda5) (Cons (string4) (Nil))
string15 : string
---------------------------------------
forall (string4:string), if match (string4, string15) with
| (String l1, String l2) -> list_eq (l1) (l2) then true else is_mem_ta1 (Nil) (string15) = if match (string4, string15) with
| (String l1, String l2) -> list_eq (l1) (l2) then true else mem (string15) (Nil)

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 12


1st goal of : forall (lambda5:lambda) (string4:string) (string_list16:string list), sub_check_ta1 (lambda5) (Cons (string4) (string_list16)) = sub_check (lambda5) (Cons (string4) (string_list16))

---------------------------------------
forall (lambda5:lambda) (string4:string) (string_list16:string list), sub_check_ta1 (lambda5) (Cons (string4) (string_list16)) = sub_check (lambda5) (Cons (string4) (string_list16))

0 goal(s) more...

1 conjecture(s) more...
>>> induction lambda5(rank : 0)


1st goal of : forall (lambda5:lambda) (string4:string) (string_list16:string list), sub_check_ta1 (lambda5) (Cons (string4) (string_list16)) = sub_check (lambda5) (Cons (string4) (string_list16))
string15 : string
---------------------------------------
forall (string4:string) (string_list16:string list), sub_check_ta1 (V (string15)) (Cons (string4) (string_list16)) = sub_check (V (string15)) (Cons (string4) (string_list16))

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 13


1st goal of : forall (lambda5:lambda) (string4:string) (string_list16:string list), sub_check_ta1 (lambda5) (Cons (string4) (string_list16)) = sub_check (lambda5) (Cons (string4) (string_list16))
string15 : string
---------------------------------------
forall (string4:string) (string_list16:string list), sub_check_ta1 (V (string15)) (Cons (string4) (string_list16)) = sub_check (V (string15)) (Cons (string4) (string_list16))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 0)


1st goal of : forall (lambda5:lambda) (string4:string) (string_list16:string list), sub_check_ta1 (lambda5) (Cons (string4) (string_list16)) = sub_check (lambda5) (Cons (string4) (string_list16))
string15 : string
---------------------------------------
forall (string4:string) (string_list16:string list), if match (string4, string15) with
| (String l1, String l2) -> list_eq (l1) (l2) then true else is_mem_ta1 (string_list16) (string15) = if match (string4, string15) with
| (String l1, String l2) -> list_eq (l1) (l2) then true else mem (string15) (string_list16)

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 14


1st goal of : forall (lambda5:lambda) (string4:string) (string_list16:string list), sub_check_ta1 (lambda5) (Cons (string4) (string_list16)) = sub_check (lambda5) (Cons (string4) (string_list16))
string15 : string
---------------------------------------
forall (string4:string) (string_list16:string list), if match (string4, string15) with
| (String l1, String l2) -> list_eq (l1) (l2) then true else is_mem_ta1 (string_list16) (string15) = if match (string4, string15) with
| (String l1, String l2) -> list_eq (l1) (l2) then true else mem (string15) (string_list16)

2 goal(s) more...

1 conjecture(s) more...
>>> induction string_list16(rank : 0)


1st goal of : forall (lambda5:lambda) (string4:string) (string_list16:string list), sub_check_ta1 (lambda5) (Cons (string4) (string_list16)) = sub_check (lambda5) (Cons (string4) (string_list16))
string15 : string
---------------------------------------
forall (string4:string), if match (string4, string15) with
| (String l1, String l2) -> list_eq (l1) (l2) then true else is_mem_ta1 (Nil) (string15) = if match (string4, string15) with
| (String l1, String l2) -> list_eq (l1) (l2) then true else mem (string15) (Nil)

3 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 15


1st goal of : forall (lambda5:lambda) (string_list15:string list), sub_check_ta1 (lambda5) (string_list15) = sub_check (lambda5) (string_list15)

---------------------------------------
forall (lambda5:lambda) (string_list15:string list), sub_check_ta1 (lambda5) (string_list15) = sub_check (lambda5) (string_list15)

0 goal(s) more...

1 conjecture(s) more...
>>> induction lambda5(rank : 0)


1st goal of : forall (lambda5:lambda) (string_list15:string list), sub_check_ta1 (lambda5) (string_list15) = sub_check (lambda5) (string_list15)
string15 : string
---------------------------------------
forall (string_list15:string list), sub_check_ta1 (V (string15)) (string_list15) = sub_check (V (string15)) (string_list15)

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 16


1st goal of : forall (lambda5:lambda) (string_list15:string list), sub_check_ta1 (lambda5) (string_list15) = sub_check (lambda5) (string_list15)
string15 : string
---------------------------------------
forall (string_list15:string list), sub_check_ta1 (V (string15)) (string_list15) = sub_check (V (string15)) (string_list15)

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 0)


1st goal of : forall (lambda5:lambda) (string_list15:string list), sub_check_ta1 (lambda5) (string_list15) = sub_check (lambda5) (string_list15)
string15 : string
---------------------------------------
forall (string_list15:string list), is_mem_ta1 (string_list15) (string15) = mem (string15) (string_list15)

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 17


1st goal of : forall (lambda5:lambda) (string_list15:string list), sub_check_ta1 (lambda5) (string_list15) = sub_check (lambda5) (string_list15)
string15 : string
---------------------------------------
forall (string_list15:string list), is_mem_ta1 (string_list15) (string15) = mem (string15) (string_list15)

2 goal(s) more...

1 conjecture(s) more...
>>> induction string_list15(rank : 0)


1st goal of : forall (lambda5:lambda) (string_list15:string list), sub_check_ta1 (lambda5) (string_list15) = sub_check (lambda5) (string_list15)
string15 : string
---------------------------------------
is_mem_ta1 (Nil) (string15) = mem (string15) (Nil)

3 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 18


1st goal of : forall (lambda5:lambda) (string_list15:string list), sub_check_ta1 (lambda5) (string_list15) = sub_check (lambda5) (string_list15)
string15 : string
---------------------------------------
is_mem_ta1 (Nil) (string15) = mem (string15) (Nil)

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 0)


1st goal of : forall (lambda5:lambda) (string_list15:string list), sub_check_ta1 (lambda5) (string_list15) = sub_check (lambda5) (string_list15)
string15 : string
---------------------------------------
false = false

3 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 19


1st goal of : forall (lambda5:lambda) (string_list15:string list), sub_check_ta1 (lambda5) (string_list15) = sub_check (lambda5) (string_list15)
string15 : string
---------------------------------------
false = false

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 0)


1st goal of : forall (lambda5:lambda) (string_list15:string list), sub_check_ta1 (lambda5) (string_list15) = sub_check (lambda5) (string_list15)
string31 : string
string_list32 : string list
string15 : string
IH33 : is_mem_ta1 (string_list32) (string15) = mem (string15) (string_list32)
Inductive34 : string_list15 = Cons (string31) (string_list32)
---------------------------------------
is_mem_ta1 (Cons (string31) (string_list32)) (string15) = mem (string15) (Cons (string31) (string_list32))

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 20


1st goal of : forall (lambda5:lambda) (string_list15:string list), sub_check_ta1 (lambda5) (string_list15) = sub_check (lambda5) (string_list15)
string31 : string
string_list32 : string list
string15 : string
IH33 : is_mem_ta1 (string_list32) (string15) = mem (string15) (string_list32)
Inductive34 : string_list15 = Cons (string31) (string_list32)
---------------------------------------
is_mem_ta1 (Cons (string31) (string_list32)) (string15) = mem (string15) (Cons (string31) (string_list32))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 0)


1st goal of : forall (lambda5:lambda) (string_list15:string list), sub_check_ta1 (lambda5) (string_list15) = sub_check (lambda5) (string_list15)
string31 : string
string_list32 : string list
string15 : string
IH33 : is_mem_ta1 (string_list32) (string15) = mem (string15) (string_list32)
Inductive34 : string_list15 = Cons (string31) (string_list32)
---------------------------------------
if match (string31, string15) with
| (String l1, String l2) -> list_eq (l1) (l2) then true else is_mem_ta1 (string_list32) (string15) = if match (string31, string15) with
| (String l1, String l2) -> list_eq (l1) (l2) then true else mem (string15) (string_list32)

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 21


1st goal of : forall (lambda5:lambda) (string4:string), sub_check_ta1 (lambda5) (Cons (string4) (Nil)) = sub_check (lambda5) (Cons (string4) (Nil))

---------------------------------------
forall (lambda5:lambda) (string4:string), sub_check_ta1 (lambda5) (Cons (string4) (Nil)) = sub_check (lambda5) (Cons (string4) (Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> intro string4(rank : 1)


1st goal of : forall (lambda5:lambda) (string4:string), sub_check_ta1 (lambda5) (Cons (string4) (Nil)) = sub_check (lambda5) (Cons (string4) (Nil))
string4 : string
---------------------------------------
forall (lambda5:lambda), sub_check_ta1 (lambda5) (Cons (string4) (Nil)) = sub_check (lambda5) (Cons (string4) (Nil))

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 22


1st goal of : forall (lambda5:lambda) (string4:string), sub_check_ta1 (lambda5) (Cons (string4) (Nil)) = sub_check (lambda5) (Cons (string4) (Nil))
string4 : string
---------------------------------------
forall (lambda5:lambda), sub_check_ta1 (lambda5) (Cons (string4) (Nil)) = sub_check (lambda5) (Cons (string4) (Nil))

0 goal(s) more...

1 conjecture(s) more...
>>> induction lambda5(rank : 0)


1st goal of : forall (lambda5:lambda) (string4:string), sub_check_ta1 (lambda5) (Cons (string4) (Nil)) = sub_check (lambda5) (Cons (string4) (Nil))
string15 : string
string4 : string
---------------------------------------
sub_check_ta1 (V (string15)) (Cons (string4) (Nil)) = sub_check (V (string15)) (Cons (string4) (Nil))

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 23


1st goal of : forall (lambda5:lambda) (string4:string), sub_check_ta1 (lambda5) (Cons (string4) (Nil)) = sub_check (lambda5) (Cons (string4) (Nil))
string15 : string
string4 : string
---------------------------------------
sub_check_ta1 (V (string15)) (Cons (string4) (Nil)) = sub_check (V (string15)) (Cons (string4) (Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 0)


1st goal of : forall (lambda5:lambda) (string4:string), sub_check_ta1 (lambda5) (Cons (string4) (Nil)) = sub_check (lambda5) (Cons (string4) (Nil))
string15 : string
string4 : string
---------------------------------------
if match (string4, string15) with
| (String l1, String l2) -> list_eq (l1) (l2) then true else is_mem_ta1 (Nil) (string15) = if match (string4, string15) with
| (String l1, String l2) -> list_eq (l1) (l2) then true else mem (string15) (Nil)

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 24


1st goal of : forall (lambda5:lambda) (string4:string), sub_check_ta1 (lambda5) (Cons (string4) (Nil)) = sub_check (lambda5) (Cons (string4) (Nil))
string15 : string
---------------------------------------
forall (string4:string), if match (string4, string15) with
| (String l1, String l2) -> list_eq (l1) (l2) then true else is_mem_ta1 (Nil) (string15) = if match (string4, string15) with
| (String l1, String l2) -> list_eq (l1) (l2) then true else mem (string15) (Nil)

2 goal(s) more...

1 conjecture(s) more...
>>> intro string4(rank : 1)


1st goal of : forall (lambda5:lambda) (string4:string), sub_check_ta1 (lambda5) (Cons (string4) (Nil)) = sub_check (lambda5) (Cons (string4) (Nil))
string15 : string
string4 : string
---------------------------------------
if match (string4, string15) with
| (String l1, String l2) -> list_eq (l1) (l2) then true else is_mem_ta1 (Nil) (string15) = if match (string4, string15) with
| (String l1, String l2) -> list_eq (l1) (l2) then true else mem (string15) (Nil)

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 25


1st goal of : forall (lambda5:lambda) (string4:string) (string_list16:string list), sub_check_ta1 (lambda5) (Cons (string4) (string_list16)) = sub_check (lambda5) (Cons (string4) (string_list16))
string15 : string
---------------------------------------
forall (string4:string) (string_list16:string list), if match (string4, string15) with
| (String l1, String l2) -> list_eq (l1) (l2) then true else is_mem_ta1 (string_list16) (string15) = if match (string4, string15) with
| (String l1, String l2) -> list_eq (l1) (l2) then true else mem (string15) (string_list16)

2 goal(s) more...

1 conjecture(s) more...
>>> intro string4(rank : 1)


1st goal of : forall (lambda5:lambda) (string4:string) (string_list16:string list), sub_check_ta1 (lambda5) (Cons (string4) (string_list16)) = sub_check (lambda5) (Cons (string4) (string_list16))
string15 : string
string4 : string
---------------------------------------
forall (string_list16:string list), if match (string4, string15) with
| (String l1, String l2) -> list_eq (l1) (l2) then true else is_mem_ta1 (string_list16) (string15) = if match (string4, string15) with
| (String l1, String l2) -> list_eq (l1) (l2) then true else mem (string15) (string_list16)

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 26


1st goal of : forall (lambda5:lambda) (string4:string) (string_list16:string list), sub_check_ta1 (lambda5) (Cons (string4) (string_list16)) = sub_check (lambda5) (Cons (string4) (string_list16))
string15 : string
string4 : string
---------------------------------------
forall (string_list16:string list), if match (string4, string15) with
| (String l1, String l2) -> list_eq (l1) (l2) then true else is_mem_ta1 (string_list16) (string15) = if match (string4, string15) with
| (String l1, String l2) -> list_eq (l1) (l2) then true else mem (string15) (string_list16)

2 goal(s) more...

1 conjecture(s) more...
>>> induction string_list16(rank : 0)


1st goal of : forall (lambda5:lambda) (string4:string) (string_list16:string list), sub_check_ta1 (lambda5) (Cons (string4) (string_list16)) = sub_check (lambda5) (Cons (string4) (string_list16))
string15 : string
string4 : string
---------------------------------------
if match (string4, string15) with
| (String l1, String l2) -> list_eq (l1) (l2) then true else is_mem_ta1 (Nil) (string15) = if match (string4, string15) with
| (String l1, String l2) -> list_eq (l1) (l2) then true else mem (string15) (Nil)

3 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 27


1st goal of : forall (lambda5:lambda) (string4:string) (string_list16:string list), sub_check_ta1 (lambda5) (Cons (string4) (string_list16)) = sub_check (lambda5) (Cons (string4) (string_list16))
string15 : string
---------------------------------------
forall (string4:string), if match (string4, string15) with
| (String l1, String l2) -> list_eq (l1) (l2) then true else is_mem_ta1 (Nil) (string15) = if match (string4, string15) with
| (String l1, String l2) -> list_eq (l1) (l2) then true else mem (string15) (Nil)

3 goal(s) more...

1 conjecture(s) more...
>>> intro string4(rank : 1)


1st goal of : forall (lambda5:lambda) (string4:string) (string_list16:string list), sub_check_ta1 (lambda5) (Cons (string4) (string_list16)) = sub_check (lambda5) (Cons (string4) (string_list16))
string15 : string
string4 : string
---------------------------------------
if match (string4, string15) with
| (String l1, String l2) -> list_eq (l1) (l2) then true else is_mem_ta1 (Nil) (string15) = if match (string4, string15) with
| (String l1, String l2) -> list_eq (l1) (l2) then true else mem (string15) (Nil)

3 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 28


1st goal of : forall (lambda5:lambda) (string4:string) (string_list16:string list), sub_check_ta1 (lambda5) (Cons (string4) (string_list16)) = sub_check (lambda5) (Cons (string4) (string_list16))

---------------------------------------
forall (lambda5:lambda) (string4:string) (string_list16:string list), sub_check_ta1 (lambda5) (Cons (string4) (string_list16)) = sub_check (lambda5) (Cons (string4) (string_list16))

0 goal(s) more...

1 conjecture(s) more...
>>> intro string_list16(rank : 1)


1st goal of : forall (lambda5:lambda) (string4:string) (string_list16:string list), sub_check_ta1 (lambda5) (Cons (string4) (string_list16)) = sub_check (lambda5) (Cons (string4) (string_list16))
string_list16 : string list
---------------------------------------
forall (lambda5:lambda) (string4:string), sub_check_ta1 (lambda5) (Cons (string4) (string_list16)) = sub_check (lambda5) (Cons (string4) (string_list16))

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 29


1st goal of : forall (lambda5:lambda) (string4:string) (string_list16:string list), sub_check_ta1 (lambda5) (Cons (string4) (string_list16)) = sub_check (lambda5) (Cons (string4) (string_list16))
string_list16 : string list
---------------------------------------
forall (lambda5:lambda) (string4:string), sub_check_ta1 (lambda5) (Cons (string4) (string_list16)) = sub_check (lambda5) (Cons (string4) (string_list16))

0 goal(s) more...

1 conjecture(s) more...
>>> induction lambda5(rank : 0)


1st goal of : forall (lambda5:lambda) (string4:string) (string_list16:string list), sub_check_ta1 (lambda5) (Cons (string4) (string_list16)) = sub_check (lambda5) (Cons (string4) (string_list16))
string15 : string
string_list16 : string list
---------------------------------------
forall (string4:string), sub_check_ta1 (V (string15)) (Cons (string4) (string_list16)) = sub_check (V (string15)) (Cons (string4) (string_list16))

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 30


1st goal of : forall (lambda5:lambda) (string4:string) (string_list16:string list), sub_check_ta1 (lambda5) (Cons (string4) (string_list16)) = sub_check (lambda5) (Cons (string4) (string_list16))
string15 : string
string_list16 : string list
---------------------------------------
forall (string4:string), sub_check_ta1 (V (string15)) (Cons (string4) (string_list16)) = sub_check (V (string15)) (Cons (string4) (string_list16))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 0)


1st goal of : forall (lambda5:lambda) (string4:string) (string_list16:string list), sub_check_ta1 (lambda5) (Cons (string4) (string_list16)) = sub_check (lambda5) (Cons (string4) (string_list16))
string15 : string
string_list16 : string list
---------------------------------------
forall (string4:string), if match (string4, string15) with
| (String l1, String l2) -> list_eq (l1) (l2) then true else is_mem_ta1 (string_list16) (string15) = if match (string4, string15) with
| (String l1, String l2) -> list_eq (l1) (l2) then true else mem (string15) (string_list16)

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 31


1st goal of : forall (lambda5:lambda) (string4:string) (string_list16:string list), sub_check_ta1 (lambda5) (Cons (string4) (string_list16)) = sub_check (lambda5) (Cons (string4) (string_list16))

---------------------------------------
forall (lambda5:lambda) (string4:string) (string_list16:string list), sub_check_ta1 (lambda5) (Cons (string4) (string_list16)) = sub_check (lambda5) (Cons (string4) (string_list16))

0 goal(s) more...

1 conjecture(s) more...
>>> intro string4(rank : 1)


1st goal of : forall (lambda5:lambda) (string4:string) (string_list16:string list), sub_check_ta1 (lambda5) (Cons (string4) (string_list16)) = sub_check (lambda5) (Cons (string4) (string_list16))
string4 : string
---------------------------------------
forall (lambda5:lambda) (string_list16:string list), sub_check_ta1 (lambda5) (Cons (string4) (string_list16)) = sub_check (lambda5) (Cons (string4) (string_list16))

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 32


1st goal of : forall (lambda5:lambda) (string4:string) (string_list16:string list), sub_check_ta1 (lambda5) (Cons (string4) (string_list16)) = sub_check (lambda5) (Cons (string4) (string_list16))
string4 : string
---------------------------------------
forall (lambda5:lambda) (string_list16:string list), sub_check_ta1 (lambda5) (Cons (string4) (string_list16)) = sub_check (lambda5) (Cons (string4) (string_list16))

0 goal(s) more...

1 conjecture(s) more...
>>> induction lambda5(rank : 0)


1st goal of : forall (lambda5:lambda) (string4:string) (string_list16:string list), sub_check_ta1 (lambda5) (Cons (string4) (string_list16)) = sub_check (lambda5) (Cons (string4) (string_list16))
string15 : string
string4 : string
---------------------------------------
forall (string_list16:string list), sub_check_ta1 (V (string15)) (Cons (string4) (string_list16)) = sub_check (V (string15)) (Cons (string4) (string_list16))

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 33


1st goal of : forall (lambda5:lambda) (string4:string) (string_list16:string list), sub_check_ta1 (lambda5) (Cons (string4) (string_list16)) = sub_check (lambda5) (Cons (string4) (string_list16))
string15 : string
string4 : string
---------------------------------------
forall (string_list16:string list), sub_check_ta1 (V (string15)) (Cons (string4) (string_list16)) = sub_check (V (string15)) (Cons (string4) (string_list16))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 0)


1st goal of : forall (lambda5:lambda) (string4:string) (string_list16:string list), sub_check_ta1 (lambda5) (Cons (string4) (string_list16)) = sub_check (lambda5) (Cons (string4) (string_list16))
string15 : string
string4 : string
---------------------------------------
forall (string_list16:string list), if match (string4, string15) with
| (String l1, String l2) -> list_eq (l1) (l2) then true else is_mem_ta1 (string_list16) (string15) = if match (string4, string15) with
| (String l1, String l2) -> list_eq (l1) (l2) then true else mem (string15) (string_list16)

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 34


1st goal of : forall (lambda5:lambda) (string4:string) (string_list16:string list), sub_check_ta1 (lambda5) (Cons (string4) (string_list16)) = sub_check (lambda5) (Cons (string4) (string_list16))
string15 : string
string4 : string
---------------------------------------
forall (string_list16:string list), if match (string4, string15) with
| (String l1, String l2) -> list_eq (l1) (l2) then true else is_mem_ta1 (string_list16) (string15) = if match (string4, string15) with
| (String l1, String l2) -> list_eq (l1) (l2) then true else mem (string15) (string_list16)

2 goal(s) more...

1 conjecture(s) more...
>>> induction string_list16(rank : 0)


1st goal of : forall (lambda5:lambda) (string4:string) (string_list16:string list), sub_check_ta1 (lambda5) (Cons (string4) (string_list16)) = sub_check (lambda5) (Cons (string4) (string_list16))
string15 : string
string4 : string
---------------------------------------
if match (string4, string15) with
| (String l1, String l2) -> list_eq (l1) (l2) then true else is_mem_ta1 (Nil) (string15) = if match (string4, string15) with
| (String l1, String l2) -> list_eq (l1) (l2) then true else mem (string15) (Nil)

3 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 35


1st goal of : forall (lambda5:lambda) (string4:string) (string_list16:string list), sub_check_ta1 (lambda5) (Cons (string4) (string_list16)) = sub_check (lambda5) (Cons (string4) (string_list16))
string_list16 : string list
---------------------------------------
forall (lambda5:lambda) (string4:string), sub_check_ta1 (lambda5) (Cons (string4) (string_list16)) = sub_check (lambda5) (Cons (string4) (string_list16))

0 goal(s) more...

1 conjecture(s) more...
>>> intro string4(rank : 1)


1st goal of : forall (lambda5:lambda) (string4:string) (string_list16:string list), sub_check_ta1 (lambda5) (Cons (string4) (string_list16)) = sub_check (lambda5) (Cons (string4) (string_list16))
string_list16 : string list
string4 : string
---------------------------------------
forall (lambda5:lambda), sub_check_ta1 (lambda5) (Cons (string4) (string_list16)) = sub_check (lambda5) (Cons (string4) (string_list16))

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 36


1st goal of : forall (lambda5:lambda) (string4:string) (string_list16:string list), sub_check_ta1 (lambda5) (Cons (string4) (string_list16)) = sub_check (lambda5) (Cons (string4) (string_list16))
string_list16 : string list
string4 : string
---------------------------------------
forall (lambda5:lambda), sub_check_ta1 (lambda5) (Cons (string4) (string_list16)) = sub_check (lambda5) (Cons (string4) (string_list16))

0 goal(s) more...

1 conjecture(s) more...
>>> induction lambda5(rank : 0)


1st goal of : forall (lambda5:lambda) (string4:string) (string_list16:string list), sub_check_ta1 (lambda5) (Cons (string4) (string_list16)) = sub_check (lambda5) (Cons (string4) (string_list16))
string15 : string
string_list16 : string list
string4 : string
---------------------------------------
sub_check_ta1 (V (string15)) (Cons (string4) (string_list16)) = sub_check (V (string15)) (Cons (string4) (string_list16))

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 37


1st goal of : forall (lambda5:lambda) (string4:string) (string_list16:string list), sub_check_ta1 (lambda5) (Cons (string4) (string_list16)) = sub_check (lambda5) (Cons (string4) (string_list16))
string15 : string
string_list16 : string list
string4 : string
---------------------------------------
sub_check_ta1 (V (string15)) (Cons (string4) (string_list16)) = sub_check (V (string15)) (Cons (string4) (string_list16))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 0)


1st goal of : forall (lambda5:lambda) (string4:string) (string_list16:string list), sub_check_ta1 (lambda5) (Cons (string4) (string_list16)) = sub_check (lambda5) (Cons (string4) (string_list16))
string15 : string
string_list16 : string list
string4 : string
---------------------------------------
if match (string4, string15) with
| (String l1, String l2) -> list_eq (l1) (l2) then true else is_mem_ta1 (string_list16) (string15) = if match (string4, string15) with
| (String l1, String l2) -> list_eq (l1) (l2) then true else mem (string15) (string_list16)

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 38


1st goal of : forall (lambda5:lambda) (string4:string) (string_list16:string list), sub_check_ta1 (lambda5) (Cons (string4) (string_list16)) = sub_check (lambda5) (Cons (string4) (string_list16))
string15 : string
string_list16 : string list
---------------------------------------
forall (string4:string), if match (string4, string15) with
| (String l1, String l2) -> list_eq (l1) (l2) then true else is_mem_ta1 (string_list16) (string15) = if match (string4, string15) with
| (String l1, String l2) -> list_eq (l1) (l2) then true else mem (string15) (string_list16)

2 goal(s) more...

1 conjecture(s) more...
>>> intro string4(rank : 1)


1st goal of : forall (lambda5:lambda) (string4:string) (string_list16:string list), sub_check_ta1 (lambda5) (Cons (string4) (string_list16)) = sub_check (lambda5) (Cons (string4) (string_list16))
string15 : string
string_list16 : string list
string4 : string
---------------------------------------
if match (string4, string15) with
| (String l1, String l2) -> list_eq (l1) (l2) then true else is_mem_ta1 (string_list16) (string15) = if match (string4, string15) with
| (String l1, String l2) -> list_eq (l1) (l2) then true else mem (string15) (string_list16)

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 39


1st goal of : forall (lambda5:lambda) (string4:string) (string_list16:string list), sub_check_ta1 (lambda5) (Cons (string4) (string_list16)) = sub_check (lambda5) (Cons (string4) (string_list16))
string4 : string
---------------------------------------
forall (lambda5:lambda) (string_list16:string list), sub_check_ta1 (lambda5) (Cons (string4) (string_list16)) = sub_check (lambda5) (Cons (string4) (string_list16))

0 goal(s) more...

1 conjecture(s) more...
>>> intro string_list16(rank : 1)


1st goal of : forall (lambda5:lambda) (string4:string) (string_list16:string list), sub_check_ta1 (lambda5) (Cons (string4) (string_list16)) = sub_check (lambda5) (Cons (string4) (string_list16))
string4 : string
string_list16 : string list
---------------------------------------
forall (lambda5:lambda), sub_check_ta1 (lambda5) (Cons (string4) (string_list16)) = sub_check (lambda5) (Cons (string4) (string_list16))

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 40


1st goal of : forall (lambda5:lambda) (string4:string) (string_list16:string list), sub_check_ta1 (lambda5) (Cons (string4) (string_list16)) = sub_check (lambda5) (Cons (string4) (string_list16))
string4 : string
string_list16 : string list
---------------------------------------
forall (lambda5:lambda), sub_check_ta1 (lambda5) (Cons (string4) (string_list16)) = sub_check (lambda5) (Cons (string4) (string_list16))

0 goal(s) more...

1 conjecture(s) more...
>>> induction lambda5(rank : 0)


1st goal of : forall (lambda5:lambda) (string4:string) (string_list16:string list), sub_check_ta1 (lambda5) (Cons (string4) (string_list16)) = sub_check (lambda5) (Cons (string4) (string_list16))
string15 : string
string4 : string
string_list16 : string list
---------------------------------------
sub_check_ta1 (V (string15)) (Cons (string4) (string_list16)) = sub_check (V (string15)) (Cons (string4) (string_list16))

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 41


1st goal of : forall (lambda5:lambda) (string4:string) (string_list16:string list), sub_check_ta1 (lambda5) (Cons (string4) (string_list16)) = sub_check (lambda5) (Cons (string4) (string_list16))
string15 : string
string4 : string
string_list16 : string list
---------------------------------------
sub_check_ta1 (V (string15)) (Cons (string4) (string_list16)) = sub_check (V (string15)) (Cons (string4) (string_list16))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 0)


1st goal of : forall (lambda5:lambda) (string4:string) (string_list16:string list), sub_check_ta1 (lambda5) (Cons (string4) (string_list16)) = sub_check (lambda5) (Cons (string4) (string_list16))
string15 : string
string4 : string
string_list16 : string list
---------------------------------------
if match (string4, string15) with
| (String l1, String l2) -> list_eq (l1) (l2) then true else is_mem_ta1 (string_list16) (string15) = if match (string4, string15) with
| (String l1, String l2) -> list_eq (l1) (l2) then true else mem (string15) (string_list16)

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 42


1st goal of : forall (lambda5:lambda) (string_list15:string list), sub_check_ta1 (lambda5) (string_list15) = sub_check (lambda5) (string_list15)
string31 : string
string_list32 : string list
string15 : string
IH33 : is_mem_ta1 (string_list32) (string15) = mem (string15) (string_list32)
Inductive34 : string_list15 = Cons (string31) (string_list32)
---------------------------------------
if match (string31, string15) with
| (String l1, String l2) -> list_eq (l1) (l2) then true else is_mem_ta1 (string_list32) (string15) = if match (string31, string15) with
| (String l1, String l2) -> list_eq (l1) (l2) then true else mem (string15) (string_list32)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH33 in goal at 3(rank : 1)


1st goal of : forall (lambda5:lambda) (string_list15:string list), sub_check_ta1 (lambda5) (string_list15) = sub_check (lambda5) (string_list15)
string31 : string
string_list32 : string list
string15 : string
IH33 : is_mem_ta1 (string_list32) (string15) = mem (string15) (string_list32)
Inductive34 : string_list15 = Cons (string31) (string_list32)
---------------------------------------
if match (string31, string15) with
| (String l1, String l2) -> list_eq (l1) (l2) then true else is_mem_ta1 (string_list32) (string15) = if match (string31, string15) with
| (String l1, String l2) -> list_eq (l1) (l2) then true else is_mem_ta1 (string_list32) (string15)

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 43


1st goal of : forall (lambda5:lambda) (string_list15:string list), sub_check_ta1 (lambda5) (string_list15) = sub_check (lambda5) (string_list15)
string31 : string
string_list32 : string list
string15 : string
IH33 : is_mem_ta1 (string_list32) (string15) = mem (string15) (string_list32)
Inductive34 : string_list15 = Cons (string31) (string_list32)
---------------------------------------
if match (string31, string15) with
| (String l1, String l2) -> list_eq (l1) (l2) then true else is_mem_ta1 (string_list32) (string15) = if match (string31, string15) with
| (String l1, String l2) -> list_eq (l1) (l2) then true else is_mem_ta1 (string_list32) (string15)

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 0)


1st goal of : forall (lambda5:lambda) (string_list15:string list), sub_check_ta1 (lambda5) (string_list15) = sub_check (lambda5) (string_list15)
string18 : string
lambda19 : lambda
IH20 : forall (string_list15:string list), sub_check_ta1 (lambda19) (string_list15) = sub_check (lambda19) (string_list15)
Inductive21 : lambda5 = P (string18) (lambda19)
---------------------------------------
forall (string_list15:string list), sub_check_ta1 (P (string18) (lambda19)) (string_list15) = sub_check (P (string18) (lambda19)) (string_list15)

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 44


1st goal of : forall (lambda5:lambda) (string_list15:string list), sub_check_ta1 (lambda5) (string_list15) = sub_check (lambda5) (string_list15)
string18 : string
lambda19 : lambda
IH20 : forall (string_list15:string list), sub_check_ta1 (lambda19) (string_list15) = sub_check (lambda19) (string_list15)
Inductive21 : lambda5 = P (string18) (lambda19)
---------------------------------------
forall (string_list15:string list), sub_check_ta1 (P (string18) (lambda19)) (string_list15) = sub_check (P (string18) (lambda19)) (string_list15)

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 0)


1st goal of : forall (lambda5:lambda) (string_list15:string list), sub_check_ta1 (lambda5) (string_list15) = sub_check (lambda5) (string_list15)
string18 : string
lambda19 : lambda
IH20 : forall (string_list15:string list), sub_check_ta1 (lambda19) (string_list15) = sub_check (lambda19) (string_list15)
Inductive21 : lambda5 = P (string18) (lambda19)
---------------------------------------
forall (string_list15:string list), sub_check_ta1 (lambda19) (Cons (string18) (string_list15)) = sub_check (lambda19) (Cons (string18) (string_list15))

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 45


1st goal of : forall (lambda5:lambda) (string_list15:string list), sub_check_ta1 (lambda5) (string_list15) = sub_check (lambda5) (string_list15)
string31 : string
string_list32 : string list
string15 : string
IH33 : is_mem_ta1 (string_list32) (string15) = mem (string15) (string_list32)
Inductive34 : string_list15 = Cons (string31) (string_list32)
---------------------------------------
if match (string31, string15) with
| (String l1, String l2) -> list_eq (l1) (l2) then true else is_mem_ta1 (string_list32) (string15) = if match (string31, string15) with
| (String l1, String l2) -> list_eq (l1) (l2) then true else mem (string15) (string_list32)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH33 in goal at 2(rank : 1)


1st goal of : forall (lambda5:lambda) (string_list15:string list), sub_check_ta1 (lambda5) (string_list15) = sub_check (lambda5) (string_list15)
string31 : string
string_list32 : string list
string15 : string
IH33 : is_mem_ta1 (string_list32) (string15) = mem (string15) (string_list32)
Inductive34 : string_list15 = Cons (string31) (string_list32)
---------------------------------------
if match (string31, string15) with
| (String l1, String l2) -> list_eq (l1) (l2) then true else is_mem_ta1 (string_list32) (string15) = if match (string31, string15) with
| (String l1, String l2) -> list_eq (l1) (l2) then true else is_mem_ta1 (string_list32) (string15)

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 46


1st goal of : forall (lambda5:lambda) (string_list15:string list), sub_check_ta1 (lambda5) (string_list15) = sub_check (lambda5) (string_list15)
string31 : string
string_list32 : string list
string15 : string
IH33 : is_mem_ta1 (string_list32) (string15) = mem (string15) (string_list32)
Inductive34 : string_list15 = Cons (string31) (string_list32)
---------------------------------------
if match (string31, string15) with
| (String l1, String l2) -> list_eq (l1) (l2) then true else is_mem_ta1 (string_list32) (string15) = if match (string31, string15) with
| (String l1, String l2) -> list_eq (l1) (l2) then true else mem (string15) (string_list32)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH33 in goal at 1(rank : 1)


1st goal of : forall (lambda5:lambda) (string_list15:string list), sub_check_ta1 (lambda5) (string_list15) = sub_check (lambda5) (string_list15)
string31 : string
string_list32 : string list
string15 : string
IH33 : is_mem_ta1 (string_list32) (string15) = mem (string15) (string_list32)
Inductive34 : string_list15 = Cons (string31) (string_list32)
---------------------------------------
if match (string31, string15) with
| (String l1, String l2) -> list_eq (l1) (l2) then true else is_mem_ta1 (string_list32) (string15) = if match (string31, string15) with
| (String l1, String l2) -> list_eq (l1) (l2) then true else is_mem_ta1 (string_list32) (string15)

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 47


1st goal of : forall (lambda5:lambda) (string_list15:string list), sub_check_ta1 (lambda5) (string_list15) = sub_check (lambda5) (string_list15)
string31 : string
string_list32 : string list
string15 : string
IH33 : is_mem_ta1 (string_list32) (string15) = mem (string15) (string_list32)
Inductive34 : string_list15 = Cons (string31) (string_list32)
---------------------------------------
if match (string31, string15) with
| (String l1, String l2) -> list_eq (l1) (l2) then true else is_mem_ta1 (string_list32) (string15) = if match (string31, string15) with
| (String l1, String l2) -> list_eq (l1) (l2) then true else mem (string15) (string_list32)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH33 in goal at 1(rank : 1)


1st goal of : forall (lambda5:lambda) (string_list15:string list), sub_check_ta1 (lambda5) (string_list15) = sub_check (lambda5) (string_list15)
string31 : string
string_list32 : string list
string15 : string
IH33 : is_mem_ta1 (string_list32) (string15) = mem (string15) (string_list32)
Inductive34 : string_list15 = Cons (string31) (string_list32)
---------------------------------------
if match (string31, string15) with
| (String l1, String l2) -> list_eq (l1) (l2) then true else mem (string15) (string_list32) = if match (string31, string15) with
| (String l1, String l2) -> list_eq (l1) (l2) then true else mem (string15) (string_list32)

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 48


1st goal of : forall (lambda5:lambda) (string_list15:string list), sub_check_ta1 (lambda5) (string_list15) = sub_check (lambda5) (string_list15)

---------------------------------------
forall (lambda5:lambda) (string_list15:string list), sub_check_ta1 (lambda5) (string_list15) = sub_check (lambda5) (string_list15)

0 goal(s) more...

1 conjecture(s) more...
>>> intro string_list15(rank : 1)


1st goal of : forall (lambda5:lambda) (string_list15:string list), sub_check_ta1 (lambda5) (string_list15) = sub_check (lambda5) (string_list15)
string_list15 : string list
---------------------------------------
forall (lambda5:lambda), sub_check_ta1 (lambda5) (string_list15) = sub_check (lambda5) (string_list15)

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 49


1st goal of : forall (lambda5:lambda) (string_list15:string list), sub_check_ta1 (lambda5) (string_list15) = sub_check (lambda5) (string_list15)
string_list15 : string list
---------------------------------------
forall (lambda5:lambda), sub_check_ta1 (lambda5) (string_list15) = sub_check (lambda5) (string_list15)

0 goal(s) more...

1 conjecture(s) more...
>>> induction lambda5(rank : 0)


1st goal of : forall (lambda5:lambda) (string_list15:string list), sub_check_ta1 (lambda5) (string_list15) = sub_check (lambda5) (string_list15)
string15 : string
string_list15 : string list
---------------------------------------
sub_check_ta1 (V (string15)) (string_list15) = sub_check (V (string15)) (string_list15)

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 50


1st goal of : forall (lambda5:lambda) (string_list15:string list), sub_check_ta1 (lambda5) (string_list15) = sub_check (lambda5) (string_list15)
string15 : string
string_list15 : string list
---------------------------------------
sub_check_ta1 (V (string15)) (string_list15) = sub_check (V (string15)) (string_list15)

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 0)


1st goal of : forall (lambda5:lambda) (string_list15:string list), sub_check_ta1 (lambda5) (string_list15) = sub_check (lambda5) (string_list15)
string15 : string
string_list15 : string list
---------------------------------------
is_mem_ta1 (string_list15) (string15) = mem (string15) (string_list15)

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 51


1st goal of : forall (lambda5:lambda) (string_list15:string list), sub_check_ta1 (lambda5) (string_list15) = sub_check (lambda5) (string_list15)
string31 : string
string_list32 : string list
string15 : string
IH33 : is_mem_ta1 (string_list32) (string15) = mem (string15) (string_list32)
Inductive34 : string_list15 = Cons (string31) (string_list32)
---------------------------------------
if match (string31, string15) with
| (String l1, String l2) -> list_eq (l1) (l2) then true else is_mem_ta1 (string_list32) (string15) = if match (string31, string15) with
| (String l1, String l2) -> list_eq (l1) (l2) then true else mem (string15) (string_list32)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH33 in goal at 0(rank : 1)


1st goal of : forall (lambda5:lambda) (string_list15:string list), sub_check_ta1 (lambda5) (string_list15) = sub_check (lambda5) (string_list15)
string31 : string
string_list32 : string list
string15 : string
IH33 : is_mem_ta1 (string_list32) (string15) = mem (string15) (string_list32)
Inductive34 : string_list15 = Cons (string31) (string_list32)
---------------------------------------
if match (string31, string15) with
| (String l1, String l2) -> list_eq (l1) (l2) then true else is_mem_ta1 (string_list32) (string15) = if match (string31, string15) with
| (String l1, String l2) -> list_eq (l1) (l2) then true else is_mem_ta1 (string_list32) (string15)

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 52


1st goal of : forall (lambda5:lambda) (string_list15:string list), sub_check_ta1 (lambda5) (string_list15) = sub_check (lambda5) (string_list15)
string31 : string
string_list32 : string list
string15 : string
IH33 : is_mem_ta1 (string_list32) (string15) = mem (string15) (string_list32)
Inductive34 : string_list15 = Cons (string31) (string_list32)
---------------------------------------
if match (string31, string15) with
| (String l1, String l2) -> list_eq (l1) (l2) then true else is_mem_ta1 (string_list32) (string15) = if match (string31, string15) with
| (String l1, String l2) -> list_eq (l1) (l2) then true else mem (string15) (string_list32)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH33 in goal at 0(rank : 1)


1st goal of : forall (lambda5:lambda) (string_list15:string list), sub_check_ta1 (lambda5) (string_list15) = sub_check (lambda5) (string_list15)
string31 : string
string_list32 : string list
string15 : string
IH33 : is_mem_ta1 (string_list32) (string15) = mem (string15) (string_list32)
Inductive34 : string_list15 = Cons (string31) (string_list32)
---------------------------------------
if match (string31, string15) with
| (String l1, String l2) -> list_eq (l1) (l2) then true else mem (string15) (string_list32) = if match (string31, string15) with
| (String l1, String l2) -> list_eq (l1) (l2) then true else mem (string15) (string_list32)

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 53


1st goal of : forall (lambda5:lambda) (string_list15:string list), sub_check_ta1 (lambda5) (string_list15) = sub_check (lambda5) (string_list15)
string18 : string
lambda19 : lambda
IH20 : forall (string_list15:string list), sub_check_ta1 (lambda19) (string_list15) = sub_check (lambda19) (string_list15)
Inductive21 : lambda5 = P (string18) (lambda19)
---------------------------------------
forall (string_list15:string list), sub_check_ta1 (lambda19) (Cons (string18) (string_list15)) = sub_check (lambda19) (Cons (string18) (string_list15))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH20 in goal at 3(rank : 1)


1st goal of : forall (lambda5:lambda) (string_list15:string list), sub_check_ta1 (lambda5) (string_list15) = sub_check (lambda5) (string_list15)
string18 : string
lambda19 : lambda
IH20 : forall (string_list15:string list), sub_check_ta1 (lambda19) (string_list15) = sub_check (lambda19) (string_list15)
Inductive21 : lambda5 = P (string18) (lambda19)
---------------------------------------
forall (string_list15:string list), sub_check_ta1 (lambda19) (Cons (string18) (string_list15)) = sub_check_ta1 (lambda19) (Cons (string18) (string_list15))

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 54


1st goal of : forall (lambda5:lambda) (string_list15:string list), sub_check_ta1 (lambda5) (string_list15) = sub_check (lambda5) (string_list15)
string18 : string
lambda19 : lambda
IH20 : forall (string_list15:string list), sub_check_ta1 (lambda19) (string_list15) = sub_check (lambda19) (string_list15)
Inductive21 : lambda5 = P (string18) (lambda19)
---------------------------------------
forall (string_list15:string list), sub_check_ta1 (lambda19) (Cons (string18) (string_list15)) = sub_check_ta1 (lambda19) (Cons (string18) (string_list15))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 0)


1st goal of : forall (lambda5:lambda) (string_list15:string list), sub_check_ta1 (lambda5) (string_list15) = sub_check (lambda5) (string_list15)
lambda24 : lambda
lambda25 : lambda
IH26 : forall (string_list15:string list), sub_check_ta1 (lambda24) (string_list15) = sub_check (lambda24) (string_list15)
IH27 : forall (string_list15:string list), sub_check_ta1 (lambda25) (string_list15) = sub_check (lambda25) (string_list15)
Inductive28 : lambda5 = C (lambda24) (lambda25)
---------------------------------------
forall (string_list15:string list), sub_check_ta1 (C (lambda24) (lambda25)) (string_list15) = sub_check (C (lambda24) (lambda25)) (string_list15)

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 55


1st goal of : forall (lambda5:lambda) (string_list15:string list), sub_check_ta1 (lambda5) (string_list15) = sub_check (lambda5) (string_list15)
lambda24 : lambda
lambda25 : lambda
IH26 : forall (string_list15:string list), sub_check_ta1 (lambda24) (string_list15) = sub_check (lambda24) (string_list15)
IH27 : forall (string_list15:string list), sub_check_ta1 (lambda25) (string_list15) = sub_check (lambda25) (string_list15)
Inductive28 : lambda5 = C (lambda24) (lambda25)
---------------------------------------
forall (string_list15:string list), sub_check_ta1 (C (lambda24) (lambda25)) (string_list15) = sub_check (C (lambda24) (lambda25)) (string_list15)

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 0)


1st goal of : forall (lambda5:lambda) (string_list15:string list), sub_check_ta1 (lambda5) (string_list15) = sub_check (lambda5) (string_list15)
lambda24 : lambda
lambda25 : lambda
IH26 : forall (string_list15:string list), sub_check_ta1 (lambda24) (string_list15) = sub_check (lambda24) (string_list15)
IH27 : forall (string_list15:string list), sub_check_ta1 (lambda25) (string_list15) = sub_check (lambda25) (string_list15)
Inductive28 : lambda5 = C (lambda24) (lambda25)
---------------------------------------
forall (string_list15:string list), if sub_check_ta1 (lambda24) (string_list15) then sub_check_ta1 (lambda25) (string_list15) else false = if sub_check (lambda24) (string_list15) then sub_check (lambda25) (string_list15) else false

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 56


1st goal of : forall (lambda5:lambda) (string_list15:string list), sub_check_ta1 (lambda5) (string_list15) = sub_check (lambda5) (string_list15)
string18 : string
lambda19 : lambda
IH20 : forall (string_list15:string list), sub_check_ta1 (lambda19) (string_list15) = sub_check (lambda19) (string_list15)
Inductive21 : lambda5 = P (string18) (lambda19)
---------------------------------------
forall (string_list15:string list), sub_check_ta1 (lambda19) (Cons (string18) (string_list15)) = sub_check (lambda19) (Cons (string18) (string_list15))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH20 in goal at 2(rank : 1)


1st goal of : forall (lambda5:lambda) (string_list15:string list), sub_check_ta1 (lambda5) (string_list15) = sub_check (lambda5) (string_list15)
string18 : string
lambda19 : lambda
IH20 : forall (string_list15:string list), sub_check_ta1 (lambda19) (string_list15) = sub_check (lambda19) (string_list15)
Inductive21 : lambda5 = P (string18) (lambda19)
---------------------------------------
forall (string_list15:string list), sub_check_ta1 (lambda19) (Cons (string18) (string_list15)) = sub_check_ta1 (lambda19) (Cons (string18) (string_list15))

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 57


1st goal of : forall (lambda5:lambda) (string_list15:string list), sub_check_ta1 (lambda5) (string_list15) = sub_check (lambda5) (string_list15)
string18 : string
lambda19 : lambda
IH20 : forall (string_list15:string list), sub_check_ta1 (lambda19) (string_list15) = sub_check (lambda19) (string_list15)
Inductive21 : lambda5 = P (string18) (lambda19)
---------------------------------------
forall (string_list15:string list), sub_check_ta1 (lambda19) (Cons (string18) (string_list15)) = sub_check (lambda19) (Cons (string18) (string_list15))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH20 in goal at 1(rank : 1)


1st goal of : forall (lambda5:lambda) (string_list15:string list), sub_check_ta1 (lambda5) (string_list15) = sub_check (lambda5) (string_list15)
string18 : string
lambda19 : lambda
IH20 : forall (string_list15:string list), sub_check_ta1 (lambda19) (string_list15) = sub_check (lambda19) (string_list15)
Inductive21 : lambda5 = P (string18) (lambda19)
---------------------------------------
forall (string_list15:string list), sub_check_ta1 (lambda19) (Cons (string18) (string_list15)) = sub_check_ta1 (lambda19) (Cons (string18) (string_list15))

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 58


1st goal of : forall (lambda5:lambda) (string_list15:string list), sub_check_ta1 (lambda5) (string_list15) = sub_check (lambda5) (string_list15)
string18 : string
lambda19 : lambda
IH20 : forall (string_list15:string list), sub_check_ta1 (lambda19) (string_list15) = sub_check (lambda19) (string_list15)
Inductive21 : lambda5 = P (string18) (lambda19)
---------------------------------------
forall (string_list15:string list), sub_check_ta1 (lambda19) (Cons (string18) (string_list15)) = sub_check (lambda19) (Cons (string18) (string_list15))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH20 in goal at 0(rank : 1)


1st goal of : forall (lambda5:lambda) (string_list15:string list), sub_check_ta1 (lambda5) (string_list15) = sub_check (lambda5) (string_list15)
string18 : string
lambda19 : lambda
IH20 : forall (string_list15:string list), sub_check_ta1 (lambda19) (string_list15) = sub_check (lambda19) (string_list15)
Inductive21 : lambda5 = P (string18) (lambda19)
---------------------------------------
forall (string_list15:string list), sub_check_ta1 (lambda19) (Cons (string18) (string_list15)) = sub_check_ta1 (lambda19) (Cons (string18) (string_list15))

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 59


1st goal of : forall (lambda5:lambda) (string_list15:string list), sub_check_ta1 (lambda5) (string_list15) = sub_check (lambda5) (string_list15)
string18 : string
lambda19 : lambda
IH20 : forall (string_list15:string list), sub_check_ta1 (lambda19) (string_list15) = sub_check (lambda19) (string_list15)
Inductive21 : lambda5 = P (string18) (lambda19)
---------------------------------------
forall (string_list15:string list), sub_check_ta1 (lambda19) (Cons (string18) (string_list15)) = sub_check (lambda19) (Cons (string18) (string_list15))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH20 in goal at 1(rank : 1)


1st goal of : forall (lambda5:lambda) (string_list15:string list), sub_check_ta1 (lambda5) (string_list15) = sub_check (lambda5) (string_list15)
string18 : string
lambda19 : lambda
IH20 : forall (string_list15:string list), sub_check_ta1 (lambda19) (string_list15) = sub_check (lambda19) (string_list15)
Inductive21 : lambda5 = P (string18) (lambda19)
---------------------------------------
forall (string_list15:string list), sub_check (lambda19) (Cons (string18) (string_list15)) = sub_check (lambda19) (Cons (string18) (string_list15))

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 60


1st goal of : forall (lambda5:lambda) (string_list15:string list), sub_check_ta1 (lambda5) (string_list15) = sub_check (lambda5) (string_list15)
lambda24 : lambda
lambda25 : lambda
IH26 : forall (string_list15:string list), sub_check_ta1 (lambda24) (string_list15) = sub_check (lambda24) (string_list15)
IH27 : forall (string_list15:string list), sub_check_ta1 (lambda25) (string_list15) = sub_check (lambda25) (string_list15)
Inductive28 : lambda5 = C (lambda24) (lambda25)
---------------------------------------
forall (string_list15:string list), if sub_check_ta1 (lambda24) (string_list15) then sub_check_ta1 (lambda25) (string_list15) else false = if sub_check (lambda24) (string_list15) then sub_check (lambda25) (string_list15) else false

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH27 in goal at 3(rank : 1)


1st goal of : forall (lambda5:lambda) (string_list15:string list), sub_check_ta1 (lambda5) (string_list15) = sub_check (lambda5) (string_list15)
lambda24 : lambda
lambda25 : lambda
IH26 : forall (string_list15:string list), sub_check_ta1 (lambda24) (string_list15) = sub_check (lambda24) (string_list15)
IH27 : forall (string_list15:string list), sub_check_ta1 (lambda25) (string_list15) = sub_check (lambda25) (string_list15)
Inductive28 : lambda5 = C (lambda24) (lambda25)
---------------------------------------
forall (string_list15:string list), if sub_check_ta1 (lambda24) (string_list15) then sub_check_ta1 (lambda25) (string_list15) else false = if sub_check (lambda24) (string_list15) then sub_check_ta1 (lambda25) (string_list15) else false

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 61


1st goal of : forall (lambda5:lambda) (string_list15:string list), sub_check_ta1 (lambda5) (string_list15) = sub_check (lambda5) (string_list15)
lambda24 : lambda
lambda25 : lambda
IH26 : forall (string_list15:string list), sub_check_ta1 (lambda24) (string_list15) = sub_check (lambda24) (string_list15)
IH27 : forall (string_list15:string list), sub_check_ta1 (lambda25) (string_list15) = sub_check (lambda25) (string_list15)
Inductive28 : lambda5 = C (lambda24) (lambda25)
---------------------------------------
forall (string_list15:string list), if sub_check_ta1 (lambda24) (string_list15) then sub_check_ta1 (lambda25) (string_list15) else false = if sub_check (lambda24) (string_list15) then sub_check (lambda25) (string_list15) else false

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH26 in goal at 2(rank : 1)


1st goal of : forall (lambda5:lambda) (string_list15:string list), sub_check_ta1 (lambda5) (string_list15) = sub_check (lambda5) (string_list15)
lambda24 : lambda
lambda25 : lambda
IH26 : forall (string_list15:string list), sub_check_ta1 (lambda24) (string_list15) = sub_check (lambda24) (string_list15)
IH27 : forall (string_list15:string list), sub_check_ta1 (lambda25) (string_list15) = sub_check (lambda25) (string_list15)
Inductive28 : lambda5 = C (lambda24) (lambda25)
---------------------------------------
forall (string_list15:string list), if sub_check_ta1 (lambda24) (string_list15) then sub_check_ta1 (lambda25) (string_list15) else false = if sub_check_ta1 (lambda24) (string_list15) then sub_check (lambda25) (string_list15) else false

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 62


1st goal of : forall (lambda5:lambda) (string_list15:string list), sub_check_ta1 (lambda5) (string_list15) = sub_check (lambda5) (string_list15)
lambda24 : lambda
lambda25 : lambda
IH26 : forall (string_list15:string list), sub_check_ta1 (lambda24) (string_list15) = sub_check (lambda24) (string_list15)
IH27 : forall (string_list15:string list), sub_check_ta1 (lambda25) (string_list15) = sub_check (lambda25) (string_list15)
Inductive28 : lambda5 = C (lambda24) (lambda25)
---------------------------------------
forall (string_list15:string list), if sub_check_ta1 (lambda24) (string_list15) then sub_check_ta1 (lambda25) (string_list15) else false = if sub_check (lambda24) (string_list15) then sub_check (lambda25) (string_list15) else false

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH26 in goal at 1(rank : 1)


1st goal of : forall (lambda5:lambda) (string_list15:string list), sub_check_ta1 (lambda5) (string_list15) = sub_check (lambda5) (string_list15)
lambda24 : lambda
lambda25 : lambda
IH26 : forall (string_list15:string list), sub_check_ta1 (lambda24) (string_list15) = sub_check (lambda24) (string_list15)
IH27 : forall (string_list15:string list), sub_check_ta1 (lambda25) (string_list15) = sub_check (lambda25) (string_list15)
Inductive28 : lambda5 = C (lambda24) (lambda25)
---------------------------------------
forall (string_list15:string list), if sub_check_ta1 (lambda24) (string_list15) then sub_check_ta1 (lambda25) (string_list15) else false = if sub_check_ta1 (lambda24) (string_list15) then sub_check (lambda25) (string_list15) else false

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 63


1st goal of : forall (lambda5:lambda) (string_list15:string list), sub_check_ta1 (lambda5) (string_list15) = sub_check (lambda5) (string_list15)
string18 : string
lambda19 : lambda
IH20 : forall (string_list15:string list), sub_check_ta1 (lambda19) (string_list15) = sub_check (lambda19) (string_list15)
Inductive21 : lambda5 = P (string18) (lambda19)
---------------------------------------
forall (string_list15:string list), sub_check_ta1 (lambda19) (Cons (string18) (string_list15)) = sub_check_ta1 (lambda19) (Cons (string18) (string_list15))

1 goal(s) more...

1 conjecture(s) more...
>>> intro string_list15(rank : 1)


1st goal of : forall (lambda5:lambda) (string_list15:string list), sub_check_ta1 (lambda5) (string_list15) = sub_check (lambda5) (string_list15)
string18 : string
lambda19 : lambda
IH20 : forall (string_list15:string list), sub_check_ta1 (lambda19) (string_list15) = sub_check (lambda19) (string_list15)
Inductive21 : lambda5 = P (string18) (lambda19)
string_list15 : string list
---------------------------------------
sub_check_ta1 (lambda19) (Cons (string18) (string_list15)) = sub_check_ta1 (lambda19) (Cons (string18) (string_list15))

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 64


1st goal of : forall (lambda5:lambda) (string_list15:string list), sub_check_ta1 (lambda5) (string_list15) = sub_check (lambda5) (string_list15)
string18 : string
lambda19 : lambda
IH20 : forall (string_list15:string list), sub_check_ta1 (lambda19) (string_list15) = sub_check (lambda19) (string_list15)
Inductive21 : lambda5 = P (string18) (lambda19)
---------------------------------------
forall (string_list15:string list), sub_check_ta1 (lambda19) (Cons (string18) (string_list15)) = sub_check_ta1 (lambda19) (Cons (string18) (string_list15))

1 goal(s) more...

1 conjecture(s) more...
>>> intro string_list15(rank : 1)


1st goal of : forall (lambda5:lambda) (string_list15:string list), sub_check_ta1 (lambda5) (string_list15) = sub_check (lambda5) (string_list15)
string18 : string
lambda19 : lambda
IH20 : forall (string_list15:string list), sub_check_ta1 (lambda19) (string_list15) = sub_check (lambda19) (string_list15)
Inductive21 : lambda5 = P (string18) (lambda19)
string_list15 : string list
---------------------------------------
sub_check_ta1 (lambda19) (Cons (string18) (string_list15)) = sub_check_ta1 (lambda19) (Cons (string18) (string_list15))

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 65


1st goal of : forall (lambda5:lambda) (string_list15:string list), sub_check_ta1 (lambda5) (string_list15) = sub_check (lambda5) (string_list15)
string18 : string
lambda19 : lambda
IH20 : forall (string_list15:string list), sub_check_ta1 (lambda19) (string_list15) = sub_check (lambda19) (string_list15)
Inductive21 : lambda5 = P (string18) (lambda19)
---------------------------------------
forall (string_list15:string list), sub_check_ta1 (lambda19) (Cons (string18) (string_list15)) = sub_check_ta1 (lambda19) (Cons (string18) (string_list15))

1 goal(s) more...

1 conjecture(s) more...
>>> intro string_list15(rank : 1)


1st goal of : forall (lambda5:lambda) (string_list15:string list), sub_check_ta1 (lambda5) (string_list15) = sub_check (lambda5) (string_list15)
string18 : string
lambda19 : lambda
IH20 : forall (string_list15:string list), sub_check_ta1 (lambda19) (string_list15) = sub_check (lambda19) (string_list15)
Inductive21 : lambda5 = P (string18) (lambda19)
string_list15 : string list
---------------------------------------
sub_check_ta1 (lambda19) (Cons (string18) (string_list15)) = sub_check_ta1 (lambda19) (Cons (string18) (string_list15))

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 66


1st goal of : forall (lambda5:lambda) (string_list15:string list), sub_check_ta1 (lambda5) (string_list15) = sub_check (lambda5) (string_list15)
string18 : string
lambda19 : lambda
IH20 : forall (string_list15:string list), sub_check_ta1 (lambda19) (string_list15) = sub_check (lambda19) (string_list15)
Inductive21 : lambda5 = P (string18) (lambda19)
---------------------------------------
forall (string_list15:string list), sub_check (lambda19) (Cons (string18) (string_list15)) = sub_check (lambda19) (Cons (string18) (string_list15))

1 goal(s) more...

1 conjecture(s) more...
>>> intro string_list15(rank : 1)


1st goal of : forall (lambda5:lambda) (string_list15:string list), sub_check_ta1 (lambda5) (string_list15) = sub_check (lambda5) (string_list15)
string18 : string
lambda19 : lambda
IH20 : forall (string_list15:string list), sub_check_ta1 (lambda19) (string_list15) = sub_check (lambda19) (string_list15)
Inductive21 : lambda5 = P (string18) (lambda19)
string_list15 : string list
---------------------------------------
sub_check (lambda19) (Cons (string18) (string_list15)) = sub_check (lambda19) (Cons (string18) (string_list15))

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 67


1st goal of : forall (lambda5:lambda) (string_list15:string list), sub_check_ta1 (lambda5) (string_list15) = sub_check (lambda5) (string_list15)
lambda24 : lambda
lambda25 : lambda
IH26 : forall (string_list15:string list), sub_check_ta1 (lambda24) (string_list15) = sub_check (lambda24) (string_list15)
IH27 : forall (string_list15:string list), sub_check_ta1 (lambda25) (string_list15) = sub_check (lambda25) (string_list15)
Inductive28 : lambda5 = C (lambda24) (lambda25)
---------------------------------------
forall (string_list15:string list), if sub_check_ta1 (lambda24) (string_list15) then sub_check_ta1 (lambda25) (string_list15) else false = if sub_check (lambda24) (string_list15) then sub_check_ta1 (lambda25) (string_list15) else false

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH26 in goal at 3(rank : 1)


1st goal of : forall (lambda5:lambda) (string_list15:string list), sub_check_ta1 (lambda5) (string_list15) = sub_check (lambda5) (string_list15)
lambda24 : lambda
lambda25 : lambda
IH26 : forall (string_list15:string list), sub_check_ta1 (lambda24) (string_list15) = sub_check (lambda24) (string_list15)
IH27 : forall (string_list15:string list), sub_check_ta1 (lambda25) (string_list15) = sub_check (lambda25) (string_list15)
Inductive28 : lambda5 = C (lambda24) (lambda25)
---------------------------------------
forall (string_list15:string list), if sub_check_ta1 (lambda24) (string_list15) then sub_check_ta1 (lambda25) (string_list15) else false = if sub_check_ta1 (lambda24) (string_list15) then sub_check_ta1 (lambda25) (string_list15) else false

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 68


1st goal of : forall (lambda5:lambda) (string_list15:string list), sub_check_ta1 (lambda5) (string_list15) = sub_check (lambda5) (string_list15)
lambda24 : lambda
lambda25 : lambda
IH26 : forall (string_list15:string list), sub_check_ta1 (lambda24) (string_list15) = sub_check (lambda24) (string_list15)
IH27 : forall (string_list15:string list), sub_check_ta1 (lambda25) (string_list15) = sub_check (lambda25) (string_list15)
Inductive28 : lambda5 = C (lambda24) (lambda25)
---------------------------------------
forall (string_list15:string list), if sub_check_ta1 (lambda24) (string_list15) then sub_check_ta1 (lambda25) (string_list15) else false = if sub_check_ta1 (lambda24) (string_list15) then sub_check_ta1 (lambda25) (string_list15) else false

0 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 0)


1st goal of : forall (l:lambda), check_ta1 (l) = check (l)
string4 : string
lambda5 : lambda
IH6 : sub_check_ta1 (lambda5) (Nil) = match (lambda5) with
| V x -> false
| P x e -> sub_check (e) (Cons (x) (Nil))
| C e1 e2 -> && (sub_check (e1) (Nil)) (sub_check (e2) (Nil))
Inductive7 : l = P (string4) (lambda5)
---------------------------------------
sub_check_ta1 (lambda5) (Cons (string4) (Nil)) = sub_check (lambda5) (Cons (string4) (Nil))

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 69


1st goal of : forall (l:lambda), check_ta1 (l) = check (l)
string4 : string
lambda5 : lambda
IH6 : sub_check_ta1 (lambda5) (Nil) = match (lambda5) with
| V x -> false
| P x e -> sub_check (e) (Cons (x) (Nil))
| C e1 e2 -> && (sub_check (e1) (Nil)) (sub_check (e2) (Nil))
Inductive7 : l = P (string4) (lambda5)
---------------------------------------
sub_check_ta1 (lambda5) (Cons (string4) (Nil)) = sub_check (lambda5) (Cons (string4) (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma35 in goal at 3(rank : 1)


1st goal of : forall (l:lambda), check_ta1 (l) = check (l)
string4 : string
lambda5 : lambda
IH6 : sub_check_ta1 (lambda5) (Nil) = match (lambda5) with
| V x -> false
| P x e -> sub_check (e) (Cons (x) (Nil))
| C e1 e2 -> && (sub_check (e1) (Nil)) (sub_check (e2) (Nil))
Inductive7 : l = P (string4) (lambda5)
---------------------------------------
sub_check_ta1 (lambda5) (Cons (string4) (Nil)) = sub_check_ta1 (lambda5) (Cons (string4) (Nil))

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 70


1st goal of : forall (l:lambda), check_ta1 (l) = check (l)
string4 : string
lambda5 : lambda
IH6 : sub_check_ta1 (lambda5) (Nil) = match (lambda5) with
| V x -> false
| P x e -> sub_check (e) (Cons (x) (Nil))
| C e1 e2 -> && (sub_check (e1) (Nil)) (sub_check (e2) (Nil))
Inductive7 : l = P (string4) (lambda5)
---------------------------------------
sub_check_ta1 (lambda5) (Cons (string4) (Nil)) = sub_check_ta1 (lambda5) (Cons (string4) (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 0)


1st goal of : forall (l:lambda), check_ta1 (l) = check (l)
lambda10 : lambda
lambda11 : lambda
IH12 : sub_check_ta1 (lambda10) (Nil) = match (lambda10) with
| V x -> false
| P x e -> sub_check (e) (Cons (x) (Nil))
| C e1 e2 -> && (sub_check (e1) (Nil)) (sub_check (e2) (Nil))
IH13 : sub_check_ta1 (lambda11) (Nil) = match (lambda11) with
| V x -> false
| P x e -> sub_check (e) (Cons (x) (Nil))
| C e1 e2 -> && (sub_check (e1) (Nil)) (sub_check (e2) (Nil))
Inductive14 : l = C (lambda10) (lambda11)
---------------------------------------
sub_check_ta1 (C (lambda10) (lambda11)) (Nil) = match (C (lambda10) (lambda11)) with
| V x -> false
| P x e -> sub_check (e) (Cons (x) (Nil))
| C e1 e2 -> && (sub_check (e1) (Nil)) (sub_check (e2) (Nil))

0 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 71


1st goal of : forall (l:lambda), check_ta1 (l) = check (l)
lambda10 : lambda
lambda11 : lambda
IH12 : sub_check_ta1 (lambda10) (Nil) = match (lambda10) with
| V x -> false
| P x e -> sub_check (e) (Cons (x) (Nil))
| C e1 e2 -> && (sub_check (e1) (Nil)) (sub_check (e2) (Nil))
IH13 : sub_check_ta1 (lambda11) (Nil) = match (lambda11) with
| V x -> false
| P x e -> sub_check (e) (Cons (x) (Nil))
| C e1 e2 -> && (sub_check (e1) (Nil)) (sub_check (e2) (Nil))
Inductive14 : l = C (lambda10) (lambda11)
---------------------------------------
sub_check_ta1 (C (lambda10) (lambda11)) (Nil) = match (C (lambda10) (lambda11)) with
| V x -> false
| P x e -> sub_check (e) (Cons (x) (Nil))
| C e1 e2 -> && (sub_check (e1) (Nil)) (sub_check (e2) (Nil))

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 0)


1st goal of : forall (l:lambda), check_ta1 (l) = check (l)
lambda10 : lambda
lambda11 : lambda
IH12 : sub_check_ta1 (lambda10) (Nil) = match (lambda10) with
| V x -> false
| P x e -> sub_check (e) (Cons (x) (Nil))
| C e1 e2 -> && (sub_check (e1) (Nil)) (sub_check (e2) (Nil))
IH13 : sub_check_ta1 (lambda11) (Nil) = match (lambda11) with
| V x -> false
| P x e -> sub_check (e) (Cons (x) (Nil))
| C e1 e2 -> && (sub_check (e1) (Nil)) (sub_check (e2) (Nil))
Inductive14 : l = C (lambda10) (lambda11)
---------------------------------------
if sub_check_ta1 (lambda10) (Nil) then sub_check_ta1 (lambda11) (Nil) else false = if sub_check (lambda10) (Nil) then sub_check (lambda11) (Nil) else false

0 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 72


1st goal of : forall (l:lambda), check_ta1 (l) = check (l)
string4 : string
lambda5 : lambda
IH6 : sub_check_ta1 (lambda5) (Nil) = match (lambda5) with
| V x -> false
| P x e -> sub_check (e) (Cons (x) (Nil))
| C e1 e2 -> && (sub_check (e1) (Nil)) (sub_check (e2) (Nil))
Inductive7 : l = P (string4) (lambda5)
---------------------------------------
sub_check_ta1 (lambda5) (Cons (string4) (Nil)) = sub_check (lambda5) (Cons (string4) (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma35 in goal at 1(rank : 1)


1st goal of : forall (l:lambda), check_ta1 (l) = check (l)
string4 : string
lambda5 : lambda
IH6 : sub_check_ta1 (lambda5) (Nil) = match (lambda5) with
| V x -> false
| P x e -> sub_check (e) (Cons (x) (Nil))
| C e1 e2 -> && (sub_check (e1) (Nil)) (sub_check (e2) (Nil))
Inductive7 : l = P (string4) (lambda5)
---------------------------------------
sub_check_ta1 (lambda5) (Cons (string4) (Nil)) = sub_check_ta1 (lambda5) (Cons (string4) (Nil))

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 73


1st goal of : forall (l:lambda), check_ta1 (l) = check (l)
string4 : string
lambda5 : lambda
IH6 : sub_check_ta1 (lambda5) (Nil) = match (lambda5) with
| V x -> false
| P x e -> sub_check (e) (Cons (x) (Nil))
| C e1 e2 -> && (sub_check (e1) (Nil)) (sub_check (e2) (Nil))
Inductive7 : l = P (string4) (lambda5)
---------------------------------------
sub_check_ta1 (lambda5) (Cons (string4) (Nil)) = sub_check (lambda5) (Cons (string4) (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma35 in goal at 1(rank : 1)


1st goal of : forall (l:lambda), check_ta1 (l) = check (l)
string4 : string
lambda5 : lambda
IH6 : sub_check_ta1 (lambda5) (Nil) = match (lambda5) with
| V x -> false
| P x e -> sub_check (e) (Cons (x) (Nil))
| C e1 e2 -> && (sub_check (e1) (Nil)) (sub_check (e2) (Nil))
Inductive7 : l = P (string4) (lambda5)
---------------------------------------
sub_check (lambda5) (Cons (string4) (Nil)) = sub_check (lambda5) (Cons (string4) (Nil))

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 74


1st goal of : forall (l:lambda), check_ta1 (l) = check (l)
string4 : string
lambda5 : lambda
IH6 : sub_check_ta1 (lambda5) (Nil) = match (lambda5) with
| V x -> false
| P x e -> sub_check (e) (Cons (x) (Nil))
| C e1 e2 -> && (sub_check (e1) (Nil)) (sub_check (e2) (Nil))
Inductive7 : l = P (string4) (lambda5)
---------------------------------------
sub_check_ta1 (lambda5) (Cons (string4) (Nil)) = sub_check (lambda5) (Cons (string4) (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma35 in goal at 2(rank : 1)


1st goal of : forall (l:lambda), check_ta1 (l) = check (l)
string4 : string
lambda5 : lambda
IH6 : sub_check_ta1 (lambda5) (Nil) = match (lambda5) with
| V x -> false
| P x e -> sub_check (e) (Cons (x) (Nil))
| C e1 e2 -> && (sub_check (e1) (Nil)) (sub_check (e2) (Nil))
Inductive7 : l = P (string4) (lambda5)
---------------------------------------
sub_check_ta1 (lambda5) (Cons (string4) (Nil)) = sub_check_ta1 (lambda5) (Cons (string4) (Nil))

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 75


1st goal of : forall (l:lambda), check_ta1 (l) = check (l)
string4 : string
lambda5 : lambda
IH6 : sub_check_ta1 (lambda5) (Nil) = match (lambda5) with
| V x -> false
| P x e -> sub_check (e) (Cons (x) (Nil))
| C e1 e2 -> && (sub_check (e1) (Nil)) (sub_check (e2) (Nil))
Inductive7 : l = P (string4) (lambda5)
---------------------------------------
sub_check_ta1 (lambda5) (Cons (string4) (Nil)) = sub_check (lambda5) (Cons (string4) (Nil))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- lemma35 in goal at 0(rank : 1)


1st goal of : forall (l:lambda), check_ta1 (l) = check (l)
string4 : string
lambda5 : lambda
IH6 : sub_check_ta1 (lambda5) (Nil) = match (lambda5) with
| V x -> false
| P x e -> sub_check (e) (Cons (x) (Nil))
| C e1 e2 -> && (sub_check (e1) (Nil)) (sub_check (e2) (Nil))
Inductive7 : l = P (string4) (lambda5)
---------------------------------------
sub_check_ta1 (lambda5) (Cons (string4) (Nil)) = sub_check_ta1 (lambda5) (Cons (string4) (Nil))

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 76


1st goal of : forall (l:lambda), check_ta1 (l) = check (l)
lambda10 : lambda
lambda11 : lambda
IH12 : sub_check_ta1 (lambda10) (Nil) = match (lambda10) with
| V x -> false
| P x e -> sub_check (e) (Cons (x) (Nil))
| C e1 e2 -> && (sub_check (e1) (Nil)) (sub_check (e2) (Nil))
IH13 : sub_check_ta1 (lambda11) (Nil) = match (lambda11) with
| V x -> false
| P x e -> sub_check (e) (Cons (x) (Nil))
| C e1 e2 -> && (sub_check (e1) (Nil)) (sub_check (e2) (Nil))
Inductive14 : l = C (lambda10) (lambda11)
---------------------------------------
sub_check_ta1 (C (lambda10) (lambda11)) (Nil) = match (C (lambda10) (lambda11)) with
| V x -> false
| P x e -> sub_check (e) (Cons (x) (Nil))
| C e1 e2 -> && (sub_check (e1) (Nil)) (sub_check (e2) (Nil))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma35 in goal at 0(rank : 1)


1st goal of : forall (l:lambda), check_ta1 (l) = check (l)
lambda10 : lambda
lambda11 : lambda
IH12 : sub_check_ta1 (lambda10) (Nil) = match (lambda10) with
| V x -> false
| P x e -> sub_check (e) (Cons (x) (Nil))
| C e1 e2 -> && (sub_check (e1) (Nil)) (sub_check (e2) (Nil))
IH13 : sub_check_ta1 (lambda11) (Nil) = match (lambda11) with
| V x -> false
| P x e -> sub_check (e) (Cons (x) (Nil))
| C e1 e2 -> && (sub_check (e1) (Nil)) (sub_check (e2) (Nil))
Inductive14 : l = C (lambda10) (lambda11)
---------------------------------------
sub_check (C (lambda10) (lambda11)) (Nil) = match (C (lambda10) (lambda11)) with
| V x -> false
| P x e -> sub_check (e) (Cons (x) (Nil))
| C e1 e2 -> && (sub_check (e1) (Nil)) (sub_check (e2) (Nil))

0 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 77


1st goal of : forall (l:lambda), check_ta1 (l) = check (l)
lambda10 : lambda
lambda11 : lambda
IH12 : sub_check_ta1 (lambda10) (Nil) = match (lambda10) with
| V x -> false
| P x e -> sub_check (e) (Cons (x) (Nil))
| C e1 e2 -> && (sub_check (e1) (Nil)) (sub_check (e2) (Nil))
IH13 : sub_check_ta1 (lambda11) (Nil) = match (lambda11) with
| V x -> false
| P x e -> sub_check (e) (Cons (x) (Nil))
| C e1 e2 -> && (sub_check (e1) (Nil)) (sub_check (e2) (Nil))
Inductive14 : l = C (lambda10) (lambda11)
---------------------------------------
sub_check (C (lambda10) (lambda11)) (Nil) = match (C (lambda10) (lambda11)) with
| V x -> false
| P x e -> sub_check (e) (Cons (x) (Nil))
| C e1 e2 -> && (sub_check (e1) (Nil)) (sub_check (e2) (Nil))

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 0)


1st goal of : forall (l:lambda), check_ta1 (l) = check (l)
lambda10 : lambda
lambda11 : lambda
IH12 : sub_check_ta1 (lambda10) (Nil) = match (lambda10) with
| V x -> false
| P x e -> sub_check (e) (Cons (x) (Nil))
| C e1 e2 -> && (sub_check (e1) (Nil)) (sub_check (e2) (Nil))
IH13 : sub_check_ta1 (lambda11) (Nil) = match (lambda11) with
| V x -> false
| P x e -> sub_check (e) (Cons (x) (Nil))
| C e1 e2 -> && (sub_check (e1) (Nil)) (sub_check (e2) (Nil))
Inductive14 : l = C (lambda10) (lambda11)
---------------------------------------
if sub_check (lambda10) (Nil) then sub_check (lambda11) (Nil) else false = if sub_check (lambda10) (Nil) then sub_check (lambda11) (Nil) else false

0 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 78


1st goal of : forall (l:lambda), check_ta1 (l) = check (l)
lambda10 : lambda
lambda11 : lambda
IH12 : sub_check_ta1 (lambda10) (Nil) = match (lambda10) with
| V x -> false
| P x e -> sub_check (e) (Cons (x) (Nil))
| C e1 e2 -> && (sub_check (e1) (Nil)) (sub_check (e2) (Nil))
IH13 : sub_check_ta1 (lambda11) (Nil) = match (lambda11) with
| V x -> false
| P x e -> sub_check (e) (Cons (x) (Nil))
| C e1 e2 -> && (sub_check (e1) (Nil)) (sub_check (e2) (Nil))
Inductive14 : l = C (lambda10) (lambda11)
---------------------------------------
if sub_check (lambda10) (Nil) then sub_check (lambda11) (Nil) else false = if sub_check (lambda10) (Nil) then sub_check (lambda11) (Nil) else false

0 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 0)
Proof Success
Proof
assert forall (l:lambda), check_ta1 (l) = check (l)
simpl in goal
induction l
simpl in goal
reflexivity
simpl in goal
assert forall (lambda5:lambda) (string_list15:string list), sub_check_ta1 (lambda5) (string_list15) = sub_check (lambda5) (string_list15)
induction lambda5
simpl in goal
induction string_list15
simpl in goal
reflexivity
simpl in goal
rewrite <- IH33 in goal at 3
reflexivity
simpl in goal
rewrite <- IH20 in goal at 3
reflexivity
simpl in goal
rewrite <- IH27 in goal at 3
rewrite <- IH26 in goal at 3
reflexivity
rewrite <- lemma35 in goal at 3
reflexivity
rewrite lemma35 in goal at 0
simpl in goal
reflexivity
Qed
