Choose the proof type :
1) Interactive Mode 	 2) Auto Mode
((TypeDecl nat()(((Constructor ZERO)())((Constructor SUCC)((Talgebraic nat())))))(Rec add(n1 n2)((desc(Match(((desc(Var n2))(typ(Talgebraic nat()))))((Case(Pat_Constr ZERO())((desc(Var n1))(typ(Talgebraic nat()))))(Case(Pat_Constr SUCC((Pat_Var n)))((desc(Call add(((desc(Call SUCC(((desc(Var n1))(typ(Talgebraic nat()))))))(typ(Talgebraic nat())))((desc(Var n))(typ(Talgebraic nat()))))))(typ(Talgebraic nat())))))))(typ(Talgebraic nat()))))(NonRec natadd(n1 n2)((desc(Match(((desc(Call =(((desc(Var n1))(typ(Talgebraic nat())))((desc(Call ZERO()))(typ(Talgebraic nat()))))))(typ(Talgebraic bool()))))((Case(Pat_Constr true())((desc(Call add(((desc(Var n2))(typ(Talgebraic nat())))((desc(Var n1))(typ(Talgebraic nat()))))))(typ(Talgebraic nat()))))(Case(Pat_Constr false())((desc(Call add(((desc(Var n1))(typ(Talgebraic nat())))((desc(Var n2))(typ(Talgebraic nat()))))))(typ(Talgebraic nat())))))))(typ(Talgebraic nat())))))



No conjecture

>>> 


1st goal of : forall (a:nat) (b:nat), ((desc(Call natadd_ta1(((desc(Var a))(typ(Talgebraic nat())))((desc(Var b))(typ(Talgebraic nat()))))))(typ(Talgebraic nat()))) = ((desc(Call natadd(((desc(Var a))(typ(Talgebraic nat())))((desc(Var b))(typ(Talgebraic nat()))))))(typ(Talgebraic nat())))

---------------------------------------
forall (a:nat) (b:nat), ((desc(Call natadd_ta1(((desc(Var a))(typ(Talgebraic nat())))((desc(Var b))(typ(Talgebraic nat()))))))(typ(Talgebraic nat()))) = ((desc(Call natadd(((desc(Var a))(typ(Talgebraic nat())))((desc(Var b))(typ(Talgebraic nat()))))))(typ(Talgebraic nat())))

0 goal(s) more...

0 conjecture(s) more...

>>> 


1st goal of : forall (a:nat) (b:nat), ((desc(Call natadd_ta1(((desc(Var a))(typ(Talgebraic nat())))((desc(Var b))(typ(Talgebraic nat()))))))(typ(Talgebraic nat()))) = ((desc(Call natadd(((desc(Var a))(typ(Talgebraic nat())))((desc(Var b))(typ(Talgebraic nat()))))))(typ(Talgebraic nat())))

---------------------------------------
forall (b:nat), ((desc(Call natadd_ta1(((desc(Call ZERO()))(typ(Talgebraic nat())))((desc(Var b))(typ(Talgebraic nat()))))))(typ(Talgebraic nat()))) = ((desc(Call natadd(((desc(Call ZERO()))(typ(Talgebraic nat())))((desc(Var b))(typ(Talgebraic nat()))))))(typ(Talgebraic nat())))

1 goal(s) more...

0 conjecture(s) more...

>>> 


1st goal of : forall (a:nat) (b:nat), ((desc(Call natadd_ta1(((desc(Var a))(typ(Talgebraic nat())))((desc(Var b))(typ(Talgebraic nat()))))))(typ(Talgebraic nat()))) = ((desc(Call natadd(((desc(Var a))(typ(Talgebraic nat())))((desc(Var b))(typ(Talgebraic nat()))))))(typ(Talgebraic nat())))

---------------------------------------
((desc(Call natadd_ta1(((desc(Call ZERO()))(typ(Talgebraic nat())))((desc(Call ZERO()))(typ(Talgebraic nat()))))))(typ(Talgebraic nat()))) = ((desc(Call natadd(((desc(Call ZERO()))(typ(Talgebraic nat())))((desc(Call ZERO()))(typ(Talgebraic nat()))))))(typ(Talgebraic nat())))

2 goal(s) more...

0 conjecture(s) more...

>>> ZERO
add (ZERO) (ZERO)



1st goal of : forall (a:nat) (b:nat), ((desc(Call natadd_ta1(((desc(Var a))(typ(Talgebraic nat())))((desc(Var b))(typ(Talgebraic nat()))))))(typ(Talgebraic nat()))) = ((desc(Call natadd(((desc(Var a))(typ(Talgebraic nat())))((desc(Var b))(typ(Talgebraic nat()))))))(typ(Talgebraic nat())))

---------------------------------------
((desc(Call ZERO()))(typ(Talgebraic nat()))) = ((desc(Call add(((desc(Call ZERO()))(typ(Talgebraic nat())))((desc(Call ZERO()))(typ(Talgebraic nat()))))))(typ(Talgebraic nat())))

2 goal(s) more...

0 conjecture(s) more...

>>> 